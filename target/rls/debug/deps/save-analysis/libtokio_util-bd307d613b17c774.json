{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2021","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=bd307d613b17c774","-C","extra-filename=-bd307d613b17c774","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","bytes=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbytes-e80fde13cfdaa1ed.rmeta","--extern","futures_core=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_core-8be431a497bc3c9f.rmeta","--extern","futures_sink=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_sink-05f67cb3d0ef24ac.rmeta","--extern","pin_project_lite=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpin_project_lite-6d07fd99c72705e6.rmeta","--extern","tokio=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtokio-c13d8bc08def2e00.rmeta","--extern","tracing=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtracing-a8da7cfd09967aa9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtokio_util-bd307d613b17c774.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[17083992789186825057,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[6971910164290660896,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[16918135308039601362,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[2164534071916540129,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":23,"id":{"name":"mio","disambiguator":[8424425407149752286,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":24,"id":{"name":"log","disambiguator":[12996859001740394752,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[8037730387315135600,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":26,"id":{"name":"libc","disambiguator":[3878213621847001735,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","num":27,"id":{"name":"bytes","disambiguator":[5441976563651757446,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":28,"id":{"name":"tokio_macros","disambiguator":[15899561400381894157,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","num":29,"id":{"name":"socket2","disambiguator":[4013541389436397340,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","num":30,"id":{"name":"futures_core","disambiguator":[9123476880726111055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","num":31,"id":{"name":"tracing","disambiguator":[10640532649317078379,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","num":32,"id":{"name":"tracing_core","disambiguator":[1421309024311854827,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","num":33,"id":{"name":"once_cell","disambiguator":[3105578953040151470,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","num":34,"id":{"name":"tracing_attributes","disambiguator":[15682539678954689692,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1187},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362480,"byte_end":14362490,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362529,"byte_end":14362536,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362575,"byte_end":14362582,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362744,"byte_end":14362750,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362752,"byte_end":14362763,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362811,"byte_end":14362821,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1444},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362870,"byte_end":14362881,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1247},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362943,"byte_end":14362963,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":995},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362965,"byte_end":14362990,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14363039,"byte_end":14363049,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1287},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14363051,"byte_end":14363066,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14363131,"byte_end":14363148,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1319},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14363150,"byte_end":14363172,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":476}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7144,"byte_end":7153,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7155,"byte_end":7172,"line_start":5,"line_end":5,"column_start":23,"column_end":40},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7174,"byte_end":7199,"line_start":5,"line_end":5,"column_start":42,"column_end":67},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7201,"byte_end":7231,"line_start":5,"line_end":5,"column_start":69,"column_end":99},"alias_span":null,"name":"WaitForCancellationFutureOwned","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7262,"byte_end":7275,"line_start":9,"line_end":9,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7277,"byte_end":7287,"line_start":9,"line_end":9,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7335,"byte_end":7348,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7391,"byte_end":7408,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":476},{"krate":0,"index":14},{"krate":0,"index":358},{"krate":0,"index":427}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":476},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1184}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/cfg.rs","byte_start":5623,"byte_end":5648,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352208,"byte_end":14352261,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352262,"byte_end":14352265,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352266,"byte_end":14352341,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352342,"byte_end":14352407,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352408,"byte_end":14352411,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352412,"byte_end":14352492,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352493,"byte_end":14352568,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352569,"byte_end":14352617,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352618,"byte_end":14352621,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352622,"byte_end":14352645,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352646,"byte_end":14352649,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352650,"byte_end":14352729,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352730,"byte_end":14352809,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352810,"byte_end":14352881,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352882,"byte_end":14352952,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14352953,"byte_end":14353031,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353032,"byte_end":14353108,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353109,"byte_end":14353142,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353143,"byte_end":14353146,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353147,"byte_end":14353227,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353228,"byte_end":14353308,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353309,"byte_end":14353359,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353360,"byte_end":14353363,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353364,"byte_end":14353415,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353416,"byte_end":14353465,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353466,"byte_end":14353517,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353518,"byte_end":14353521,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353522,"byte_end":14353587,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353588,"byte_end":14353591,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353592,"byte_end":14353669,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353670,"byte_end":14353711,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353712,"byte_end":14353715,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353716,"byte_end":14353796,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353797,"byte_end":14353876,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353877,"byte_end":14353955,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14353956,"byte_end":14354035,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354036,"byte_end":14354050,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354051,"byte_end":14354054,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354055,"byte_end":14354134,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354135,"byte_end":14354214,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354215,"byte_end":14354232,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354233,"byte_end":14354236,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354237,"byte_end":14354314,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354315,"byte_end":14354394,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354395,"byte_end":14354472,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354473,"byte_end":14354543,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354544,"byte_end":14354593,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354594,"byte_end":14354597,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354598,"byte_end":14354611,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354612,"byte_end":14354644,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354645,"byte_end":14354712,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354713,"byte_end":14354827,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354828,"byte_end":14354865,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354866,"byte_end":14354927,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354928,"byte_end":14354977,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354978,"byte_end":14354981,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14354982,"byte_end":14355023,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355024,"byte_end":14355034,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355035,"byte_end":14355119,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355120,"byte_end":14355176,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355177,"byte_end":14355180,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355181,"byte_end":14355202,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355203,"byte_end":14355270,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355271,"byte_end":14355299,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355300,"byte_end":14355313,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355314,"byte_end":14355332,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355333,"byte_end":14355342,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355343,"byte_end":14355346,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355347,"byte_end":14355406,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355407,"byte_end":14355431,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355432,"byte_end":14355441,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355442,"byte_end":14355447,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355448,"byte_end":14355456,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355457,"byte_end":14355464,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355465,"byte_end":14355539,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355540,"byte_end":14355543,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355544,"byte_end":14355566,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355567,"byte_end":14355570,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355571,"byte_end":14355648,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355649,"byte_end":14355725,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355726,"byte_end":14355805,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355806,"byte_end":14355860,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355861,"byte_end":14355864,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355865,"byte_end":14355909,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355910,"byte_end":14355917,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355918,"byte_end":14355953,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355954,"byte_end":14355985,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355986,"byte_end":14355989,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14355990,"byte_end":14356019,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356020,"byte_end":14356023,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356024,"byte_end":14356063,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356064,"byte_end":14356067,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356068,"byte_end":14356106,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356107,"byte_end":14356134,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356135,"byte_end":14356171,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356172,"byte_end":14356175,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356176,"byte_end":14356194,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356195,"byte_end":14356217,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356218,"byte_end":14356248,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356249,"byte_end":14356303,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356304,"byte_end":14356334,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356335,"byte_end":14356392,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356393,"byte_end":14356425,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356426,"byte_end":14356439,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356440,"byte_end":14356443,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356444,"byte_end":14356478,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356479,"byte_end":14356523,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356524,"byte_end":14356576,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356577,"byte_end":14356644,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356645,"byte_end":14356648,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356649,"byte_end":14356723,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356724,"byte_end":14356790,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356791,"byte_end":14356820,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356821,"byte_end":14356868,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356869,"byte_end":14356921,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356922,"byte_end":14356993,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14356994,"byte_end":14357013,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357014,"byte_end":14357027,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357028,"byte_end":14357031,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357032,"byte_end":14357071,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357072,"byte_end":14357127,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357128,"byte_end":14357146,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357147,"byte_end":14357223,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357224,"byte_end":14357290,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357291,"byte_end":14357343,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357344,"byte_end":14357347,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357348,"byte_end":14357428,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357429,"byte_end":14357454,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357455,"byte_end":14357487,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357488,"byte_end":14357501,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357502,"byte_end":14357505,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357506,"byte_end":14357578,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357579,"byte_end":14357605,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357606,"byte_end":14357657,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357658,"byte_end":14357694,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357695,"byte_end":14357698,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357699,"byte_end":14357777,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357778,"byte_end":14357821,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357822,"byte_end":14357869,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357870,"byte_end":14357906,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357907,"byte_end":14357951,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14357952,"byte_end":14358008,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358009,"byte_end":14358057,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358058,"byte_end":14358080,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358081,"byte_end":14358099,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358100,"byte_end":14358113,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358114,"byte_end":14358123,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358124,"byte_end":14358129,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358130,"byte_end":14358137,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358138,"byte_end":14358141,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358142,"byte_end":14358165,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358166,"byte_end":14358169,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358170,"byte_end":14358248,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358249,"byte_end":14358322,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358323,"byte_end":14358399,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358400,"byte_end":14358480,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358481,"byte_end":14358497,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358498,"byte_end":14358501,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358502,"byte_end":14358582,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358583,"byte_end":14358662,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358663,"byte_end":14358743,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358744,"byte_end":14358816,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358817,"byte_end":14358820,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358821,"byte_end":14358898,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358899,"byte_end":14358977,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14358978,"byte_end":14359051,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359052,"byte_end":14359118,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359119,"byte_end":14359122,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359123,"byte_end":14359136,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359137,"byte_end":14359170,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359171,"byte_end":14359205,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359206,"byte_end":14359243,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359244,"byte_end":14359311,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359312,"byte_end":14359347,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359348,"byte_end":14359409,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359410,"byte_end":14359456,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359457,"byte_end":14359518,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359519,"byte_end":14359522,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359523,"byte_end":14359551,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359552,"byte_end":14359555,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359556,"byte_end":14359597,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359598,"byte_end":14359608,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359609,"byte_end":14359633,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359634,"byte_end":14359708,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359709,"byte_end":14359751,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359752,"byte_end":14359766,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359767,"byte_end":14359824,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359825,"byte_end":14359874,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359875,"byte_end":14359889,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359890,"byte_end":14359927,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359928,"byte_end":14359979,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14359980,"byte_end":14360026,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360027,"byte_end":14360057,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360058,"byte_end":14360072,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360073,"byte_end":14360082,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360083,"byte_end":14360088,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360089,"byte_end":14360096,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360097,"byte_end":14360104,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360105,"byte_end":14360180,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360181,"byte_end":14360254,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360255,"byte_end":14360297,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360298,"byte_end":14360301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360302,"byte_end":14360324,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360325,"byte_end":14360328,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360329,"byte_end":14360406,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360407,"byte_end":14360483,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360484,"byte_end":14360560,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360561,"byte_end":14360584,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360585,"byte_end":14360588,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360589,"byte_end":14360634,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360635,"byte_end":14360642,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360643,"byte_end":14360678,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360679,"byte_end":14360703,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360704,"byte_end":14360707,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360708,"byte_end":14360737,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360738,"byte_end":14360741,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360742,"byte_end":14360781,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360782,"byte_end":14360785,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360786,"byte_end":14360832,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360833,"byte_end":14360869,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360870,"byte_end":14360873,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360874,"byte_end":14360965,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14360966,"byte_end":14361040,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361041,"byte_end":14361063,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361064,"byte_end":14361097,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361098,"byte_end":14361145,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361146,"byte_end":14361198,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361199,"byte_end":14361274,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361275,"byte_end":14361294,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361295,"byte_end":14361308,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361309,"byte_end":14361312,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361313,"byte_end":14361365,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361366,"byte_end":14361443,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361444,"byte_end":14361508,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361509,"byte_end":14361512,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361513,"byte_end":14361556,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361557,"byte_end":14361597,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361598,"byte_end":14361601,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361602,"byte_end":14361659,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361660,"byte_end":14361706,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361707,"byte_end":14361758,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361759,"byte_end":14361777,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361778,"byte_end":14361787,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361788,"byte_end":14361793,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361794,"byte_end":14361801,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361802,"byte_end":14361805,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361806,"byte_end":14361845,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361846,"byte_end":14361887,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361888,"byte_end":14361924,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361925,"byte_end":14361957,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14361958,"byte_end":14362054,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362055,"byte_end":14362106,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362107,"byte_end":14362160,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362161,"byte_end":14362204,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362205,"byte_end":14362249,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362250,"byte_end":14362298,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362299,"byte_end":14362347,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362348,"byte_end":14362394,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362395,"byte_end":14362434,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364458,"byte_end":14364468,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363301,"byte_end":14363386,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363387,"byte_end":14363390,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363391,"byte_end":14363429,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363430,"byte_end":14363468,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363469,"byte_end":14363472,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363473,"byte_end":14363486,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363487,"byte_end":14363490,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363491,"byte_end":14363572,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363573,"byte_end":14363576,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363577,"byte_end":14363616,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363617,"byte_end":14363650,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363651,"byte_end":14363680,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363681,"byte_end":14363684,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363685,"byte_end":14363692,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363693,"byte_end":14363711,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363712,"byte_end":14363742,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363743,"byte_end":14363767,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363768,"byte_end":14363775,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363776,"byte_end":14363805,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363806,"byte_end":14363858,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363859,"byte_end":14363862,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363863,"byte_end":14363881,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363882,"byte_end":14363899,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363900,"byte_end":14363980,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14363981,"byte_end":14364015,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364016,"byte_end":14364069,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364070,"byte_end":14364081,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364082,"byte_end":14364089,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364090,"byte_end":14364095,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364096,"byte_end":14364143,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364144,"byte_end":14364197,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364198,"byte_end":14364256,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364257,"byte_end":14364336,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364337,"byte_end":14364349,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364350,"byte_end":14364357,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364358,"byte_end":14364365,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364366,"byte_end":14364369,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364570,"byte_end":14364573,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364497,"byte_end":14364558,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364716,"byte_end":14364722,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14365027,"byte_end":14365033,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, Bytes, &'_ mut BytesMut)\n-> Result<(), io::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14365261,"byte_end":14365267,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, BytesMut, &'_ mut BytesMut)\n-> Result<(), io::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366810,"byte_end":14366817,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365525,"byte_end":14365560,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365561,"byte_end":14365564,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365565,"byte_end":14365634,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365635,"byte_end":14365714,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365715,"byte_end":14365787,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365788,"byte_end":14365812,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365813,"byte_end":14365816,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365817,"byte_end":14365885,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365886,"byte_end":14365963,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14365964,"byte_end":14366025,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366026,"byte_end":14366029,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366030,"byte_end":14366091,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366092,"byte_end":14366154,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366155,"byte_end":14366158,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366159,"byte_end":14366222,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fulfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366223,"byte_end":14366285,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366286,"byte_end":14366365,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366366,"byte_end":14366440,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366441,"byte_end":14366460,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366461,"byte_end":14366464,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366465,"byte_end":14366533,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366534,"byte_end":14366596,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366597,"byte_end":14366672,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366673,"byte_end":14366713,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366714,"byte_end":14366717,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366718,"byte_end":14366754,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366755,"byte_end":14366799,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366865,"byte_end":14366869,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366824,"byte_end":14366855,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":531},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367635,"byte_end":14367640,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366876,"byte_end":14366928,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366933,"byte_end":14366936,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14366941,"byte_end":14367010,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367015,"byte_end":14367085,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367090,"byte_end":14367136,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367141,"byte_end":14367144,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367149,"byte_end":14367225,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367230,"byte_end":14367305,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367310,"byte_end":14367385,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367390,"byte_end":14367430,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367435,"byte_end":14367438,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367443,"byte_end":14367517,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367522,"byte_end":14367568,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367573,"byte_end":14367576,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367581,"byte_end":14367625,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370576,"byte_end":14370582,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367664,"byte_end":14367729,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367734,"byte_end":14367737,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367742,"byte_end":14367816,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367821,"byte_end":14367893,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367898,"byte_end":14367971,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14367976,"byte_end":14368019,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368024,"byte_end":14368027,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368032,"byte_end":14368105,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368110,"byte_end":14368173,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368178,"byte_end":14368253,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368258,"byte_end":14368333,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368338,"byte_end":14368361,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368366,"byte_end":14368369,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368374,"byte_end":14368446,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368451,"byte_end":14368525,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368530,"byte_end":14368600,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368605,"byte_end":14368608,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368613,"byte_end":14368681,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368686,"byte_end":14368757,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368762,"byte_end":14368842,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368847,"byte_end":14368859,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368864,"byte_end":14368867,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368872,"byte_end":14368942,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14368947,"byte_end":14369022,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369027,"byte_end":14369064,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369069,"byte_end":14369072,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369077,"byte_end":14369113,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369118,"byte_end":14369162,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369167,"byte_end":14369170,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369175,"byte_end":14369198,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369203,"byte_end":14369206,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369211,"byte_end":14369285,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369290,"byte_end":14369364,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369369,"byte_end":14369422,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369427,"byte_end":14369430,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369435,"byte_end":14369506,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369511,"byte_end":14369581,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369586,"byte_end":14369602,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369607,"byte_end":14369610,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369615,"byte_end":14369628,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369633,"byte_end":14369651,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369656,"byte_end":14369661,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369666,"byte_end":14369692,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369697,"byte_end":14369734,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369739,"byte_end":14369744,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369749,"byte_end":14369770,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369775,"byte_end":14369780,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369785,"byte_end":14369815,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369820,"byte_end":14369834,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369839,"byte_end":14369870,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369875,"byte_end":14369908,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369913,"byte_end":14369916,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14369921,"byte_end":14370014,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370019,"byte_end":14370037,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370042,"byte_end":14370045,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370050,"byte_end":14370122,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370127,"byte_end":14370187,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370192,"byte_end":14370244,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370249,"byte_end":14370311,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370316,"byte_end":14370383,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370388,"byte_end":14370391,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370396,"byte_end":14370424,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370429,"byte_end":14370438,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370443,"byte_end":14370448,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370453,"byte_end":14370460,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370465,"byte_end":14370468,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370473,"byte_end":14370542,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370547,"byte_end":14370568,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371748,"byte_end":14371758,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370663,"byte_end":14370735,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370740,"byte_end":14370789,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370794,"byte_end":14370797,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370802,"byte_end":14370870,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370875,"byte_end":14370942,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14370947,"byte_end":14371015,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371020,"byte_end":14371096,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371101,"byte_end":14371167,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371172,"byte_end":14371175,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371180,"byte_end":14371248,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371253,"byte_end":14371328,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371333,"byte_end":14371408,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371413,"byte_end":14371485,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371490,"byte_end":14371532,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371537,"byte_end":14371540,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371545,"byte_end":14371620,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371625,"byte_end":14371703,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14371708,"byte_end":14371740,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373366,"byte_end":14373372,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372176,"byte_end":14372256,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372261,"byte_end":14372337,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372342,"byte_end":14372345,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372350,"byte_end":14372425,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372430,"byte_end":14372500,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372505,"byte_end":14372576,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372581,"byte_end":14372653,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372658,"byte_end":14372716,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372721,"byte_end":14372724,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372729,"byte_end":14372798,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372803,"byte_end":14372878,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372883,"byte_end":14372959,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372964,"byte_end":14372986,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372991,"byte_end":14372994,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14372999,"byte_end":14373072,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373077,"byte_end":14373150,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373155,"byte_end":14373231,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373236,"byte_end":14373239,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373244,"byte_end":14373280,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373285,"byte_end":14373317,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/decoder.rs","byte_start":14373322,"byte_end":14373358,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373706,"byte_end":14373713,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373551,"byte_end":14373623,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373624,"byte_end":14373644,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373645,"byte_end":14373648,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373649,"byte_end":14373695,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373978,"byte_end":14373983,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373726,"byte_end":14373758,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373763,"byte_end":14373766,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373771,"byte_end":14373848,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373853,"byte_end":14373909,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373914,"byte_end":14373917,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14373922,"byte_end":14373968,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374334,"byte_end":14374340,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode<'_, '_>(&'_ mut Self, Item, &'_ mut BytesMut)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374007,"byte_end":14374052,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374057,"byte_end":14374060,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374065,"byte_end":14374139,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374144,"byte_end":14374224,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374229,"byte_end":14374267,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374272,"byte_end":14374275,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/encoder.rs","byte_start":14374280,"byte_end":14374326,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388121,"byte_end":14388127,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1529}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389900,"byte_end":14389903,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388269,"byte_end":14388349,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388354,"byte_end":14388435,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388440,"byte_end":14388443,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388448,"byte_end":14388523,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388528,"byte_end":14388598,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388603,"byte_end":14388672,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388677,"byte_end":14388749,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388754,"byte_end":14388812,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388817,"byte_end":14388820,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388825,"byte_end":14388896,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388901,"byte_end":14388978,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388983,"byte_end":14389059,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389064,"byte_end":14389086,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389091,"byte_end":14389094,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389099,"byte_end":14389172,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389177,"byte_end":14389250,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389255,"byte_end":14389331,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389336,"byte_end":14389339,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389344,"byte_end":14389420,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389425,"byte_end":14389501,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389506,"byte_end":14389581,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389586,"byte_end":14389621,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389626,"byte_end":14389629,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389634,"byte_end":14389670,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389675,"byte_end":14389707,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389712,"byte_end":14389749,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389754,"byte_end":14389792,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14389797,"byte_end":14389888,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391511,"byte_end":14391524,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390116,"byte_end":14390196,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390201,"byte_end":14390282,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390287,"byte_end":14390336,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390341,"byte_end":14390344,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390349,"byte_end":14390424,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390429,"byte_end":14390499,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390504,"byte_end":14390573,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390578,"byte_end":14390650,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390655,"byte_end":14390713,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390718,"byte_end":14390721,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390726,"byte_end":14390797,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390802,"byte_end":14390879,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390884,"byte_end":14390960,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390965,"byte_end":14390987,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14390992,"byte_end":14390995,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391000,"byte_end":14391073,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391078,"byte_end":14391151,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391156,"byte_end":14391232,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391237,"byte_end":14391240,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391245,"byte_end":14391281,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391286,"byte_end":14391318,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391323,"byte_end":14391360,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391365,"byte_end":14391403,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14391408,"byte_end":14391499,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393671,"byte_end":14393681,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392094,"byte_end":14392174,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392179,"byte_end":14392260,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392265,"byte_end":14392268,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392273,"byte_end":14392348,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392353,"byte_end":14392423,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392428,"byte_end":14392499,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392504,"byte_end":14392576,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392581,"byte_end":14392639,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392644,"byte_end":14392647,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392652,"byte_end":14392723,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392728,"byte_end":14392805,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392810,"byte_end":14392886,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392891,"byte_end":14392913,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392918,"byte_end":14392921,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392926,"byte_end":14393005,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393010,"byte_end":14393087,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393092,"byte_end":14393095,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393100,"byte_end":14393173,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393178,"byte_end":14393251,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393256,"byte_end":14393332,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393337,"byte_end":14393340,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393345,"byte_end":14393381,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393386,"byte_end":14393418,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393423,"byte_end":14393461,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393466,"byte_end":14393504,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393509,"byte_end":14393563,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14393568,"byte_end":14393659,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394316,"byte_end":14394323,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394033,"byte_end":14394096,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394101,"byte_end":14394114,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394119,"byte_end":14394122,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394127,"byte_end":14394202,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394207,"byte_end":14394277,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394282,"byte_end":14394304,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394667,"byte_end":14394674,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394376,"byte_end":14394447,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394452,"byte_end":14394465,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394470,"byte_end":14394473,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394478,"byte_end":14394553,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394558,"byte_end":14394628,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394633,"byte_end":14394655,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395037,"byte_end":14395048,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Pin<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394739,"byte_end":14394817,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394822,"byte_end":14394835,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394840,"byte_end":14394843,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394848,"byte_end":14394923,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14394928,"byte_end":14394998,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395003,"byte_end":14395025,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395395,"byte_end":14395400,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec<'_>(&'_ Self) -> &'_ U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395144,"byte_end":14395202,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395207,"byte_end":14395220,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395225,"byte_end":14395228,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395233,"byte_end":14395307,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395312,"byte_end":14395383,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395712,"byte_end":14395721,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut<'_>(&'_ mut Self) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395453,"byte_end":14395519,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395524,"byte_end":14395537,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395542,"byte_end":14395545,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395550,"byte_end":14395624,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395629,"byte_end":14395700,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396058,"byte_end":14396067,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395786,"byte_end":14395854,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395859,"byte_end":14395883,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395888,"byte_end":14395891,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395896,"byte_end":14395970,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14395975,"byte_end":14396046,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396758,"byte_end":14396771,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"fn codec_pin_mut<'_>(Pin<&'_ mut Self>) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396499,"byte_end":14396565,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396570,"byte_end":14396583,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396588,"byte_end":14396591,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396596,"byte_end":14396670,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396675,"byte_end":14396746,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396917,"byte_end":14396928,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14396862,"byte_end":14396905,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397063,"byte_end":14397078,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397000,"byte_end":14397051,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397218,"byte_end":14397230,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397162,"byte_end":14397206,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397367,"byte_end":14397383,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397303,"byte_end":14397355,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397513,"byte_end":14397534,"line_start":257,"line_end":257,"column_start":12,"column_end":33},"name":"backpressure_boundary","qualname":"<Framed<T, U>>::backpressure_boundary","value":"fn backpressure_boundary<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns backpressure boundary\n","sig":null,"attributes":[{"value":"/ Returns backpressure boundary","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397468,"byte_end":14397501,"line_start":256,"line_end":256,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397662,"byte_end":14397687,"line_start":262,"line_end":262,"column_start":12,"column_end":37},"name":"set_backpressure_boundary","qualname":"<Framed<T, U>>::set_backpressure_boundary","value":"fn set_backpressure_boundary<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates backpressure boundary\n","sig":null,"attributes":[{"value":"/ Updates backpressure boundary","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397617,"byte_end":14397650,"line_start":261,"line_end":261,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398059,"byte_end":14398069,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397794,"byte_end":14397857,"line_start":266,"line_end":266,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397862,"byte_end":14397865,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397870,"byte_end":14397945,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14397950,"byte_end":14398020,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398025,"byte_end":14398047,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398441,"byte_end":14398451,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398119,"byte_end":14398193,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398198,"byte_end":14398239,"line_start":276,"line_end":276,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398244,"byte_end":14398247,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398252,"byte_end":14398327,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398332,"byte_end":14398402,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398407,"byte_end":14398429,"line_start":280,"line_end":280,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398904,"byte_end":14398913,"line_start":300,"line_end":300,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399245,"byte_end":14399255,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399393,"byte_end":14399403,"line_start":318,"line_end":318,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399524,"byte_end":14399534,"line_start":322,"line_end":322,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399672,"byte_end":14399682,"line_start":326,"line_end":326,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399907,"byte_end":14399910,"line_start":336,"line_end":336,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400425,"byte_end":14400436,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400110,"byte_end":14400181,"line_start":344,"line_end":344,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400182,"byte_end":14400254,"line_start":345,"line_end":345,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400255,"byte_end":14400315,"line_start":346,"line_end":346,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400316,"byte_end":14400319,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400320,"byte_end":14400356,"line_start":348,"line_end":348,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400374,"byte_end":14400413,"line_start":350,"line_end":350,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400522,"byte_end":14400524,"line_start":353,"line_end":353,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400449,"byte_end":14400513,"line_start":352,"line_end":352,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400556,"byte_end":14400561,"line_start":356,"line_end":356,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400534,"byte_end":14400547,"line_start":355,"line_end":355,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400626,"byte_end":14400634,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400571,"byte_end":14400617,"line_start":358,"line_end":358,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400721,"byte_end":14400730,"line_start":362,"line_end":362,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400651,"byte_end":14400712,"line_start":361,"line_end":361,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400963,"byte_end":14400966,"line_start":371,"line_end":371,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400911,"byte_end":14400951,"line_start":370,"line_end":370,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14401695,"byte_end":14401705,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1488}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14401956,"byte_end":14401959,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14401888,"byte_end":14401944,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402307,"byte_end":14402320,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402191,"byte_end":14402273,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402278,"byte_end":14402295,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403074,"byte_end":14403081,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402787,"byte_end":14402850,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402855,"byte_end":14402872,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402877,"byte_end":14402880,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402885,"byte_end":14402960,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402965,"byte_end":14403035,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403040,"byte_end":14403062,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403429,"byte_end":14403436,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403134,"byte_end":14403205,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403210,"byte_end":14403227,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403232,"byte_end":14403235,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403240,"byte_end":14403315,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403320,"byte_end":14403390,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403395,"byte_end":14403417,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403803,"byte_end":14403814,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Pin<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403501,"byte_end":14403579,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403584,"byte_end":14403601,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403606,"byte_end":14403609,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403614,"byte_end":14403689,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403694,"byte_end":14403764,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403769,"byte_end":14403791,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404179,"byte_end":14404189,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403910,"byte_end":14403977,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403982,"byte_end":14403985,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14403990,"byte_end":14404065,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404070,"byte_end":14404140,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404145,"byte_end":14404167,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404301,"byte_end":14404308,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder<'_>(&'_ Self) -> &'_ D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404239,"byte_end":14404289,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404431,"byte_end":14404442,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut<'_>(&'_ mut Self) -> &'_ mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404361,"byte_end":14404419,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404607,"byte_end":14404618,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404507,"byte_end":14404566,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14404571,"byte_end":14404595,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405134,"byte_end":14405149,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"fn decoder_pin_mut<'_>(Pin<&'_ mut Self>) -> &'_ mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405064,"byte_end":14405122,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405295,"byte_end":14405306,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405240,"byte_end":14405283,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405436,"byte_end":14405451,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405373,"byte_end":14405424,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405714,"byte_end":14405723,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406003,"byte_end":14406013,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406167,"byte_end":14406177,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406314,"byte_end":14406324,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406478,"byte_end":14406488,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406733,"byte_end":14406736,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14407552,"byte_end":14407563,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1447}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14407770,"byte_end":14407773,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14407701,"byte_end":14407758,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408331,"byte_end":14408338,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408043,"byte_end":14408106,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408111,"byte_end":14408129,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408134,"byte_end":14408137,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408142,"byte_end":14408217,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408222,"byte_end":14408292,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408297,"byte_end":14408319,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408687,"byte_end":14408694,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408391,"byte_end":14408462,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408467,"byte_end":14408485,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408490,"byte_end":14408493,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408498,"byte_end":14408573,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408578,"byte_end":14408648,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408653,"byte_end":14408675,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409062,"byte_end":14409073,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Pin<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408759,"byte_end":14408837,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408842,"byte_end":14408860,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408865,"byte_end":14408868,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408873,"byte_end":14408948,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408953,"byte_end":14409023,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409028,"byte_end":14409050,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409439,"byte_end":14409449,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409169,"byte_end":14409237,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409242,"byte_end":14409245,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409250,"byte_end":14409325,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409330,"byte_end":14409400,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409405,"byte_end":14409427,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409561,"byte_end":14409568,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder<'_>(&'_ Self) -> &'_ E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409499,"byte_end":14409549,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409691,"byte_end":14409702,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut<'_>(&'_ mut Self) -> &'_ mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409621,"byte_end":14409679,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409868,"byte_end":14409879,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409767,"byte_end":14409827,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14409832,"byte_end":14409856,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410397,"byte_end":14410412,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"fn encoder_pin_mut<'_>(Pin<&'_ mut Self>) -> &'_ mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410327,"byte_end":14410385,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410559,"byte_end":14410571,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410503,"byte_end":14410547,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410702,"byte_end":14410718,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410638,"byte_end":14410690,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410842,"byte_end":14410863,"line_start":128,"line_end":128,"column_start":12,"column_end":33},"name":"backpressure_boundary","qualname":"<FramedWrite<T, E>>::backpressure_boundary","value":"fn backpressure_boundary<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns backpressure boundary\n","sig":null,"attributes":[{"value":"/ Returns backpressure boundary","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410797,"byte_end":14410830,"line_start":127,"line_end":127,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410985,"byte_end":14411010,"line_start":133,"line_end":133,"column_start":12,"column_end":37},"name":"set_backpressure_boundary","qualname":"<FramedWrite<T, E>>::set_backpressure_boundary","value":"fn set_backpressure_boundary<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates backpressure boundary\n","sig":null,"attributes":[{"value":"/ Updates backpressure boundary","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14410940,"byte_end":14410973,"line_start":132,"line_end":132,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411319,"byte_end":14411329,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411467,"byte_end":14411477,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411598,"byte_end":14411608,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411746,"byte_end":14411756,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14412038,"byte_end":14412047,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14412287,"byte_end":14412290,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":938},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":1235},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":995},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":997},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1021},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412559,"byte_end":14412611,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412612,"byte_end":14412615,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412616,"byte_end":14412686,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412687,"byte_end":14412745,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412746,"byte_end":14412818,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412819,"byte_end":14412889,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412890,"byte_end":14412957,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412958,"byte_end":14412961,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412962,"byte_end":14412983,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412984,"byte_end":14412987,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14412988,"byte_end":14413063,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413064,"byte_end":14413135,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413136,"byte_end":14413207,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413208,"byte_end":14413278,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413279,"byte_end":14413319,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413320,"byte_end":14413323,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413324,"byte_end":14413331,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413332,"byte_end":14413375,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413376,"byte_end":14413434,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413435,"byte_end":14413438,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413439,"byte_end":14413494,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413495,"byte_end":14413537,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413538,"byte_end":14413543,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413544,"byte_end":14413596,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413597,"byte_end":14413602,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413603,"byte_end":14413625,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413626,"byte_end":14413633,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413634,"byte_end":14413637,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413638,"byte_end":14413710,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413711,"byte_end":14413782,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413783,"byte_end":14413802,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413803,"byte_end":14413806,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413807,"byte_end":14413818,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413819,"byte_end":14413868,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413869,"byte_end":14413918,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413919,"byte_end":14413968,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413969,"byte_end":14413976,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413977,"byte_end":14413980,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14413981,"byte_end":14414019,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414020,"byte_end":14414023,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414024,"byte_end":14414031,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414032,"byte_end":14414075,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414076,"byte_end":14414134,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414135,"byte_end":14414138,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414139,"byte_end":14414164,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414165,"byte_end":14414186,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414187,"byte_end":14414190,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414191,"byte_end":14414267,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414268,"byte_end":14414277,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414278,"byte_end":14414320,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414321,"byte_end":14414326,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414327,"byte_end":14414400,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414401,"byte_end":14414448,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414449,"byte_end":14414452,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414453,"byte_end":14414490,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414491,"byte_end":14414505,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414506,"byte_end":14414511,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414512,"byte_end":14414519,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414520,"byte_end":14414523,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414524,"byte_end":14414566,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414567,"byte_end":14414570,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414571,"byte_end":14414582,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414583,"byte_end":14414622,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414623,"byte_end":14414662,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414663,"byte_end":14414702,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414703,"byte_end":14414710,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414711,"byte_end":14414714,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414715,"byte_end":14414729,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414730,"byte_end":14414733,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414734,"byte_end":14414809,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414810,"byte_end":14414883,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414884,"byte_end":14414950,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14414951,"byte_end":14415020,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415021,"byte_end":14415086,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415087,"byte_end":14415090,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415091,"byte_end":14415107,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415108,"byte_end":14415111,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415112,"byte_end":14415188,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415189,"byte_end":14415230,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415231,"byte_end":14415234,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415235,"byte_end":14415242,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415243,"byte_end":14415274,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415275,"byte_end":14415325,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415326,"byte_end":14415367,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415368,"byte_end":14415403,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415404,"byte_end":14415452,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415453,"byte_end":14415488,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415489,"byte_end":14415537,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415538,"byte_end":14415587,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415588,"byte_end":14415610,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415611,"byte_end":14415618,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415619,"byte_end":14415641,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415642,"byte_end":14415649,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415650,"byte_end":14415653,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415654,"byte_end":14415702,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415703,"byte_end":14415706,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415707,"byte_end":14415718,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415719,"byte_end":14415771,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415772,"byte_end":14415837,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415838,"byte_end":14415903,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415904,"byte_end":14415969,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415970,"byte_end":14415977,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415978,"byte_end":14415981,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14415982,"byte_end":14416058,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416059,"byte_end":14416133,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416134,"byte_end":14416206,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416207,"byte_end":14416283,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416284,"byte_end":14416326,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416327,"byte_end":14416330,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416331,"byte_end":14416347,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416348,"byte_end":14416351,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416352,"byte_end":14416427,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416428,"byte_end":14416469,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416470,"byte_end":14416473,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416474,"byte_end":14416481,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416482,"byte_end":14416513,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416514,"byte_end":14416564,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416565,"byte_end":14416606,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416607,"byte_end":14416642,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416643,"byte_end":14416691,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416692,"byte_end":14416727,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416728,"byte_end":14416776,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416777,"byte_end":14416836,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416837,"byte_end":14416859,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416860,"byte_end":14416867,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416868,"byte_end":14416890,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416891,"byte_end":14416898,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416899,"byte_end":14416902,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416903,"byte_end":14416951,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416952,"byte_end":14416955,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416956,"byte_end":14416967,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14416968,"byte_end":14417017,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417018,"byte_end":14417072,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417073,"byte_end":14417127,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417128,"byte_end":14417182,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417183,"byte_end":14417190,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417191,"byte_end":14417194,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417195,"byte_end":14417268,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417269,"byte_end":14417336,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417337,"byte_end":14417340,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417341,"byte_end":14417357,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417358,"byte_end":14417361,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417362,"byte_end":14417438,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417439,"byte_end":14417511,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417512,"byte_end":14417551,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417552,"byte_end":14417555,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417556,"byte_end":14417563,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417564,"byte_end":14417595,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417596,"byte_end":14417646,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417647,"byte_end":14417688,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417689,"byte_end":14417724,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417725,"byte_end":14417773,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417774,"byte_end":14417809,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417810,"byte_end":14417857,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417858,"byte_end":14417878,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417879,"byte_end":14417901,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417902,"byte_end":14417909,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417910,"byte_end":14417932,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417933,"byte_end":14417940,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417941,"byte_end":14417944,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417945,"byte_end":14417993,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417994,"byte_end":14417997,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14417998,"byte_end":14418009,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418010,"byte_end":14418062,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418063,"byte_end":14418128,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418129,"byte_end":14418194,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418195,"byte_end":14418260,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418261,"byte_end":14418268,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418269,"byte_end":14418272,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418273,"byte_end":14418345,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418346,"byte_end":14418421,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418422,"byte_end":14418494,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418495,"byte_end":14418571,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418572,"byte_end":14418645,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418646,"byte_end":14418649,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418650,"byte_end":14418666,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418667,"byte_end":14418670,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418671,"byte_end":14418745,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418746,"byte_end":14418813,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418814,"byte_end":14418817,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418818,"byte_end":14418825,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418826,"byte_end":14418857,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418858,"byte_end":14418908,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418909,"byte_end":14418950,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418951,"byte_end":14418986,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14418987,"byte_end":14419035,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419036,"byte_end":14419067,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419068,"byte_end":14419116,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419117,"byte_end":14419137,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419138,"byte_end":14419160,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419161,"byte_end":14419168,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419169,"byte_end":14419191,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419192,"byte_end":14419199,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419200,"byte_end":14419203,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419204,"byte_end":14419252,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419253,"byte_end":14419256,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419257,"byte_end":14419268,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419269,"byte_end":14419295,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419296,"byte_end":14419341,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419342,"byte_end":14419387,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419388,"byte_end":14419433,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419434,"byte_end":14419437,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419438,"byte_end":14419466,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419467,"byte_end":14419512,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419513,"byte_end":14419558,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419559,"byte_end":14419604,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419605,"byte_end":14419612,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419613,"byte_end":14419616,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419617,"byte_end":14419689,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419690,"byte_end":14419766,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419767,"byte_end":14419837,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419838,"byte_end":14419907,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419908,"byte_end":14419945,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419946,"byte_end":14419949,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14419950,"byte_end":14420024,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420025,"byte_end":14420079,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420080,"byte_end":14420083,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420084,"byte_end":14420100,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420101,"byte_end":14420104,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420105,"byte_end":14420178,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420179,"byte_end":14420255,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420256,"byte_end":14420330,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420331,"byte_end":14420344,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420345,"byte_end":14420348,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420349,"byte_end":14420356,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420357,"byte_end":14420388,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420389,"byte_end":14420439,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420440,"byte_end":14420481,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420482,"byte_end":14420517,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420518,"byte_end":14420567,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420568,"byte_end":14420603,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420604,"byte_end":14420652,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420653,"byte_end":14420697,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420698,"byte_end":14420720,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420721,"byte_end":14420728,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420729,"byte_end":14420751,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420752,"byte_end":14420759,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420760,"byte_end":14420763,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420764,"byte_end":14420812,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420813,"byte_end":14420816,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420817,"byte_end":14420828,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420829,"byte_end":14420855,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420856,"byte_end":14420906,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420907,"byte_end":14420957,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14420958,"byte_end":14421008,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421009,"byte_end":14421012,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421013,"byte_end":14421033,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421034,"byte_end":14421064,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421065,"byte_end":14421095,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421096,"byte_end":14421126,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421127,"byte_end":14421134,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421135,"byte_end":14421138,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421139,"byte_end":14421212,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421213,"byte_end":14421288,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421289,"byte_end":14421361,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421362,"byte_end":14421400,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421401,"byte_end":14421404,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421405,"byte_end":14421479,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421480,"byte_end":14421556,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421557,"byte_end":14421630,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421631,"byte_end":14421659,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421660,"byte_end":14421663,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421664,"byte_end":14421680,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421681,"byte_end":14421684,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421685,"byte_end":14421758,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421759,"byte_end":14421835,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421836,"byte_end":14421910,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421911,"byte_end":14421983,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421984,"byte_end":14421995,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14421996,"byte_end":14421999,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422000,"byte_end":14422007,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422008,"byte_end":14422039,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422040,"byte_end":14422090,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422091,"byte_end":14422132,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422133,"byte_end":14422168,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422169,"byte_end":14422218,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422219,"byte_end":14422254,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422255,"byte_end":14422320,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422321,"byte_end":14422341,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422342,"byte_end":14422364,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422365,"byte_end":14422372,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422373,"byte_end":14422380,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422381,"byte_end":14422384,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422385,"byte_end":14422433,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422434,"byte_end":14422437,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422438,"byte_end":14422449,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422450,"byte_end":14422476,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422477,"byte_end":14422527,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422528,"byte_end":14422578,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422579,"byte_end":14422629,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422630,"byte_end":14422633,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422634,"byte_end":14422654,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422655,"byte_end":14422685,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422686,"byte_end":14422716,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422717,"byte_end":14422747,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422748,"byte_end":14422755,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422756,"byte_end":14422759,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422760,"byte_end":14422833,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422834,"byte_end":14422908,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422909,"byte_end":14422983,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14422984,"byte_end":14423057,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423058,"byte_end":14423134,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423135,"byte_end":14423168,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423169,"byte_end":14423172,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423173,"byte_end":14423189,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423190,"byte_end":14423193,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423194,"byte_end":14423268,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423269,"byte_end":14423336,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423337,"byte_end":14423340,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423341,"byte_end":14423348,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423349,"byte_end":14423380,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423381,"byte_end":14423431,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423432,"byte_end":14423473,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423474,"byte_end":14423509,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423510,"byte_end":14423558,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423559,"byte_end":14423590,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423591,"byte_end":14423638,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423639,"byte_end":14423685,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423686,"byte_end":14423708,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423709,"byte_end":14423716,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423717,"byte_end":14423739,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423740,"byte_end":14423747,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423748,"byte_end":14423751,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423752,"byte_end":14423800,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423801,"byte_end":14423804,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423805,"byte_end":14423816,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423817,"byte_end":14423873,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423874,"byte_end":14423935,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423936,"byte_end":14423997,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14423998,"byte_end":14424059,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424060,"byte_end":14424067,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424068,"byte_end":14424071,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424072,"byte_end":14424146,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424147,"byte_end":14424167,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424168,"byte_end":14424171,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424172,"byte_end":14424186,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424187,"byte_end":14424190,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424191,"byte_end":14424266,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424267,"byte_end":14424339,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424340,"byte_end":14424408,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424409,"byte_end":14424485,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424486,"byte_end":14424527,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424528,"byte_end":14424531,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424532,"byte_end":14424602,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424603,"byte_end":14424621,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424622,"byte_end":14424625,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424626,"byte_end":14424633,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424634,"byte_end":14424666,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424667,"byte_end":14424717,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424718,"byte_end":14424762,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424763,"byte_end":14424776,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424777,"byte_end":14424812,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424813,"byte_end":14424848,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424849,"byte_end":14424872,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424873,"byte_end":14424880,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424881,"byte_end":14424903,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424904,"byte_end":14424911,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424912,"byte_end":14424915,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424916,"byte_end":14424966,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424967,"byte_end":14424970,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424971,"byte_end":14424982,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14424983,"byte_end":14425016,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425017,"byte_end":14425050,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425051,"byte_end":14425084,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425085,"byte_end":14425092,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425093,"byte_end":14425096,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425097,"byte_end":14425166,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425167,"byte_end":14425204,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425205,"byte_end":14425244,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425245,"byte_end":14425290,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425291,"byte_end":14425338,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425339,"byte_end":14425369,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425370,"byte_end":14425403,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425970,"byte_end":14425977,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425652,"byte_end":14425707,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425708,"byte_end":14425711,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425712,"byte_end":14425787,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425788,"byte_end":14425868,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14425869,"byte_end":14425928,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":995},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426648,"byte_end":14426673,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":996}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426563,"byte_end":14426636,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427025,"byte_end":14427045,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426694,"byte_end":14426768,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426769,"byte_end":14426772,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426773,"byte_end":14426852,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426853,"byte_end":14426896,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426897,"byte_end":14426900,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426901,"byte_end":14426954,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426955,"byte_end":14426958,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14426959,"byte_end":14426989,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427389,"byte_end":14427392,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427298,"byte_end":14427377,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427619,"byte_end":14427626,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427516,"byte_end":14427591,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427596,"byte_end":14427607,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427848,"byte_end":14427864,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427676,"byte_end":14427717,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427722,"byte_end":14427725,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427730,"byte_end":14427803,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427808,"byte_end":14427836,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14428285,"byte_end":14428305,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427929,"byte_end":14427963,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427968,"byte_end":14427971,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427976,"byte_end":14428046,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14428051,"byte_end":14428126,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14428131,"byte_end":14428203,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14428208,"byte_end":14428273,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14430662,"byte_end":14430668,"line_start":549,"line_end":549,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14431568,"byte_end":14431574,"line_start":579,"line_end":579,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, Bytes, &'_ mut BytesMut)\n-> Result<(), io::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14432900,"byte_end":14432907,"line_start":621,"line_end":621,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433072,"byte_end":14433087,"line_start":630,"line_end":630,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14432996,"byte_end":14433057,"line_start":629,"line_end":629,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434012,"byte_end":14434015,"line_start":666,"line_end":666,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433466,"byte_end":14433541,"line_start":647,"line_end":647,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433546,"byte_end":14433557,"line_start":648,"line_end":648,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433562,"byte_end":14433565,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433570,"byte_end":14433584,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433589,"byte_end":14433592,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433597,"byte_end":14433604,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433609,"byte_end":14433640,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433645,"byte_end":14433693,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433698,"byte_end":14433701,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433706,"byte_end":14433747,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433752,"byte_end":14433787,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433792,"byte_end":14433823,"line_start":658,"line_end":658,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433828,"byte_end":14433863,"line_start":659,"line_end":659,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433868,"byte_end":14433897,"line_start":660,"line_end":660,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433902,"byte_end":14433922,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433927,"byte_end":14433949,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433954,"byte_end":14433961,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433966,"byte_end":14433988,"line_start":664,"line_end":664,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433993,"byte_end":14434000,"line_start":665,"line_end":665,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435200,"byte_end":14435210,"line_start":707,"line_end":707,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian<'_>(&'_ mut Self) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434679,"byte_end":14434728,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434733,"byte_end":14434736,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434741,"byte_end":14434773,"line_start":690,"line_end":690,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434778,"byte_end":14434781,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434786,"byte_end":14434854,"line_start":692,"line_end":692,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434859,"byte_end":14434862,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434867,"byte_end":14434881,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434886,"byte_end":14434889,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434894,"byte_end":14434901,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434906,"byte_end":14434937,"line_start":697,"line_end":697,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434942,"byte_end":14434990,"line_start":698,"line_end":698,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14434995,"byte_end":14434998,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435003,"byte_end":14435044,"line_start":700,"line_end":700,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435049,"byte_end":14435084,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435089,"byte_end":14435110,"line_start":702,"line_end":702,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435115,"byte_end":14435137,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435142,"byte_end":14435149,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435154,"byte_end":14435176,"line_start":705,"line_end":705,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435181,"byte_end":14435188,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435842,"byte_end":14435855,"line_start":731,"line_end":731,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian<'_>(&'_ mut Self) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435309,"byte_end":14435361,"line_start":712,"line_end":712,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435366,"byte_end":14435369,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435374,"byte_end":14435412,"line_start":714,"line_end":714,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435417,"byte_end":14435420,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435425,"byte_end":14435493,"line_start":716,"line_end":716,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435498,"byte_end":14435501,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435506,"byte_end":14435520,"line_start":718,"line_end":718,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435525,"byte_end":14435528,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435533,"byte_end":14435540,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435545,"byte_end":14435576,"line_start":721,"line_end":721,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435581,"byte_end":14435629,"line_start":722,"line_end":722,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435634,"byte_end":14435637,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435642,"byte_end":14435683,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435688,"byte_end":14435723,"line_start":725,"line_end":725,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435728,"byte_end":14435752,"line_start":726,"line_end":726,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435757,"byte_end":14435779,"line_start":727,"line_end":727,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435784,"byte_end":14435791,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435796,"byte_end":14435818,"line_start":729,"line_end":729,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435823,"byte_end":14435830,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436488,"byte_end":14436501,"line_start":755,"line_end":755,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian<'_>(&'_ mut Self) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14435955,"byte_end":14436007,"line_start":736,"line_end":736,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436012,"byte_end":14436015,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436020,"byte_end":14436058,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436063,"byte_end":14436066,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436071,"byte_end":14436139,"line_start":740,"line_end":740,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436144,"byte_end":14436147,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436152,"byte_end":14436166,"line_start":742,"line_end":742,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436171,"byte_end":14436174,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436179,"byte_end":14436186,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436191,"byte_end":14436222,"line_start":745,"line_end":745,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436227,"byte_end":14436275,"line_start":746,"line_end":746,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436280,"byte_end":14436283,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436288,"byte_end":14436329,"line_start":748,"line_end":748,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436334,"byte_end":14436369,"line_start":749,"line_end":749,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436374,"byte_end":14436398,"line_start":750,"line_end":750,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436403,"byte_end":14436425,"line_start":751,"line_end":751,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436430,"byte_end":14436437,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436442,"byte_end":14436464,"line_start":753,"line_end":753,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436469,"byte_end":14436476,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437598,"byte_end":14437614,"line_start":789,"line_end":789,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436670,"byte_end":14436708,"line_start":763,"line_end":763,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436713,"byte_end":14436716,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436721,"byte_end":14436793,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436798,"byte_end":14436823,"line_start":766,"line_end":766,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436828,"byte_end":14436831,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436836,"byte_end":14436908,"line_start":768,"line_end":768,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436913,"byte_end":14436982,"line_start":769,"line_end":769,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14436987,"byte_end":14437060,"line_start":770,"line_end":770,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437065,"byte_end":14437077,"line_start":771,"line_end":771,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437082,"byte_end":14437085,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437090,"byte_end":14437165,"line_start":773,"line_end":773,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437170,"byte_end":14437231,"line_start":774,"line_end":774,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437236,"byte_end":14437239,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437244,"byte_end":14437258,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437263,"byte_end":14437266,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437271,"byte_end":14437278,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437283,"byte_end":14437314,"line_start":779,"line_end":779,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437319,"byte_end":14437367,"line_start":780,"line_end":780,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437372,"byte_end":14437375,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437380,"byte_end":14437421,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437426,"byte_end":14437461,"line_start":783,"line_end":783,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437466,"byte_end":14437508,"line_start":784,"line_end":784,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437513,"byte_end":14437535,"line_start":785,"line_end":785,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437540,"byte_end":14437547,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437552,"byte_end":14437574,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437579,"byte_end":14437586,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438713,"byte_end":14438730,"line_start":826,"line_end":826,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"fn length_field_type<T, '_>(&'_ mut Self) -> &'_ mut Self where\nT: builder::LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437711,"byte_end":14437781,"line_start":794,"line_end":794,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437786,"byte_end":14437789,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437794,"byte_end":14437867,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437872,"byte_end":14437892,"line_start":797,"line_end":797,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437897,"byte_end":14437900,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437905,"byte_end":14437919,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437924,"byte_end":14437927,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437932,"byte_end":14437939,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437944,"byte_end":14437975,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14437980,"byte_end":14438028,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438033,"byte_end":14438036,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438041,"byte_end":14438082,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438087,"byte_end":14438122,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438127,"byte_end":14438162,"line_start":807,"line_end":807,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438167,"byte_end":14438189,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438194,"byte_end":14438201,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438206,"byte_end":14438228,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438233,"byte_end":14438240,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438245,"byte_end":14438248,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438253,"byte_end":14438327,"line_start":813,"line_end":813,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438332,"byte_end":14438373,"line_start":814,"line_end":814,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438378,"byte_end":14438381,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438386,"byte_end":14438405,"line_start":816,"line_end":816,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438410,"byte_end":14438441,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438446,"byte_end":14438496,"line_start":818,"line_end":818,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438501,"byte_end":14438542,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438547,"byte_end":14438582,"line_start":820,"line_end":820,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438587,"byte_end":14438623,"line_start":821,"line_end":821,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438628,"byte_end":14438650,"line_start":822,"line_end":822,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438655,"byte_end":14438662,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438667,"byte_end":14438689,"line_start":824,"line_end":824,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438694,"byte_end":14438701,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439415,"byte_end":14439434,"line_start":849,"line_end":849,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438851,"byte_end":14438914,"line_start":830,"line_end":830,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438919,"byte_end":14438922,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438927,"byte_end":14438978,"line_start":832,"line_end":832,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438983,"byte_end":14438986,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14438991,"byte_end":14439059,"line_start":834,"line_end":834,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439064,"byte_end":14439067,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439072,"byte_end":14439086,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439091,"byte_end":14439094,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439099,"byte_end":14439106,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439111,"byte_end":14439142,"line_start":839,"line_end":839,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439147,"byte_end":14439195,"line_start":840,"line_end":840,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439200,"byte_end":14439203,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439208,"byte_end":14439249,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439254,"byte_end":14439289,"line_start":843,"line_end":843,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439294,"byte_end":14439325,"line_start":844,"line_end":844,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439330,"byte_end":14439352,"line_start":845,"line_end":845,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439357,"byte_end":14439364,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439369,"byte_end":14439391,"line_start":847,"line_end":847,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439396,"byte_end":14439403,"line_start":848,"line_end":848,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440093,"byte_end":14440112,"line_start":872,"line_end":872,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439603,"byte_end":14439669,"line_start":855,"line_end":855,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439674,"byte_end":14439677,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439682,"byte_end":14439737,"line_start":857,"line_end":857,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439742,"byte_end":14439745,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439750,"byte_end":14439764,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439769,"byte_end":14439772,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439777,"byte_end":14439784,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439789,"byte_end":14439820,"line_start":862,"line_end":862,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439825,"byte_end":14439873,"line_start":863,"line_end":863,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439878,"byte_end":14439881,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439886,"byte_end":14439927,"line_start":865,"line_end":865,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439932,"byte_end":14439967,"line_start":866,"line_end":866,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14439972,"byte_end":14440003,"line_start":867,"line_end":867,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440008,"byte_end":14440030,"line_start":868,"line_end":868,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440035,"byte_end":14440042,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440047,"byte_end":14440069,"line_start":870,"line_end":870,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440074,"byte_end":14440081,"line_start":871,"line_end":871,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440666,"byte_end":14440683,"line_start":893,"line_end":893,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment<'_>(&'_ mut Self, isize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440215,"byte_end":14440288,"line_start":877,"line_end":877,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440293,"byte_end":14440311,"line_start":878,"line_end":878,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440316,"byte_end":14440319,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440324,"byte_end":14440338,"line_start":880,"line_end":880,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440343,"byte_end":14440346,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440351,"byte_end":14440358,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440363,"byte_end":14440394,"line_start":883,"line_end":883,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440399,"byte_end":14440447,"line_start":884,"line_end":884,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440452,"byte_end":14440455,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440460,"byte_end":14440501,"line_start":886,"line_end":886,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440506,"byte_end":14440541,"line_start":887,"line_end":887,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440546,"byte_end":14440576,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440581,"byte_end":14440603,"line_start":889,"line_end":889,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440608,"byte_end":14440615,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440620,"byte_end":14440642,"line_start":891,"line_end":891,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440647,"byte_end":14440654,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441333,"byte_end":14441341,"line_start":917,"line_end":917,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440784,"byte_end":14440847,"line_start":898,"line_end":898,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440852,"byte_end":14440855,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440860,"byte_end":14440921,"line_start":900,"line_end":900,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440926,"byte_end":14440929,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440934,"byte_end":14440988,"line_start":902,"line_end":902,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14440993,"byte_end":14440996,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441001,"byte_end":14441015,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441020,"byte_end":14441023,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441028,"byte_end":14441035,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441040,"byte_end":14441071,"line_start":907,"line_end":907,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441076,"byte_end":14441124,"line_start":908,"line_end":908,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441129,"byte_end":14441132,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441137,"byte_end":14441178,"line_start":910,"line_end":910,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441183,"byte_end":14441218,"line_start":911,"line_end":911,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441223,"byte_end":14441243,"line_start":912,"line_end":912,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441248,"byte_end":14441270,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441275,"byte_end":14441282,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441287,"byte_end":14441309,"line_start":915,"line_end":915,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441314,"byte_end":14441321,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441865,"byte_end":14441874,"line_start":937,"line_end":937,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec<'_>(&'_ Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441439,"byte_end":14441502,"line_start":922,"line_end":922,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441507,"byte_end":14441510,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441515,"byte_end":14441529,"line_start":924,"line_end":924,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441534,"byte_end":14441537,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441542,"byte_end":14441549,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441554,"byte_end":14441602,"line_start":927,"line_end":927,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441607,"byte_end":14441628,"line_start":928,"line_end":928,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441633,"byte_end":14441668,"line_start":929,"line_end":929,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441673,"byte_end":14441704,"line_start":930,"line_end":930,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441709,"byte_end":14441744,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441749,"byte_end":14441778,"line_start":932,"line_end":932,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441783,"byte_end":14441803,"line_start":933,"line_end":933,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441808,"byte_end":14441829,"line_start":934,"line_end":934,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441834,"byte_end":14441841,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14441846,"byte_end":14441853,"line_start":936,"line_end":936,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442534,"byte_end":14442542,"line_start":962,"line_end":962,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T, '_>(&'_ Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442026,"byte_end":14442079,"line_start":944,"line_end":944,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442084,"byte_end":14442087,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442092,"byte_end":14442106,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442111,"byte_end":14442114,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442119,"byte_end":14442126,"line_start":948,"line_end":948,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442131,"byte_end":14442162,"line_start":949,"line_end":949,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442167,"byte_end":14442215,"line_start":950,"line_end":950,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442220,"byte_end":14442223,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442228,"byte_end":14442269,"line_start":952,"line_end":952,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442274,"byte_end":14442309,"line_start":953,"line_end":953,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442314,"byte_end":14442345,"line_start":954,"line_end":954,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442350,"byte_end":14442385,"line_start":955,"line_end":955,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442390,"byte_end":14442419,"line_start":956,"line_end":956,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442424,"byte_end":14442444,"line_start":957,"line_end":957,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442449,"byte_end":14442471,"line_start":958,"line_end":958,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442476,"byte_end":14442483,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442488,"byte_end":14442510,"line_start":960,"line_end":960,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442515,"byte_end":14442522,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443119,"byte_end":14443128,"line_start":983,"line_end":983,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T, '_>(&'_ Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442706,"byte_end":14442760,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442765,"byte_end":14442768,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442773,"byte_end":14442787,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442792,"byte_end":14442795,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442800,"byte_end":14442807,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442812,"byte_end":14442844,"line_start":974,"line_end":974,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442849,"byte_end":14442899,"line_start":975,"line_end":975,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442904,"byte_end":14442948,"line_start":976,"line_end":976,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442953,"byte_end":14442988,"line_start":977,"line_end":977,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14442993,"byte_end":14443028,"line_start":978,"line_end":978,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443033,"byte_end":14443056,"line_start":979,"line_end":979,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443061,"byte_end":14443068,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443073,"byte_end":14443095,"line_start":981,"line_end":981,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443100,"byte_end":14443107,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443741,"byte_end":14443751,"line_start":1005,"line_end":1005,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T, '_>(&'_ Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443289,"byte_end":14443338,"line_start":990,"line_end":990,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443343,"byte_end":14443346,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443351,"byte_end":14443365,"line_start":992,"line_end":992,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443370,"byte_end":14443373,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443378,"byte_end":14443385,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443390,"byte_end":14443435,"line_start":995,"line_end":995,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443440,"byte_end":14443490,"line_start":996,"line_end":996,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443495,"byte_end":14443551,"line_start":997,"line_end":997,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443556,"byte_end":14443569,"line_start":998,"line_end":998,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443574,"byte_end":14443609,"line_start":999,"line_end":999,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443614,"byte_end":14443649,"line_start":1000,"line_end":1000,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443654,"byte_end":14443678,"line_start":1001,"line_end":1001,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443683,"byte_end":14443690,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443695,"byte_end":14443717,"line_start":1003,"line_end":1003,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14443722,"byte_end":14443729,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444251,"byte_end":14444258,"line_start":1024,"line_end":1024,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444402,"byte_end":14444405,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444585,"byte_end":14444588,"line_start":1038,"line_end":1038,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445130,"byte_end":14445140,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14444887,"byte_end":14444974,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14444975,"byte_end":14444978,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14444979,"byte_end":14445017,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445018,"byte_end":14445056,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446240,"byte_end":14446243,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445821,"byte_end":14445881,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445886,"byte_end":14445889,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445894,"byte_end":14445904,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445909,"byte_end":14445912,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445917,"byte_end":14445989,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445994,"byte_end":14446067,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446072,"byte_end":14446139,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446144,"byte_end":14446147,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446152,"byte_end":14446228,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447374,"byte_end":14447393,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446401,"byte_end":14446461,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446466,"byte_end":14446469,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446474,"byte_end":14446537,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446542,"byte_end":14446620,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446625,"byte_end":14446692,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446697,"byte_end":14446769,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446774,"byte_end":14446844,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446849,"byte_end":14446872,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446877,"byte_end":14446880,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446885,"byte_end":14446895,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446900,"byte_end":14446903,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446908,"byte_end":14446983,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14446988,"byte_end":14447061,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447066,"byte_end":14447142,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447147,"byte_end":14447220,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447225,"byte_end":14447295,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447300,"byte_end":14447303,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447308,"byte_end":14447362,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447959,"byte_end":14447969,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447521,"byte_end":14447571,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447576,"byte_end":14447579,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447584,"byte_end":14447591,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447596,"byte_end":14447615,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447620,"byte_end":14447658,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447663,"byte_end":14447666,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447671,"byte_end":14447705,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447710,"byte_end":14447757,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447762,"byte_end":14447769,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447774,"byte_end":14447781,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447786,"byte_end":14447824,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447829,"byte_end":14447832,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447837,"byte_end":14447890,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447895,"byte_end":14447935,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14447940,"byte_end":14447947,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14448435,"byte_end":14448441,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14451053,"byte_end":14451063,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":533},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14451822,"byte_end":14451828,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, T, &'_ mut BytesMut)\n-> Result<(), LinesCodecError>","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452095,"byte_end":14452102,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452295,"byte_end":14452316,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452249,"byte_end":14452290,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452352,"byte_end":14452354,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452322,"byte_end":14452347,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452355,"byte_end":14452364,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452227,"byte_end":14452242,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1290}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452144,"byte_end":14452200,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452417,"byte_end":14452420,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452714,"byte_end":14452718,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454276,"byte_end":14454293,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453090,"byte_end":14453231,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453232,"byte_end":14453235,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453236,"byte_end":14453274,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453275,"byte_end":14453313,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453314,"byte_end":14453317,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453318,"byte_end":14453331,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453332,"byte_end":14453399,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453400,"byte_end":14453403,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453404,"byte_end":14453437,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453438,"byte_end":14453467,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453468,"byte_end":14453471,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453472,"byte_end":14453479,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453480,"byte_end":14453536,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453537,"byte_end":14453571,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453572,"byte_end":14453575,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453576,"byte_end":14453581,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453582,"byte_end":14453629,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453630,"byte_end":14453683,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453684,"byte_end":14453761,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453762,"byte_end":14453797,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453798,"byte_end":14453819,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453820,"byte_end":14453870,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453871,"byte_end":14453934,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453935,"byte_end":14453998,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14453999,"byte_end":14454062,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454063,"byte_end":14454119,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454120,"byte_end":14454169,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454170,"byte_end":14454182,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454183,"byte_end":14454190,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454191,"byte_end":14454198,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14454199,"byte_end":14454202,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455628,"byte_end":14455631,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455186,"byte_end":14455254,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455259,"byte_end":14455262,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455267,"byte_end":14455277,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455282,"byte_end":14455285,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455290,"byte_end":14455369,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455374,"byte_end":14455448,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455453,"byte_end":14455520,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455525,"byte_end":14455528,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455533,"byte_end":14455616,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456942,"byte_end":14456961,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455911,"byte_end":14455979,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455984,"byte_end":14455987,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455992,"byte_end":14456062,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456067,"byte_end":14456153,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456158,"byte_end":14456228,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456233,"byte_end":14456310,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456315,"byte_end":14456385,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456390,"byte_end":14456413,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456418,"byte_end":14456421,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456426,"byte_end":14456436,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456441,"byte_end":14456444,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456449,"byte_end":14456531,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456536,"byte_end":14456609,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456614,"byte_end":14456691,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456696,"byte_end":14456769,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456774,"byte_end":14456849,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456854,"byte_end":14456857,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14456862,"byte_end":14456930,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457749,"byte_end":14457759,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457218,"byte_end":14457269,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457274,"byte_end":14457277,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457282,"byte_end":14457289,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457294,"byte_end":14457313,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457318,"byte_end":14457363,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457368,"byte_end":14457371,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457376,"byte_end":14457448,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457453,"byte_end":14457500,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457505,"byte_end":14457512,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457517,"byte_end":14457524,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457529,"byte_end":14457574,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457579,"byte_end":14457582,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457587,"byte_end":14457680,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457685,"byte_end":14457725,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457730,"byte_end":14457737,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457920,"byte_end":14457926,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14460596,"byte_end":14460606,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":533},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461231,"byte_end":14461237,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, T, &'_ mut BytesMut)\n-> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461545,"byte_end":14461552,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461855,"byte_end":14461877,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461808,"byte_end":14461850,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461913,"byte_end":14461915,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461883,"byte_end":14461908,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461916,"byte_end":14461925,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461779,"byte_end":14461801,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1322}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461695,"byte_end":14461752,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461985,"byte_end":14461988,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14462336,"byte_end":14462340,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":355}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mod.rs","byte_start":7047,"byte_end":7077,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18502,"byte_end":18511,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1328}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18325,"byte_end":18389,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18390,"byte_end":18473,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18774,"byte_end":18780,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18587,"byte_end":18661,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18666,"byte_end":18736,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18741,"byte_end":18762,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18959,"byte_end":18963,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8966,"byte_end":8983,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7744,"byte_end":7821,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7822,"byte_end":7832,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7833,"byte_end":7836,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7837,"byte_end":7902,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7903,"byte_end":7977,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7978,"byte_end":7981,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":7982,"byte_end":8065,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8066,"byte_end":8069,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8070,"byte_end":8084,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8085,"byte_end":8088,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8089,"byte_end":8102,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8103,"byte_end":8125,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8126,"byte_end":8170,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8171,"byte_end":8174,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8175,"byte_end":8193,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8194,"byte_end":8215,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8216,"byte_end":8261,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8262,"byte_end":8303,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8304,"byte_end":8307,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8308,"byte_end":8359,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8360,"byte_end":8423,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8424,"byte_end":8445,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8446,"byte_end":8495,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8496,"byte_end":8542,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8543,"byte_end":8564,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8565,"byte_end":8582,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8583,"byte_end":8664,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8665,"byte_end":8687,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8688,"byte_end":8705,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8706,"byte_end":8719,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8720,"byte_end":8731,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8732,"byte_end":8735,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8736,"byte_end":8769,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8770,"byte_end":8845,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8846,"byte_end":8873,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8874,"byte_end":8885,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8886,"byte_end":8889,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8890,"byte_end":8940,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8941,"byte_end":8946,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":8947,"byte_end":8954,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":9320,"byte_end":9345,"line_start":65,"line_end":65,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12050502,"byte_end":12050511,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":9816,"byte_end":9846,"line_start":79,"line_end":79,"column_start":16,"column_end":46},"name":"WaitForCancellationFutureOwned","qualname":"::sync::cancellation_token::WaitForCancellationFutureOwned","value":"WaitForCancellationFutureOwned {  }","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12050502,"byte_end":12050511,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10257,"byte_end":10260,"line_start":92,"line_end":92,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut core::fmt::Formatter)\n-> core::fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10642,"byte_end":10647,"line_start":102,"line_end":102,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":" Creates a clone of the `CancellationToken` which will get cancelled\n whenever the current token gets cancelled, and vice versa.\n","sig":null,"attributes":[{"value":"/ Creates a clone of the `CancellationToken` which will get cancelled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10496,"byte_end":10567,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ whenever the current token gets cancelled, and vice versa.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10572,"byte_end":10634,"line_start":101,"line_end":101,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10850,"byte_end":10854,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10979,"byte_end":10986,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11158,"byte_end":11161,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11083,"byte_end":11146,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12664,"byte_end":12675,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token<'_>(&'_ Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled. Unlike a cloned `CancellationToken`,\n cancelling a child token does not cancel the parent token.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11293,"byte_end":11364,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled. Unlike a cloned `CancellationToken`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11369,"byte_end":11439,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ cancelling a child token does not cancel the parent token.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11444,"byte_end":11506,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11511,"byte_end":11514,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11519,"byte_end":11590,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11595,"byte_end":11627,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11632,"byte_end":11635,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11640,"byte_end":11654,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11659,"byte_end":11662,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11667,"byte_end":11680,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11685,"byte_end":11707,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11712,"byte_end":11756,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11761,"byte_end":11764,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11769,"byte_end":11787,"line_start":143,"line_end":143,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11792,"byte_end":11813,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11818,"byte_end":11863,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11868,"byte_end":11914,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11919,"byte_end":11922,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11927,"byte_end":11978,"line_start":148,"line_end":148,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11983,"byte_end":12046,"line_start":149,"line_end":149,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12051,"byte_end":12072,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12077,"byte_end":12125,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12130,"byte_end":12176,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12181,"byte_end":12202,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12207,"byte_end":12224,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12229,"byte_end":12310,"line_start":155,"line_end":155,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12315,"byte_end":12337,"line_start":156,"line_end":156,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12342,"byte_end":12359,"line_start":157,"line_end":157,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12364,"byte_end":12377,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12382,"byte_end":12393,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12398,"byte_end":12401,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12406,"byte_end":12439,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12444,"byte_end":12519,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12524,"byte_end":12551,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12556,"byte_end":12567,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12572,"byte_end":12575,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12580,"byte_end":12630,"line_start":166,"line_end":166,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12635,"byte_end":12640,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12645,"byte_end":12652,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13398,"byte_end":13404,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12810,"byte_end":12882,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12887,"byte_end":12907,"line_start":176,"line_end":176,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12912,"byte_end":12915,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12920,"byte_end":12987,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":12992,"byte_end":12995,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13000,"byte_end":13073,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13078,"byte_end":13153,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13158,"byte_end":13232,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13237,"byte_end":13309,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13314,"byte_end":13386,"line_start":184,"line_end":184,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13536,"byte_end":13548,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13465,"byte_end":13524,"line_start":189,"line_end":189,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13907,"byte_end":13916,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled<'_>(&'_ Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13622,"byte_end":13696,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13701,"byte_end":13704,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13709,"byte_end":13783,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13788,"byte_end":13819,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13824,"byte_end":13827,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13832,"byte_end":13851,"line_start":199,"line_end":199,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13856,"byte_end":13859,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":13864,"byte_end":13895,"line_start":201,"line_end":201,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14481,"byte_end":14496,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"cancelled_owned","qualname":"<CancellationToken>::cancelled_owned","value":"fn cancelled_owned(Self) -> WaitForCancellationFutureOwned","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14097,"byte_end":14171,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14176,"byte_end":14179,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14184,"byte_end":14258,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14263,"byte_end":14294,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14299,"byte_end":14302,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The function takes self by value and returns a future that owns the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14307,"byte_end":14378,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/ token.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14383,"byte_end":14393,"line_start":215,"line_end":215,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14398,"byte_end":14401,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14406,"byte_end":14425,"line_start":217,"line_end":217,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14430,"byte_end":14433,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14438,"byte_end":14469,"line_start":219,"line_end":219,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14763,"byte_end":14773,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14600,"byte_end":14641,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14646,"byte_end":14649,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14654,"byte_end":14726,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14731,"byte_end":14751,"line_start":227,"line_end":227,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14960,"byte_end":14963,"line_start":236,"line_end":236,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut core::fmt::Formatter)\n-> core::fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":15180,"byte_end":15184,"line_start":244,"line_end":244,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":16005,"byte_end":16008,"line_start":267,"line_end":267,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFutureOwned as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut core::fmt::Formatter)\n-> core::fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":17427,"byte_end":17431,"line_start":304,"line_end":304,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFutureOwned as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33357,"byte_end":33370,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33262,"byte_end":33328,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33649,"byte_end":33659,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33418,"byte_end":33456,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33461,"byte_end":33464,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33469,"byte_end":33563,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33568,"byte_end":33637,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33756,"byte_end":33759,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":34179,"byte_end":34189,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":34041,"byte_end":34098,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":34099,"byte_end":34102,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":34103,"byte_end":34150,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35093,"byte_end":35096,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35050,"byte_end":35081,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":36080,"byte_end":36092,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"fn poll_reserve<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35419,"byte_end":35473,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35478,"byte_end":35481,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35486,"byte_end":35571,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35576,"byte_end":35592,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35597,"byte_end":35600,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35605,"byte_end":35699,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35704,"byte_end":35790,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35795,"byte_end":35866,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35871,"byte_end":35946,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35951,"byte_end":35954,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35959,"byte_end":35971,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35976,"byte_end":35979,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35984,"byte_end":36068,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":38117,"byte_end":38126,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"fn send_item<'_>(&'_ mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37637,"byte_end":37670,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37675,"byte_end":37678,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37683,"byte_end":37769,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37774,"byte_end":37809,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37814,"byte_end":37817,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37822,"byte_end":37834,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37839,"byte_end":37842,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37847,"byte_end":37931,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37936,"byte_end":37939,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37944,"byte_end":37956,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37961,"byte_end":37964,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":37969,"byte_end":38065,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":38070,"byte_end":38085,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":38090,"byte_end":38105,"line_start":139,"line_end":139,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39145,"byte_end":39154,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":38999,"byte_end":39045,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39050,"byte_end":39053,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39058,"byte_end":39133,"line_start":162,"line_end":162,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39476,"byte_end":39483,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> Option<&'_ Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39252,"byte_end":39315,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39320,"byte_end":39323,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39328,"byte_end":39424,"line_start":169,"line_end":169,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39429,"byte_end":39464,"line_start":170,"line_end":170,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40281,"byte_end":40286,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39555,"byte_end":39578,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39583,"byte_end":39586,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39591,"byte_end":39685,"line_start":177,"line_end":177,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39690,"byte_end":39783,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39788,"byte_end":39791,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39796,"byte_end":39890,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39895,"byte_end":39990,"line_start":181,"line_end":181,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":39995,"byte_end":40091,"line_start":182,"line_end":182,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40096,"byte_end":40151,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40156,"byte_end":40159,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40164,"byte_end":40219,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40224,"byte_end":40269,"line_start":186,"line_end":186,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":41220,"byte_end":41230,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send<'_>(&'_ mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40924,"byte_end":40972,"line_start":204,"line_end":204,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40977,"byte_end":40980,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":40985,"byte_end":41069,"line_start":206,"line_end":206,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":41074,"byte_end":41169,"line_start":207,"line_end":207,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":41174,"byte_end":41208,"line_start":208,"line_end":208,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":42868,"byte_end":42873,"line_start":249,"line_end":249,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> PollSender<T>","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":" Clones this `PollSender`.","sig":null,"attributes":[{"value":"/ Clones this `PollSender`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":42721,"byte_end":42750,"line_start":246,"line_end":246,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":42755,"byte_end":42758,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The resulting `PollSender` will have an initial state identical to calling `PollSender::new`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":42763,"byte_end":42860,"line_start":248,"line_end":248,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":43500,"byte_end":43510,"line_start":268,"line_end":268,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":43651,"byte_end":43661,"line_start":272,"line_end":272,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":43784,"byte_end":43794,"line_start":276,"line_end":276,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":43915,"byte_end":43925,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44448,"byte_end":44461,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44317,"byte_end":44390,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44391,"byte_end":44394,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44395,"byte_end":44436,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44730,"byte_end":44733,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44685,"byte_end":44718,"line_start":22,"line_end":22,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44897,"byte_end":44902,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44860,"byte_end":44885,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45008,"byte_end":45019,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner<'_>(&'_ Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44954,"byte_end":44996,"line_start":35,"line_end":35,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45134,"byte_end":45144,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45089,"byte_end":45122,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45878,"byte_end":45890,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45205,"byte_end":45253,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45258,"byte_end":45261,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45266,"byte_end":45307,"line_start":47,"line_end":47,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45312,"byte_end":45315,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45320,"byte_end":45382,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45387,"byte_end":45447,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45452,"byte_end":45512,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45517,"byte_end":45520,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45525,"byte_end":45600,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45605,"byte_end":45673,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45678,"byte_end":45754,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45759,"byte_end":45827,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":45832,"byte_end":45866,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46692,"byte_end":46709,"line_start":75,"line_end":75,"column_start":12,"column_end":29},"name":"poll_acquire_many","qualname":"<PollSemaphore>::poll_acquire_many","value":"fn poll_acquire_many<'_, '_, '_>(&'_ mut Self, &'_ mut Context, u32)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire many permits from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire many permits from the semaphore.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46013,"byte_end":46065,"line_start":62,"line_end":62,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46070,"byte_end":46073,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46078,"byte_end":46119,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46124,"byte_end":46127,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46132,"byte_end":46194,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46199,"byte_end":46259,"line_start":67,"line_end":67,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46264,"byte_end":46324,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46329,"byte_end":46332,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46337,"byte_end":46412,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the permits become available, or when the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46417,"byte_end":46487,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46492,"byte_end":46568,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46573,"byte_end":46641,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":46646,"byte_end":46680,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48779,"byte_end":48796,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48495,"byte_end":48547,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48552,"byte_end":48555,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48560,"byte_end":48636,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48641,"byte_end":48675,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48680,"byte_end":48683,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48688,"byte_end":48767,"line_start":126,"line_end":126,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49265,"byte_end":49276,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits<'_>(&'_ Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48869,"byte_end":48911,"line_start":131,"line_end":131,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48916,"byte_end":48919,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is [`Semaphore::MAX_PERMITS`], and this function","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":48924,"byte_end":49006,"line_start":133,"line_end":133,"column_start":5,"column_end":87}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49011,"byte_end":49051,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49056,"byte_end":49059,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49064,"byte_end":49134,"line_start":136,"line_end":136,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49139,"byte_end":49173,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49178,"byte_end":49181,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49186,"byte_end":49253,"line_start":139,"line_end":139,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49422,"byte_end":49431,"line_start":148,"line_end":148,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49610,"byte_end":49615,"line_start":154,"line_end":154,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> PollSemaphore","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49741,"byte_end":49744,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49966,"byte_end":49972,"line_start":168,"line_end":168,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Semaphore","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50429,"byte_end":50446,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":303}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50224,"byte_end":50286,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50287,"byte_end":50290,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50291,"byte_end":50358,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50359,"byte_end":50417,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50642,"byte_end":50645,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50559,"byte_end":50630,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51015,"byte_end":51018,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"fn set<F, '_>(&'_ mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50800,"byte_end":50852,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50857,"byte_end":50860,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50865,"byte_end":50937,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50942,"byte_end":51003,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51456,"byte_end":51463,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"fn try_set<F, '_>(&'_ mut Self, F) -> Result<(), F> where F: Future<Output =\nT> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51215,"byte_end":51267,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51272,"byte_end":51275,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51280,"byte_end":51353,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51358,"byte_end":51428,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":51433,"byte_end":51444,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52530,"byte_end":52537,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"fn get_pin<'_>(&'_ mut Self) -> Pin<&'_ mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52466,"byte_end":52518,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52690,"byte_end":52694,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"fn poll<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52635,"byte_end":52678,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52905,"byte_end":52909,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52854,"byte_end":52897,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":53321,"byte_end":53324,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":1427},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":402},{"krate":0,"index":406},{"krate":0,"index":411},{"krate":0,"index":416},{"krate":0,"index":422}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55545,"byte_end":55580,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57527,"byte_end":57531,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57532,"byte_end":57533,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57540,"byte_end":57545,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57546,"byte_end":57547,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57508,"byte_end":57514,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1433}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55757,"byte_end":55863,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55864,"byte_end":55867,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55868,"byte_end":55958,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55959,"byte_end":55962,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55963,"byte_end":55998,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":55999,"byte_end":56002,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56003,"byte_end":56016,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56017,"byte_end":56020,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56021,"byte_end":56058,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56059,"byte_end":56062,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56063,"byte_end":56082,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56083,"byte_end":56125,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56126,"byte_end":56176,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56177,"byte_end":56228,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56229,"byte_end":56247,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56248,"byte_end":56269,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56270,"byte_end":56312,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56313,"byte_end":56346,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56347,"byte_end":56363,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56364,"byte_end":56458,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56459,"byte_end":56469,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56470,"byte_end":56473,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56474,"byte_end":56521,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56522,"byte_end":56527,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56528,"byte_end":56535,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56536,"byte_end":56539,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56740,"byte_end":56743,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56744,"byte_end":56830,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56831,"byte_end":56841,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56842,"byte_end":56845,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56846,"byte_end":56853,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56854,"byte_end":56889,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56890,"byte_end":56932,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56933,"byte_end":56983,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":56984,"byte_end":57035,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57036,"byte_end":57039,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57040,"byte_end":57058,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57059,"byte_end":57080,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57081,"byte_end":57123,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57124,"byte_end":57171,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57172,"byte_end":57188,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57189,"byte_end":57238,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57239,"byte_end":57249,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57250,"byte_end":57253,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57254,"byte_end":57287,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57288,"byte_end":57328,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57329,"byte_end":57361,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57362,"byte_end":57367,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57368,"byte_end":57375,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":57376,"byte_end":57398,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58255,"byte_end":58259,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58464,"byte_end":58473,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":22,"index":237},"children":[],"decl_id":{"krate":22,"index":238},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58749,"byte_end":58762,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<&'_ [u8]>>","parent":{"krate":22,"index":195},"children":[],"decl_id":{"krate":22,"index":196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58893,"byte_end":58900,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":22,"index":195},"children":[],"decl_id":{"krate":22,"index":197},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59077,"byte_end":59087,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek<'_>(Pin<&'_ mut Self>, SeekFrom) -> Result<()>","parent":{"krate":22,"index":276},"children":[],"decl_id":{"krate":22,"index":277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59210,"byte_end":59223,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<u64>>","parent":{"krate":22,"index":276},"children":[],"decl_id":{"krate":22,"index":278},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59439,"byte_end":59449,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize>>","parent":{"krate":22,"index":316},"children":[],"decl_id":{"krate":22,"index":317},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59594,"byte_end":59604,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":316},"children":[],"decl_id":{"krate":22,"index":318},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59740,"byte_end":59753,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":316},"children":[],"decl_id":{"krate":22,"index":319},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":60075,"byte_end":60084,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364480,"byte_end":14364490,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364641,"byte_end":14364651,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364978,"byte_end":14364988,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14365212,"byte_end":14365222,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14375448,"byte_end":14375457,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14375689,"byte_end":14375699,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14375903,"byte_end":14375912,"line_start":68,"line_end":68,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376267,"byte_end":14376277,"line_start":84,"line_end":84,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376597,"byte_end":14376605,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376702,"byte_end":14376710,"line_start":103,"line_end":103,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376821,"byte_end":14376829,"line_start":108,"line_end":108,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376929,"byte_end":14376937,"line_start":113,"line_end":113,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14377047,"byte_end":14377057,"line_start":118,"line_end":118,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14385344,"byte_end":14385354,"line_start":253,"line_end":253,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388213,"byte_end":14388219,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392075,"byte_end":14392081,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398798,"byte_end":14398804,"line_start":293,"line_end":293,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399120,"byte_end":14399126,"line_start":306,"line_end":306,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399841,"byte_end":14399847,"line_start":331,"line_end":331,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400887,"byte_end":14400898,"line_start":369,"line_end":369,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14401825,"byte_end":14401835,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402764,"byte_end":14402774,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405604,"byte_end":14405614,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405927,"byte_end":14405937,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406663,"byte_end":14406673,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14407652,"byte_end":14407663,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408019,"byte_end":14408030,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411189,"byte_end":14411200,"line_start":139,"line_end":139,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411964,"byte_end":14411975,"line_start":165,"line_end":165,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14412216,"byte_end":14412227,"line_start":176,"line_end":176,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427271,"byte_end":14427291,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14430577,"byte_end":14430597,"line_start":545,"line_end":545,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14431509,"byte_end":14431529,"line_start":576,"line_end":576,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14432870,"byte_end":14432890,"line_start":620,"line_end":620,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433452,"byte_end":14433459,"line_start":646,"line_end":646,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444234,"byte_end":14444241,"line_start":1023,"line_end":1023,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444367,"byte_end":14444392,"line_start":1031,"line_end":1031,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444550,"byte_end":14444575,"line_start":1037,"line_end":1037,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444710,"byte_end":14444735,"line_start":1043,"line_end":1043,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445804,"byte_end":14445814,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14448356,"byte_end":14448366,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14451742,"byte_end":14451752,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452075,"byte_end":14452085,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452392,"byte_end":14452407,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452689,"byte_end":14452704,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452821,"byte_end":14452836,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455162,"byte_end":14455179,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457828,"byte_end":14457845,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461137,"byte_end":14461154,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461518,"byte_end":14461535,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461953,"byte_end":14461975,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14462304,"byte_end":14462326,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14462457,"byte_end":14462479,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18571,"byte_end":18580,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18940,"byte_end":18949,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/tree_node.rs","byte_start":21399,"byte_end":21407,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":9058,"byte_end":9075,"line_start":58,"line_end":58,"column_start":33,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":9114,"byte_end":9131,"line_start":59,"line_end":59,"column_start":36,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10230,"byte_end":10247,"line_start":91,"line_end":91,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10472,"byte_end":10489,"line_start":99,"line_end":99,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10823,"byte_end":10840,"line_start":110,"line_end":110,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10952,"byte_end":10969,"line_start":116,"line_end":116,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11059,"byte_end":11076,"line_start":122,"line_end":122,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14921,"byte_end":14946,"line_start":235,"line_end":235,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":15118,"byte_end":15143,"line_start":241,"line_end":241,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":15965,"byte_end":15995,"line_start":266,"line_end":266,"column_start":27,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":16153,"byte_end":16183,"line_start":272,"line_end":272,"column_start":6,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":17364,"byte_end":17394,"line_start":301,"line_end":301,"column_start":17,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33395,"byte_end":33408,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33730,"byte_end":33743,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33903,"byte_end":33916,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35030,"byte_end":35040,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":42701,"byte_end":42711,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":43441,"byte_end":43451,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44665,"byte_end":44678,"line_start":21,"line_end":21,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49360,"byte_end":49373,"line_start":145,"line_end":145,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49587,"byte_end":49600,"line_start":153,"line_end":153,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49718,"byte_end":49731,"line_start":159,"line_end":159,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49943,"byte_end":49956,"line_start":167,"line_end":167,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50528,"byte_end":50545,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52801,"byte_end":52818,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":53235,"byte_end":53252,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":53287,"byte_end":53304,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":54692,"byte_end":54702,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":54990,"byte_end":55000,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":55398,"byte_end":55405,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58151,"byte_end":58157,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58400,"byte_end":58406,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58679,"byte_end":58685,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59013,"byte_end":59019,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59373,"byte_end":59379,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59931,"byte_end":59937,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":476}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/mod.rs","byte_start":14362892,"byte_end":14362908,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":938}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":904,"byte_end":908,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/lib.rs","byte_start":919,"byte_end":925,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":358}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364480,"byte_end":14364490,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364641,"byte_end":14364651,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":529}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14364978,"byte_end":14364988,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/bytes_codec.rs","byte_start":14365212,"byte_end":14365222,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14375448,"byte_end":14375457,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14375689,"byte_end":14375699,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":606},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14375903,"byte_end":14375912,"line_start":68,"line_end":68,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376267,"byte_end":14376277,"line_start":84,"line_end":84,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":606},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376597,"byte_end":14376605,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376702,"byte_end":14376710,"line_start":103,"line_end":103,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376821,"byte_end":14376829,"line_start":108,"line_end":108,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14376929,"byte_end":14376937,"line_start":113,"line_end":113,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14377047,"byte_end":14377057,"line_start":118,"line_end":118,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1711},"to":{"krate":30,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_impl.rs","byte_start":14385344,"byte_end":14385354,"line_start":253,"line_end":253,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1711},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14388213,"byte_end":14388219,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14392075,"byte_end":14392081,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14398798,"byte_end":14398804,"line_start":293,"line_end":293,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1526},"to":{"krate":30,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399120,"byte_end":14399126,"line_start":306,"line_end":306,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1526},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14399841,"byte_end":14399847,"line_start":331,"line_end":331,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed.rs","byte_start":14400887,"byte_end":14400898,"line_start":369,"line_end":369,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14401825,"byte_end":14401835,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14402764,"byte_end":14402774,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405604,"byte_end":14405614,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1485},"to":{"krate":30,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14405927,"byte_end":14405937,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1485},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_read.rs","byte_start":14406663,"byte_end":14406673,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14407652,"byte_end":14407663,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14408019,"byte_end":14408030,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411189,"byte_end":14411200,"line_start":139,"line_end":139,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1444},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14411964,"byte_end":14411975,"line_start":165,"line_end":165,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1444},"to":{"krate":30,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/framed_write.rs","byte_start":14412216,"byte_end":14412227,"line_start":176,"line_end":176,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1444},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14427271,"byte_end":14427291,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14430577,"byte_end":14430597,"line_start":545,"line_end":545,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1247},"to":{"krate":0,"index":529}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14431509,"byte_end":14431529,"line_start":576,"line_end":576,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1247},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14432870,"byte_end":14432890,"line_start":620,"line_end":620,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1247},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14433452,"byte_end":14433459,"line_start":646,"line_end":646,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444234,"byte_end":14444241,"line_start":1023,"line_end":1023,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444367,"byte_end":14444392,"line_start":1031,"line_end":1031,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444550,"byte_end":14444575,"line_start":1037,"line_end":1037,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/length_delimited.rs","byte_start":14444710,"byte_end":14444735,"line_start":1043,"line_end":1043,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":995},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14445804,"byte_end":14445814,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14448356,"byte_end":14448366,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1265},"to":{"krate":0,"index":529}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14451742,"byte_end":14451752,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1265},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452075,"byte_end":14452085,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452392,"byte_end":14452407,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452689,"byte_end":14452704,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/lines_codec.rs","byte_start":14452821,"byte_end":14452836,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1287},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14455162,"byte_end":14455179,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14457828,"byte_end":14457845,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1295},"to":{"krate":0,"index":529}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461137,"byte_end":14461154,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1295},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461518,"byte_end":14461535,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14461953,"byte_end":14461975,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1319},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14462304,"byte_end":14462326,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1319},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/codec/any_delimiter_codec.rs","byte_start":14462457,"byte_end":14462479,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1319},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18571,"byte_end":18580,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/guard.rs","byte_start":18940,"byte_end":18949,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token/tree_node.rs","byte_start":21399,"byte_end":21407,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":9058,"byte_end":9075,"line_start":58,"line_end":58,"column_start":33,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":9260}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":9114,"byte_end":9131,"line_start":59,"line_end":59,"column_start":36,"column_end":53},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":9261}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10230,"byte_end":10247,"line_start":91,"line_end":91,"column_start":27,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10472,"byte_end":10489,"line_start":99,"line_end":99,"column_start":16,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10823,"byte_end":10840,"line_start":110,"line_end":110,"column_start":15,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":10952,"byte_end":10969,"line_start":116,"line_end":116,"column_start":18,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":11059,"byte_end":11076,"line_start":122,"line_end":122,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":14921,"byte_end":14946,"line_start":235,"line_end":235,"column_start":31,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":15118,"byte_end":15143,"line_start":241,"line_end":241,"column_start":21,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":15965,"byte_end":15995,"line_start":266,"line_end":266,"column_start":27,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":16153,"byte_end":16183,"line_start":272,"line_end":272,"column_start":6,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/cancellation_token.rs","byte_start":17364,"byte_end":17394,"line_start":301,"line_end":301,"column_start":17,"column_end":47},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33395,"byte_end":33408,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33730,"byte_end":33743,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1397},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":33903,"byte_end":33916,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":35030,"byte_end":35040,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":42701,"byte_end":42711,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/mpsc.rs","byte_start":43441,"byte_end":43451,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1419},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":44665,"byte_end":44678,"line_start":21,"line_end":21,"column_start":6,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49360,"byte_end":49373,"line_start":145,"line_end":145,"column_start":17,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":243},"to":{"krate":30,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49587,"byte_end":49600,"line_start":153,"line_end":153,"column_start":16,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49718,"byte_end":49731,"line_start":159,"line_end":159,"column_start":21,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/poll_semaphore.rs","byte_start":49943,"byte_end":49956,"line_start":167,"line_end":167,"column_start":27,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":50528,"byte_end":50545,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":52801,"byte_end":52818,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":53235,"byte_end":53252,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":53287,"byte_end":53304,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":54692,"byte_end":54702,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":54990,"byte_end":55000,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/sync/reusable_box.rs","byte_start":55398,"byte_end":55405,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58151,"byte_end":58157,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58400,"byte_end":58406,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1427},"to":{"krate":22,"index":237}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":58679,"byte_end":58685,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1427},"to":{"krate":22,"index":195}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59013,"byte_end":59019,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1427},"to":{"krate":22,"index":276}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59373,"byte_end":59379,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1427},"to":{"krate":22,"index":316}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.8/src/either.rs","byte_start":59931,"byte_end":59937,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1427},"to":{"krate":30,"index":96}}]}