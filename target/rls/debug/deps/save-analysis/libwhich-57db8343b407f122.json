{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","which","--edition=2018","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=57db8343b407f122","-C","extra-filename=-57db8343b407f122","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","either=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libeither-b25e154efdf08af7.rmeta","--extern","libc=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/liblibc-d3276b42626dfa48.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libwhich-57db8343b407f122.rmeta"},"prelude":{"crate_id":{"name":"which","disambiguator":[14847629524009924128,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/finder.rs","num":20,"id":{"name":"either","disambiguator":[10070275459274132918,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","num":21,"id":{"name":"libc","disambiguator":[3878213621847001735,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":0,"byte_end":19542,"line_start":1,"line_end":631,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":610,"byte_end":611,"line_start":32,"line_end":32,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Result, Error","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":0,"byte_end":19542,"line_start":1,"line_end":631,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":41},{"krate":0,"index":50},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":183},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":219},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261}],"decl_id":null,"docs":" which","sig":null,"attributes":[{"value":"/ which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":0,"byte_end":9,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10,"byte_end":13,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A Rust equivalent of Unix command `which(1)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/ # Example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":64,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":79,"byte_end":82,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To find which rustc executable binary is using:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":83,"byte_end":134,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":135,"byte_end":138,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":139,"byte_end":152,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":153,"byte_end":174,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":175,"byte_end":202,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":203,"byte_end":206,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let result = which(\"rustc\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":207,"byte_end":248,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":249,"byte_end":305,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":306,"byte_end":309,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":310,"byte_end":317,"line_start":15,"line_end":15,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21371,"byte_end":21377,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21481,"byte_end":21496,"line_start":7,"line_end":7,"column_start":5,"column_end":20},"name":"BadAbsolutePath","qualname":"::error::Error::BadAbsolutePath","value":"Error::BadAbsolutePath","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21502,"byte_end":21517,"line_start":8,"line_end":8,"column_start":5,"column_end":20},"name":"BadRelativePath","qualname":"::error::Error::BadRelativePath","value":"Error::BadRelativePath","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":268},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21523,"byte_end":21543,"line_start":9,"line_end":9,"column_start":5,"column_end":25},"name":"CannotFindBinaryPath","qualname":"::error::Error::CannotFindBinaryPath","value":"Error::CannotFindBinaryPath","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":270},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21549,"byte_end":21568,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"CannotGetCurrentDir","qualname":"::error::Error::CannotGetCurrentDir","value":"Error::CannotGetCurrentDir","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21574,"byte_end":21592,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"CannotCanonicalize","qualname":"::error::Error::CannotCanonicalize","value":"Error::CannotCanonicalize","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21469,"byte_end":21474,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    BadAbsolutePath,\n    BadRelativePath,\n    CannotFindBinaryPath,\n    CannotGetCurrentDir,\n    CannotCanonicalize,\n}","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21671,"byte_end":21674,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1272,"byte_end":1277,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"which","qualname":"::which","value":"fn which<T>(T) -> Result<path::PathBuf> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Find an executable binary's path by name.","sig":null,"attributes":[{"value":"/ Find an executable binary's path by name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":641,"byte_end":686,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":687,"byte_end":690,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If given an absolute path, returns it if the file exists and is executable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":691,"byte_end":770,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":771,"byte_end":774,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If given a relative path, returns an absolute path to the file if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":775,"byte_end":844,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ it exists and is executable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":845,"byte_end":877,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":878,"byte_end":881,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If given a string without path separators, looks for a file named","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":882,"byte_end":951,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ `binary_name` at each directory in `$PATH` and if it finds an executable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":952,"byte_end":1028,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ file there, returns it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1029,"byte_end":1056,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1057,"byte_end":1060,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1061,"byte_end":1074,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1075,"byte_end":1078,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1079,"byte_end":1092,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1093,"byte_end":1114,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1115,"byte_end":1142,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1143,"byte_end":1146,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let result = which::which(\"rustc\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1147,"byte_end":1195,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1196,"byte_end":1252,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1253,"byte_end":1256,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1257,"byte_end":1264,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":2018,"byte_end":2030,"line_start":80,"line_end":80,"column_start":8,"column_end":20},"name":"which_global","qualname":"::which_global","value":"fn which_global<T>(T) -> Result<path::PathBuf> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Find an executable binary's path by name, ignoring `cwd`.","sig":null,"attributes":[{"value":"/ Find an executable binary's path by name, ignoring `cwd`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1430,"byte_end":1491,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1492,"byte_end":1495,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If given an absolute path, returns it if the file exists and is executable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1496,"byte_end":1575,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1576,"byte_end":1579,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Does not resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1580,"byte_end":1616,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1617,"byte_end":1620,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ If given a string without path separators, looks for a file named","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1621,"byte_end":1690,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ `binary_name` at each directory in `$PATH` and if it finds an executable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1691,"byte_end":1767,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ file there, returns it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1768,"byte_end":1795,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1796,"byte_end":1799,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1800,"byte_end":1813,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1814,"byte_end":1817,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1818,"byte_end":1831,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1832,"byte_end":1853,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1854,"byte_end":1881,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1882,"byte_end":1885,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let result = which::which_global(\"rustc\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1886,"byte_end":1941,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1942,"byte_end":1998,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":1999,"byte_end":2002,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":2003,"byte_end":2010,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":2277,"byte_end":2286,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"which_all","qualname":"::which_all","value":"fn which_all<T>(T) -> Result</*impl Trait*/> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` using `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":2190,"byte_end":2269,"line_start":84,"line_end":84,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":2630,"byte_end":2646,"line_start":96,"line_end":96,"column_start":8,"column_end":24},"name":"which_all_global","qualname":"::which_all_global","value":"fn which_all_global<T>(T) -> Result</*impl Trait*/> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` ignoring `cwd`.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` ignoring `cwd`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":2566,"byte_end":2622,"line_start":95,"line_end":95,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":4088,"byte_end":4096,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"which_in","qualname":"::which_in","value":"fn which_in<T, U, V>(T, Option<U>, V) -> Result<path::PathBuf> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":3993,"byte_end":4080,"line_start":148,"line_end":148,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":5578,"byte_end":5590,"line_start":198,"line_end":198,"column_start":8,"column_end":20},"name":"which_in_all","qualname":"::which_in_all","value":"fn which_in_all<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":5465,"byte_end":5570,"line_start":197,"line_end":197,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":6019,"byte_end":6034,"line_start":216,"line_end":216,"column_start":8,"column_end":23},"name":"which_in_global","qualname":"::which_in_global","value":"fn which_in_global<T, U>(T, Option<U>) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` in the path list `paths`, ignoring `cwd`.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` in the path list `paths`, ignoring `cwd`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":5929,"byte_end":6011,"line_start":215,"line_end":215,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":6603,"byte_end":6614,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"WhichConfig","qualname":"::WhichConfig","value":"WhichConfig {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A wrapper containing all functionality in this crate.\n","sig":null,"attributes":[{"value":"/ A wrapper containing all functionality in this crate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":6534,"byte_end":6591,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":6843,"byte_end":6850,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"default","qualname":"<WhichConfig as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7211,"byte_end":7214,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"new","qualname":"<WhichConfig>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7479,"byte_end":7489,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"system_cwd","qualname":"<WhichConfig>::system_cwd","value":"fn system_cwd(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to use the current working directory. `true` by default.","sig":null,"attributes":[{"value":"/ Whether or not to use the current working directory. `true` by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7262,"byte_end":7337,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7342,"byte_end":7345,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7350,"byte_end":7362,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7367,"byte_end":7370,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If regex was set previously, and you've just passed in `use_cwd: true`, this will panic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7375,"byte_end":7467,"line_start":273,"line_end":273,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7915,"byte_end":7925,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"custom_cwd","qualname":"<WhichConfig>::custom_cwd","value":"fn custom_cwd(Self, path::PathBuf) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom path for resolving relative paths.","sig":null,"attributes":[{"value":"/ Sets a custom path for resolving relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7764,"byte_end":7816,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7821,"byte_end":7824,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7829,"byte_end":7841,"line_start":285,"line_end":285,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7846,"byte_end":7849,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ If regex was set previously, this will panic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7854,"byte_end":7903,"line_start":287,"line_end":287,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8791,"byte_end":8796,"line_start":308,"line_end":308,"column_start":12,"column_end":17},"name":"regex","qualname":"<WhichConfig>::regex","value":"fn regex(Self, Regex) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the path name regex to search for. You ***MUST*** call this, or [`Self::binary_name`] prior to searching.","sig":null,"attributes":[{"value":"/ Sets the path name regex to search for. You ***MUST*** call this, or [`Self::binary_name`] prior to searching.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8191,"byte_end":8305,"line_start":297,"line_end":297,"column_start":5,"column_end":119}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8310,"byte_end":8313,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ When `Regex` is disabled this function takes the unit type as a stand in. The parameter will change when","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8318,"byte_end":8426,"line_start":299,"line_end":299,"column_start":5,"column_end":113}},{"value":"/ `Regex` is enabled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8431,"byte_end":8454,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8459,"byte_end":8462,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8467,"byte_end":8479,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8484,"byte_end":8487,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If the `regex` feature wasn't turned on for this crate this will always panic. Additionally if a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8492,"byte_end":8592,"line_start":304,"line_end":304,"column_start":5,"column_end":105}},{"value":"/ `cwd` (aka current working directory) or `binary_name` was set previously, this will panic, as those options","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8597,"byte_end":8709,"line_start":305,"line_end":305,"column_start":5,"column_end":117}},{"value":"/ are incompatible with `regex`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8714,"byte_end":8748,"line_start":306,"line_end":306,"column_start":5,"column_end":39}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":8753,"byte_end":8779,"line_start":307,"line_end":307,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9651,"byte_end":9662,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"binary_name","qualname":"<WhichConfig>::binary_name","value":"fn binary_name(Self, OsString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the path name to search for. You ***MUST*** call this, or [`Self::regex`] prior to searching.","sig":null,"attributes":[{"value":"/ Sets the path name to search for. You ***MUST*** call this, or [`Self::regex`] prior to searching.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9408,"byte_end":9510,"line_start":326,"line_end":326,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9515,"byte_end":9518,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9523,"byte_end":9535,"line_start":328,"line_end":328,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9540,"byte_end":9543,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ If a `regex` was set previously this will panic as this is not compatible with `regex`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9548,"byte_end":9639,"line_start":330,"line_end":330,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9996,"byte_end":10012,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"custom_path_list","qualname":"<WhichConfig>::custom_path_list","value":"fn custom_path_list(Self, OsString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uses the given string instead of the `PATH` env variable.\n","sig":null,"attributes":[{"value":"/ Uses the given string instead of the `PATH` env variable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":9923,"byte_end":9984,"line_start":340,"line_end":340,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10206,"byte_end":10222,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"system_path_list","qualname":"<WhichConfig>::system_path_list","value":"fn system_path_list(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uses the `PATH` env variable. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Uses the `PATH` env variable. Enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10141,"byte_end":10194,"line_start":346,"line_end":346,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10387,"byte_end":10399,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"first_result","qualname":"<WhichConfig>::first_result","value":"fn first_result(Self) -> Result<path::PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Finishes configuring, runs the query and returns the first result.\n","sig":null,"attributes":[{"value":"/ Finishes configuring, runs the query and returns the first result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10305,"byte_end":10375,"line_start":352,"line_end":352,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10623,"byte_end":10634,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"all_results","qualname":"<WhichConfig>::all_results","value":"fn all_results(Self) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Finishes configuring, runs the query and returns all results.\n","sig":null,"attributes":[{"value":"/ Finishes configuring, runs the query and returns all results.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":10546,"byte_end":10611,"line_start":358,"line_end":358,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12392,"byte_end":12396,"line_start":403,"line_end":403,"column_start":12,"column_end":16},"name":"Path","qualname":"::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":11720,"byte_end":11808,"line_start":392,"line_end":392,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":11809,"byte_end":11812,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the output of `which` or `which_in`, but `which::Path` has the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":11813,"byte_end":11908,"line_start":394,"line_end":394,"column_start":1,"column_end":96}},{"value":"/ advantage of being a type distinct from `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":11909,"byte_end":11996,"line_start":395,"line_end":395,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":11997,"byte_end":12000,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `which::Path` instead of `std::path::Path` when you want the type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12001,"byte_end":12098,"line_start":397,"line_end":397,"column_start":1,"column_end":98}},{"value":"/ system to enforce the need for a path that exists and points to a binary that is executable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12099,"byte_end":12195,"line_start":398,"line_end":398,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12196,"byte_end":12199,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ Since `which::Path` implements `Deref` for `std::path::Path`, all methods on `&std::path::Path`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12200,"byte_end":12299,"line_start":400,"line_end":400,"column_start":1,"column_end":100}},{"value":"/ are also available to `&which::Path` values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12300,"byte_end":12348,"line_start":401,"line_end":401,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12579,"byte_end":12582,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn new<T>(T) -> Result<Path> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12444,"byte_end":12497,"line_start":408,"line_end":408,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12502,"byte_end":12505,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and maps the result into a `Path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12510,"byte_end":12567,"line_start":410,"line_end":410,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12845,"byte_end":12848,"line_start":418,"line_end":418,"column_start":12,"column_end":15},"name":"all","qualname":"<Path>::all","value":"fn all<T>(T) -> Result</*impl Trait*/> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the paths of all executable binaries by a name.","sig":null,"attributes":[{"value":"/ Returns the paths of all executable binaries by a name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12700,"byte_end":12759,"line_start":415,"line_end":415,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12764,"byte_end":12767,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ this calls `which_all` and maps the results into `Path`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12772,"byte_end":12833,"line_start":417,"line_end":417,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13254,"byte_end":13260,"line_start":426,"line_end":426,"column_start":12,"column_end":18},"name":"new_in","qualname":"<Path>::new_in","value":"fn new_in<T, U, V>(T, Option<U>, V) -> Result<Path> where T: AsRef<OsStr>,\nU: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13011,"byte_end":13102,"line_start":422,"line_end":422,"column_start":5,"column_end":96}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13107,"byte_end":13169,"line_start":423,"line_end":423,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13174,"byte_end":13177,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and maps the result into a `Path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13182,"byte_end":13242,"line_start":425,"line_end":425,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13754,"byte_end":13760,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"all_in","qualname":"<Path>::all_in","value":"fn all_in<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns all paths of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns all paths of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13505,"byte_end":13597,"line_start":435,"line_end":435,"column_start":5,"column_end":97}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13602,"byte_end":13664,"line_start":436,"line_end":436,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13669,"byte_end":13672,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in_all` and maps the results into a `Path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":13677,"byte_end":13742,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14140,"byte_end":14147,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Path>::as_path","value":"fn as_path<'_>(&'_ Self) -> &'_ path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14081,"byte_end":14128,"line_start":452,"line_end":452,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14301,"byte_end":14314,"line_start":458,"line_end":458,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14212,"byte_end":14289,"line_start":457,"line_end":457,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14402,"byte_end":14405,"line_start":464,"line_end":464,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Path as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14573,"byte_end":14578,"line_start":472,"line_end":472,"column_start":8,"column_end":13},"name":"deref","qualname":"<Path as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ path::Path","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14680,"byte_end":14686,"line_start":478,"line_end":478,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ path::Path","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14779,"byte_end":14785,"line_start":484,"line_end":484,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ OsStr","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14887,"byte_end":14889,"line_start":490,"line_end":490,"column_start":8,"column_end":10},"name":"eq","qualname":"<Path as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ path::PathBuf) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15016,"byte_end":15018,"line_start":496,"line_end":496,"column_start":8,"column_end":10},"name":"eq","qualname":"<path::PathBuf as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Path) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15902,"byte_end":15915,"line_start":515,"line_end":515,"column_start":12,"column_end":25},"name":"CanonicalPath","qualname":"::CanonicalPath","value":"CanonicalPath {  }","parent":null,"children":[{"krate":0,"index":297}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an\n executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15088,"byte_end":15176,"line_start":501,"line_end":501,"column_start":1,"column_end":89}},{"value":"/ executable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15177,"byte_end":15192,"line_start":502,"line_end":502,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15193,"byte_end":15196,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the result of `which` or `which_in` followed by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15197,"byte_end":15277,"line_start":504,"line_end":504,"column_start":1,"column_end":81}},{"value":"/ `Path::canonicalize`, but `CanonicalPath` has the advantage of being a type distinct from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15278,"byte_end":15371,"line_start":505,"line_end":505,"column_start":1,"column_end":94}},{"value":"/ `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15372,"byte_end":15419,"line_start":506,"line_end":506,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15420,"byte_end":15423,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `CanonicalPath` instead of `std::path::Path` when you want the type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15424,"byte_end":15523,"line_start":508,"line_end":508,"column_start":1,"column_end":100}},{"value":"/ system to enforce the need for a path that exists, points to a binary that is executable, is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15524,"byte_end":15620,"line_start":509,"line_end":509,"column_start":1,"column_end":97}},{"value":"/ absolute, has all components normalized, and has all symbolic links resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15621,"byte_end":15701,"line_start":510,"line_end":510,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15702,"byte_end":15705,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ Since `CanonicalPath` implements `Deref` for `std::path::Path`, all methods on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15706,"byte_end":15788,"line_start":512,"line_end":512,"column_start":1,"column_end":83}},{"value":"/ `&std::path::Path` are also available to `&CanonicalPath` values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15789,"byte_end":15858,"line_start":513,"line_end":513,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16151,"byte_end":16154,"line_start":523,"line_end":523,"column_start":12,"column_end":15},"name":"new","qualname":"<CanonicalPath>::new","value":"fn new<T>(T) -> Result<CanonicalPath> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15972,"byte_end":16035,"line_start":520,"line_end":520,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16040,"byte_end":16043,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16048,"byte_end":16139,"line_start":522,"line_end":522,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16570,"byte_end":16573,"line_start":532,"line_end":532,"column_start":12,"column_end":15},"name":"all","qualname":"<CanonicalPath>::all","value":"fn all<T>(T) -> Result</*impl Trait*/> where T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical paths of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical paths of an executable binary by name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16386,"byte_end":16450,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16455,"byte_end":16458,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ This calls `which_all` and `Path::canonicalize` and maps the results into `CanonicalPath`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16463,"byte_end":16558,"line_start":531,"line_end":531,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17256,"byte_end":17262,"line_start":549,"line_end":549,"column_start":12,"column_end":18},"name":"new_in","qualname":"<CanonicalPath>::new_in","value":"fn new_in<T, U, V>(T, Option<U>, V) -> Result<CanonicalPath> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name in the path list `paths` and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":16969,"byte_end":17060,"line_start":545,"line_end":545,"column_start":5,"column_end":96}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17065,"byte_end":17137,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17142,"byte_end":17145,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17150,"byte_end":17244,"line_start":548,"line_end":548,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17920,"byte_end":17926,"line_start":564,"line_end":564,"column_start":12,"column_end":18},"name":"all_in","qualname":"<CanonicalPath>::all_in","value":"fn all_in<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns all of the canonical paths of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns all of the canonical paths of an executable binary by name in the path list `paths` and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17621,"byte_end":17720,"line_start":560,"line_end":560,"column_start":5,"column_end":104}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17725,"byte_end":17797,"line_start":561,"line_end":561,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17802,"byte_end":17805,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in_all` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":17810,"byte_end":17908,"line_start":563,"line_end":563,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18524,"byte_end":18531,"line_start":585,"line_end":585,"column_start":12,"column_end":19},"name":"as_path","qualname":"<CanonicalPath>::as_path","value":"fn as_path<'_>(&'_ Self) -> &'_ path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18465,"byte_end":18512,"line_start":584,"line_end":584,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18694,"byte_end":18707,"line_start":590,"line_end":590,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<CanonicalPath>::into_path_buf","value":"fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18596,"byte_end":18682,"line_start":589,"line_end":589,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18804,"byte_end":18807,"line_start":596,"line_end":596,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CanonicalPath as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18984,"byte_end":18989,"line_start":604,"line_end":604,"column_start":8,"column_end":13},"name":"deref","qualname":"<CanonicalPath as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ path::Path","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19100,"byte_end":19106,"line_start":610,"line_end":610,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<CanonicalPath as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ path::Path","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19208,"byte_end":19214,"line_start":616,"line_end":616,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<CanonicalPath as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ OsStr","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19325,"byte_end":19327,"line_start":622,"line_end":622,"column_start":8,"column_end":10},"name":"eq","qualname":"<CanonicalPath as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ path::PathBuf) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19463,"byte_end":19465,"line_start":628,"line_end":628,"column_start":8,"column_end":10},"name":"eq","qualname":"<path::PathBuf as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ CanonicalPath) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":19726,"byte_end":19743,"line_start":11,"line_end":11,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":19838,"byte_end":19855,"line_start":17,"line_end":17,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":20205,"byte_end":20219,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":20308,"byte_end":20322,"line_start":39,"line_end":39,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":20912,"byte_end":20928,"line_start":62,"line_end":62,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":21206,"byte_end":21222,"line_start":75,"line_end":75,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21624,"byte_end":21629,"line_start":14,"line_end":14,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21656,"byte_end":21661,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/finder.rs","byte_start":22761,"byte_end":22768,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/finder.rs","byte_start":23165,"byte_end":23171,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":6822,"byte_end":6833,"line_start":246,"line_end":246,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7186,"byte_end":7197,"line_start":264,"line_end":264,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12433,"byte_end":12437,"line_start":407,"line_end":407,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":197},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14388,"byte_end":14392,"line_start":463,"line_end":463,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14528,"byte_end":14532,"line_start":469,"line_end":469,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14666,"byte_end":14670,"line_start":477,"line_end":477,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14765,"byte_end":14769,"line_start":483,"line_end":483,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14873,"byte_end":14877,"line_start":489,"line_end":489,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14999,"byte_end":15006,"line_start":495,"line_end":495,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15952,"byte_end":15965,"line_start":519,"line_end":519,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":232},{"krate":0,"index":239},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18781,"byte_end":18794,"line_start":595,"line_end":595,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18930,"byte_end":18943,"line_start":601,"line_end":601,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19077,"byte_end":19090,"line_start":609,"line_end":609,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19185,"byte_end":19198,"line_start":615,"line_end":615,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19302,"byte_end":19315,"line_start":621,"line_end":621,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19446,"byte_end":19453,"line_start":627,"line_end":627,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":19726,"byte_end":19743,"line_start":11,"line_end":11,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":19838,"byte_end":19855,"line_start":17,"line_end":17,"column_start":18,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":20205,"byte_end":20219,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":20308,"byte_end":20322,"line_start":39,"line_end":39,"column_start":18,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":20912,"byte_end":20928,"line_start":62,"line_end":62,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/checker.rs","byte_start":21206,"byte_end":21222,"line_start":75,"line_end":75,"column_start":18,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":33},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21624,"byte_end":21629,"line_start":14,"line_end":14,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":263},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/error.rs","byte_start":21656,"byte_end":21661,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/finder.rs","byte_start":22761,"byte_end":22768,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":7083},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/finder.rs","byte_start":23165,"byte_end":23171,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":6822,"byte_end":6833,"line_start":246,"line_end":246,"column_start":18,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":7186,"byte_end":7197,"line_start":264,"line_end":264,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":12433,"byte_end":12437,"line_start":407,"line_end":407,"column_start":6,"column_end":10},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14388,"byte_end":14392,"line_start":463,"line_end":463,"column_start":21,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14528,"byte_end":14532,"line_start":469,"line_end":469,"column_start":26,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14666,"byte_end":14670,"line_start":477,"line_end":477,"column_start":28,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14765,"byte_end":14769,"line_start":483,"line_end":483,"column_start":23,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14873,"byte_end":14877,"line_start":489,"line_end":489,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":14999,"byte_end":15006,"line_start":495,"line_end":495,"column_start":32,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":7083},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":15952,"byte_end":15965,"line_start":519,"line_end":519,"column_start":6,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18781,"byte_end":18794,"line_start":595,"line_end":595,"column_start":21,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":18930,"byte_end":18943,"line_start":601,"line_end":601,"column_start":26,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19077,"byte_end":19090,"line_start":609,"line_end":609,"column_start":28,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19185,"byte_end":19198,"line_start":615,"line_end":615,"column_start":23,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19302,"byte_end":19315,"line_start":621,"line_end":621,"column_start":35,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.4.0/src/lib.rs","byte_start":19446,"byte_end":19453,"line_start":627,"line_end":627,"column_start":41,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7083},"to":{"krate":2,"index":2915}}]}