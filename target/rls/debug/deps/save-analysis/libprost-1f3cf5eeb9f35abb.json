{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","prost","--edition=2021","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"prost-derive\"","--cfg","feature=\"std\"","-C","metadata=1f3cf5eeb9f35abb","-C","extra-filename=-1f3cf5eeb9f35abb","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","bytes=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbytes-e80fde13cfdaa1ed.rmeta","--extern","prost_derive=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprost_derive-ccf57bf1616c658e.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprost-1f3cf5eeb9f35abb.rmeta"},"prelude":{"crate_id":{"name":"prost","disambiguator":[15285855434092549117,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","num":20,"id":{"name":"prost_derive","disambiguator":[13805543166489788830,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","num":21,"id":{"name":"bytes","disambiguator":[5441976563651757446,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":0,"byte_end":2960,"line_start":1,"line_end":93,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":303,"byte_end":308,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"alias_span":null,"name":"bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":404,"byte_end":415,"line_start":19,"line_end":19,"column_start":24,"column_end":35},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":417,"byte_end":428,"line_start":19,"line_end":19,"column_start":37,"column_end":48},"alias_span":null,"name":"EncodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":455,"byte_end":462,"line_start":20,"line_end":20,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":2958,"byte_end":2959,"line_start":93,"line_end":93,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Message","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":0,"byte_end":2960,"line_start":1,"line_end":93,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":40},{"krate":0,"index":115},{"krate":0,"index":253},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":468}],"decl_id":null,"docs":"![continuous integration](https://github.com/tokio-rs/prost/workflows/continuous%20integration/badge.svg)\n[![Documentation](https://docs.rs/prost/badge.svg)](https://docs.rs/prost/)\n[![Crate](https://img.shields.io/crates/v/prost.svg)](https://crates.io/crates/prost)\n[![Dependency Status](https://deps.rs/repo/github/tokio-rs/prost/status.svg)](https://deps.rs/repo/github/tokio-rs/prost)\n[![Discord](https://img.shields.io/discord/500028886025895936)](https://discord.gg/tokio)","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3405,"byte_end":3416,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"DecodeError","qualname":"::error::DecodeError","value":"DecodeError {  }","parent":null,"children":[{"krate":0,"index":470}],"decl_id":null,"docs":" A Protobuf message decoding error.","sig":null,"attributes":[{"value":"/ A Protobuf message decoding error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3091,"byte_end":3129,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3130,"byte_end":3133,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `DecodeError` indicates that the input buffer does not contain a valid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3134,"byte_end":3208,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ Protobuf message. The error details should be considered 'best effort': in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3209,"byte_end":3287,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ general it is not possible to exactly pinpoint why data is malformed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3288,"byte_end":3361,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4023,"byte_end":4026,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeError>::new","value":"fn new<impl Into<Cow<'static, str>>>(impl Into<Cow<'static, str>>)\n-> DecodeError where impl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DecodeError` with a 'best effort' root cause description.","sig":null,"attributes":[{"value":"/ Creates a new `DecodeError` with a 'best effort' root cause description.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3836,"byte_end":3912,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3917,"byte_end":3920,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3925,"byte_end":3980,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"cold","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4004,"byte_end":4011,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4439,"byte_end":4443,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"push","qualname":"<DecodeError>::push","value":"fn push<'_>(&'_ mut Self, &'static str, &'static str)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a (message, field) name location pair on to the location stack.","sig":null,"attributes":[{"value":"/ Pushes a (message, field) name location pair on to the location stack.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4266,"byte_end":4340,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4345,"byte_end":4348,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4353,"byte_end":4408,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4600,"byte_end":4603,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DecodeError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4874,"byte_end":4877,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DecodeError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5301,"byte_end":5305,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"from","qualname":"<std::io::Error as std::convert::From>::from","value":"fn from(DecodeError) -> std::io::Error","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5694,"byte_end":5705,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"EncodeError","qualname":"::error::EncodeError","value":"EncodeError {  }","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" A Protobuf message encoding error.","sig":null,"attributes":[{"value":"/ A Protobuf message encoding error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5423,"byte_end":5461,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5462,"byte_end":5465,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ `EncodeError` always indicates that a message failed to encode because the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5466,"byte_end":5544,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ provided buffer had insufficient capacity. Message encoding is otherwise","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5545,"byte_end":5621,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ infallible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5622,"byte_end":5637,"line_start":86,"line_end":86,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6047,"byte_end":6064,"line_start":103,"line_end":103,"column_start":12,"column_end":29},"name":"required_capacity","qualname":"<EncodeError>::required_capacity","value":"fn required_capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required buffer capacity to encode the message.\n","sig":null,"attributes":[{"value":"/ Returns the required buffer capacity to encode the message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5972,"byte_end":6035,"line_start":102,"line_end":102,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6208,"byte_end":6217,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"remaining","qualname":"<EncodeError>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining length in the provided buffer at the time of encoding.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length in the provided buffer at the time of encoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6116,"byte_end":6196,"line_start":107,"line_end":107,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6311,"byte_end":6314,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EncodeError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6710,"byte_end":6714,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"from","qualname":"<std::io::Error as std::convert::From>::from","value":"fn from(EncodeError) -> std::io::Error","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7147,"byte_end":7154,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"Message","qualname":"::message::Message","value":"Message: Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106}],"decl_id":null,"docs":" A Protocol Buffers message.\n","sig":null,"attributes":[{"value":"/ A Protocol Buffers message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7105,"byte_end":7136,"line_start":15,"line_end":15,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7393,"byte_end":7403,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"::message::Message::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut, Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message to a buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7182,"byte_end":7218,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7223,"byte_end":7226,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will panic if the buffer has insufficient capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7231,"byte_end":7298,"line_start":19,"line_end":19,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7303,"byte_end":7306,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7311,"byte_end":7366,"line_start":21,"line_end":21,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7638,"byte_end":7649,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"merge_field","qualname":"::message::Message::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf, Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Decodes a field from a buffer, and merges it into `self`.","sig":null,"attributes":[{"value":"/ Decodes a field from a buffer, and merges it into `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7482,"byte_end":7543,"line_start":28,"line_end":28,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7548,"byte_end":7551,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7556,"byte_end":7611,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7935,"byte_end":7946,"line_start":44,"line_end":44,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::message::Message::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Returns the encoded length of the message without a length delimiter.\n","sig":null,"attributes":[{"value":"/ Returns the encoded length of the message without a length delimiter.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7854,"byte_end":7927,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8104,"byte_end":8110,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"encode","qualname":"::message::Message::encode","value":"fn encode<B, '_, '_>(&'_ Self, &'_ mut B) -> Result<(), EncodeError> where\nB: BufMut, Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message to a buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7969,"byte_end":8005,"line_start":46,"line_end":46,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8010,"byte_end":8013,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8018,"byte_end":8096,"line_start":48,"line_end":48,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8539,"byte_end":8552,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"encode_to_vec","qualname":"::message::Message::encode_to_vec","value":"fn encode_to_vec<'_>(&'_ Self) -> Vec<u8> where Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Encodes the message to a newly allocated buffer.\n","sig":null,"attributes":[{"value":"/ Encodes the message to a newly allocated buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8479,"byte_end":8531,"line_start":64,"line_end":64,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8888,"byte_end":8911,"line_start":78,"line_end":78,"column_start":8,"column_end":31},"name":"encode_length_delimited","qualname":"::message::Message::encode_length_delimited","value":"fn encode_length_delimited<B, '_, '_>(&'_ Self, &'_ mut B)\n-> Result<(), EncodeError> where B: BufMut, Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Encodes the message with a length-delimiter to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message with a length-delimiter to a buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8729,"byte_end":8789,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8794,"byte_end":8797,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":8802,"byte_end":8880,"line_start":77,"line_end":77,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":9449,"byte_end":9479,"line_start":95,"line_end":95,"column_start":8,"column_end":38},"name":"encode_length_delimited_to_vec","qualname":"::message::Message::encode_length_delimited_to_vec","value":"fn encode_length_delimited_to_vec<'_>(&'_ Self) -> Vec<u8> where Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Encodes the message with a length-delimiter to a newly allocated buffer.\n","sig":null,"attributes":[{"value":"/ Encodes the message with a length-delimiter to a newly allocated buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":9365,"byte_end":9441,"line_start":94,"line_end":94,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":9870,"byte_end":9876,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::message::Message::decode","value":"fn decode<B>(B) -> Result<Self, DecodeError> where B: Buf, Self: Default","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer.","sig":null,"attributes":[{"value":"/ Decodes an instance of the message from a buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":9757,"byte_end":9810,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":9815,"byte_end":9818,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The entire buffer will be consumed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":9823,"byte_end":9862,"line_start":109,"line_end":109,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10170,"byte_end":10193,"line_start":120,"line_end":120,"column_start":8,"column_end":31},"name":"decode_length_delimited","qualname":"::message::Message::decode_length_delimited","value":"fn decode_length_delimited<B>(B) -> Result<Self, DecodeError> where B: Buf,\nSelf: Default","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from the buffer.\n","sig":null,"attributes":[{"value":"/ Decodes a length-delimited instance of the message from the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10091,"byte_end":10162,"line_start":119,"line_end":119,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10549,"byte_end":10554,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"merge","qualname":"::message::Message::merge","value":"fn merge<B, '_>(&'_ mut Self, B) -> Result<(), DecodeError> where B: Buf,\nSelf: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer, and merges it into `self`.","sig":null,"attributes":[{"value":"/ Decodes an instance of the message from a buffer, and merges it into `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10409,"byte_end":10489,"line_start":130,"line_end":130,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10494,"byte_end":10497,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The entire buffer will be consumed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10502,"byte_end":10541,"line_start":132,"line_end":132,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11015,"byte_end":11037,"line_start":148,"line_end":148,"column_start":8,"column_end":30},"name":"merge_length_delimited","qualname":"::message::Message::merge_length_delimited","value":"fn merge_length_delimited<B, '_>(&'_ mut Self, B) -> Result<(), DecodeError>\nwhere B: Buf, Self: Sized","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from buffer, and\n merges it into `self`.\n","sig":null,"attributes":[{"value":"/ Decodes a length-delimited instance of the message from buffer, and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10905,"byte_end":10976,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ merges it into `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":10981,"byte_end":11007,"line_start":147,"line_end":147,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11376,"byte_end":11381,"line_start":162,"line_end":162,"column_start":8,"column_end":13},"name":"clear","qualname":"::message::Message::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Clears the message, resetting all fields to their default.\n","sig":null,"attributes":[{"value":"/ Clears the message, resetting all fields to their default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11306,"byte_end":11368,"line_start":161,"line_end":161,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11455,"byte_end":11465,"line_start":169,"line_end":169,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<Box<M> as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11570,"byte_end":11581,"line_start":175,"line_end":175,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<Box<M> as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11834,"byte_end":11845,"line_start":187,"line_end":187,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<Box<M> as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11908,"byte_end":11913,"line_start":190,"line_end":190,"column_start":8,"column_end":13},"name":"clear","qualname":"<Box<M> as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":12754,"byte_end":12764,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<bool as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":12904,"byte_end":12915,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<bool as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":13262,"byte_end":13273,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<bool as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":13379,"byte_end":13384,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"clear","qualname":"<bool as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":13494,"byte_end":13504,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<u32 as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":13651,"byte_end":13662,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<u32 as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":14011,"byte_end":14022,"line_start":85,"line_end":85,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<u32 as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":14160,"byte_end":14165,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"clear","qualname":"<u32 as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":14271,"byte_end":14281,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<u64 as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":14428,"byte_end":14439,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<u64 as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":14788,"byte_end":14799,"line_start":123,"line_end":123,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<u64 as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":14937,"byte_end":14942,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"clear","qualname":"<u64 as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":15047,"byte_end":15057,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<i32 as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":15203,"byte_end":15214,"line_start":145,"line_end":145,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<i32 as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":15562,"byte_end":15573,"line_start":161,"line_end":161,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<i32 as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":15710,"byte_end":15715,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"clear","qualname":"<i32 as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":15820,"byte_end":15830,"line_start":175,"line_end":175,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<i64 as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":15976,"byte_end":15987,"line_start":183,"line_end":183,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<i64 as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":16335,"byte_end":16346,"line_start":199,"line_end":199,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<i64 as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":16483,"byte_end":16488,"line_start":206,"line_end":206,"column_start":8,"column_end":13},"name":"clear","qualname":"<i64 as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":16593,"byte_end":16603,"line_start":213,"line_end":213,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<f32 as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":16751,"byte_end":16762,"line_start":221,"line_end":221,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<f32 as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":17110,"byte_end":17121,"line_start":237,"line_end":237,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<f32 as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":17260,"byte_end":17265,"line_start":244,"line_end":244,"column_start":8,"column_end":13},"name":"clear","qualname":"<f32 as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":17373,"byte_end":17383,"line_start":251,"line_end":251,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<f64 as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":17532,"byte_end":17543,"line_start":259,"line_end":259,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<f64 as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":17892,"byte_end":17903,"line_start":275,"line_end":275,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<f64 as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18043,"byte_end":18048,"line_start":282,"line_end":282,"column_start":8,"column_end":13},"name":"clear","qualname":"<f64 as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18159,"byte_end":18169,"line_start":289,"line_end":289,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<String as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18322,"byte_end":18333,"line_start":297,"line_end":297,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<String as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18682,"byte_end":18693,"line_start":313,"line_end":313,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<String as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18837,"byte_end":18842,"line_start":320,"line_end":320,"column_start":8,"column_end":13},"name":"clear","qualname":"<String as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18954,"byte_end":18964,"line_start":327,"line_end":327,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<Vec<u8> as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19116,"byte_end":19127,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<Vec<u8> as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19475,"byte_end":19486,"line_start":351,"line_end":351,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<Vec<u8> as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19629,"byte_end":19634,"line_start":358,"line_end":358,"column_start":8,"column_end":13},"name":"clear","qualname":"<Vec<u8> as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19744,"byte_end":19754,"line_start":365,"line_end":365,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<Bytes as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19906,"byte_end":19917,"line_start":373,"line_end":373,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<Bytes as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":20265,"byte_end":20276,"line_start":389,"line_end":389,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<Bytes as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":20419,"byte_end":20424,"line_start":396,"line_end":396,"column_start":8,"column_end":13},"name":"clear","qualname":"<Bytes as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":20526,"byte_end":20536,"line_start":403,"line_end":403,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"<() as message::Message>::encode_raw","value":"fn encode_raw<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":86},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":20609,"byte_end":20620,"line_start":408,"line_end":408,"column_start":8,"column_end":19},"name":"merge_field","qualname":"<() as message::Message>::merge_field","value":"fn merge_field<B, '_,\n'_>(&'_ mut Self, u32, WireType, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":20863,"byte_end":20874,"line_start":420,"line_end":420,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<() as message::Message>::encoded_len","value":"fn encoded_len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":90},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":20916,"byte_end":20921,"line_start":423,"line_end":423,"column_start":8,"column_end":13},"name":"clear","qualname":"<() as message::Message>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":{"krate":0,"index":85},"children":[],"decl_id":{"krate":0,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":253},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encoding","qualname":"::encoding","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":513},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":543},{"krate":0,"index":562},{"krate":0,"index":581},{"krate":0,"index":600},{"krate":0,"index":619},{"krate":0,"index":638},{"krate":0,"index":657},{"krate":0,"index":334},{"krate":0,"index":676},{"krate":0,"index":692},{"krate":0,"index":708},{"krate":0,"index":724},{"krate":0,"index":740},{"krate":0,"index":756},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":379},{"krate":0,"index":390},{"krate":0,"index":410},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":433}],"decl_id":null,"docs":" Utility functions and types for encoding and decoding Protobuf types.","sig":null,"attributes":[{"value":"/ Utility functions and types for encoding and decoding Protobuf types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":20939,"byte_end":21012,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21013,"byte_end":21016,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Meant to be used only from `Message` implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21017,"byte_end":21074,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"allow(clippy :: implicit_hasher, clippy :: ptr_arg)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21076,"byte_end":21127,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21601,"byte_end":21614,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"encode_varint","qualname":"::encoding::encode_varint","value":"fn encode_varint<B, '_>(u64, &'_ mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes an integer value into LEB128 variable length format, and writes it to the buffer.\n The buffer must have enough remaining space (maximum 10 bytes).\n","sig":null,"attributes":[{"value":"/ Encodes an integer value into LEB128 variable length format, and writes it to the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21422,"byte_end":21515,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ The buffer must have enough remaining space (maximum 10 bytes).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21516,"byte_end":21583,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21584,"byte_end":21593,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21966,"byte_end":21979,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"decode_varint","qualname":"::encoding::decode_varint","value":"fn decode_varint<B, '_>(&'_ mut B) -> Result<u64, DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a LEB128-encoded variable length integer from the buffer.\n","sig":null,"attributes":[{"value":"/ Decodes a LEB128-encoded variable length integer from the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21879,"byte_end":21948,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":21949,"byte_end":21958,"line_start":42,"line_end":42,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27027,"byte_end":27040,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"DecodeContext","qualname":"::encoding::DecodeContext","value":"DecodeContext {  }","parent":null,"children":[{"krate":0,"index":508}],"decl_id":null,"docs":" Additional information passed to every decode/merge function.","sig":null,"attributes":[{"value":"/ Additional information passed to every decode/merge function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":26699,"byte_end":26764,"line_start":188,"line_end":188,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":26765,"byte_end":26768,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The context should be passed by value and can be freely cloned. When passing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":26769,"byte_end":26849,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ to a function which is decoding a nested object, then use `enter_recursion`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":26850,"byte_end":26930,"line_start":191,"line_end":191,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27537,"byte_end":27544,"line_start":208,"line_end":208,"column_start":8,"column_end":15},"name":"default","qualname":"<DecodeContext as std::default::Default>::default","value":"fn default() -> DecodeContext","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27520,"byte_end":27529,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29257,"byte_end":29275,"line_start":261,"line_end":261,"column_start":8,"column_end":26},"name":"encoded_len_varint","qualname":"::encoding::encoded_len_varint","value":"fn encoded_len_varint(u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of the value in LEB128 variable length format.\n The returned value will be between 1 and 10, inclusive.\n","sig":null,"attributes":[{"value":"/ Returns the encoded length of the value in LEB128 variable length format.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29102,"byte_end":29179,"line_start":258,"line_end":258,"column_start":1,"column_end":78}},{"value":"/ The returned value will be between 1 and 10, inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29180,"byte_end":29239,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29240,"byte_end":29249,"line_start":260,"line_end":260,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29592,"byte_end":29598,"line_start":270,"line_end":270,"column_start":5,"column_end":11},"name":"Varint","qualname":"::encoding::WireType::Varint","value":"WireType::Varint","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":517},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29608,"byte_end":29620,"line_start":271,"line_end":271,"column_start":5,"column_end":17},"name":"SixtyFourBit","qualname":"::encoding::WireType::SixtyFourBit","value":"WireType::SixtyFourBit","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29630,"byte_end":29645,"line_start":272,"line_end":272,"column_start":5,"column_end":20},"name":"LengthDelimited","qualname":"::encoding::WireType::LengthDelimited","value":"WireType::LengthDelimited","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":523},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29655,"byte_end":29665,"line_start":273,"line_end":273,"column_start":5,"column_end":15},"name":"StartGroup","qualname":"::encoding::WireType::StartGroup","value":"WireType::StartGroup","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":526},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29675,"byte_end":29683,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"EndGroup","qualname":"::encoding::WireType::EndGroup","value":"WireType::EndGroup","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29693,"byte_end":29705,"line_start":275,"line_end":275,"column_start":5,"column_end":17},"name":"ThirtyTwoBit","qualname":"::encoding::WireType::ThirtyTwoBit","value":"WireType::ThirtyTwoBit","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":513},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29577,"byte_end":29585,"line_start":269,"line_end":269,"column_start":10,"column_end":18},"name":"WireType","qualname":"::encoding::WireType","value":"enum WireType {\n    Varint = ,\n    SixtyFourBit = ,\n    LengthDelimited = ,\n    StartGroup = ,\n    EndGroup = ,\n    ThirtyTwoBit = ,\n}","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29556,"byte_end":29567,"line_start":268,"line_end":268,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":313},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29724,"byte_end":29731,"line_start":278,"line_end":278,"column_start":11,"column_end":18},"name":"MIN_TAG","qualname":"::encoding::MIN_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":314},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29752,"byte_end":29759,"line_start":279,"line_end":279,"column_start":11,"column_end":18},"name":"MAX_TAG","qualname":"::encoding::MAX_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29868,"byte_end":29876,"line_start":285,"line_end":285,"column_start":8,"column_end":16},"name":"try_from","qualname":"<WireType as std::convert::TryFrom>::try_from","value":"fn try_from(u64) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29851,"byte_end":29860,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30470,"byte_end":30480,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"encode_key","qualname":"::encoding::encode_key","value":"fn encode_key<B, '_>(u32, WireType, &'_ mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"/ Encodes a Protobuf field key, which consists of a wire type designator and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30355,"byte_end":30433,"line_start":301,"line_end":301,"column_start":1,"column_end":79}},{"value":"/ the field tag.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30434,"byte_end":30452,"line_start":302,"line_end":302,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30453,"byte_end":30462,"line_start":303,"line_end":303,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30817,"byte_end":30827,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"decode_key","qualname":"::encoding::decode_key","value":"fn decode_key<B, '_>(&'_ mut B) -> Result<(u32, WireType), DecodeError> where\nB: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"/ Decodes a Protobuf field key, which consists of a wire type designator and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30694,"byte_end":30772,"line_start":313,"line_end":313,"column_start":1,"column_end":79}},{"value":"/ the field tag.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30773,"byte_end":30791,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":30792,"byte_end":30809,"line_start":315,"line_end":315,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31420,"byte_end":31427,"line_start":337,"line_end":337,"column_start":8,"column_end":15},"name":"key_len","qualname":"::encoding::key_len","value":"fn key_len(u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of an encoded Protobuf field key with the given tag.\n The returned width will be between 1 and 5 bytes (inclusive).\n","sig":null,"attributes":[{"value":"/ Returns the width of an encoded Protobuf field key with the given tag.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31262,"byte_end":31336,"line_start":334,"line_end":334,"column_start":1,"column_end":75}},{"value":"/ The returned width will be between 1 and 5 bytes (inclusive).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31337,"byte_end":31402,"line_start":335,"line_end":335,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31403,"byte_end":31412,"line_start":336,"line_end":336,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":323},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31614,"byte_end":31629,"line_start":344,"line_end":344,"column_start":8,"column_end":23},"name":"check_wire_type","qualname":"::encoding::check_wire_type","value":"fn check_wire_type(WireType, WireType) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the expected wire type matches the actual wire type,\n or returns an error result.\n","sig":null,"attributes":[{"value":"/ Checks that the expected wire type matches the actual wire type,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31496,"byte_end":31564,"line_start":341,"line_end":341,"column_start":1,"column_end":69}},{"value":"/ or returns an error result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31565,"byte_end":31596,"line_start":342,"line_end":342,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31597,"byte_end":31606,"line_start":343,"line_end":343,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":324},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":32036,"byte_end":32046,"line_start":356,"line_end":356,"column_start":8,"column_end":18},"name":"merge_loop","qualname":"::encoding::merge_loop","value":"fn merge_loop<T, M, B, '_, '_>(&'_ mut T, &'_ mut B, DecodeContext, M)\n-> Result<(), DecodeError> where\nM: for<'_, '_> FnMut(&'_ mut T, &'_ mut B, DecodeContext) ->\nResult<(), DecodeError>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Helper function which abstracts reading a length delimiter prefix followed\n by decoding values until the length of bytes is exhausted.\n","sig":null,"attributes":[{"value":"/ Helper function which abstracts reading a length delimiter prefix followed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31887,"byte_end":31965,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ by decoding values until the length of bytes is exhausted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":31966,"byte_end":32028,"line_start":355,"line_end":355,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":32679,"byte_end":32689,"line_start":383,"line_end":383,"column_start":8,"column_end":18},"name":"skip_field","qualname":"::encoding::skip_field","value":"fn skip_field<B, '_>(WireType, u32, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":543},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39288,"byte_end":39292,"line_start":577,"line_end":577,"column_start":15,"column_end":19},"name":"bool","qualname":"::encoding::bool","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":557},{"krate":0,"index":549},{"krate":0,"index":559},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39391,"byte_end":39396,"line_start":580,"line_end":580,"column_start":14,"column_end":19},"name":"int32","qualname":"::encoding::int32","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":576},{"krate":0,"index":568},{"krate":0,"index":578},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":581},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39412,"byte_end":39417,"line_start":581,"line_end":581,"column_start":14,"column_end":19},"name":"int64","qualname":"::encoding::int64","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":595},{"krate":0,"index":587},{"krate":0,"index":597},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":600},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39433,"byte_end":39439,"line_start":582,"line_end":582,"column_start":14,"column_end":20},"name":"uint32","qualname":"::encoding::uint32","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":614},{"krate":0,"index":606},{"krate":0,"index":616},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":619},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39455,"byte_end":39461,"line_start":583,"line_end":583,"column_start":14,"column_end":20},"name":"uint64","qualname":"::encoding::uint64","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":633},{"krate":0,"index":625},{"krate":0,"index":635},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":638},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39477,"byte_end":39483,"line_start":584,"line_end":584,"column_start":14,"column_end":20},"name":"sint32","qualname":"::encoding::sint32","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":652},{"krate":0,"index":644},{"krate":0,"index":654},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":650}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":657},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":39676,"byte_end":39682,"line_start":592,"line_end":592,"column_start":14,"column_end":20},"name":"sint64","qualname":"::encoding::sint64","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":671},{"krate":0,"index":663},{"krate":0,"index":673},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":43411,"byte_end":43416,"line_start":712,"line_end":712,"column_start":5,"column_end":10},"name":"float","qualname":"::encoding::float","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":687},{"krate":0,"index":682},{"krate":0,"index":689},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":692},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":43514,"byte_end":43520,"line_start":720,"line_end":720,"column_start":5,"column_end":11},"name":"double","qualname":"::encoding::double","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":703},{"krate":0,"index":698},{"krate":0,"index":705},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":708},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":43618,"byte_end":43625,"line_start":728,"line_end":728,"column_start":5,"column_end":12},"name":"fixed32","qualname":"::encoding::fixed32","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":719},{"krate":0,"index":714},{"krate":0,"index":721},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":43723,"byte_end":43730,"line_start":736,"line_end":736,"column_start":5,"column_end":12},"name":"fixed64","qualname":"::encoding::fixed64","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":735},{"krate":0,"index":730},{"krate":0,"index":737},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":740},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":43828,"byte_end":43836,"line_start":744,"line_end":744,"column_start":5,"column_end":13},"name":"sfixed32","qualname":"::encoding::sfixed32","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":751},{"krate":0,"index":746},{"krate":0,"index":753},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":756},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":43934,"byte_end":43942,"line_start":752,"line_end":752,"column_start":5,"column_end":13},"name":"sfixed64","qualname":"::encoding::sfixed64","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":767},{"krate":0,"index":762},{"krate":0,"index":769},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":336},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":45107,"byte_end":45113,"line_start":794,"line_end":794,"column_start":9,"column_end":15},"name":"string","qualname":"::encoding::string","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":777},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":338},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":45146,"byte_end":45152,"line_start":797,"line_end":797,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::string::encode","value":"fn encode<B, '_, '_>(u32, &'_ String, &'_ mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":45393,"byte_end":45398,"line_start":805,"line_end":805,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::string::merge","value":"fn merge<B, '_, '_>(WireType, &'_ mut String, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":349},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48061,"byte_end":48073,"line_start":876,"line_end":876,"column_start":11,"column_end":23},"name":"BytesAdapter","qualname":"::encoding::BytesAdapter","value":"BytesAdapter: sealed::BytesAdapter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48158,"byte_end":48170,"line_start":881,"line_end":881,"column_start":15,"column_end":27},"name":"BytesAdapter","qualname":"::encoding::sealed::BytesAdapter","value":"BytesAdapter: Default + Sized + 'static","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48211,"byte_end":48214,"line_start":882,"line_end":882,"column_start":12,"column_end":15},"name":"len","qualname":"::encoding::sealed::BytesAdapter::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48325,"byte_end":48337,"line_start":885,"line_end":885,"column_start":12,"column_end":24},"name":"replace_with","qualname":"::encoding::sealed::BytesAdapter::replace_with","value":"fn replace_with<B, '_>(&'_ mut Self, B) where B: Buf","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Replace contents of this buffer with the contents of another buffer.\n","sig":null,"attributes":[{"value":"/ Replace contents of this buffer with the contents of another buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48241,"byte_end":48313,"line_start":884,"line_end":884,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48473,"byte_end":48482,"line_start":890,"line_end":890,"column_start":12,"column_end":21},"name":"append_to","qualname":"::encoding::sealed::BytesAdapter::append_to","value":"fn append_to<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Appends this buffer to the (contents of) other buffer.\n","sig":null,"attributes":[{"value":"/ Appends this buffer to the (contents of) other buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48403,"byte_end":48461,"line_start":889,"line_end":889,"column_start":9,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48555,"byte_end":48563,"line_start":894,"line_end":894,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::encoding::sealed::BytesAdapter::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48705,"byte_end":48708,"line_start":903,"line_end":903,"column_start":8,"column_end":11},"name":"len","qualname":"<Bytes as encoding::sealed::BytesAdapter>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":358},"children":[],"decl_id":{"krate":0,"index":359},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48770,"byte_end":48782,"line_start":907,"line_end":907,"column_start":8,"column_end":20},"name":"replace_with","qualname":"<Bytes as encoding::sealed::BytesAdapter>::replace_with","value":"fn replace_with<B, '_>(&'_ mut Self, B) where B: Buf","parent":{"krate":0,"index":358},"children":[],"decl_id":{"krate":0,"index":360},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48907,"byte_end":48916,"line_start":914,"line_end":914,"column_start":8,"column_end":17},"name":"append_to","qualname":"<Bytes as encoding::sealed::BytesAdapter>::append_to","value":"fn append_to<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":358},"children":[],"decl_id":{"krate":0,"index":362},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49095,"byte_end":49098,"line_start":925,"line_end":925,"column_start":8,"column_end":11},"name":"len","qualname":"<Vec<u8> as encoding::sealed::BytesAdapter>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":358},"children":[],"decl_id":{"krate":0,"index":359},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49154,"byte_end":49166,"line_start":929,"line_end":929,"column_start":8,"column_end":20},"name":"replace_with","qualname":"<Vec<u8> as encoding::sealed::BytesAdapter>::replace_with","value":"fn replace_with<B, '_>(&'_ mut Self, B) where B: Buf","parent":{"krate":0,"index":358},"children":[],"decl_id":{"krate":0,"index":360},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49319,"byte_end":49328,"line_start":938,"line_end":938,"column_start":8,"column_end":17},"name":"append_to","qualname":"<Vec<u8> as encoding::sealed::BytesAdapter>::append_to","value":"fn append_to<B, '_, '_>(&'_ Self, &'_ mut B) where B: BufMut","parent":{"krate":0,"index":358},"children":[],"decl_id":{"krate":0,"index":362},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":379},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49437,"byte_end":49442,"line_start":946,"line_end":946,"column_start":9,"column_end":14},"name":"bytes","qualname":"::encoding::bytes","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":787},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":784}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":381},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49475,"byte_end":49481,"line_start":949,"line_end":949,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::bytes::encode","value":"fn encode<A, B, '_, '_>(u32, &'_ A, &'_ mut B) where A: BytesAdapter,\nB: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49735,"byte_end":49740,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::bytes::merge","value":"fn merge<A, B, '_, '_>(WireType, &'_ mut A, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where A: BytesAdapter, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":390},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":53316,"byte_end":53323,"line_start":1055,"line_end":1055,"column_start":9,"column_end":16},"name":"message","qualname":"::encoding::message","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":53356,"byte_end":53362,"line_start":1058,"line_end":1058,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::message::encode","value":"fn encode<M, B, '_, '_>(u32, &'_ M, &'_ mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":53614,"byte_end":53619,"line_start":1068,"line_end":1068,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::message::merge","value":"fn merge<M, B, '_, '_>(WireType, &'_ mut M, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":54198,"byte_end":54213,"line_start":1091,"line_end":1091,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::message::encode_repeated","value":"fn encode_repeated<M, B, '_, '_>(u32, &'_ [M], &'_ mut B) where M: Message,\nB: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":54407,"byte_end":54421,"line_start":1101,"line_end":1101,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::message::merge_repeated","value":"fn merge_repeated<M, B, '_,\n'_>(WireType, &'_ mut Vec<M>, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message + Default, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":54871,"byte_end":54882,"line_start":1119,"line_end":1119,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::message::encoded_len","value":"fn encoded_len<M, '_>(u32, &'_ M) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":54850,"byte_end":54859,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":55079,"byte_end":55099,"line_start":1128,"line_end":1128,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::message::encoded_len_repeated","value":"fn encoded_len_repeated<M, '_>(u32, &'_ [M]) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":55058,"byte_end":55067,"line_start":1127,"line_end":1127,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":410},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":55416,"byte_end":55421,"line_start":1141,"line_end":1141,"column_start":9,"column_end":14},"name":"group","qualname":"::encoding::group","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":55454,"byte_end":55460,"line_start":1144,"line_end":1144,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::group::encode","value":"fn encode<M, B, '_, '_>(u32, &'_ M, &'_ mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":55703,"byte_end":55708,"line_start":1154,"line_end":1154,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::group::merge","value":"fn merge<M, B, '_, '_>(u32, WireType, &'_ mut M, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":56441,"byte_end":56456,"line_start":1181,"line_end":1181,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::group::encode_repeated","value":"fn encode_repeated<M, B, '_, '_>(u32, &'_ [M], &'_ mut B) where M: Message,\nB: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":56650,"byte_end":56664,"line_start":1191,"line_end":1191,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::group::merge_repeated","value":"fn merge_repeated<M, B, '_,\n'_>(u32, WireType, &'_ mut Vec<M>, &'_ mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message + Default, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":424},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":57127,"byte_end":57138,"line_start":1210,"line_end":1210,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::group::encoded_len","value":"fn encoded_len<M, '_>(u32, &'_ M) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":57106,"byte_end":57115,"line_start":1209,"line_end":1209,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":57283,"byte_end":57303,"line_start":1218,"line_end":1218,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::group::encoded_len_repeated","value":"fn encoded_len_repeated<M, '_>(u32, &'_ [M]) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":57262,"byte_end":57271,"line_start":1217,"line_end":1217,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":429},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":63917,"byte_end":63925,"line_start":1414,"line_end":1414,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::encoding::hash_map","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":802},{"krate":0,"index":808},{"krate":0,"index":813},{"krate":0,"index":821},{"krate":0,"index":828}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":63885,"byte_end":63908,"line_start":1413,"line_end":1413,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":433},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":63993,"byte_end":64002,"line_start":1419,"line_end":1419,"column_start":9,"column_end":18},"name":"btree_map","qualname":"::encoding::btree_map","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":846},{"krate":0,"index":852},{"krate":0,"index":857},{"krate":0,"index":865},{"krate":0,"index":872}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":462},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":983,"byte_end":1006,"line_start":37,"line_end":37,"column_start":8,"column_end":31},"name":"encode_length_delimiter","qualname":"::encode_length_delimiter","value":"fn encode_length_delimiter<B, '_>(usize, &'_ mut B) -> Result<(), EncodeError>\nwhere B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes a length delimiter to the buffer.","sig":null,"attributes":[{"value":"/ Encodes a length delimiter to the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":758,"byte_end":803,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":804,"byte_end":807,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ See [Message.encode_length_delimited] for more info.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":808,"byte_end":864,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":865,"byte_end":868,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity to encode the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":869,"byte_end":960,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ delimiter.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":961,"byte_end":975,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1589,"byte_end":1609,"line_start":55,"line_end":55,"column_start":8,"column_end":28},"name":"length_delimiter_len","qualname":"::length_delimiter_len","value":"fn length_delimiter_len(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of a length delimiter.","sig":null,"attributes":[{"value":"/ Returns the encoded length of a length delimiter.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1349,"byte_end":1402,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1403,"byte_end":1406,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Applications may use this method to ensure sufficient buffer capacity before calling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1407,"byte_end":1495,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/ `encode_length_delimiter`. The returned size will be between 1 and 10, inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1496,"byte_end":1581,"line_start":54,"line_end":54,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":465},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":2264,"byte_end":2287,"line_start":70,"line_end":70,"column_start":8,"column_end":31},"name":"decode_length_delimiter","qualname":"::decode_length_delimiter","value":"fn decode_length_delimiter<B>(B) -> Result<usize, DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a length delimiter from the buffer.","sig":null,"attributes":[{"value":"/ Decodes a length delimiter from the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1677,"byte_end":1724,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1725,"byte_end":1728,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This method allows the length delimiter to be decoded independently of the message, when the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1729,"byte_end":1825,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"/ message is encoded with [Message.encode_length_delimited].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1826,"byte_end":1888,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An error may be returned in two cases:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1893,"byte_end":1935,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1936,"byte_end":1939,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * If the supplied buffer contains fewer than 10 bytes, then an error indicates that more","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":1940,"byte_end":2033,"line_start":66,"line_end":66,"column_start":1,"column_end":94}},{"value":"/    input is required to decode the full delimiter.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":2034,"byte_end":2088,"line_start":67,"line_end":67,"column_start":1,"column_end":55}},{"value":"/  * If the supplied buffer contains more than 10 bytes, then the buffer contains an invalid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":2089,"byte_end":2183,"line_start":68,"line_end":68,"column_start":1,"column_end":95}},{"value":"/    delimiter, and typically the buffer should be considered corrupt.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":2184,"byte_end":2256,"line_start":69,"line_end":69,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3818,"byte_end":3829,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4579,"byte_end":4590,"line_start":53,"line_end":53,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4853,"byte_end":4864,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5210,"byte_end":5221,"line_start":73,"line_end":73,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5286,"byte_end":5291,"line_start":76,"line_end":76,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5759,"byte_end":5770,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6290,"byte_end":6301,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6619,"byte_end":6630,"line_start":124,"line_end":124,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6695,"byte_end":6700,"line_start":127,"line_end":127,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11417,"byte_end":11420,"line_start":165,"line_end":165,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18143,"byte_end":18149,"line_start":288,"line_end":288,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18937,"byte_end":18940,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19729,"byte_end":19734,"line_start":364,"line_end":364,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27500,"byte_end":27513,"line_start":206,"line_end":206,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27665,"byte_end":27678,"line_start":215,"line_end":215,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29805,"byte_end":29813,"line_start":281,"line_end":281,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":46542,"byte_end":46551,"line_start":829,"line_end":829,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48650,"byte_end":48655,"line_start":900,"line_end":900,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48690,"byte_end":48695,"line_start":902,"line_end":902,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49036,"byte_end":49039,"line_start":922,"line_end":922,"column_start":23,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49078,"byte_end":49081,"line_start":924,"line_end":924,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/lib.rs","byte_start":370,"byte_end":378,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":253}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":3818,"byte_end":3829,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4579,"byte_end":4590,"line_start":53,"line_end":53,"column_start":21,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":4853,"byte_end":4864,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5210,"byte_end":5221,"line_start":73,"line_end":73,"column_start":28,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5286,"byte_end":5291,"line_start":76,"line_end":76,"column_start":37,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":4084},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":5759,"byte_end":5770,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6290,"byte_end":6301,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6619,"byte_end":6630,"line_start":124,"line_end":124,"column_start":28,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":492},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/error.rs","byte_start":6695,"byte_end":6700,"line_start":127,"line_end":127,"column_start":37,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":4084},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7156,"byte_end":7161,"line_start":16,"line_end":16,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":10295},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7164,"byte_end":7168,"line_start":16,"line_end":16,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":7171,"byte_end":7175,"line_start":16,"line_end":16,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/message.rs","byte_start":11417,"byte_end":11420,"line_start":165,"line_end":165,"column_start":21,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18143,"byte_end":18149,"line_start":288,"line_end":288,"column_start":18,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":18937,"byte_end":18940,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":7780},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/types.rs","byte_start":19729,"byte_end":19734,"line_start":364,"line_end":364,"column_start":18,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":21,"index":557},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27500,"byte_end":27513,"line_start":206,"line_end":206,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":27665,"byte_end":27678,"line_start":215,"line_end":215,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":29805,"byte_end":29813,"line_start":281,"line_end":281,"column_start":23,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":46542,"byte_end":46551,"line_start":829,"line_end":829,"column_start":31,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48083,"byte_end":48095,"line_start":876,"line_end":876,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":358},"to":{"krate":0,"index":349}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48172,"byte_end":48179,"line_start":881,"line_end":881,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3241},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48182,"byte_end":48187,"line_start":881,"line_end":881,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3268},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48650,"byte_end":48655,"line_start":900,"line_end":900,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":21,"index":557},"to":{"krate":0,"index":349}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":48690,"byte_end":48695,"line_start":902,"line_end":902,"column_start":31,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":21,"index":557},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49036,"byte_end":49039,"line_start":922,"line_end":922,"column_start":23,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":7780},"to":{"krate":0,"index":349}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.11.9/src/encoding.rs","byte_start":49078,"byte_end":49081,"line_start":924,"line_end":924,"column_start":31,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":7780},"to":{"krate":0,"index":358}}]}