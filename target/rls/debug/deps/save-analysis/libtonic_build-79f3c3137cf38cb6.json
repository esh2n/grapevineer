{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tonic_build","--edition=2018","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"prost\"","--cfg","feature=\"prost-build\"","--cfg","feature=\"transport\"","-C","metadata=79f3c3137cf38cb6","-C","extra-filename=-79f3c3137cf38cb6","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","prettyplease=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprettyplease-011efae0ea852e5c.rmeta","--extern","proc_macro2=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libproc_macro2-b53f32ff4646ec83.rmeta","--extern","prost_build=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprost_build-7de9be0669a2f854.rmeta","--extern","quote=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libquote-a062fc8151fa819f.rmeta","--extern","syn=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libsyn-51477775c022a798.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtonic_build-79f3c3137cf38cb6.rmeta"},"prelude":{"crate_id":{"name":"tonic_build","disambiguator":[2303596652614608463,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":20,"id":{"name":"proc_macro2","disambiguator":[6020735382977624748,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":21,"id":{"name":"proc_macro","disambiguator":[13036438534682667802,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":22,"id":{"name":"unicode_ident","disambiguator":[8937285285672764307,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","num":23,"id":{"name":"quote","disambiguator":[10854494316884780302,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":24,"id":{"name":"prost_build","disambiguator":[16256870405236833695,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":25,"id":{"name":"log","disambiguator":[12996859001740394752,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":26,"id":{"name":"cfg_if","disambiguator":[8037730387315135600,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":27,"id":{"name":"prost","disambiguator":[15285855434092549117,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":28,"id":{"name":"prost_derive","disambiguator":[13805543166489788830,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":29,"id":{"name":"bytes","disambiguator":[5441976563651757446,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":30,"id":{"name":"prost_types","disambiguator":[10990449130273745888,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":31,"id":{"name":"lazy_static","disambiguator":[8643996286395100790,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":32,"id":{"name":"regex","disambiguator":[12674391323214087994,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":33,"id":{"name":"regex_syntax","disambiguator":[18023479015477325225,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":34,"id":{"name":"itertools","disambiguator":[16837897858001478330,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":35,"id":{"name":"either","disambiguator":[10070275459274132918,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":36,"id":{"name":"multimap","disambiguator":[17394251580864045150,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":37,"id":{"name":"heck","disambiguator":[1283571819124443844,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":38,"id":{"name":"petgraph","disambiguator":[18304979700700949882,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":39,"id":{"name":"fixedbitset","disambiguator":[16214142956683534141,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":40,"id":{"name":"indexmap","disambiguator":[6638787429486228540,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":41,"id":{"name":"hashbrown","disambiguator":[13571119530625034222,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":42,"id":{"name":"tempfile","disambiguator":[4762898974732045753,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":43,"id":{"name":"rustix","disambiguator":[7176966054947747419,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":44,"id":{"name":"io_lifetimes","disambiguator":[2620908562927119942,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":45,"id":{"name":"libc","disambiguator":[3878213621847001735,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":46,"id":{"name":"errno","disambiguator":[13958884806770067057,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":47,"id":{"name":"bitflags","disambiguator":[9570617667018167498,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":48,"id":{"name":"fastrand","disambiguator":[14331709394493301451,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","num":49,"id":{"name":"syn","disambiguator":[5467384931740630450,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":50,"id":{"name":"prettyplease","disambiguator":[14406834227118955699,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","num":51,"id":{"name":"which","disambiguator":[14847629524009924128,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":0,"byte_end":9814,"line_start":1,"line_end":330,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2697,"byte_end":2711,"line_start":88,"line_end":88,"column_start":17,"column_end":31},"alias_span":null,"name":"compile_protos","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2713,"byte_end":2722,"line_start":88,"line_end":88,"column_start":33,"column_end":42},"alias_span":null,"name":"configure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2724,"byte_end":2731,"line_start":88,"line_end":88,"column_start":44,"column_end":51},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2895,"byte_end":2909,"line_start":98,"line_end":98,"column_start":19,"column_end":33},"alias_span":null,"name":"CodeGenBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":0,"byte_end":9814,"line_start":1,"line_end":330,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":246},{"krate":0,"index":292},{"krate":0,"index":355},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":393},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":402},{"krate":0,"index":411},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421}],"decl_id":null,"docs":" `tonic-build` compiles `proto` files via `prost` and generates service stubs\n and proto definitiones for use with `tonic`.","sig":null,"attributes":[{"value":"/ `tonic-build` compiles `proto` files via `prost` and generates service stubs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ and proto definitiones for use with `tonic`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":81,"byte_end":129,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":130,"byte_end":133,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Feature flags","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":134,"byte_end":153,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":154,"byte_end":157,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `cleanup-markdown`: Enables cleaning up documentation from the generated code. Useful","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":158,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ when documentation of the generated code fails `cargo test --doc` for example.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":250,"byte_end":332,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/ - `prost`: Enables usage of prost generator (enabled by default).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":333,"byte_end":402,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ - `transport`: Enables generation of `connect` method using `tonic::transport::Channel`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":403,"byte_end":494,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/ (enabled by default).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":495,"byte_end":520,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":521,"byte_end":524,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Required dependencies","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":525,"byte_end":552,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":553,"byte_end":556,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":557,"byte_end":568,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":569,"byte_end":587,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ tonic = <tonic-version>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":588,"byte_end":615,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ prost = <prost-version>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":616,"byte_end":643,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":644,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [build-dependencies]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":648,"byte_end":672,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ tonic-build = <tonic-version>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":673,"byte_end":706,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":707,"byte_end":714,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":715,"byte_end":718,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":719,"byte_end":733,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ Simple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":734,"byte_end":744,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":745,"byte_end":748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":749,"byte_end":767,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":768,"byte_end":825,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     tonic_build::compile_protos(\"proto/service.proto\")?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":826,"byte_end":886,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":887,"byte_end":901,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":902,"byte_end":907,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":908,"byte_end":915,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":916,"byte_end":919,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Configuration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":920,"byte_end":937,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":938,"byte_end":941,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":942,"byte_end":960,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":961,"byte_end":1018,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/    tonic_build::configure()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1019,"byte_end":1050,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/         .build_server(false)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1051,"byte_end":1083,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/         .compile(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1084,"byte_end":1105,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/             &[\"proto/helloworld/helloworld.proto\"],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1106,"byte_end":1161,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/             &[\"proto/helloworld\"],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1162,"byte_end":1200,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/         )?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1201,"byte_end":1216,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1217,"byte_end":1230,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1231,"byte_end":1236,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1237,"byte_end":1243,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1244,"byte_end":1247,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## NixOS related hints","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1248,"byte_end":1274,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1275,"byte_end":1278,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ On NixOS, it is better to specify the location of `PROTOC` and `PROTOC_INCLUDE` explicitly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1279,"byte_end":1374,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1379,"byte_end":1390,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ $ export PROTOBUF_LOCATION=$(nix-env -q protobuf --out-path --no-name)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1391,"byte_end":1465,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ $ export PROTOC=$PROTOBUF_LOCATION/bin/protoc","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1466,"byte_end":1515,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/ $ export PROTOC_INCLUDE=$PROTOBUF_LOCATION/include","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1516,"byte_end":1570,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ $ cargo build","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1571,"byte_end":1588,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1589,"byte_end":1596,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1597,"byte_end":1600,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The reason being that if `prost_build::compile_protos` fails to generate the resultant package,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1601,"byte_end":1700,"line_start":58,"line_end":58,"column_start":1,"column_end":100}},{"value":"/ the failure is not obvious until the `include!(concat!(env!(\"OUT_DIR\"), \"/resultant.rs\"));`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1701,"byte_end":1796,"line_start":59,"line_end":59,"column_start":1,"column_end":96}},{"value":"/ fails with `No such file or directory` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1797,"byte_end":1846,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1848,"byte_end":1875,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":1876,"byte_end":1982,"line_start":63,"line_end":68,"column_start":1,"column_end":3}},{"value":"deny(rustdoc :: broken_intra_doc_links)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2101,"byte_end":2142,"line_start":72,"line_end":72,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10195,"byte_end":10204,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"configure","qualname":"::prost::configure","value":"fn configure() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure `tonic-build` code generation.","sig":null,"attributes":[{"value":"/ Configure `tonic-build` code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10067,"byte_end":10111,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10112,"byte_end":10115,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Use [`compile_protos`] instead if you don't need to tweak anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10116,"byte_end":10187,"line_start":16,"line_end":16,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11120,"byte_end":11134,"line_start":43,"line_end":43,"column_start":8,"column_end":22},"name":"compile_protos","qualname":"::prost::compile_protos","value":"fn compile_protos<impl AsRef<Path>>(impl AsRef<Path>) -> io::Result<()> where\nimpl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Simple `.proto` compiling. Use [`configure`] instead if you need more options.","sig":null,"attributes":[{"value":"/ Simple `.proto` compiling. Use [`configure`] instead if you need more options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10886,"byte_end":10968,"line_start":39,"line_end":39,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10969,"byte_end":10972,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The include directory will be the parent folder of the specified path.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":10973,"byte_end":11047,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ The package name will be the filename without the extension.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11048,"byte_end":11112,"line_start":42,"line_end":42,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11726,"byte_end":11730,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"name","qualname":"<Service as Service>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":388},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11781,"byte_end":11788,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"package","qualname":"<Service as Service>::package","value":"fn package<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":389},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11842,"byte_end":11852,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"identifier","qualname":"<Service as Service>::identifier","value":"fn identifier<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":390},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11909,"byte_end":11916,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"comment","qualname":"<Service as Service>::comment","value":"fn comment<'_>(&'_ Self) -> &'_ [Self::Comment]","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":392},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11995,"byte_end":12002,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"methods","qualname":"<Service as Service>::methods","value":"fn methods<'_>(&'_ Self) -> &'_ [Self::Method]","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":391},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12133,"byte_end":12137,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"name","qualname":"<Method as Method>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12188,"byte_end":12198,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"identifier","qualname":"<Method as Method>::identifier","value":"fn identifier<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12255,"byte_end":12265,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"codec_path","qualname":"<Method as Method>::codec_path","value":"fn codec_path<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":397},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12322,"byte_end":12338,"line_start":101,"line_end":101,"column_start":8,"column_end":24},"name":"client_streaming","qualname":"<Method as Method>::client_streaming","value":"fn client_streaming<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12400,"byte_end":12416,"line_start":105,"line_end":105,"column_start":8,"column_end":24},"name":"server_streaming","qualname":"<Method as Method>::server_streaming","value":"fn server_streaming<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":399},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12478,"byte_end":12485,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"comment","qualname":"<Method as Method>::comment","value":"fn comment<'_>(&'_ Self) -> &'_ [Self::Comment]","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12564,"byte_end":12585,"line_start":113,"line_end":113,"column_start":8,"column_end":29},"name":"request_response_name","qualname":"<Method as Method>::request_response_name","value":"fn request_response_name<'_, '_>(&'_ Self, &'_ str, bool)\n-> (TokenStream, TokenStream)","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":16227,"byte_end":16234,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"Builder","qualname":"::prost::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" Service generator builder.\n","sig":null,"attributes":[{"value":"/ Service generator builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":16161,"byte_end":16191,"line_start":218,"line_end":218,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17072,"byte_end":17084,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"build_client","qualname":"<Builder>::build_client","value":"fn build_client(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable gRPC client code generation.\n","sig":null,"attributes":[{"value":"/ Enable or disable gRPC client code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17010,"byte_end":17060,"line_start":242,"line_end":242,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17241,"byte_end":17253,"line_start":249,"line_end":249,"column_start":12,"column_end":24},"name":"build_server","qualname":"<Builder>::build_server","value":"fn build_server(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable gRPC server code generation.\n","sig":null,"attributes":[{"value":"/ Enable or disable gRPC server code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17179,"byte_end":17229,"line_start":248,"line_end":248,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17538,"byte_end":17553,"line_start":258,"line_end":258,"column_start":12,"column_end":27},"name":"build_transport","qualname":"<Builder>::build_transport","value":"fn build_transport(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable generated clients and servers to have built-in tonic\n transport features.","sig":null,"attributes":[{"value":"/ Enable or disable generated clients and servers to have built-in tonic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17348,"byte_end":17422,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ transport features.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17427,"byte_end":17450,"line_start":255,"line_end":255,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17455,"byte_end":17458,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ When the `transport` feature is disabled this does nothing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17463,"byte_end":17526,"line_start":257,"line_end":257,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17834,"byte_end":17858,"line_start":265,"line_end":265,"column_start":12,"column_end":36},"name":"file_descriptor_set_path","qualname":"<Builder>::file_descriptor_set_path","value":"fn file_descriptor_set_path<impl AsRef<Path>>(Self, impl AsRef<Path>) -> Self\nwhere impl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Generate a file containing the encoded `prost_types::FileDescriptorSet` for protocol buffers\n modules. This is required for implementing gRPC Server Reflection.\n","sig":null,"attributes":[{"value":"/ Generate a file containing the encoded `prost_types::FileDescriptorSet` for protocol buffers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17651,"byte_end":17747,"line_start":263,"line_end":263,"column_start":5,"column_end":101}},{"value":"/ modules. This is required for implementing gRPC Server Reflection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":17752,"byte_end":17822,"line_start":264,"line_end":264,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18127,"byte_end":18134,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Builder>::out_dir","value":"fn out_dir<impl AsRef<Path>>(Self, impl AsRef<Path>) -> Self where\nimpl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory to generate code to.","sig":null,"attributes":[{"value":"/ Set the output directory to generate code to.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18002,"byte_end":18051,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18056,"byte_end":18059,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Defaults to the `OUT_DIR` environment variable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18064,"byte_end":18115,"line_start":272,"line_end":272,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18594,"byte_end":18605,"line_start":283,"line_end":283,"column_start":12,"column_end":23},"name":"extern_path","qualname":"<Builder>::extern_path","value":"fn extern_path<impl AsRef<str>,\nimpl AsRef<str>>(Self, impl AsRef<str>, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>, impl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Declare externally provided Protobuf package or type.","sig":null,"attributes":[{"value":"/ Declare externally provided Protobuf package or type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18267,"byte_end":18324,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18329,"byte_end":18332,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Passed directly to `prost_build::Config.extern_path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18337,"byte_end":18394,"line_start":280,"line_end":280,"column_start":5,"column_end":62}},{"value":"/ Note that both the Protobuf path and the rust package paths should both be fully qualified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18399,"byte_end":18494,"line_start":281,"line_end":281,"column_start":5,"column_end":100}},{"value":"/ i.e. Protobuf paths should start with \".\" and rust paths should start with \"::\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18499,"byte_end":18582,"line_start":282,"line_end":282,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18996,"byte_end":19011,"line_start":294,"line_end":294,"column_start":12,"column_end":27},"name":"field_attribute","qualname":"<Builder>::field_attribute","value":"fn field_attribute<P, A>(Self, P, A) -> Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched messages, enums, and one-offs.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched messages, enums, and one-offs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18840,"byte_end":18910,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18915,"byte_end":18918,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Passed directly to `prost_build::Config.field_attribute`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":18923,"byte_end":18984,"line_start":293,"line_end":293,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19374,"byte_end":19388,"line_start":303,"line_end":303,"column_start":12,"column_end":26},"name":"type_attribute","qualname":"<Builder>::type_attribute","value":"fn type_attribute<P, A>(Self, P, A) -> Self where P: AsRef<str>, A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched messages, enums, and one-offs.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched messages, enums, and one-offs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19219,"byte_end":19289,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19294,"byte_end":19297,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Passed directly to `prost_build::Config.type_attribute`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19302,"byte_end":19362,"line_start":302,"line_end":302,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19690,"byte_end":19710,"line_start":310,"line_end":310,"column_start":12,"column_end":32},"name":"server_mod_attribute","qualname":"<Builder>::server_mod_attribute","value":"fn server_mod_attribute<P, A>(Self, P, A) -> Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched server `mod`s. Matches on the package name.\n","sig":null,"attributes":[{"value":"/ Add additional attribute to matched server `mod`s. Matches on the package name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19595,"byte_end":19678,"line_start":309,"line_end":309,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":20049,"byte_end":20065,"line_start":321,"line_end":321,"column_start":12,"column_end":28},"name":"server_attribute","qualname":"<Builder>::server_attribute","value":"fn server_attribute<P, A>(Self, P, A) -> Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched service servers. Matches on the service name.\n","sig":null,"attributes":[{"value":"/ Add additional attribute to matched service servers. Matches on the service name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":19952,"byte_end":20037,"line_start":320,"line_end":320,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":20374,"byte_end":20394,"line_start":328,"line_end":328,"column_start":12,"column_end":32},"name":"client_mod_attribute","qualname":"<Builder>::client_mod_attribute","value":"fn client_mod_attribute<P, A>(Self, P, A) -> Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched client `mod`s. Matches on the package name.\n","sig":null,"attributes":[{"value":"/ Add additional attribute to matched client `mod`s. Matches on the package name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":20279,"byte_end":20362,"line_start":327,"line_end":327,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":20733,"byte_end":20749,"line_start":339,"line_end":339,"column_start":12,"column_end":28},"name":"client_attribute","qualname":"<Builder>::client_attribute","value":"fn client_attribute<P, A>(Self, P, A) -> Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched service clients. Matches on the service name.\n","sig":null,"attributes":[{"value":"/ Add additional attribute to matched service clients. Matches on the service name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":20636,"byte_end":20721,"line_start":338,"line_end":338,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21211,"byte_end":21221,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"proto_path","qualname":"<Builder>::proto_path","value":"fn proto_path<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the path to where tonic will search for the Request/Response proto structs\n live relative to the module where you call `include_proto!`.","sig":null,"attributes":[{"value":"/ Set the path to where tonic will search for the Request/Response proto structs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":20963,"byte_end":21045,"line_start":345,"line_end":345,"column_start":5,"column_end":87}},{"value":"/ live relative to the module where you call `include_proto!`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21050,"byte_end":21114,"line_start":346,"line_end":346,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21119,"byte_end":21122,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This defaults to `super` since tonic will generate code in a module.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21127,"byte_end":21199,"line_start":348,"line_end":348,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21513,"byte_end":21523,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"protoc_arg","qualname":"<Builder>::protoc_arg","value":"fn protoc_arg<A>(Self, A) -> Self where A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure Prost `protoc_args` build arguments.","sig":null,"attributes":[{"value":"/ Configure Prost `protoc_args` build arguments.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21354,"byte_end":21404,"line_start":354,"line_end":354,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21409,"byte_end":21412,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Note: Enabling `--experimental_allow_proto3_optional` requires protobuf >= 3.12.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21417,"byte_end":21501,"line_start":356,"line_end":356,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21701,"byte_end":21717,"line_start":363,"line_end":363,"column_start":12,"column_end":28},"name":"disable_comments","qualname":"<Builder>::disable_comments","value":"fn disable_comments<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Disable service and rpc comments emission.\n","sig":null,"attributes":[{"value":"/ Disable service and rpc comments emission.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21643,"byte_end":21689,"line_start":362,"line_end":362,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22064,"byte_end":22088,"line_start":371,"line_end":371,"column_start":12,"column_end":36},"name":"disable_package_emission","qualname":"<Builder>::disable_package_emission","value":"fn disable_package_emission(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Emits GRPC endpoints with no attached package. Effectively ignores protofile package declaration from grpc context.","sig":null,"attributes":[{"value":"/ Emits GRPC endpoints with no attached package. Effectively ignores protofile package declaration from grpc context.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21850,"byte_end":21969,"line_start":368,"line_end":368,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21974,"byte_end":21977,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ This effectively sets prost's exported package to an empty string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":21982,"byte_end":22052,"line_start":370,"line_end":370,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22389,"byte_end":22413,"line_start":380,"line_end":380,"column_start":12,"column_end":36},"name":"compile_well_known_types","qualname":"<Builder>::compile_well_known_types","value":"fn compile_well_known_types(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable directing Prost to compile well-known protobuf types instead\n of using the already-compiled versions available in the `prost-types` crate.","sig":null,"attributes":[{"value":"/ Enable or disable directing Prost to compile well-known protobuf types instead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22168,"byte_end":22250,"line_start":376,"line_end":376,"column_start":5,"column_end":87}},{"value":"/ of using the already-compiled versions available in the `prost-types` crate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22255,"byte_end":22335,"line_start":377,"line_end":377,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22340,"byte_end":22343,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This defaults to `false`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22348,"byte_end":22377,"line_start":379,"line_end":379,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23008,"byte_end":23020,"line_start":391,"line_end":391,"column_start":12,"column_end":24},"name":"include_file","qualname":"<Builder>::include_file","value":"fn include_file<impl AsRef<Path>>(Self, impl AsRef<Path>) -> Self where\nimpl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Configures the optional module filename for easy inclusion of all generated Rust files","sig":null,"attributes":[{"value":"/ Configures the optional module filename for easy inclusion of all generated Rust files","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22556,"byte_end":22646,"line_start":385,"line_end":385,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22651,"byte_end":22654,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If set, generates a file (inside the `OUT_DIR` or `out_dir()` as appropriate) which contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22659,"byte_end":22755,"line_start":387,"line_end":387,"column_start":5,"column_end":101}},{"value":"/ a set of `pub mod XXX` statements combining to load all Rust files generated.  This can allow","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22760,"byte_end":22857,"line_start":388,"line_end":388,"column_start":5,"column_end":102}},{"value":"/ for a shortcut where multiple related proto files have been compiled together resulting in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22862,"byte_end":22956,"line_start":389,"line_end":389,"column_start":5,"column_end":99}},{"value":"/ a semi-complex set of includes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":22961,"byte_end":22996,"line_start":390,"line_end":390,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23997,"byte_end":24018,"line_start":409,"line_end":409,"column_start":12,"column_end":33},"name":"emit_rerun_if_changed","qualname":"<Builder>::emit_rerun_if_changed","value":"fn emit_rerun_if_changed(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable emitting\n [`cargo:rerun-if-changed=PATH`](https://doc.rust-lang.org/cargo/reference/build-scripts.html#rerun-if-changed)\n instructions for Cargo.","sig":null,"attributes":[{"value":"/ Enable or disable emitting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23152,"byte_end":23182,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ [`cargo:rerun-if-changed=PATH`](https://doc.rust-lang.org/cargo/reference/build-scripts.html#rerun-if-changed)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23187,"byte_end":23301,"line_start":397,"line_end":397,"column_start":5,"column_end":119}},{"value":"/ instructions for Cargo.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23306,"byte_end":23333,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23338,"byte_end":23341,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ If set, writes instructions to `stdout` for Cargo so that it understands","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23346,"byte_end":23422,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ when to rerun the build script. By default, this setting is enabled if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23427,"byte_end":23501,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ the `CARGO` environment variable is set. The `CARGO` environment","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23506,"byte_end":23574,"line_start":402,"line_end":402,"column_start":5,"column_end":73}},{"value":"/ variable is set by Cargo for build scripts. Therefore, this setting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23579,"byte_end":23650,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/ should be enabled automatically when run from a build script. However,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23655,"byte_end":23729,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ the method of detection is not completely reliable since the `CARGO`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23734,"byte_end":23806,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/ environment variable can have been set by anything else. If writing the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23811,"byte_end":23886,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ instructions to `stdout` is undesireable, you can disable this setting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23891,"byte_end":23965,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/ explicitly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":23970,"byte_end":23985,"line_start":408,"line_end":408,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":24191,"byte_end":24198,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"compile","qualname":"<Builder>::compile","value":"fn compile<'_, '_, impl AsRef<Path>,\nimpl AsRef<Path>>(Self, &'_ [impl AsRef<Path>], &'_ [impl AsRef<Path>])\n-> io::Result<()> where impl AsRef<Path>: AsRef<Path>,\nimpl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Compile the .proto files and execute code generation.\n","sig":null,"attributes":[{"value":"/ Compile the .proto files and execute code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":24122,"byte_end":24179,"line_start":414,"line_end":414,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":24507,"byte_end":24526,"line_start":425,"line_end":425,"column_start":12,"column_end":31},"name":"compile_with_config","qualname":"<Builder>::compile_with_config","value":"fn compile_with_config<'_, '_, impl AsRef<Path>,\nimpl AsRef<Path>>(Self, Config, &'_ [impl AsRef<Path>],\n&'_ [impl AsRef<Path>]) -> io::Result<()> where impl AsRef<Path>: AsRef<Path>,\nimpl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Compile the .proto files and execute code generation using a\n custom `prost_build::Config`.\n","sig":null,"attributes":[{"value":"/ Compile the .proto files and execute code generation using a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":24393,"byte_end":24457,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/ custom `prost_build::Config`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":24462,"byte_end":24495,"line_start":424,"line_end":424,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":26514,"byte_end":26531,"line_start":483,"line_end":483,"column_start":12,"column_end":29},"name":"service_generator","qualname":"<Builder>::service_generator","value":"fn service_generator(Self) -> Box<dyn prost_build::ServiceGenerator>","parent":null,"children":[],"decl_id":null,"docs":" Turn the builder into a `ServiceGenerator` ready to be passed to `prost-build`s\n `Config::service_generator`.\n","sig":null,"attributes":[{"value":"/ Turn the builder into a `ServiceGenerator` ready to be passed to `prost-build`s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":26382,"byte_end":26465,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/ `Config::service_generator`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":26470,"byte_end":26502,"line_start":482,"line_end":482,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":162},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"manual","qualname":"::manual","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":444},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":183},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":460},{"krate":0,"index":469},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":471},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":213},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":236},{"krate":0,"index":238}],"decl_id":null,"docs":" This module provides utilities for generating `tonic` service stubs and clients\n purely in Rust without the need of `proto` files. It also enables you to set a custom `Codec`\n if you want to use a custom serialization format other than `protobuf`.","sig":null,"attributes":[{"value":"/ This module provides utilities for generating `tonic` service stubs and clients","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26637,"byte_end":26720,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/ purely in Rust without the need of `proto` files. It also enables you to set a custom `Codec`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26721,"byte_end":26818,"line_start":2,"line_end":2,"column_start":1,"column_end":98}},{"value":"/ if you want to use a custom serialization format other than `protobuf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26819,"byte_end":26894,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26895,"byte_end":26898,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26899,"byte_end":26912,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26913,"byte_end":26916,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26917,"byte_end":26935,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26936,"byte_end":26993,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/     let greeter_service = tonic_build::manual::Service::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":26994,"byte_end":27063,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/         .name(\"Greeter\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27064,"byte_end":27092,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/         .package(\"helloworld\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27093,"byte_end":27127,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/         .method(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27128,"byte_end":27148,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/             tonic_build::manual::Method::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27149,"byte_end":27203,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/                 .name(\"say_hello\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27204,"byte_end":27242,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/                 .route_name(\"SayHello\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27243,"byte_end":27286,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/                 // Provide the path to the Request type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27287,"byte_end":27346,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/                 .input_type(\"crate::HelloRequest\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27347,"byte_end":27401,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/                 // Provide the path to the Response type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27402,"byte_end":27462,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/                 .output_type(\"super::HelloResponse\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27463,"byte_end":27519,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/                 // Provide the path to the Codec to use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27520,"byte_end":27579,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/                 .codec_path(\"crate::JsonCodec\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27580,"byte_end":27631,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/                 .build(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27632,"byte_end":27661,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/         )","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27662,"byte_end":27675,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/         .build();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27676,"byte_end":27697,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27698,"byte_end":27701,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     tonic_build::manual::Builder::new().compile(&[greeter_service]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27702,"byte_end":27774,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27775,"byte_end":27789,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27790,"byte_end":27795,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27796,"byte_end":27803,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28384,"byte_end":28398,"line_start":57,"line_end":57,"column_start":12,"column_end":26},"name":"ServiceBuilder","qualname":"::manual::ServiceBuilder","value":"ServiceBuilder {  }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"decl_id":null,"docs":" Service builder.","sig":null,"attributes":[{"value":"/ Service builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27944,"byte_end":27964,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27965,"byte_end":27968,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This builder can be used to manually define a gRPC service in rust code without the use of a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":27969,"byte_end":28065,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"/ .proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28066,"byte_end":28082,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28083,"byte_end":28086,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28087,"byte_end":28100,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28101,"byte_end":28104,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28105,"byte_end":28112,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use tonic_build::manual::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28113,"byte_end":28152,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/ let greeter_service = Service::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28153,"byte_end":28197,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/     .name(\"Greeter\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28198,"byte_end":28222,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/     .package(\"helloworld\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28223,"byte_end":28253,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/     // Add various methods to the service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28254,"byte_end":28299,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/     // .method()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28300,"byte_end":28320,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/     .build();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28321,"byte_end":28338,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28339,"byte_end":28346,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28992,"byte_end":28996,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"name","qualname":"<ServiceBuilder>::name","value":"fn name<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the name for this Service.","sig":null,"attributes":[{"value":"/ Set the name for this Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28696,"byte_end":28730,"line_start":69,"line_end":69,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28735,"byte_end":28738,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This value will be used both as the base for the generated rust types and service trait as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28743,"byte_end":28837,"line_start":71,"line_end":71,"column_start":5,"column_end":99}},{"value":"/ well as part of the route for calling this service. Routes have the form:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28842,"byte_end":28919,"line_start":72,"line_end":72,"column_start":5,"column_end":82}},{"value":"/ `/<package_name>.<service_name>/<method_route_name>`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28924,"byte_end":28980,"line_start":73,"line_end":73,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29342,"byte_end":29349,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"package","qualname":"<ServiceBuilder>::package","value":"fn package<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the package this Service is part of.","sig":null,"attributes":[{"value":"/ Set the package this Service is part of.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29116,"byte_end":29160,"line_start":79,"line_end":79,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29165,"byte_end":29168,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This value will be used as part of the route for calling this service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29173,"byte_end":29247,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ Routes have the form: `/<package_name>.<service_name>/<method_route_name>`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29252,"byte_end":29330,"line_start":82,"line_end":82,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29573,"byte_end":29580,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"comment","qualname":"<ServiceBuilder>::comment","value":"fn comment<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add a comment string that should be included as a doc comment for this Service.\n","sig":null,"attributes":[{"value":"/ Add a comment string that should be included as a doc comment for this Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29478,"byte_end":29561,"line_start":88,"line_end":88,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29754,"byte_end":29760,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"method","qualname":"<ServiceBuilder>::method","value":"fn method(Self, Method) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a Method to this Service.\n","sig":null,"attributes":[{"value":"/ Adds a Method to this Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29708,"byte_end":29742,"line_start":94,"line_end":94,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29947,"byte_end":29952,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"build","qualname":"<ServiceBuilder>::build","value":"fn build(Self) -> Service","parent":null,"children":[],"decl_id":null,"docs":" Build a Service.","sig":null,"attributes":[{"value":"/ Build a Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29856,"byte_end":29876,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29881,"byte_end":29884,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Panics if `name` or `package` weren't set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":29889,"byte_end":29935,"line_start":102,"line_end":102,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30217,"byte_end":30224,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"Service","qualname":"::manual::Service","value":"Service {  }","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" A service descriptor.\n","sig":null,"attributes":[{"value":"/ A service descriptor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30163,"byte_end":30188,"line_start":113,"line_end":113,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30544,"byte_end":30551,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"builder","qualname":"<Service>::builder","value":"fn builder() -> ServiceBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ServiceBuilder`\n","sig":null,"attributes":[{"value":"/ Create a new `ServiceBuilder`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30499,"byte_end":30532,"line_start":127,"line_end":127,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30713,"byte_end":30717,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"name","qualname":"<Service as Service>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":388},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30768,"byte_end":30775,"line_start":142,"line_end":142,"column_start":8,"column_end":15},"name":"package","qualname":"<Service as Service>::package","value":"fn package<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":389},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30829,"byte_end":30839,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"identifier","qualname":"<Service as Service>::identifier","value":"fn identifier<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":390},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30890,"byte_end":30897,"line_start":150,"line_end":150,"column_start":8,"column_end":15},"name":"methods","qualname":"<Service as Service>::methods","value":"fn methods<'_>(&'_ Self) -> &'_ [Self::Method]","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":391},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30962,"byte_end":30969,"line_start":154,"line_end":154,"column_start":8,"column_end":15},"name":"comment","qualname":"<Service as Service>::comment","value":"fn comment<'_>(&'_ Self) -> &'_ [Self::Comment]","parent":{"krate":0,"index":385},"children":[],"decl_id":{"krate":0,"index":392},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":460},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31092,"byte_end":31098,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"Method","qualname":"::manual::Method","value":"Method {  }","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"decl_id":null,"docs":" A service method descriptor.\n","sig":null,"attributes":[{"value":"/ A service method descriptor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31031,"byte_end":31063,"line_start":159,"line_end":159,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31752,"byte_end":31759,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"builder","qualname":"<Method>::builder","value":"fn builder() -> MethodBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MethodBuilder`\n","sig":null,"attributes":[{"value":"/ Create a new `MethodBuilder`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31708,"byte_end":31740,"line_start":181,"line_end":181,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31890,"byte_end":31894,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"name","qualname":"<Method as Method>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31945,"byte_end":31955,"line_start":194,"line_end":194,"column_start":8,"column_end":18},"name":"identifier","qualname":"<Method as Method>::identifier","value":"fn identifier<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32012,"byte_end":32022,"line_start":198,"line_end":198,"column_start":8,"column_end":18},"name":"codec_path","qualname":"<Method as Method>::codec_path","value":"fn codec_path<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":397},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32079,"byte_end":32095,"line_start":202,"line_end":202,"column_start":8,"column_end":24},"name":"client_streaming","qualname":"<Method as Method>::client_streaming","value":"fn client_streaming<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32157,"byte_end":32173,"line_start":206,"line_end":206,"column_start":8,"column_end":24},"name":"server_streaming","qualname":"<Method as Method>::server_streaming","value":"fn server_streaming<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":399},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32235,"byte_end":32242,"line_start":210,"line_end":210,"column_start":8,"column_end":15},"name":"comment","qualname":"<Method as Method>::comment","value":"fn comment<'_>(&'_ Self) -> &'_ [Self::Comment]","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32309,"byte_end":32330,"line_start":214,"line_end":214,"column_start":8,"column_end":29},"name":"request_response_name","qualname":"<Method as Method>::request_response_name","value":"fn request_response_name<'_, '_>(&'_ Self, &'_ str, bool)\n-> (TokenStream, TokenStream)","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33443,"byte_end":33456,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"MethodBuilder","qualname":"::manual::MethodBuilder","value":"MethodBuilder {  }","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"decl_id":null,"docs":" Method builder.","sig":null,"attributes":[{"value":"/ Method builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32736,"byte_end":32755,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32756,"byte_end":32759,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ This builder can be used to manually define gRPC method, which can be added to a gRPC service,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32760,"byte_end":32858,"line_start":231,"line_end":231,"column_start":1,"column_end":99}},{"value":"/ in rust code without the use of a .proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32859,"byte_end":32909,"line_start":232,"line_end":232,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32910,"byte_end":32913,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32914,"byte_end":32927,"line_start":234,"line_end":234,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32928,"byte_end":32931,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32932,"byte_end":32939,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # use tonic_build::manual::Method;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32940,"byte_end":32978,"line_start":237,"line_end":237,"column_start":1,"column_end":39}},{"value":"/ let say_hello_method = Method::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":32979,"byte_end":33023,"line_start":238,"line_end":238,"column_start":1,"column_end":45}},{"value":"/     .name(\"say_hello\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33024,"byte_end":33050,"line_start":239,"line_end":239,"column_start":1,"column_end":27}},{"value":"/     .route_name(\"SayHello\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33051,"byte_end":33082,"line_start":240,"line_end":240,"column_start":1,"column_end":32}},{"value":"/     // Provide the path to the Request type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33083,"byte_end":33130,"line_start":241,"line_end":241,"column_start":1,"column_end":48}},{"value":"/     .input_type(\"crate::common::HelloRequest\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33131,"byte_end":33181,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/     // Provide the path to the Response type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33182,"byte_end":33230,"line_start":243,"line_end":243,"column_start":1,"column_end":49}},{"value":"/     .output_type(\"crate::common::HelloResponse\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33231,"byte_end":33283,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/     // Provide the path to the Codec to use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33284,"byte_end":33331,"line_start":245,"line_end":245,"column_start":1,"column_end":48}},{"value":"/     .codec_path(\"crate::common::JsonCodec\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33332,"byte_end":33379,"line_start":246,"line_end":246,"column_start":1,"column_end":48}},{"value":"/     .build();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33380,"byte_end":33397,"line_start":247,"line_end":247,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":33398,"byte_end":33405,"line_start":248,"line_end":248,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34318,"byte_end":34322,"line_start":275,"line_end":275,"column_start":12,"column_end":16},"name":"name","qualname":"<MethodBuilder>::name","value":"fn name<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the name for this Method.","sig":null,"attributes":[{"value":"/ Set the name for this Method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34113,"byte_end":34146,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34151,"byte_end":34154,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This value will be used for generating the client functions for calling this Method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34159,"byte_end":34247,"line_start":272,"line_end":272,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34252,"byte_end":34255,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Generally this is formatted in snake_case.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34260,"byte_end":34306,"line_start":274,"line_end":274,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34721,"byte_end":34731,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"route_name","qualname":"<MethodBuilder>::route_name","value":"fn route_name<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the route_name for this Method.","sig":null,"attributes":[{"value":"/ Set the route_name for this Method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34442,"byte_end":34481,"line_start":280,"line_end":280,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34486,"byte_end":34489,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This value will be used as part of the route for calling this method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34494,"byte_end":34567,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ Routes have the form: `/<package_name>.<service_name>/<method_route_name>`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34572,"byte_end":34650,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34655,"byte_end":34658,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Generally this is formatted in PascalCase.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34663,"byte_end":34709,"line_start":285,"line_end":285,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34963,"byte_end":34970,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"comment","qualname":"<MethodBuilder>::comment","value":"fn comment<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add a comment string that should be included as a doc comment for this Method.\n","sig":null,"attributes":[{"value":"/ Add a comment string that should be included as a doc comment for this Method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34869,"byte_end":34951,"line_start":291,"line_end":291,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35199,"byte_end":35209,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"input_type","qualname":"<MethodBuilder>::input_type","value":"fn input_type<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the path to the Rust type that should be use for the Request type of this method.\n","sig":null,"attributes":[{"value":"/ Set the path to the Rust type that should be use for the Request type of this method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35098,"byte_end":35187,"line_start":297,"line_end":297,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35449,"byte_end":35460,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"output_type","qualname":"<MethodBuilder>::output_type","value":"fn output_type<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the path to the Rust type that should be use for the Response type of this method.\n","sig":null,"attributes":[{"value":"/ Set the path to the Rust type that should be use for the Response type of this method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35347,"byte_end":35437,"line_start":303,"line_end":303,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35781,"byte_end":35791,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"codec_path","qualname":"<MethodBuilder>::codec_path","value":"fn codec_path<impl AsRef<str>>(Self, impl AsRef<str>) -> Self where\nimpl AsRef<str>: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the path to the Rust type that should be used as the `Codec` for this method.","sig":null,"attributes":[{"value":"/ Set the path to the Rust type that should be used as the `Codec` for this method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35601,"byte_end":35686,"line_start":309,"line_end":309,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35691,"byte_end":35694,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Currently the codegen assumes that this type implements `Default`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35699,"byte_end":35769,"line_start":311,"line_end":311,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36000,"byte_end":36016,"line_start":318,"line_end":318,"column_start":12,"column_end":28},"name":"client_streaming","qualname":"<MethodBuilder>::client_streaming","value":"fn client_streaming(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets if the Method request from the client is streamed.\n","sig":null,"attributes":[{"value":"/ Sets if the Method request from the client is streamed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":35929,"byte_end":35988,"line_start":317,"line_end":317,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36171,"byte_end":36187,"line_start":324,"line_end":324,"column_start":12,"column_end":28},"name":"server_streaming","qualname":"<MethodBuilder>::server_streaming","value":"fn server_streaming(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets if the Method response from the server is streamed.\n","sig":null,"attributes":[{"value":"/ Sets if the Method response from the server is streamed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36099,"byte_end":36159,"line_start":323,"line_end":323,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36406,"byte_end":36411,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"build","qualname":"<MethodBuilder>::build","value":"fn build(Self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" Build a Method","sig":null,"attributes":[{"value":"/ Build a Method","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36270,"byte_end":36288,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36293,"byte_end":36296,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Panics if `name`, `route_name`, `input_type`, `output_type`, or `codec_path` weren't set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36301,"byte_end":36394,"line_start":331,"line_end":331,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38635,"byte_end":38642,"line_start":407,"line_end":407,"column_start":12,"column_end":19},"name":"Builder","qualname":"::manual::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" Service generator builder.\n","sig":null,"attributes":[{"value":"/ Service generator builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38576,"byte_end":38606,"line_start":405,"line_end":405,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38788,"byte_end":38795,"line_start":416,"line_end":416,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39023,"byte_end":39026,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Builder\n","sig":null,"attributes":[{"value":"/ Create a new Builder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38987,"byte_end":39011,"line_start":427,"line_end":427,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39197,"byte_end":39209,"line_start":435,"line_end":435,"column_start":12,"column_end":24},"name":"build_client","qualname":"<Builder>::build_client","value":"fn build_client(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable gRPC client code generation.","sig":null,"attributes":[{"value":"/ Enable or disable gRPC client code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39074,"byte_end":39124,"line_start":432,"line_end":432,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39129,"byte_end":39132,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Defaults to enabling client code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39137,"byte_end":39185,"line_start":434,"line_end":434,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39427,"byte_end":39439,"line_start":443,"line_end":443,"column_start":12,"column_end":24},"name":"build_server","qualname":"<Builder>::build_server","value":"fn build_server(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable gRPC server code generation.","sig":null,"attributes":[{"value":"/ Enable or disable gRPC server code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39304,"byte_end":39354,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39359,"byte_end":39362,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Defaults to enabling server code generation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39367,"byte_end":39415,"line_start":442,"line_end":442,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39724,"byte_end":39739,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"build_transport","qualname":"<Builder>::build_transport","value":"fn build_transport(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable generated clients and servers to have built-in tonic\n transport features.","sig":null,"attributes":[{"value":"/ Enable or disable generated clients and servers to have built-in tonic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39534,"byte_end":39608,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ transport features.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39613,"byte_end":39636,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39641,"byte_end":39644,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When the `transport` feature is disabled this does nothing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39649,"byte_end":39712,"line_start":451,"line_end":451,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39962,"byte_end":39969,"line_start":460,"line_end":460,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Builder>::out_dir","value":"fn out_dir<impl AsRef<Path>>(Self, impl AsRef<Path>) -> Self where\nimpl AsRef<Path>: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory to generate code to.","sig":null,"attributes":[{"value":"/ Set the output directory to generate code to.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39837,"byte_end":39886,"line_start":457,"line_end":457,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39891,"byte_end":39894,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Defaults to the `OUT_DIR` environment variable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":39899,"byte_end":39950,"line_start":459,"line_end":459,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":40322,"byte_end":40329,"line_start":469,"line_end":469,"column_start":12,"column_end":19},"name":"compile","qualname":"<Builder>::compile","value":"fn compile<'_>(Self, &'_ [Service])","parent":null,"children":[],"decl_id":null,"docs":" Performs code generation for the provided services.","sig":null,"attributes":[{"value":"/ Performs code generation for the provided services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":40102,"byte_end":40157,"line_start":465,"line_end":465,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":40162,"byte_end":40165,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Generated services will be output into the directory specified by `out_dir`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":40170,"byte_end":40249,"line_start":467,"line_end":467,"column_start":5,"column_end":84}},{"value":"/ with files named `<package_name>.<service_name>.rs`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":40254,"byte_end":40310,"line_start":468,"line_end":468,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290}],"decl_id":null,"docs":" Service code generation for client\n","sig":null,"attributes":[{"value":"/ Service code generation for client","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2752,"byte_end":2790,"line_start":92,"line_end":92,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":41493,"byte_end":41501,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"generate","qualname":"::client::generate","value":"fn generate<T, '_, '_, '_>(&'_ T, bool, &'_ str, bool, bool, &'_ Attributes)\n-> TokenStream where T: Service","parent":null,"children":[],"decl_id":null,"docs":" Generate service for client.","sig":null,"attributes":[{"value":"/ Generate service for client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":41243,"byte_end":41275,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":41276,"byte_end":41279,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This takes some `Service` and will generate a `TokenStream` that contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":41280,"byte_end":41357,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ a public module with the generated client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":41358,"byte_end":41404,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"deprecated(since = \"0.8.3\", note =\n\"Use the CodeGenBuilder::generate_client\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/client.rs","byte_start":41405,"byte_end":41485,"line_start":12,"line_end":12,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":292},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353}],"decl_id":null,"docs":" Service code generation for Server\n","sig":null,"attributes":[{"value":"/ Service code generation for Server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2807,"byte_end":2845,"line_start":94,"line_end":94,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":52695,"byte_end":52703,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"generate","qualname":"::server::generate","value":"fn generate<T, '_, '_, '_>(&'_ T, bool, &'_ str, bool, &'_ Attributes)\n-> TokenStream where T: Service","parent":null,"children":[],"decl_id":null,"docs":" Generate service for Server.","sig":null,"attributes":[{"value":"/ Generate service for Server.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":52427,"byte_end":52459,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":52460,"byte_end":52463,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This takes some `Service` and will generate a `TokenStream` that contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":52464,"byte_end":52541,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ a public module containing the server service and handler trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":52542,"byte_end":52610,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"deprecated(since = \"0.8.3\", note = \"Use CodeGenBuilder::generate_server\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/server.rs","byte_start":52611,"byte_end":52687,"line_start":13,"line_end":13,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72221,"byte_end":72235,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"CodeGenBuilder","qualname":"::code_gen::CodeGenBuilder","value":"CodeGenBuilder {  }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Builder for the generic code generation of server and clients.\n","sig":null,"attributes":[{"value":"/ Builder for the generic code generation of server and clients.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72126,"byte_end":72192,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72488,"byte_end":72491,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<CodeGenBuilder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new code gen builder with default options.\n","sig":null,"attributes":[{"value":"/ Create a new code gen builder with default options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72421,"byte_end":72476,"line_start":18,"line_end":18,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72606,"byte_end":72618,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"emit_package","qualname":"<CodeGenBuilder>::emit_package","value":"fn emit_package<'_>(&'_ mut Self, bool) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable code generation to emit the package name.\n","sig":null,"attributes":[{"value":"/ Enable code generation to emit the package name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72542,"byte_end":72594,"line_start":23,"line_end":23,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72856,"byte_end":72866,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"attributes","qualname":"<CodeGenBuilder>::attributes","value":"fn attributes<'_>(&'_ mut Self, Attributes) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Attributes that will be added to `mod` and `struct` items.","sig":null,"attributes":[{"value":"/ Attributes that will be added to `mod` and `struct` items.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72719,"byte_end":72781,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72786,"byte_end":72789,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Reference [`Attributes`] for more information.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72794,"byte_end":72844,"line_start":31,"line_end":31,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73252,"byte_end":73267,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"build_transport","qualname":"<CodeGenBuilder>::build_transport","value":"fn build_transport<'_>(&'_ mut Self, bool) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable transport code to be generated, this requires `tonic`'s `transport`\n feature.","sig":null,"attributes":[{"value":"/ Enable transport code to be generated, this requires `tonic`'s `transport`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72979,"byte_end":73057,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"/ feature.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73062,"byte_end":73074,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73079,"byte_end":73082,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This allows codegen level control of generating the transport code and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73087,"byte_end":73161,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ is a work around when other crates in a workspace enable this feature.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73166,"byte_end":73240,"line_start":41,"line_end":41,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73523,"byte_end":73547,"line_start":49,"line_end":49,"column_start":12,"column_end":36},"name":"compile_well_known_types","qualname":"<CodeGenBuilder>::compile_well_known_types","value":"fn compile_well_known_types<'_>(&'_ mut Self, bool) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable compiling well knonw types, this will force codegen to not\n use the well known types from `prost-types`.\n","sig":null,"attributes":[{"value":"/ Enable compiling well knonw types, this will force codegen to not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73389,"byte_end":73458,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ use the well known types from `prost-types`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73463,"byte_end":73511,"line_start":48,"line_end":48,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73715,"byte_end":73731,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"disable_comments","qualname":"<CodeGenBuilder>::disable_comments","value":"fn disable_comments<'_>(&'_ mut Self, HashSet<String>) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Disable comments based on a proto path.\n","sig":null,"attributes":[{"value":"/ Disable comments based on a proto path.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73660,"byte_end":73703,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74064,"byte_end":74079,"line_start":64,"line_end":64,"column_start":12,"column_end":27},"name":"generate_client","qualname":"<CodeGenBuilder>::generate_client","value":"fn generate_client<'_, '_, '_,\nimpl Service>(&'_ Self, &'_ impl Service, &'_ str) -> TokenStream where\nimpl Service: Service","parent":null,"children":[],"decl_id":null,"docs":" Generate client code based on `Service`.","sig":null,"attributes":[{"value":"/ Generate client code based on `Service`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73867,"byte_end":73911,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73916,"byte_end":73919,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This takes some `Service` and will generate a `TokenStream` that contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":73924,"byte_end":74001,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/ a public module with the generated client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74006,"byte_end":74052,"line_start":63,"line_end":63,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74625,"byte_end":74640,"line_start":80,"line_end":80,"column_start":12,"column_end":27},"name":"generate_server","qualname":"<CodeGenBuilder>::generate_server","value":"fn generate_server<'_, '_, '_,\nimpl Service>(&'_ Self, &'_ impl Service, &'_ str) -> TokenStream where\nimpl Service: Service","parent":null,"children":[],"decl_id":null,"docs":" Generate server code based on `Service`.","sig":null,"attributes":[{"value":"/ Generate server code based on `Service`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74428,"byte_end":74472,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74477,"byte_end":74480,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This takes some `Service` and will generate a `TokenStream` that contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74485,"byte_end":74562,"line_start":78,"line_end":78,"column_start":5,"column_end":82}},{"value":"/ a public module with the generated client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74567,"byte_end":74613,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74994,"byte_end":75001,"line_start":93,"line_end":93,"column_start":8,"column_end":15},"name":"default","qualname":"<CodeGenBuilder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":385},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3122,"byte_end":3129,"line_start":106,"line_end":106,"column_start":11,"column_end":18},"name":"Service","qualname":"::Service","value":"Service","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Service generation trait.","sig":null,"attributes":[{"value":"/ Service generation trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2912,"byte_end":2941,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2942,"byte_end":2945,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This trait can be implemented and consumed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2946,"byte_end":2992,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"/ by `client::generate` and `server::generate`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2993,"byte_end":3041,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/ to allow any codegen module to generate service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3042,"byte_end":3093,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ abstractions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3094,"byte_end":3111,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":386},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3163,"byte_end":3170,"line_start":108,"line_end":108,"column_start":10,"column_end":17},"name":"Comment","qualname":"::Service::Comment","value":"type Comment: AsRef<str>;","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Comment type.\n","sig":null,"attributes":[{"value":"/ Comment type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3136,"byte_end":3153,"line_start":107,"line_end":107,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":387},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3215,"byte_end":3221,"line_start":111,"line_end":111,"column_start":10,"column_end":16},"name":"Method","qualname":"::Service::Method","value":"type Method: Method;","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Method type.\n","sig":null,"attributes":[{"value":"/ Method type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3189,"byte_end":3205,"line_start":110,"line_end":110,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3264,"byte_end":3268,"line_start":114,"line_end":114,"column_start":8,"column_end":12},"name":"name","qualname":"::Service::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Name of service.\n","sig":null,"attributes":[{"value":"/ Name of service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3236,"byte_end":3256,"line_start":113,"line_end":113,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3325,"byte_end":3332,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"package","qualname":"::Service::package","value":"fn package<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Package name of service.\n","sig":null,"attributes":[{"value":"/ Package name of service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3289,"byte_end":3317,"line_start":115,"line_end":115,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3403,"byte_end":3413,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"identifier","qualname":"::Service::identifier","value":"fn identifier<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Identifier used to generate type name.\n","sig":null,"attributes":[{"value":"/ Identifier used to generate type name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3353,"byte_end":3395,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3474,"byte_end":3481,"line_start":120,"line_end":120,"column_start":8,"column_end":15},"name":"methods","qualname":"::Service::methods","value":"fn methods<'_>(&'_ Self) -> &'_ [Self::Method]","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Methods provided by service.\n","sig":null,"attributes":[{"value":"/ Methods provided by service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3434,"byte_end":3466,"line_start":119,"line_end":119,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3554,"byte_end":3561,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"comment","qualname":"::Service::comment","value":"fn comment<'_>(&'_ Self) -> &'_ [Self::Comment]","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Get comments about this item.\n","sig":null,"attributes":[{"value":"/ Get comments about this item.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3513,"byte_end":3546,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3798,"byte_end":3804,"line_start":131,"line_end":131,"column_start":11,"column_end":17},"name":"Method","qualname":"::Method","value":"Method","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"decl_id":null,"docs":" Method generation trait.","sig":null,"attributes":[{"value":"/ Method generation trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3593,"byte_end":3621,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3622,"byte_end":3625,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Each service contains a set of generic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3626,"byte_end":3668,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ `Methods`'s that will be used by codegen","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3669,"byte_end":3713,"line_start":128,"line_end":128,"column_start":1,"column_end":45}},{"value":"/ to generate abstraction implementations for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3714,"byte_end":3761,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/ the provided methods.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3762,"byte_end":3787,"line_start":130,"line_end":130,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":394},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3838,"byte_end":3845,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Comment","qualname":"::Method::Comment","value":"type Comment: AsRef<str>;","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Comment type.\n","sig":null,"attributes":[{"value":"/ Comment type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3811,"byte_end":3828,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3891,"byte_end":3895,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"name","qualname":"::Method::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Name of method.\n","sig":null,"attributes":[{"value":"/ Name of method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3864,"byte_end":3883,"line_start":135,"line_end":135,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3966,"byte_end":3976,"line_start":138,"line_end":138,"column_start":8,"column_end":18},"name":"identifier","qualname":"::Method::identifier","value":"fn identifier<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Identifier used to generate type name.\n","sig":null,"attributes":[{"value":"/ Identifier used to generate type name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3916,"byte_end":3958,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4027,"byte_end":4037,"line_start":140,"line_end":140,"column_start":8,"column_end":18},"name":"codec_path","qualname":"::Method::codec_path","value":"fn codec_path<'_>(&'_ Self) -> &'_ str","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Path to the codec.\n","sig":null,"attributes":[{"value":"/ Path to the codec.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":3997,"byte_end":4019,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4099,"byte_end":4115,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"client_streaming","qualname":"::Method::client_streaming","value":"fn client_streaming<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Method is streamed by client.\n","sig":null,"attributes":[{"value":"/ Method is streamed by client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4058,"byte_end":4091,"line_start":141,"line_end":141,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4177,"byte_end":4193,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"server_streaming","qualname":"::Method::server_streaming","value":"fn server_streaming<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Method is streamed by server.\n","sig":null,"attributes":[{"value":"/ Method is streamed by server.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4136,"byte_end":4169,"line_start":143,"line_end":143,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4255,"byte_end":4262,"line_start":146,"line_end":146,"column_start":8,"column_end":15},"name":"comment","qualname":"::Method::comment","value":"fn comment<'_>(&'_ Self) -> &'_ [Self::Comment]","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Get comments about this item.\n","sig":null,"attributes":[{"value":"/ Get comments about this item.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4214,"byte_end":4247,"line_start":145,"line_end":145,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4341,"byte_end":4362,"line_start":148,"line_end":148,"column_start":8,"column_end":29},"name":"request_response_name","qualname":"::Method::request_response_name","value":"fn request_response_name<'_, '_>(&'_ Self, &'_ str, bool)\n-> (TokenStream, TokenStream)","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Type name of request and response.\n","sig":null,"attributes":[{"value":"/ Type name of request and response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4295,"byte_end":4333,"line_start":147,"line_end":147,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4592,"byte_end":4602,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"decl_id":null,"docs":" Attributes that will be added to `mod` and `struct` items.\n","sig":null,"attributes":[{"value":"/ Attributes that will be added to `mod` and `struct` items.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4485,"byte_end":4547,"line_start":155,"line_end":155,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5309,"byte_end":5317,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"push_mod","qualname":"<Attributes>::push_mod","value":"fn push_mod<'_, impl Into<String>,\nimpl Into<String>>(&'_ mut Self, impl Into<String>, impl Into<String>) where\nimpl Into<String>: Into<String>, impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute that will be added to `mod` items matching the given pattern.","sig":null,"attributes":[{"value":"/ Add an attribute that will be added to `mod` items matching the given pattern.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4992,"byte_end":5074,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5079,"byte_end":5082,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5087,"byte_end":5101,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5106,"byte_end":5109,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5114,"byte_end":5121,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # use tonic_build::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5126,"byte_end":5151,"line_start":178,"line_end":178,"column_start":5,"column_end":30}},{"value":"/ let mut attributes = Attributes::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5156,"byte_end":5203,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ attributes.push_mod(\"my.proto.package\", r#\"#[cfg(feature = \"server\")]\"#);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5208,"byte_end":5285,"line_start":180,"line_end":180,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5290,"byte_end":5297,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5761,"byte_end":5772,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"push_struct","qualname":"<Attributes>::push_struct","value":"fn push_struct<'_, impl Into<String>,\nimpl Into<String>>(&'_ mut Self, impl Into<String>, impl Into<String>) where\nimpl Into<String>: Into<String>, impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute that will be added to `struct` items matching the given pattern.","sig":null,"attributes":[{"value":"/ Add an attribute that will be added to `struct` items matching the given pattern.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5452,"byte_end":5537,"line_start":186,"line_end":186,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5542,"byte_end":5545,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5550,"byte_end":5564,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5569,"byte_end":5572,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5577,"byte_end":5584,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # use tonic_build::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5589,"byte_end":5614,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/ let mut attributes = Attributes::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5619,"byte_end":5666,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/ attributes.push_struct(\"EchoService\", \"#[derive(PartialEq)]\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5671,"byte_end":5737,"line_start":193,"line_end":193,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":5742,"byte_end":5749,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11655,"byte_end":11662,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12089,"byte_end":12095,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":13823,"byte_end":13839,"line_start":151,"line_end":151,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":14077,"byte_end":14093,"line_start":161,"line_end":161,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":16996,"byte_end":17003,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28675,"byte_end":28689,"line_start":68,"line_end":68,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30485,"byte_end":30492,"line_start":126,"line_end":126,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30641,"byte_end":30648,"line_start":133,"line_end":133,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31695,"byte_end":31701,"line_start":180,"line_end":180,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31846,"byte_end":31852,"line_start":187,"line_end":187,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34093,"byte_end":34106,"line_start":269,"line_end":269,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36957,"byte_end":36973,"line_start":352,"line_end":352,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38771,"byte_end":38778,"line_start":415,"line_end":415,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38973,"byte_end":38980,"line_start":426,"line_end":426,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72400,"byte_end":72414,"line_start":17,"line_end":17,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74970,"byte_end":74984,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4741,"byte_end":4751,"line_start":164,"line_end":164,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2743,"byte_end":2749,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":162}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2799,"byte_end":2805,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":246}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":2854,"byte_end":2860,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":292}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":11655,"byte_end":11662,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":24,"index":555},"to":{"krate":0,"index":385}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":12089,"byte_end":12095,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":24,"index":566},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":13823,"byte_end":13839,"line_start":151,"line_end":151,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":14077,"byte_end":14093,"line_start":161,"line_end":161,"column_start":40,"column_end":56},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":96},"to":{"krate":24,"index":399}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/prost.rs","byte_start":16996,"byte_end":17003,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":28675,"byte_end":28689,"line_start":68,"line_end":68,"column_start":6,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30485,"byte_end":30492,"line_start":126,"line_end":126,"column_start":6,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":30641,"byte_end":30648,"line_start":133,"line_end":133,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":385}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31695,"byte_end":31701,"line_start":180,"line_end":180,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":31846,"byte_end":31852,"line_start":187,"line_end":187,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":460},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":34093,"byte_end":34106,"line_start":269,"line_end":269,"column_start":6,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":36957,"byte_end":36973,"line_start":352,"line_end":352,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38771,"byte_end":38778,"line_start":415,"line_end":415,"column_start":18,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/manual.rs","byte_start":38973,"byte_end":38980,"line_start":426,"line_end":426,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":72400,"byte_end":72414,"line_start":17,"line_end":17,"column_start":6,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/code_gen.rs","byte_start":74970,"byte_end":74984,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-build-0.8.4/src/lib.rs","byte_start":4741,"byte_end":4751,"line_start":164,"line_end":164,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}}]}