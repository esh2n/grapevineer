{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","fixedbitset","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=de376efd72887e61","-C","extra-filename=-de376efd72887e61","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfixedbitset-de376efd72887e61.rmeta"},"prelude":{"crate_id":{"name":"fixedbitset","disambiguator":[16214142956683534141,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":0,"byte_end":46127,"line_start":1,"line_end":1673,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":800,"byte_end":810,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"alias_span":null,"name":"IndexRange","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":0,"byte_end":46127,"line_start":1,"line_end":1673,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":103},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":242}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits.","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":54,"byte_end":57,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":58,"byte_end":61,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ### Crate features","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":62,"byte_end":84,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":85,"byte_end":88,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `std` (default feature)  ","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":89,"byte_end":120,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/   Disabling this feature disables using std and instead uses crate alloc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":121,"byte_end":198,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   Requires Rust 1.36 to disable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":199,"byte_end":235,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":236,"byte_end":239,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":240,"byte_end":260,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":261,"byte_end":264,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This version of fixedbitset requires Rust 1.39 or later.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":265,"byte_end":325,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":326,"byte_end":329,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":426,"byte_end":432,"line_start":15,"line_end":15,"column_start":35,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46413,"byte_end":46423,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"IndexRange","qualname":"::range::IndexRange","value":"IndexRange<T = usize>","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" **IndexRange** is implemented by Rust's built-in range types, produced\n by range syntax like `..`, `a..`, `..b` or `c..d`.\n","sig":null,"attributes":[{"value":"/ **IndexRange** is implemented by Rust's built-in range types, produced","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46273,"byte_end":46347,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ by range syntax like `..`, `a..`, `..b` or `c..d`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46348,"byte_end":46402,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46488,"byte_end":46493,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"start","qualname":"::range::IndexRange::start","value":"fn start<'_>(&'_ Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Start index (inclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46439,"byte_end":46448,"line_start":13,"line_end":13,"column_start":5,"column_end":14}},{"value":"/ Start index (inclusive)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46453,"byte_end":46480,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46574,"byte_end":46577,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"end","qualname":"::range::IndexRange::end","value":"fn end<'_>(&'_ Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" End index (exclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46527,"byte_end":46536,"line_start":16,"line_end":16,"column_start":5,"column_end":14}},{"value":"/ End index (exclusive)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46541,"byte_end":46566,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46719,"byte_end":46724,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"start","qualname":"<RangeFrom<T> as range::IndexRange>::start","value":"fn start<'_>(&'_ Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":{"krate":0,"index":31},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46702,"byte_end":46711,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46835,"byte_end":46838,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"end","qualname":"<RangeTo<T> as range::IndexRange>::end","value":"fn end<'_>(&'_ Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46818,"byte_end":46827,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46945,"byte_end":46950,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"start","qualname":"<Range<T> as range::IndexRange>::start","value":"fn start<'_>(&'_ Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":{"krate":0,"index":31},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46928,"byte_end":46937,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":47013,"byte_end":47016,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"end","qualname":"<Range<T> as range::IndexRange>::end","value":"fn end<'_>(&'_ Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46996,"byte_end":47005,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1579,"byte_end":1590,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"FixedBitSet","qualname":"::FixedBitSet","value":"FixedBitSet {  }","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits that each can\n be enabled (1 / **true**) or disabled (0 / **false**).","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits that each can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1095,"byte_end":1161,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ be enabled (1 / **true**) or disabled (0 / **false**).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1162,"byte_end":1220,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1221,"byte_end":1224,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The bit set has a fixed capacity in terms of enabling bits (and the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1225,"byte_end":1296,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ capacity can grow using the `grow` method).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1297,"byte_end":1344,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1345,"byte_end":1348,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Derived traits depend on both the zeros and ones, so [0,1] is not equal to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1349,"byte_end":1427,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ [0,1,0].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1428,"byte_end":1440,"line_start":55,"line_end":55,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1740,"byte_end":1743,"line_start":66,"line_end":66,"column_start":18,"column_end":21},"name":"new","qualname":"<FixedBitSet>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty **FixedBitSet**.\n","sig":null,"attributes":[{"value":"/ Create a new empty **FixedBitSet**.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1683,"byte_end":1722,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1957,"byte_end":1970,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FixedBitSet>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n all initially clear.\n","sig":null,"attributes":[{"value":"/ Create a new **FixedBitSet** with a specific number of bits,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1852,"byte_end":1916,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ all initially clear.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1921,"byte_end":1945,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2694,"byte_end":2718,"line_start":97,"line_end":97,"column_start":12,"column_end":36},"name":"with_capacity_and_blocks","qualname":"<FixedBitSet>::with_capacity_and_blocks","value":"fn with_capacity_and_blocks<I>(usize, I) -> Self where I: IntoIterator<Item =\nBlock>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n initialized from provided blocks.","sig":null,"attributes":[{"value":"/ Create a new **FixedBitSet** with a specific number of bits,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2189,"byte_end":2253,"line_start":84,"line_end":84,"column_start":5,"column_end":69}},{"value":"/ initialized from provided blocks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2258,"byte_end":2295,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2300,"byte_end":2303,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If the blocks are not the exact size needed for the capacity","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2308,"byte_end":2372,"line_start":87,"line_end":87,"column_start":5,"column_end":69}},{"value":"/ they will be padded with zeros (if shorter) or truncated to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2377,"byte_end":2440,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ the capacity (if longer).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2445,"byte_end":2474,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2479,"byte_end":2482,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2487,"byte_end":2503,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2508,"byte_end":2515,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ let data = vec![4];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2520,"byte_end":2543,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/ let bs = fixedbitset::FixedBitSet::with_capacity_and_blocks(4, data);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2548,"byte_end":2621,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(format!(\"{:b}\", bs), \"0010\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2626,"byte_end":2670,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":2675,"byte_end":2682,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3466,"byte_end":3470,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"grow","qualname":"<FixedBitSet>::grow","value":"fn grow<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Grow capacity to **bits**, all new bits initialized to zero\n","sig":null,"attributes":[{"value":"/ Grow capacity to **bits**, all new bits initialized to zero","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3391,"byte_end":3454,"line_start":115,"line_end":115,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4189,"byte_end":4192,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"len","qualname":"<FixedBitSet>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the [`FixedBitSet`] in bits.","sig":null,"attributes":[{"value":"/ The length of the [`FixedBitSet`] in bits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3714,"byte_end":3760,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3765,"byte_end":3768,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note: `len` includes both set and unset bits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3773,"byte_end":3822,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3827,"byte_end":3834,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use fixedbitset::FixedBitSet;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3839,"byte_end":3874,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ let bitset = FixedBitSet::with_capacity(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3879,"byte_end":3927,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ // there are 0 set bits, but 10 unset bits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3932,"byte_end":3978,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(bitset.len(), 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":3983,"byte_end":4016,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4021,"byte_end":4028,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ `len` does not return the count of set bits. For that, use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4033,"byte_end":4095,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ [`bitset.count_ones(..)`](FixedBitSet::count_ones) instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4100,"byte_end":4163,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4168,"byte_end":4177,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4775,"byte_end":4783,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FixedBitSet>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if the [`FixedBitSet`] is empty.","sig":null,"attributes":[{"value":"/ `true` if the [`FixedBitSet`] is empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4242,"byte_end":4285,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4290,"byte_end":4293,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that an \"empty\" `FixedBitSet` is a `FixedBitSet` with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4298,"byte_end":4360,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ no bits (meaning: it's length is zero). If you want to check","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4365,"byte_end":4429,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"/ if all bits are unset, use [`FixedBitSet::is_clear`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4434,"byte_end":4491,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4496,"byte_end":4499,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4504,"byte_end":4511,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # use fixedbitset::FixedBitSet;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4516,"byte_end":4551,"line_start":148,"line_end":148,"column_start":5,"column_end":40}},{"value":"/ let bitset = FixedBitSet::with_capacity(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4556,"byte_end":4604,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/ assert!(!bitset.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4609,"byte_end":4641,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4646,"byte_end":4649,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let bitset = FixedBitSet::with_capacity(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4654,"byte_end":4701,"line_start":152,"line_end":152,"column_start":5,"column_end":52}},{"value":"/ assert!(bitset.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4706,"byte_end":4737,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4742,"byte_end":4749,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4754,"byte_end":4763,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5376,"byte_end":5384,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"is_clear","qualname":"<FixedBitSet>::is_clear","value":"fn is_clear<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if all bits in the [`FixedBitSet`] are unset.","sig":null,"attributes":[{"value":"/ `true` if all bits in the [`FixedBitSet`] are unset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4836,"byte_end":4892,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4897,"byte_end":4900,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ As opposed to [`FixedBitSet::is_empty`], which is `true` only for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4905,"byte_end":4974,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ sets without any bits, set or unset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":4979,"byte_end":5019,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5024,"byte_end":5027,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5032,"byte_end":5039,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use fixedbitset::FixedBitSet;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5044,"byte_end":5079,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let mut bitset = FixedBitSet::with_capacity(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5084,"byte_end":5136,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/ assert!(bitset.is_clear());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5141,"byte_end":5172,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5177,"byte_end":5180,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ bitset.insert(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5185,"byte_end":5206,"line_start":170,"line_end":170,"column_start":5,"column_end":26}},{"value":"/ assert!(!bitset.is_clear());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5211,"byte_end":5243,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5248,"byte_end":5255,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5260,"byte_end":5263,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to [`bitset.count_ones(..) == 0`](FixedBitSet::count_ones).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5268,"byte_end":5350,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5355,"byte_end":5364,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5723,"byte_end":5731,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"contains","qualname":"<FixedBitSet>::contains","value":"fn contains<'_>(&'_ Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return **true** if the bit is enabled in the **FixedBitSet**,\n **false** otherwise.","sig":null,"attributes":[{"value":"/ Return **true** if the bit is enabled in the **FixedBitSet**,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5463,"byte_end":5528,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/ **false** otherwise.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5533,"byte_end":5557,"line_start":181,"line_end":181,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5562,"byte_end":5565,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note: bits outside the capacity are always disabled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5570,"byte_end":5626,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5631,"byte_end":5634,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Note: Also available with index syntax: `bitset[bit]`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5639,"byte_end":5697,"line_start":185,"line_end":185,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5702,"byte_end":5711,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5980,"byte_end":5985,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"name":"clear","qualname":"<FixedBitSet>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all bits.\n","sig":null,"attributes":[{"value":"/ Clear all bits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5935,"byte_end":5954,"line_start":195,"line_end":195,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":5959,"byte_end":5968,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6180,"byte_end":6186,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"insert","qualname":"<FixedBitSet>::insert","value":"fn insert<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`.","sig":null,"attributes":[{"value":"/ Enable `bit`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6081,"byte_end":6098,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6103,"byte_end":6106,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6111,"byte_end":6154,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6159,"byte_end":6168,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6644,"byte_end":6647,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"put","qualname":"<FixedBitSet>::put","value":"fn put<'_>(&'_ mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`, and return its previous value.","sig":null,"attributes":[{"value":"/ Enable `bit`, and return its previous value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6514,"byte_end":6562,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6567,"byte_end":6570,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6575,"byte_end":6618,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":6623,"byte_end":6632,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7193,"byte_end":7199,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"toggle","qualname":"<FixedBitSet>::toggle","value":"fn toggle<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Toggle `bit` (inverting its state).","sig":null,"attributes":[{"value":"/ Toggle `bit` (inverting its state).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7071,"byte_end":7110,"line_start":239,"line_end":239,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7115,"byte_end":7118,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if **bit** is out of bounds","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7123,"byte_end":7167,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7172,"byte_end":7181,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7595,"byte_end":7598,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"set","qualname":"<FixedBitSet>::set","value":"fn set<'_>(&'_ mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" **Panics** if **bit** is out of bounds.\n","sig":null,"attributes":[{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7526,"byte_end":7569,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":7574,"byte_end":7583,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8210,"byte_end":8218,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"copy_bit","qualname":"<FixedBitSet>::copy_bit","value":"fn copy_bit<'_>(&'_ mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Copies boolean value from specified bit to the specified bit.","sig":null,"attributes":[{"value":"/ Copies boolean value from specified bit to the specified bit.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8064,"byte_end":8129,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8134,"byte_end":8137,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **to** is out of bounds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8142,"byte_end":8184,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8189,"byte_end":8198,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8962,"byte_end":8972,"line_start":304,"line_end":304,"column_start":12,"column_end":22},"name":"count_ones","qualname":"<FixedBitSet>::count_ones","value":"fn count_ones<T, '_>(&'_ Self, T) -> usize where T: IndexRange","parent":null,"children":[],"decl_id":null,"docs":" Count the number of set bits in the given bit range.","sig":null,"attributes":[{"value":"/ Count the number of set bits in the given bit range.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8737,"byte_end":8793,"line_start":298,"line_end":298,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8798,"byte_end":8801,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Use `..` to count the whole content of the bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8806,"byte_end":8860,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8865,"byte_end":8868,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8873,"byte_end":8936,"line_start":302,"line_end":302,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":8941,"byte_end":8950,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9476,"byte_end":9485,"line_start":319,"line_end":319,"column_start":12,"column_end":21},"name":"set_range","qualname":"<FixedBitSet>::set_range","value":"fn set_range<T, '_>(&'_ mut Self, T, bool) where T: IndexRange","parent":null,"children":[],"decl_id":null,"docs":" Sets every bit in the given range to the given state (`enabled`)","sig":null,"attributes":[{"value":"/ Sets every bit in the given range to the given state (`enabled`)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9256,"byte_end":9324,"line_start":313,"line_end":313,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9329,"byte_end":9332,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Use `..` to set the whole bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9337,"byte_end":9374,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9379,"byte_end":9382,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9387,"byte_end":9450,"line_start":317,"line_end":317,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9455,"byte_end":9464,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10059,"byte_end":10071,"line_start":337,"line_end":337,"column_start":12,"column_end":24},"name":"insert_range","qualname":"<FixedBitSet>::insert_range","value":"fn insert_range<T, '_>(&'_ mut Self, T) where T: IndexRange","parent":null,"children":[],"decl_id":null,"docs":" Enables every bit in the given range.","sig":null,"attributes":[{"value":"/ Enables every bit in the given range.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9860,"byte_end":9901,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9906,"byte_end":9909,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Use `..` to make the whole bitset ones.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9914,"byte_end":9957,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9962,"byte_end":9965,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":9970,"byte_end":10033,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10038,"byte_end":10047,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10364,"byte_end":10376,"line_start":347,"line_end":347,"column_start":12,"column_end":24},"name":"toggle_range","qualname":"<FixedBitSet>::toggle_range","value":"fn toggle_range<T, '_>(&'_ mut Self, T) where T: IndexRange","parent":null,"children":[],"decl_id":null,"docs":" Toggles (inverts) every bit in the given range.","sig":null,"attributes":[{"value":"/ Toggles (inverts) every bit in the given range.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10158,"byte_end":10209,"line_start":341,"line_end":341,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10214,"byte_end":10217,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Use `..` to toggle the whole bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10222,"byte_end":10262,"line_start":343,"line_end":343,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10267,"byte_end":10270,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10275,"byte_end":10338,"line_start":345,"line_end":345,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10343,"byte_end":10352,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10666,"byte_end":10674,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FixedBitSet>::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'_ [u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a slice of `u32` blocks\n","sig":null,"attributes":[{"value":"/ View the bitset as a slice of `u32` blocks","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10594,"byte_end":10640,"line_start":355,"line_end":355,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10645,"byte_end":10654,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10943,"byte_end":10955,"line_start":364,"line_end":364,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FixedBitSet>::as_mut_slice","value":"fn as_mut_slice<'_>(&'_ mut Self) -> &'_ mut [u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\n will cause `contains` to return potentially incorrect results for bits past the bitlength.\n","sig":null,"attributes":[{"value":"/ View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10724,"byte_end":10818,"line_start":361,"line_end":361,"column_start":5,"column_end":99}},{"value":"/ will cause `contains` to return potentially incorrect results for bits past the bitlength.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10823,"byte_end":10917,"line_start":362,"line_end":362,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":10922,"byte_end":10931,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11154,"byte_end":11158,"line_start":372,"line_end":372,"column_start":12,"column_end":16},"name":"ones","qualname":"<FixedBitSet>::ones","value":"fn ones<'_>(&'_ Self) -> Ones","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all enabled bits.","sig":null,"attributes":[{"value":"/ Iterates over all enabled bits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11017,"byte_end":11052,"line_start":368,"line_end":368,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11057,"byte_end":11060,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Iterator element is the index of the `1` bit, type `usize`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11065,"byte_end":11128,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11133,"byte_end":11142,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11621,"byte_end":11633,"line_start":388,"line_end":388,"column_start":12,"column_end":24},"name":"intersection","qualname":"<FixedBitSet>::intersection","value":"fn intersection<'a>(&'a Self, &'a FixedBitSet) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the intersection of two `FixedBitSet`s\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the intersection of two `FixedBitSet`s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11538,"byte_end":11609,"line_start":387,"line_end":387,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11865,"byte_end":11870,"line_start":396,"line_end":396,"column_start":12,"column_end":17},"name":"union","qualname":"<FixedBitSet>::union","value":"fn union<'a>(&'a Self, &'a FixedBitSet) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the union of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the union of two `FixedBitSet`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":11788,"byte_end":11853,"line_start":395,"line_end":395,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12187,"byte_end":12197,"line_start":404,"line_end":404,"column_start":12,"column_end":22},"name":"difference","qualname":"<FixedBitSet>::difference","value":"fn difference<'a>(&'a Self, &'a FixedBitSet) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`\n and `b` is the elements of `a` which are not in `b`.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12022,"byte_end":12114,"line_start":402,"line_end":402,"column_start":5,"column_end":97}},{"value":"/ and `b` is the elements of `a` which are not in `b`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12119,"byte_end":12175,"line_start":403,"line_end":403,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12532,"byte_end":12552,"line_start":413,"line_end":413,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<FixedBitSet>::symmetric_difference","value":"fn symmetric_difference<'a>(&'a Self, &'a FixedBitSet) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the symmetric difference of two `FixedBitSet`s.\n The symmetric difference of `a` and `b` is the elements of one, but not both, sets.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the symmetric difference of two `FixedBitSet`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12348,"byte_end":12428,"line_start":411,"line_end":411,"column_start":5,"column_end":85}},{"value":"/ The symmetric difference of `a` and `b` is the elements of one, but not both, sets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12433,"byte_end":12520,"line_start":412,"line_end":412,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12891,"byte_end":12901,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"union_with","qualname":"<FixedBitSet>::union_with","value":"fn union_with<'_, '_>(&'_ mut Self, &'_ FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place union of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place union of two `FixedBitSet`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12743,"byte_end":12784,"line_start":419,"line_end":419,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12789,"byte_end":12792,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity may be increased to match `other`'s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":12797,"byte_end":12879,"line_start":421,"line_end":421,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13282,"byte_end":13296,"line_start":434,"line_end":434,"column_start":12,"column_end":26},"name":"intersect_with","qualname":"<FixedBitSet>::intersect_with","value":"fn intersect_with<'_, '_>(&'_ mut Self, &'_ FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place intersection of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place intersection of two `FixedBitSet`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13132,"byte_end":13180,"line_start":431,"line_end":431,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13185,"byte_end":13188,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity will remain the same as before.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13193,"byte_end":13270,"line_start":433,"line_end":433,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13729,"byte_end":13744,"line_start":447,"line_end":447,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<FixedBitSet>::difference_with","value":"fn difference_with<'_, '_>(&'_ mut Self, &'_ FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place difference of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place difference of two `FixedBitSet`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13581,"byte_end":13627,"line_start":444,"line_end":444,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13632,"byte_end":13635,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity will remain the same as before.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":13640,"byte_end":13717,"line_start":446,"line_end":446,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14416,"byte_end":14441,"line_start":463,"line_end":463,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<FixedBitSet>::symmetric_difference_with","value":"fn symmetric_difference_with<'_, '_>(&'_ mut Self, &'_ FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place symmetric difference of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place symmetric difference of two `FixedBitSet`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14253,"byte_end":14309,"line_start":460,"line_end":460,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14314,"byte_end":14317,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity may be increased to match `other`'s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14322,"byte_end":14404,"line_start":462,"line_end":462,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14818,"byte_end":14829,"line_start":474,"line_end":474,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<FixedBitSet>::is_disjoint","value":"fn is_disjoint<'_, '_>(&'_ Self, &'_ FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This\n is equivalent to checking for an empty intersection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14672,"byte_end":14745,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ is equivalent to checking for an empty intersection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14750,"byte_end":14806,"line_start":473,"line_end":473,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15121,"byte_end":15130,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<FixedBitSet>::is_subset","value":"fn is_subset<'_, '_>(&'_ Self, &'_ FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e. `other` contains\n at least all the values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e. `other` contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":14991,"byte_end":15066,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ at least all the values in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15071,"byte_end":15109,"line_start":482,"line_end":482,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15497,"byte_end":15508,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<FixedBitSet>::is_superset","value":"fn is_superset<'_, '_>(&'_ Self, &'_ FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another, i.e. `self` contains\n at least all the values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another, i.e. `self` contains","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15365,"byte_end":15441,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ at least all the values in `other`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15446,"byte_end":15485,"line_start":492,"line_end":492,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15623,"byte_end":15626,"line_start":499,"line_end":499,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedBitSet as core::fmt::Binary>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> Result<(), Error>","parent":{"krate":1,"index":10306},"children":[],"decl_id":{"krate":1,"index":10307},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15989,"byte_end":15992,"line_start":517,"line_end":517,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedBitSet as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> Result<(), Error>","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16236,"byte_end":16246,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"Difference","qualname":"::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" An iterator producing elements in the difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the difference of two sets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16085,"byte_end":16150,"line_start":522,"line_end":522,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16151,"byte_end":16154,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::difference`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16155,"byte_end":16224,"line_start":524,"line_end":524,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16388,"byte_end":16392,"line_start":534,"line_end":534,"column_start":8,"column_end":12},"name":"next","qualname":"<Difference as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16371,"byte_end":16380,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16771,"byte_end":16790,"line_start":547,"line_end":547,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" An iterator producing elements in the symmetric difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the symmetric difference of two sets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16600,"byte_end":16675,"line_start":544,"line_end":544,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16676,"byte_end":16679,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::symmetric_difference`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16680,"byte_end":16759,"line_start":546,"line_end":546,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16942,"byte_end":16946,"line_start":555,"line_end":555,"column_start":8,"column_end":12},"name":"next","qualname":"<SymmetricDifference as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16925,"byte_end":16934,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17171,"byte_end":17183,"line_start":563,"line_end":563,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" An iterator producing elements in the intersection of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the intersection of two sets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17016,"byte_end":17083,"line_start":560,"line_end":560,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17084,"byte_end":17087,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::intersection`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17088,"byte_end":17159,"line_start":562,"line_end":562,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17358,"byte_end":17362,"line_start":572,"line_end":572,"column_start":8,"column_end":12},"name":"next","qualname":"<Intersection as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17341,"byte_end":17350,"line_start":571,"line_end":571,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17710,"byte_end":17715,"line_start":585,"line_end":585,"column_start":12,"column_end":17},"name":"Union","qualname":"::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" An iterator producing elements in the union of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the union of two sets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17569,"byte_end":17629,"line_start":582,"line_end":582,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17630,"byte_end":17633,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::union`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17634,"byte_end":17698,"line_start":584,"line_end":584,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17847,"byte_end":17851,"line_start":593,"line_end":593,"column_start":8,"column_end":12},"name":"next","qualname":"<Union as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17830,"byte_end":17839,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19795,"byte_end":19799,"line_start":660,"line_end":660,"column_start":12,"column_end":16},"name":"Ones","qualname":"::Ones","value":"Ones {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":" An  iterator producing the indices of the set bit in a set.","sig":null,"attributes":[{"value":"/ An  iterator producing the indices of the set bit in a set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19652,"byte_end":19715,"line_start":657,"line_end":657,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19716,"byte_end":19719,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::ones`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19720,"byte_end":19783,"line_start":659,"line_end":659,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19994,"byte_end":19998,"line_start":670,"line_end":670,"column_start":8,"column_end":12},"name":"next","qualname":"<Ones as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19977,"byte_end":19986,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20570,"byte_end":20575,"line_start":688,"line_end":688,"column_start":8,"column_end":13},"name":"clone","qualname":"<FixedBitSet as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20553,"byte_end":20562,"line_start":687,"line_end":687,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20984,"byte_end":20989,"line_start":705,"line_end":705,"column_start":8,"column_end":13},"name":"index","qualname":"<FixedBitSet as core::ops::Index>::index","value":"fn index<'_>(&'_ Self, usize) -> &'_ bool","parent":{"krate":1,"index":3571},"children":[],"decl_id":{"krate":1,"index":3574},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20967,"byte_end":20976,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21255,"byte_end":21261,"line_start":716,"line_end":716,"column_start":8,"column_end":14},"name":"extend","qualname":"<FixedBitSet as core::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = usize>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21680,"byte_end":21689,"line_start":730,"line_end":730,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FixedBitSet as core::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = usize>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21914,"byte_end":21920,"line_start":739,"line_end":739,"column_start":8,"column_end":14},"name":"bitand","qualname":"<&'a FixedBitSet as core::ops::BitAnd>::bitand","value":"fn bitand<'_>(Self, &'_ FixedBitSet) -> FixedBitSet","parent":{"krate":1,"index":3390},"children":[],"decl_id":{"krate":1,"index":3393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22465,"byte_end":22478,"line_start":757,"line_end":757,"column_start":8,"column_end":21},"name":"bitand_assign","qualname":"<FixedBitSet as core::ops::BitAndAssign>::bitand_assign","value":"fn bitand_assign<'_>(&'_ mut Self, Self)","parent":{"krate":1,"index":3417},"children":[],"decl_id":{"krate":1,"index":3419},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22605,"byte_end":22618,"line_start":763,"line_end":763,"column_start":8,"column_end":21},"name":"bitand_assign","qualname":"<FixedBitSet as core::ops::BitAndAssign>::bitand_assign","value":"fn bitand_assign<'_, '_>(&'_ mut Self, &'_ Self)","parent":{"krate":1,"index":3417},"children":[],"decl_id":{"krate":1,"index":3419},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22766,"byte_end":22771,"line_start":770,"line_end":770,"column_start":8,"column_end":13},"name":"bitor","qualname":"<&'a FixedBitSet as core::ops::BitOr>::bitor","value":"fn bitor<'_>(Self, &'_ FixedBitSet) -> FixedBitSet","parent":{"krate":1,"index":3395},"children":[],"decl_id":{"krate":1,"index":3398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23315,"byte_end":23327,"line_start":788,"line_end":788,"column_start":8,"column_end":20},"name":"bitor_assign","qualname":"<FixedBitSet as core::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign<'_>(&'_ mut Self, Self)","parent":{"krate":1,"index":3421},"children":[],"decl_id":{"krate":1,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23449,"byte_end":23461,"line_start":794,"line_end":794,"column_start":8,"column_end":20},"name":"bitor_assign","qualname":"<FixedBitSet as core::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign<'_, '_>(&'_ mut Self, &'_ Self)","parent":{"krate":1,"index":3421},"children":[],"decl_id":{"krate":1,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23606,"byte_end":23612,"line_start":801,"line_end":801,"column_start":8,"column_end":14},"name":"bitxor","qualname":"<&'a FixedBitSet as core::ops::BitXor>::bitxor","value":"fn bitxor<'_>(Self, &'_ FixedBitSet) -> FixedBitSet","parent":{"krate":1,"index":3400},"children":[],"decl_id":{"krate":1,"index":3403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":24157,"byte_end":24170,"line_start":819,"line_end":819,"column_start":8,"column_end":21},"name":"bitxor_assign","qualname":"<FixedBitSet as core::ops::BitXorAssign>::bitxor_assign","value":"fn bitxor_assign<'_>(&'_ mut Self, Self)","parent":{"krate":1,"index":3425},"children":[],"decl_id":{"krate":1,"index":3427},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":24308,"byte_end":24321,"line_start":825,"line_end":825,"column_start":8,"column_end":21},"name":"bitxor_assign","qualname":"<FixedBitSet as core::ops::BitXorAssign>::bitxor_assign","value":"fn bitxor_assign<'_, '_>(&'_ mut Self, &'_ Self)","parent":{"krate":1,"index":3425},"children":[],"decl_id":{"krate":1,"index":3427},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46637,"byte_end":46646,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46683,"byte_end":46692,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46801,"byte_end":46808,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46913,"byte_end":46918,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1665,"byte_end":1676,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15602,"byte_end":15613,"line_start":498,"line_end":498,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15968,"byte_end":15979,"line_start":516,"line_end":516,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16326,"byte_end":16336,"line_start":530,"line_end":530,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16871,"byte_end":16890,"line_start":551,"line_end":551,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17263,"byte_end":17275,"line_start":568,"line_end":568,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17790,"byte_end":17795,"line_start":589,"line_end":589,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":18036,"byte_end":18041,"line_start":605,"line_end":605,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":18898,"byte_end":18903,"line_start":631,"line_end":631,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19907,"byte_end":19911,"line_start":666,"line_end":666,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20535,"byte_end":20546,"line_start":686,"line_end":686,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20924,"byte_end":20935,"line_start":701,"line_end":701,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21234,"byte_end":21245,"line_start":715,"line_end":715,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21659,"byte_end":21670,"line_start":729,"line_end":729,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22444,"byte_end":22455,"line_start":756,"line_end":756,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22584,"byte_end":22595,"line_start":762,"line_end":762,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23294,"byte_end":23305,"line_start":787,"line_end":787,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23428,"byte_end":23439,"line_start":793,"line_end":793,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":24136,"byte_end":24147,"line_start":818,"line_end":818,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":24287,"byte_end":24298,"line_start":824,"line_end":824,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46637,"byte_end":46646,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":39239},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46683,"byte_end":46692,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":39280},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46801,"byte_end":46808,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":39301},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/range.rs","byte_start":46913,"byte_end":46918,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":39255},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":1665,"byte_end":1676,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15602,"byte_end":15613,"line_start":498,"line_end":498,"column_start":17,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":10306}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":15968,"byte_end":15979,"line_start":516,"line_end":516,"column_start":18,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16326,"byte_end":16336,"line_start":530,"line_end":530,"column_start":23,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":16871,"byte_end":16890,"line_start":551,"line_end":551,"column_start":23,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17263,"byte_end":17275,"line_start":568,"line_end":568,"column_start":23,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":169},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":17790,"byte_end":17795,"line_start":589,"line_end":589,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":177},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":18036,"byte_end":18041,"line_start":605,"line_end":605,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":18898,"byte_end":18903,"line_start":631,"line_end":631,"column_start":19,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":19907,"byte_end":19911,"line_start":666,"line_end":666,"column_start":23,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20535,"byte_end":20546,"line_start":686,"line_end":686,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":20924,"byte_end":20935,"line_start":701,"line_end":701,"column_start":23,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3571}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21234,"byte_end":21245,"line_start":715,"line_end":715,"column_start":24,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":21659,"byte_end":21670,"line_start":729,"line_end":729,"column_start":30,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22444,"byte_end":22455,"line_start":756,"line_end":756,"column_start":27,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3417}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":22584,"byte_end":22595,"line_start":762,"line_end":762,"column_start":34,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3417}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23294,"byte_end":23305,"line_start":787,"line_end":787,"column_start":26,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3421}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":23428,"byte_end":23439,"line_start":793,"line_end":793,"column_start":33,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3421}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":24136,"byte_end":24147,"line_start":818,"line_end":818,"column_start":27,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3425}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.4.2/src/lib.rs","byte_start":24287,"byte_end":24298,"line_start":824,"line_end":824,"column_start":34,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":3425}}]}