{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b711772384f732c9","-C","extra-filename=-b711772384f732c9","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","futures_core=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_core-8be431a497bc3c9f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_channel-b711772384f732c9.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[14150896857860075213,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","num":20,"id":{"name":"futures_core","disambiguator":[9123476880726111055,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":0,"byte_end":1223,"line_start":1,"line_end":42,"column_start":1,"column_end":17}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":0,"byte_end":1223,"line_start":1,"line_end":42,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":43},{"krate":0,"index":372}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":605,"byte_end":737,"line_start":15,"line_end":21,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":203},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":235},{"krate":0,"index":250},{"krate":0,"index":267},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":1073,"byte_end":1107,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":1108,"byte_end":1131,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4374,"byte_end":4443,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4444,"byte_end":4467,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4468,"byte_end":4471,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4472,"byte_end":4542,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4543,"byte_end":4622,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4623,"byte_end":4698,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4699,"byte_end":4771,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4772,"byte_end":4854,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4855,"byte_end":4932,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":4933,"byte_end":5010,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5011,"byte_end":5056,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5057,"byte_end":5060,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5061,"byte_end":5137,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5138,"byte_end":5141,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5142,"byte_end":5161,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5162,"byte_end":5165,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5166,"byte_end":5232,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5233,"byte_end":5313,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5314,"byte_end":5371,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5372,"byte_end":5406,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5407,"byte_end":5410,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5411,"byte_end":5481,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5482,"byte_end":5561,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5562,"byte_end":5585,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5586,"byte_end":5589,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5590,"byte_end":5610,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5611,"byte_end":5614,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5615,"byte_end":5681,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5682,"byte_end":5758,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5759,"byte_end":5839,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5840,"byte_end":5920,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5921,"byte_end":5993,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":5994,"byte_end":6053,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":6054,"byte_end":6057,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":6058,"byte_end":6092,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":6093,"byte_end":6131,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":6132,"byte_end":6191,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":6192,"byte_end":6220,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":6221,"byte_end":6291,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9631,"byte_end":9637,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9500,"byte_end":9551,"line_start":120,"line_end":120,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9552,"byte_end":9555,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9556,"byte_end":9619,"line_start":122,"line_end":122,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9812,"byte_end":9827,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9674,"byte_end":9728,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9729,"byte_end":9732,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9733,"byte_end":9800,"line_start":127,"line_end":127,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10082,"byte_end":10090,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9954,"byte_end":10002,"line_start":133,"line_end":133,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10003,"byte_end":10006,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10007,"byte_end":10070,"line_start":135,"line_end":135,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10275,"byte_end":10292,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10140,"byte_end":10191,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10192,"byte_end":10195,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10196,"byte_end":10263,"line_start":142,"line_end":142,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10569,"byte_end":10578,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":482}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10459,"byte_end":10518,"line_start":150,"line_end":150,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10717,"byte_end":10729,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10609,"byte_end":10673,"line_start":156,"line_end":156,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10939,"byte_end":10951,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10861,"byte_end":10927,"line_start":169,"line_end":169,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11013,"byte_end":11016,"line_start":175,"line_end":175,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11401,"byte_end":11408,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"fn is_full<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11318,"byte_end":11389,"line_start":187,"line_end":187,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11625,"byte_end":11640,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"fn is_disconnected<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11538,"byte_end":11613,"line_start":195,"line_end":195,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11824,"byte_end":11827,"line_start":205,"line_end":205,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12017,"byte_end":12020,"line_start":211,"line_end":211,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12439,"byte_end":12446,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn is_full<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12356,"byte_end":12427,"line_start":223,"line_end":223,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12589,"byte_end":12604,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"fn is_disconnected<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12502,"byte_end":12577,"line_start":228,"line_end":228,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12745,"byte_end":12755,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12668,"byte_end":12733,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12863,"byte_end":12878,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12797,"byte_end":12851,"line_start":238,"line_end":238,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12968,"byte_end":12971,"line_start":245,"line_end":245,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryRecvError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":13124,"byte_end":13127,"line_start":251,"line_end":251,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryRecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":16179,"byte_end":16186,"line_start":349,"line_end":349,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15553,"byte_end":15633,"line_start":338,"line_end":338,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15634,"byte_end":15637,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15638,"byte_end":15717,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15718,"byte_end":15795,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15796,"byte_end":15867,"line_start":342,"line_end":342,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15868,"byte_end":15941,"line_start":343,"line_end":343,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15942,"byte_end":16012,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":16013,"byte_end":16016,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":16017,"byte_end":16071,"line_start":346,"line_end":346,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":16072,"byte_end":16159,"line_start":347,"line_end":347,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":16160,"byte_end":16171,"line_start":348,"line_end":348,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17437,"byte_end":17446,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":16925,"byte_end":17001,"line_start":374,"line_end":374,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17002,"byte_end":17012,"line_start":375,"line_end":375,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17013,"byte_end":17016,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17017,"byte_end":17097,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17098,"byte_end":17177,"line_start":378,"line_end":378,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17178,"byte_end":17191,"line_start":379,"line_end":379,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17192,"byte_end":17195,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17196,"byte_end":17275,"line_start":381,"line_end":381,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17276,"byte_end":17352,"line_start":382,"line_end":382,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17353,"byte_end":17429,"line_start":383,"line_end":383,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":27986,"byte_end":27994,"line_start":687,"line_end":687,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn try_send<'_>(&'_ mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":27873,"byte_end":27943,"line_start":685,"line_end":685,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":27948,"byte_end":27974,"line_start":686,"line_end":686,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28473,"byte_end":28483,"line_start":700,"line_end":700,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"fn start_send<'_>(&'_ mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28257,"byte_end":28291,"line_start":695,"line_end":695,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28296,"byte_end":28299,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28304,"byte_end":28349,"line_start":697,"line_end":697,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28354,"byte_end":28425,"line_start":698,"line_end":698,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28430,"byte_end":28461,"line_start":699,"line_end":699,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29098,"byte_end":29108,"line_start":716,"line_end":716,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28587,"byte_end":28661,"line_start":704,"line_end":704,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28666,"byte_end":28704,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28709,"byte_end":28712,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28717,"byte_end":28735,"line_start":707,"line_end":707,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28740,"byte_end":28743,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28748,"byte_end":28772,"line_start":709,"line_end":709,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28777,"byte_end":28780,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28785,"byte_end":28844,"line_start":711,"line_end":711,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28849,"byte_end":28898,"line_start":712,"line_end":712,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28903,"byte_end":28979,"line_start":713,"line_end":713,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":28984,"byte_end":29012,"line_start":714,"line_end":714,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29017,"byte_end":29086,"line_start":715,"line_end":715,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29389,"byte_end":29398,"line_start":722,"line_end":722,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29308,"byte_end":29377,"line_start":721,"line_end":721,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29588,"byte_end":29601,"line_start":727,"line_end":727,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"fn close_channel<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29502,"byte_end":29576,"line_start":726,"line_end":726,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29817,"byte_end":29827,"line_start":734,"line_end":734,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"fn disconnect<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29714,"byte_end":29805,"line_start":733,"line_end":733,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29945,"byte_end":29958,"line_start":739,"line_end":739,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"fn same_receiver<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":29875,"byte_end":29933,"line_start":738,"line_end":738,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30206,"byte_end":30221,"line_start":747,"line_end":747,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"fn is_connected_to<'_, '_>(&'_ Self, &'_ Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30141,"byte_end":30194,"line_start":746,"line_end":746,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30489,"byte_end":30502,"line_start":755,"line_end":755,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"fn hash_receiver<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30429,"byte_end":30477,"line_start":754,"line_end":754,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30800,"byte_end":30810,"line_start":768,"line_end":768,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ Self, &'_ mut Context)\n-> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30733,"byte_end":30788,"line_start":767,"line_end":767,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31087,"byte_end":31096,"line_start":774,"line_end":774,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31006,"byte_end":31075,"line_start":773,"line_end":773,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31288,"byte_end":31301,"line_start":779,"line_end":779,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"fn close_channel<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31202,"byte_end":31276,"line_start":778,"line_end":778,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31509,"byte_end":31519,"line_start":786,"line_end":786,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"fn disconnect<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31406,"byte_end":31497,"line_start":785,"line_end":785,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32174,"byte_end":32184,"line_start":806,"line_end":806,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"fn start_send<'_>(&'_ mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":31979,"byte_end":32013,"line_start":802,"line_end":802,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32018,"byte_end":32021,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32026,"byte_end":32099,"line_start":804,"line_end":804,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32104,"byte_end":32162,"line_start":805,"line_end":805,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32536,"byte_end":32550,"line_start":815,"line_end":815,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn unbounded_send<'_>(&'_ Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32290,"byte_end":32329,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32334,"byte_end":32337,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32342,"byte_end":32417,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32422,"byte_end":32498,"line_start":813,"line_end":813,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32503,"byte_end":32524,"line_start":814,"line_end":814,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32709,"byte_end":32722,"line_start":820,"line_end":820,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"fn same_receiver<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32639,"byte_end":32697,"line_start":819,"line_end":819,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32970,"byte_end":32985,"line_start":828,"line_end":828,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"fn is_connected_to<'_, '_>(&'_ Self, &'_ UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":32905,"byte_end":32958,"line_start":827,"line_end":827,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33262,"byte_end":33275,"line_start":836,"line_end":836,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"fn hash_receiver<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33202,"byte_end":33250,"line_start":835,"line_end":835,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33510,"byte_end":33515,"line_start":848,"line_end":848,"column_start":8,"column_end":13},"name":"clone","qualname":"<Sender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33617,"byte_end":33622,"line_start":854,"line_end":854,"column_start":8,"column_end":13},"name":"clone","qualname":"<UnboundedSender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36594,"byte_end":36597,"line_start":942,"line_end":942,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36787,"byte_end":36790,"line_start":948,"line_end":948,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnboundedSender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37244,"byte_end":37249,"line_start":964,"line_end":964,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37007,"byte_end":37071,"line_start":960,"line_end":960,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37076,"byte_end":37079,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37084,"byte_end":37159,"line_start":962,"line_end":962,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37164,"byte_end":37232,"line_start":963,"line_end":963,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":38172,"byte_end":38180,"line_start":986,"line_end":986,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"fn try_next<'_>(&'_ mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37644,"byte_end":37719,"line_start":976,"line_end":976,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37724,"byte_end":37727,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37732,"byte_end":37804,"line_start":978,"line_end":978,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37809,"byte_end":37883,"line_start":979,"line_end":979,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37888,"byte_end":37908,"line_start":980,"line_end":980,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37913,"byte_end":37916,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37921,"byte_end":37947,"line_start":982,"line_end":982,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":37952,"byte_end":37995,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":38000,"byte_end":38073,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":38078,"byte_end":38160,"line_start":985,"line_end":985,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40683,"byte_end":40696,"line_start":1054,"line_end":1054,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Receiver<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40812,"byte_end":40821,"line_start":1062,"line_end":1062,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Receiver<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":41619,"byte_end":41628,"line_start":1082,"line_end":1082,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Receiver<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":41869,"byte_end":41873,"line_start":1092,"line_end":1092,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43038,"byte_end":43041,"line_start":1122,"line_end":1122,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Receiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43613,"byte_end":43618,"line_start":1138,"line_end":1138,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43376,"byte_end":43440,"line_start":1134,"line_end":1134,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43445,"byte_end":43448,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43453,"byte_end":43528,"line_start":1136,"line_end":1136,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43533,"byte_end":43601,"line_start":1137,"line_end":1137,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":44260,"byte_end":44268,"line_start":1154,"line_end":1154,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"fn try_next<'_>(&'_ mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43732,"byte_end":43807,"line_start":1144,"line_end":1144,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43812,"byte_end":43815,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43820,"byte_end":43892,"line_start":1146,"line_end":1146,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43897,"byte_end":43971,"line_start":1147,"line_end":1147,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43976,"byte_end":43996,"line_start":1148,"line_end":1148,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":44001,"byte_end":44004,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":44009,"byte_end":44035,"line_start":1150,"line_end":1150,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":44040,"byte_end":44083,"line_start":1151,"line_end":1151,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":44088,"byte_end":44161,"line_start":1152,"line_end":1152,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":44166,"byte_end":44248,"line_start":1153,"line_end":1153,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":46225,"byte_end":46238,"line_start":1206,"line_end":1206,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<UnboundedReceiver<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":46363,"byte_end":46372,"line_start":1214,"line_end":1214,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<UnboundedReceiver<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":47170,"byte_end":47179,"line_start":1234,"line_end":1234,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<UnboundedReceiver<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":47429,"byte_end":47433,"line_start":1244,"line_end":1244,"column_start":8,"column_end":12},"name":"drop","qualname":"<UnboundedReceiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":48607,"byte_end":48610,"line_start":1274,"line_end":1274,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnboundedReceiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":372},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":437},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":533},{"krate":0,"index":537},{"krate":0,"index":450},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":1146,"byte_end":1180,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":1181,"byte_end":1206,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57292,"byte_end":57362,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57363,"byte_end":57366,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57367,"byte_end":57422,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57899,"byte_end":57907,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57681,"byte_end":57757,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57758,"byte_end":57761,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57762,"byte_end":57819,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57820,"byte_end":57887,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58075,"byte_end":58081,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":413}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":57942,"byte_end":58001,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58002,"byte_end":58005,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58006,"byte_end":58063,"line_start":25,"line_end":25,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":424},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61168,"byte_end":61175,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":59969,"byte_end":60057,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60058,"byte_end":60061,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60062,"byte_end":60137,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60138,"byte_end":60141,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60142,"byte_end":60222,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60223,"byte_end":60301,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60302,"byte_end":60379,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60380,"byte_end":60458,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60459,"byte_end":60507,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60508,"byte_end":60511,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60512,"byte_end":60572,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60573,"byte_end":60576,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60577,"byte_end":60591,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60592,"byte_end":60595,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60596,"byte_end":60603,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60604,"byte_end":60638,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60639,"byte_end":60677,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60678,"byte_end":60681,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60682,"byte_end":60737,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60738,"byte_end":60741,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60742,"byte_end":60764,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60765,"byte_end":60809,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60810,"byte_end":60861,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60862,"byte_end":60910,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60911,"byte_end":60943,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60944,"byte_end":60951,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60952,"byte_end":60955,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":60956,"byte_end":61002,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61003,"byte_end":61006,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61007,"byte_end":61046,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61047,"byte_end":61092,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61093,"byte_end":61144,"line_start":101,"line_end":101,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61145,"byte_end":61152,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61153,"byte_end":61160,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70469,"byte_end":70473,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":69976,"byte_end":70028,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70033,"byte_end":70036,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70041,"byte_end":70113,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70118,"byte_end":70190,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70195,"byte_end":70227,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70232,"byte_end":70235,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70240,"byte_end":70312,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70317,"byte_end":70387,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70392,"byte_end":70457,"line_start":340,"line_end":340,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71125,"byte_end":71138,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"fn poll_canceled<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70543,"byte_end":70604,"line_start":345,"line_end":345,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70609,"byte_end":70653,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70658,"byte_end":70661,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70666,"byte_end":70685,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70690,"byte_end":70693,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70698,"byte_end":70768,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70773,"byte_end":70847,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70852,"byte_end":70855,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70860,"byte_end":70928,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":70933,"byte_end":71006,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71011,"byte_end":71083,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71088,"byte_end":71113,"line_start":356,"line_end":356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71502,"byte_end":71514,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"fn cancellation<'_>(&'_ mut Self) -> Cancellation","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71234,"byte_end":71303,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71308,"byte_end":71352,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71357,"byte_end":71360,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71365,"byte_end":71436,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71441,"byte_end":71490,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71938,"byte_end":71949,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn is_canceled<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71599,"byte_end":71664,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71669,"byte_end":71690,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71695,"byte_end":71698,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71703,"byte_end":71778,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71783,"byte_end":71854,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":71859,"byte_end":71926,"line_start":375,"line_end":375,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72173,"byte_end":72188,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"fn is_connected_to<'_, '_>(&'_ Self, &'_ Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72011,"byte_end":72104,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72109,"byte_end":72161,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72325,"byte_end":72329,"line_start":388,"line_end":388,"column_start":8,"column_end":12},"name":"drop","qualname":"<Sender<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72423,"byte_end":72426,"line_start":394,"line_end":394,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72838,"byte_end":72850,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":536}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72570,"byte_end":72645,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72646,"byte_end":72649,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72650,"byte_end":72741,"line_start":401,"line_end":401,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72742,"byte_end":72809,"line_start":402,"line_end":402,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72964,"byte_end":72968,"line_start":411,"line_end":411,"column_start":8,"column_end":12},"name":"poll","qualname":"<Cancellation as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73240,"byte_end":73248,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73077,"byte_end":73148,"line_start":416,"line_end":416,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73149,"byte_end":73183,"line_start":417,"line_end":417,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73291,"byte_end":73294,"line_start":422,"line_end":422,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Canceled as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73856,"byte_end":73861,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73484,"byte_end":73557,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73562,"byte_end":73577,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73582,"byte_end":73585,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73590,"byte_end":73657,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73662,"byte_end":73724,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73729,"byte_end":73802,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73807,"byte_end":73844,"line_start":437,"line_end":437,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74292,"byte_end":74300,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn try_recv<'_>(&'_ mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73916,"byte_end":73983,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73988,"byte_end":73991,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73996,"byte_end":74063,"line_start":444,"line_end":444,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74068,"byte_end":74071,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74076,"byte_end":74149,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74154,"byte_end":74220,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74225,"byte_end":74228,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74233,"byte_end":74280,"line_start":449,"line_end":449,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74464,"byte_end":74468,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"poll","qualname":"<Receiver<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<T, Canceled>>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74626,"byte_end":74639,"line_start":464,"line_end":464,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Receiver<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74975,"byte_end":74979,"line_start":479,"line_end":479,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":75075,"byte_end":75078,"line_start":485,"line_end":485,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Receiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":2418,"byte_end":2422,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":2459,"byte_end":2463,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":2479,"byte_end":2483,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":3288,"byte_end":3295,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":3548,"byte_end":3555,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":3918,"byte_end":3925,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":53853,"byte_end":53858,"line_start":77,"line_end":77,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":53895,"byte_end":53900,"line_start":78,"line_end":78,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":53916,"byte_end":53920,"line_start":80,"line_end":80,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":54080,"byte_end":54085,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":56993,"byte_end":56998,"line_start":163,"line_end":163,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9429,"byte_end":9449,"line_start":117,"line_end":117,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9474,"byte_end":9492,"line_start":118,"line_end":118,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9929,"byte_end":9944,"line_start":131,"line_end":131,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10434,"byte_end":10451,"line_start":148,"line_end":148,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10994,"byte_end":11003,"line_start":174,"line_end":174,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11283,"byte_end":11292,"line_start":184,"line_end":184,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11302,"byte_end":11311,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11799,"byte_end":11811,"line_start":204,"line_end":204,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11992,"byte_end":12004,"line_start":210,"line_end":210,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12306,"byte_end":12318,"line_start":220,"line_end":220,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12334,"byte_end":12346,"line_start":222,"line_end":222,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12946,"byte_end":12958,"line_start":244,"line_end":244,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":13102,"byte_end":13114,"line_start":250,"line_end":250,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":13263,"byte_end":13275,"line_start":256,"line_end":256,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15313,"byte_end":15323,"line_start":324,"line_end":324,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17919,"byte_end":17939,"line_start":405,"line_end":405,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":20774,"byte_end":20792,"line_start":489,"line_end":489,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":27857,"byte_end":27863,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30708,"byte_end":30723,"line_start":766,"line_end":766,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33491,"byte_end":33497,"line_start":847,"line_end":847,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33589,"byte_end":33604,"line_start":853,"line_end":853,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33696,"byte_end":33716,"line_start":859,"line_end":859,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":34772,"byte_end":34790,"line_start":887,"line_end":887,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36041,"byte_end":36061,"line_start":919,"line_end":919,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36306,"byte_end":36324,"line_start":930,"line_end":930,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36575,"byte_end":36581,"line_start":941,"line_end":941,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36759,"byte_end":36774,"line_start":947,"line_end":947,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36989,"byte_end":36997,"line_start":959,"line_end":959,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40622,"byte_end":40630,"line_start":1051,"line_end":1051,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40662,"byte_end":40670,"line_start":1053,"line_end":1053,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40771,"byte_end":40779,"line_start":1059,"line_end":1059,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":41848,"byte_end":41856,"line_start":1091,"line_end":1091,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43017,"byte_end":43025,"line_start":1121,"line_end":1121,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43349,"byte_end":43366,"line_start":1133,"line_end":1133,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":46195,"byte_end":46212,"line_start":1205,"line_end":1205,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":46313,"byte_end":46330,"line_start":1211,"line_end":1211,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":47399,"byte_end":47416,"line_start":1243,"line_end":1243,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":48577,"byte_end":48594,"line_start":1273,"line_end":1273,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":48958,"byte_end":48972,"line_start":1291,"line_end":1291,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49255,"byte_end":49267,"line_start":1303,"line_end":1303,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49793,"byte_end":49807,"line_start":1321,"line_end":1321,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49844,"byte_end":49858,"line_start":1322,"line_end":1322,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49896,"byte_end":49908,"line_start":1324,"line_end":1324,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49945,"byte_end":49957,"line_start":1325,"line_end":1325,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49970,"byte_end":49975,"line_start":1327,"line_end":1327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58189,"byte_end":58197,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58222,"byte_end":58228,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61374,"byte_end":61379,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":69960,"byte_end":69966,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72306,"byte_end":72312,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72404,"byte_end":72410,"line_start":393,"line_end":393,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72912,"byte_end":72924,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73273,"byte_end":73281,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73445,"byte_end":73453,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73466,"byte_end":73474,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74403,"byte_end":74411,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74605,"byte_end":74613,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74954,"byte_end":74962,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":75054,"byte_end":75062,"line_start":484,"line_end":484,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":1140,"byte_end":1144,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lib.rs","byte_start":1215,"byte_end":1222,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":372}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":2418,"byte_end":2422,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":2459,"byte_end":2463,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":2479,"byte_end":2483,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":3288,"byte_end":3295,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":3548,"byte_end":3555,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/lock.rs","byte_start":3918,"byte_end":3925,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":53853,"byte_end":53858,"line_start":77,"line_end":77,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":53895,"byte_end":53900,"line_start":78,"line_end":78,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":53916,"byte_end":53920,"line_start":80,"line_end":80,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":54080,"byte_end":54085,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/queue.rs","byte_start":56993,"byte_end":56998,"line_start":163,"line_end":163,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9429,"byte_end":9449,"line_start":117,"line_end":117,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9474,"byte_end":9492,"line_start":118,"line_end":118,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9885,"byte_end":9889,"line_start":130,"line_end":130,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9892,"byte_end":9896,"line_start":130,"line_end":130,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9899,"byte_end":9904,"line_start":130,"line_end":130,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2882},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":9929,"byte_end":9944,"line_start":131,"line_end":131,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10434,"byte_end":10451,"line_start":148,"line_end":148,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":10994,"byte_end":11003,"line_start":174,"line_end":174,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11283,"byte_end":11292,"line_start":184,"line_end":184,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":481},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11302,"byte_end":11311,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11799,"byte_end":11811,"line_start":204,"line_end":204,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":11992,"byte_end":12004,"line_start":210,"line_end":210,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12306,"byte_end":12318,"line_start":220,"line_end":220,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":494},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12334,"byte_end":12346,"line_start":222,"line_end":222,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":12946,"byte_end":12958,"line_start":244,"line_end":244,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":13102,"byte_end":13114,"line_start":250,"line_end":250,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":13263,"byte_end":13275,"line_start":256,"line_end":256,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":170},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":15313,"byte_end":15323,"line_start":324,"line_end":324,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":17919,"byte_end":17939,"line_start":405,"line_end":405,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":20774,"byte_end":20792,"line_start":489,"line_end":489,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":27857,"byte_end":27863,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":30708,"byte_end":30723,"line_start":766,"line_end":766,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33491,"byte_end":33497,"line_start":847,"line_end":847,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33589,"byte_end":33604,"line_start":853,"line_end":853,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":33696,"byte_end":33716,"line_start":859,"line_end":859,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":34772,"byte_end":34790,"line_start":887,"line_end":887,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36041,"byte_end":36061,"line_start":919,"line_end":919,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36306,"byte_end":36324,"line_start":930,"line_end":930,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36575,"byte_end":36581,"line_start":941,"line_end":941,"column_start":24,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36759,"byte_end":36774,"line_start":947,"line_end":947,"column_start":24,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":36989,"byte_end":36997,"line_start":959,"line_end":959,"column_start":9,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40622,"byte_end":40630,"line_start":1051,"line_end":1051,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40662,"byte_end":40670,"line_start":1053,"line_end":1053,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":162},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":40771,"byte_end":40779,"line_start":1059,"line_end":1059,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":162},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":41848,"byte_end":41856,"line_start":1091,"line_end":1091,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43017,"byte_end":43025,"line_start":1121,"line_end":1121,"column_start":24,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":43349,"byte_end":43366,"line_start":1133,"line_end":1133,"column_start":9,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":46195,"byte_end":46212,"line_start":1205,"line_end":1205,"column_start":25,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":165},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":46313,"byte_end":46330,"line_start":1211,"line_end":1211,"column_start":20,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":165},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":47399,"byte_end":47416,"line_start":1243,"line_end":1243,"column_start":18,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":48577,"byte_end":48594,"line_start":1273,"line_end":1273,"column_start":24,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":48958,"byte_end":48972,"line_start":1291,"line_end":1291,"column_start":9,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49255,"byte_end":49267,"line_start":1303,"line_end":1303,"column_start":9,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49793,"byte_end":49807,"line_start":1321,"line_end":1321,"column_start":31,"column_end":45},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49844,"byte_end":49858,"line_start":1322,"line_end":1322,"column_start":31,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49896,"byte_end":49908,"line_start":1324,"line_end":1324,"column_start":31,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49945,"byte_end":49957,"line_start":1325,"line_end":1325,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/mpsc/mod.rs","byte_start":49970,"byte_end":49975,"line_start":1327,"line_end":1327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58189,"byte_end":58197,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":58222,"byte_end":58228,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":61374,"byte_end":61379,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":69960,"byte_end":69966,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72306,"byte_end":72312,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72404,"byte_end":72410,"line_start":393,"line_end":393,"column_start":24,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":72912,"byte_end":72924,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73273,"byte_end":73281,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73445,"byte_end":73453,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":73466,"byte_end":73474,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74403,"byte_end":74411,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74605,"byte_end":74613,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":408},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":74954,"byte_end":74962,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.28/src/oneshot.rs","byte_start":75054,"byte_end":75062,"line_start":484,"line_end":484,"column_start":24,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":10295}}]}