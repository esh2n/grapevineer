{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","mio","--edition=2018","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","-C","metadata=3c28f60c6cca2df9","-C","extra-filename=-3c28f60c6cca2df9","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","libc=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/liblibc-d3276b42626dfa48.rmeta","--extern","log=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/liblog-0835c1843c37d29d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libmio-3c28f60c6cca2df9.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[8424425407149752286,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","num":20,"id":{"name":"log","disambiguator":[12996859001740394752,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","num":21,"id":{"name":"cfg_if","disambiguator":[8037730387315135600,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","num":22,"id":{"name":"libc","disambiguator":[3878213621847001735,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/mod.rs","byte_start":12122846,"byte_end":12122854,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":285}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/mod.rs","byte_start":12122846,"byte_end":12122854,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":285}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/mod.rs","byte_start":12167879,"byte_end":12167889,"line_start":2,"line_end":2,"column_start":27,"column_end":37},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":643}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/mod.rs","byte_start":12123056,"byte_end":12123066,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":285}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/mod.rs","byte_start":47695,"byte_end":47696,"line_start":57,"line_end":57,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"IoSourceState, tcp, pipe, event, Events, Event, SourceFd, SocketAddr, Waker, Selector, udp, uds","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","byte_start":56374,"byte_end":56379,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","byte_start":56404,"byte_end":56410,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","byte_start":56412,"byte_end":56416,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","byte_start":56441,"byte_end":56447,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":1173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/mod.rs","byte_start":12211883,"byte_end":12211894,"line_start":2,"line_end":2,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/mod.rs","byte_start":12211931,"byte_end":12211940,"line_start":5,"line_end":5,"column_start":23,"column_end":32},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1109}},{"kind":"Use","ref_id":{"krate":0,"index":1173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211606,"byte_end":12211617,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211619,"byte_end":12211628,"line_start":29,"line_end":29,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211724,"byte_end":12211733,"line_start":34,"line_end":34,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/mod.rs","byte_start":12257765,"byte_end":12257777,"line_start":2,"line_end":2,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1439}},{"kind":"Use","ref_id":{"krate":0,"index":1585},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/mod.rs","byte_start":12257818,"byte_end":12257830,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1439}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/mod.rs","byte_start":12257867,"byte_end":12257877,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1439}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/mod.rs","byte_start":12257900,"byte_end":12257910,"line_start":10,"line_end":10,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1439}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211791,"byte_end":12211801,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211803,"byte_end":12211815,"line_start":39,"line_end":39,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":1585},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211817,"byte_end":12211829,"line_start":39,"line_end":39,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211831,"byte_end":12211841,"line_start":39,"line_end":39,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1465,"byte_end":1471,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1491,"byte_end":1499,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1516,"byte_end":1520,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1522,"byte_end":1530,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1010},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1602,"byte_end":1607,"line_start":70,"line_end":70,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":915},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1901,"byte_end":1904,"line_start":82,"line_end":82,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1906,"byte_end":1914,"line_start":82,"line_end":82,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":980},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1916,"byte_end":1922,"line_start":82,"line_end":82,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":248}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":248}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":44},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":129},{"krate":0,"index":1028},{"krate":0,"index":1108},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunused_imports, dead_code)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":0,"byte_end":120,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":307,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":387,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":468,"byte_end":518,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":519,"byte_end":522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":523,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":535,"byte_end":538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":539,"byte_end":618,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":619,"byte_end":696,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":697,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":701,"byte_end":735,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":736,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":740,"byte_end":777,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":778,"byte_end":825,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":826,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":830,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":850,"byte_end":927,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":928,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":941,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":945,"byte_end":1014,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1019,"byte_end":1031,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1036,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1106,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1132,"byte_end":1135,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1136,"byte_end":1204,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11952,"byte_end":11960,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11313,"byte_end":11346,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11347,"byte_end":11350,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11351,"byte_end":11428,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11429,"byte_end":11508,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11509,"byte_end":11585,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11586,"byte_end":11637,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11638,"byte_end":11641,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11642,"byte_end":11697,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11698,"byte_end":11746,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11747,"byte_end":11777,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11778,"byte_end":11842,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":11843,"byte_end":11885,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12285,"byte_end":12293,"line_start":29,"line_end":29,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12209,"byte_end":12270,"line_start":28,"line_end":28,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12444,"byte_end":12452,"line_start":32,"line_end":32,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12368,"byte_end":12429,"line_start":31,"line_end":31,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12752,"byte_end":12755,"line_start":41,"line_end":41,"column_start":15,"column_end":18},"name":"AIO","qualname":"::interest::Interest::AIO","value":"Interest","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing AIO completion interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing AIO completion interests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12527,"byte_end":12594,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\ntarget_os = \"macos\",))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12599,"byte_end":12737,"line_start":35,"line_end":40,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13695,"byte_end":13698,"line_start":64,"line_end":64,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13244,"byte_end":13276,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13281,"byte_end":13284,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13289,"byte_end":13357,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13362,"byte_end":13384,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13389,"byte_end":13392,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13397,"byte_end":13404,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13409,"byte_end":13431,"line_start":57,"line_end":57,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13436,"byte_end":13439,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13444,"byte_end":13519,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13524,"byte_end":13574,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13579,"byte_end":13620,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13625,"byte_end":13632,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13637,"byte_end":13677,"line_start":63,"line_end":63,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14629,"byte_end":14635,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13831,"byte_end":13874,"line_start":68,"line_end":68,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13879,"byte_end":13882,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13887,"byte_end":13955,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13960,"byte_end":13963,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13968,"byte_end":13975,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":13980,"byte_end":14002,"line_start":73,"line_end":73,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14007,"byte_end":14010,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14015,"byte_end":14093,"line_start":75,"line_end":75,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14098,"byte_end":14101,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14106,"byte_end":14167,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14172,"byte_end":14242,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14247,"byte_end":14286,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14291,"byte_end":14329,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14334,"byte_end":14337,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14342,"byte_end":14404,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14409,"byte_end":14469,"line_start":83,"line_end":83,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14474,"byte_end":14477,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14482,"byte_end":14544,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14549,"byte_end":14605,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14610,"byte_end":14617,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14836,"byte_end":14847,"line_start":93,"line_end":93,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14760,"byte_end":14818,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14990,"byte_end":15001,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":14914,"byte_end":14972,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15140,"byte_end":15146,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15068,"byte_end":15122,"line_start":102,"line_end":102,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15280,"byte_end":15286,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15208,"byte_end":15262,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15425,"byte_end":15436,"line_start":113,"line_end":113,"column_start":18,"column_end":29},"name":"is_priority","qualname":"<Interest>::is_priority","value":"const fn is_priority(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains priority readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains priority readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15348,"byte_end":15407,"line_start":112,"line_end":112,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15578,"byte_end":15583,"line_start":122,"line_end":122,"column_start":8,"column_end":13},"name":"bitor","qualname":"<Interest as std::ops::BitOr>::bitor","value":"fn bitor(Self, Self) -> Self","parent":{"krate":2,"index":3395},"children":[],"decl_id":{"krate":2,"index":3398},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15561,"byte_end":15570,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15704,"byte_end":15716,"line_start":129,"line_end":129,"column_start":8,"column_end":20},"name":"bitor_assign","qualname":"<Interest as std::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign<'_>(&'_ mut Self, Self)","parent":{"krate":2,"index":3421},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15687,"byte_end":15696,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15826,"byte_end":15829,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Interest as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28183,"byte_end":28187,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17427,"byte_end":17483,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17484,"byte_end":17487,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17488,"byte_end":17564,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17565,"byte_end":17644,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17645,"byte_end":17723,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17724,"byte_end":17794,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17795,"byte_end":17809,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17810,"byte_end":17813,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17814,"byte_end":17892,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17893,"byte_end":17965,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":17966,"byte_end":18041,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18042,"byte_end":18118,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18119,"byte_end":18196,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18197,"byte_end":18271,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18272,"byte_end":18314,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18315,"byte_end":18318,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18319,"byte_end":18367,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18368,"byte_end":18421,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18422,"byte_end":18477,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18478,"byte_end":18532,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18533,"byte_end":18536,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18537,"byte_end":18551,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18552,"byte_end":18555,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18556,"byte_end":18617,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18618,"byte_end":18621,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18769,"byte_end":18797,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18798,"byte_end":18845,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18846,"byte_end":18891,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18892,"byte_end":18920,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18921,"byte_end":18924,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18925,"byte_end":18962,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18963,"byte_end":18966,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":18967,"byte_end":19009,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19010,"byte_end":19060,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19061,"byte_end":19108,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19109,"byte_end":19112,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19113,"byte_end":19190,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19191,"byte_end":19223,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19224,"byte_end":19273,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19274,"byte_end":19277,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19278,"byte_end":19303,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19304,"byte_end":19367,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19368,"byte_end":19371,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19372,"byte_end":19410,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19411,"byte_end":19505,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19506,"byte_end":19509,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19510,"byte_end":19586,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19587,"byte_end":19618,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19619,"byte_end":19629,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19630,"byte_end":19668,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19669,"byte_end":19672,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19673,"byte_end":19703,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19704,"byte_end":19769,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19770,"byte_end":19849,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19850,"byte_end":19876,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19877,"byte_end":19907,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19908,"byte_end":19921,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19922,"byte_end":19931,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19932,"byte_end":19937,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19938,"byte_end":19945,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19946,"byte_end":19953,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19954,"byte_end":19957,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19958,"byte_end":19975,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19976,"byte_end":19979,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":19980,"byte_end":20056,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20057,"byte_end":20119,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20120,"byte_end":20123,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20124,"byte_end":20147,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20148,"byte_end":20151,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20152,"byte_end":20221,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20222,"byte_end":20291,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20292,"byte_end":20370,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20371,"byte_end":20445,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20446,"byte_end":20481,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20482,"byte_end":20485,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20486,"byte_end":20562,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20563,"byte_end":20641,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20642,"byte_end":20655,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20656,"byte_end":20659,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20660,"byte_end":20686,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20687,"byte_end":20690,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20691,"byte_end":20766,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20767,"byte_end":20845,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20846,"byte_end":20924,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20925,"byte_end":20978,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20979,"byte_end":20982,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":20983,"byte_end":21033,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21034,"byte_end":21037,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21038,"byte_end":21066,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21067,"byte_end":21070,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21071,"byte_end":21145,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21146,"byte_end":21224,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21225,"byte_end":21297,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21298,"byte_end":21372,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21373,"byte_end":21450,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21451,"byte_end":21522,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21523,"byte_end":21594,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21595,"byte_end":21673,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21674,"byte_end":21748,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21749,"byte_end":21782,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21783,"byte_end":21786,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21787,"byte_end":21867,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21868,"byte_end":21937,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":21938,"byte_end":22015,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22016,"byte_end":22062,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22063,"byte_end":22066,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22067,"byte_end":22129,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22130,"byte_end":22192,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22193,"byte_end":22249,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22250,"byte_end":22318,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22319,"byte_end":22389,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22390,"byte_end":22393,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22394,"byte_end":22421,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22422,"byte_end":22425,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22426,"byte_end":22498,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22499,"byte_end":22576,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22577,"byte_end":22588,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22589,"byte_end":22592,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22593,"byte_end":22609,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22610,"byte_end":22613,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22761,"byte_end":22789,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22790,"byte_end":22809,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22810,"byte_end":22857,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22858,"byte_end":22895,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22896,"byte_end":22924,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22925,"byte_end":22954,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22955,"byte_end":22983,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":22984,"byte_end":23004,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23005,"byte_end":23008,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23009,"byte_end":23062,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23063,"byte_end":23115,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23116,"byte_end":23179,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23180,"byte_end":23183,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23184,"byte_end":23226,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23227,"byte_end":23230,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23231,"byte_end":23259,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23260,"byte_end":23263,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23264,"byte_end":23342,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23343,"byte_end":23360,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23361,"byte_end":23453,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23454,"byte_end":23470,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23471,"byte_end":23478,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23479,"byte_end":23486,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23487,"byte_end":23490,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23491,"byte_end":23514,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23515,"byte_end":23518,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23519,"byte_end":23597,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23598,"byte_end":23677,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23678,"byte_end":23758,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23759,"byte_end":23836,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23837,"byte_end":23881,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23882,"byte_end":23885,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23886,"byte_end":23932,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23933,"byte_end":23936,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Accessing raw fd/socket/handle","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23937,"byte_end":23975,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23976,"byte_end":23979,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Mio makes it possible for many types to be converted into a raw file","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":23980,"byte_end":24052,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ descriptor (fd, Unix), socket (Windows) or handle (Windows). This makes it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24053,"byte_end":24131,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ possible to support more operations on the type than Mio supports, for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24132,"byte_end":24206,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ example it makes [mio-aio] possible. However accessing the raw fd is not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24207,"byte_end":24283,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ without it's pitfalls.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24284,"byte_end":24310,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24311,"byte_end":24314,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Specifically performing I/O operations outside of Mio on these types (via","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24315,"byte_end":24392,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ the raw fd) has unspecified behaviour. It could cause no more events to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24393,"byte_end":24471,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ generated for the type even though it returned `WouldBlock` (in an operation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24472,"byte_end":24552,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ directly accessing the fd). The behaviour is OS specific and Mio can only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24553,"byte_end":24630,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ guarantee cross-platform behaviour if it can control the I/O.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24631,"byte_end":24696,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24697,"byte_end":24700,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [mio-aio]: https://github.com/asomers/mio-aio","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24701,"byte_end":24750,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24751,"byte_end":24754,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24755,"byte_end":24830,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being considered","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24831,"byte_end":24913,"line_start":183,"line_end":183,"column_start":1,"column_end":83}},{"value":"/ a breaking change, don't depend on this, it's just here to inform the user.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24914,"byte_end":24993,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ Currently the kqueue and epoll implementation support direct I/O operations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":24994,"byte_end":25073,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ on the fd without Mio's knowledge. Windows however needs **all** I/O","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25074,"byte_end":25146,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ operations to go through Mio otherwise it is not able to update it's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25147,"byte_end":25219,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ internal state properly and won't generate events.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25220,"byte_end":25274,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25275,"byte_end":25278,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ### Polling without registering event sources","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25279,"byte_end":25328,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25329,"byte_end":25332,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25333,"byte_end":25336,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25337,"byte_end":25412,"line_start":193,"line_end":193,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25413,"byte_end":25484,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/ considered a breaking change, don't depend on this, it's just here to inform","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25485,"byte_end":25565,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/ the user. On platforms that use epoll, kqueue or IOCP (see implementation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25566,"byte_end":25643,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ notes below) polling without previously registering [event sources] will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25644,"byte_end":25720,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ result in sleeping forever, only a process signal will be able to wake up","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25721,"byte_end":25798,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ the thread.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25799,"byte_end":25814,"line_start":199,"line_end":199,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25815,"byte_end":25818,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ On WASM/WASI this is different as it doesn't support process signals,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25819,"byte_end":25892,"line_start":201,"line_end":201,"column_start":1,"column_end":74}},{"value":"/ furthermore the WASI specification doesn't specify a behaviour in this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25893,"byte_end":25967,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ situation, thus it's up to the implementation what to do here. As an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":25968,"byte_end":26040,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/ example, the wasmtime runtime will return `EINVAL` in this situation, but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26041,"byte_end":26118,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/ different runtimes may return different results. If you have further","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26119,"byte_end":26191,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ insights or thoughts about this situation (and/or how Mio should handle it)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26192,"byte_end":26271,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ please add you comment to [pull request#1580].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26272,"byte_end":26322,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26323,"byte_end":26326,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [event sources]: crate::event::Source","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26327,"byte_end":26368,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ [pull request#1580]: https://github.com/tokio-rs/mio/pull/1580","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26369,"byte_end":26435,"line_start":210,"line_end":210,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26436,"byte_end":26439,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26440,"byte_end":26466,"line_start":212,"line_end":212,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26467,"byte_end":26470,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26471,"byte_end":26541,"line_start":214,"line_end":214,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26542,"byte_end":26545,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26546,"byte_end":26579,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26580,"byte_end":26613,"line_start":217,"line_end":217,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26614,"byte_end":26647,"line_start":218,"line_end":218,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26648,"byte_end":26681,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26682,"byte_end":26715,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26716,"byte_end":26749,"line_start":221,"line_end":221,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26750,"byte_end":26783,"line_start":222,"line_end":222,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26784,"byte_end":26817,"line_start":223,"line_end":223,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26818,"byte_end":26851,"line_start":224,"line_end":224,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26852,"byte_end":26885,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26886,"byte_end":26919,"line_start":226,"line_end":226,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26920,"byte_end":26953,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26954,"byte_end":26957,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":26958,"byte_end":27032,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27033,"byte_end":27108,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27109,"byte_end":27182,"line_start":231,"line_end":231,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27183,"byte_end":27263,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27264,"byte_end":27292,"line_start":233,"line_end":233,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27293,"byte_end":27296,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27297,"byte_end":27375,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27376,"byte_end":27455,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27456,"byte_end":27536,"line_start":237,"line_end":237,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27537,"byte_end":27608,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27609,"byte_end":27689,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27690,"byte_end":27766,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27767,"byte_end":27778,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27779,"byte_end":27782,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27783,"byte_end":27846,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27847,"byte_end":27919,"line_start":244,"line_end":244,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://docs.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":27920,"byte_end":28006,"line_start":245,"line_end":245,"column_start":1,"column_end":87}},{"value":"/ [`signalfd`]: https://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28007,"byte_end":28078,"line_start":246,"line_end":246,"column_start":1,"column_end":72}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28079,"byte_end":28122,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28123,"byte_end":28171,"line_start":248,"line_end":248,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28257,"byte_end":28265,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":84}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28217,"byte_end":28245,"line_start":253,"line_end":253,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30062,"byte_end":30065,"line_start":300,"line_end":300,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[{"value":"cfg(feature = \"os-poll\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/macros.rs","byte_start":9773,"byte_end":9800,"line_start":10,"line_end":10,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30330,"byte_end":30338,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"fn registry<'_>(&'_ Self) -> &'_ Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30230,"byte_end":30292,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30297,"byte_end":30318,"line_start":308,"line_end":308,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34465,"byte_end":34469,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"fn poll<'_, '_>(&'_ mut Self, &'_ mut Events, Option<Duration>)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30395,"byte_end":30424,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30429,"byte_end":30432,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30437,"byte_end":30512,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30517,"byte_end":30592,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30597,"byte_end":30670,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30675,"byte_end":30751,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30756,"byte_end":30820,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30825,"byte_end":30828,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30833,"byte_end":30910,"line_start":321,"line_end":321,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30915,"byte_end":30990,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":30995,"byte_end":31068,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31073,"byte_end":31113,"line_start":324,"line_end":324,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31118,"byte_end":31121,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31126,"byte_end":31199,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31204,"byte_end":31280,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31285,"byte_end":31358,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31363,"byte_end":31437,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31442,"byte_end":31515,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31520,"byte_end":31554,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31559,"byte_end":31562,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31567,"byte_end":31633,"line_start":333,"line_end":333,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31638,"byte_end":31707,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31712,"byte_end":31771,"line_start":335,"line_end":335,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31776,"byte_end":31779,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31784,"byte_end":31857,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31862,"byte_end":31874,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31879,"byte_end":31882,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31887,"byte_end":31935,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":31940,"byte_end":32006,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32011,"byte_end":32077,"line_start":342,"line_end":342,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32082,"byte_end":32112,"line_start":343,"line_end":343,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32117,"byte_end":32169,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32174,"byte_end":32177,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32182,"byte_end":32193,"line_start":346,"line_end":346,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32198,"byte_end":32201,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32206,"byte_end":32280,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32285,"byte_end":32357,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32362,"byte_end":32392,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32397,"byte_end":32400,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Currently if the `timeout` elapses without any readiness events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32405,"byte_end":32472,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ triggering this will return `Ok(())`. However we're not guaranteeing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32477,"byte_end":32549,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ this behaviour as this depends on the OS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32554,"byte_end":32599,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32604,"byte_end":32607,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32612,"byte_end":32626,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32631,"byte_end":32634,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32639,"byte_end":32700,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32705,"byte_end":32708,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32868,"byte_end":32896,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32901,"byte_end":32948,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":32953,"byte_end":32998,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33003,"byte_end":33031,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33036,"byte_end":33039,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33044,"byte_end":33088,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33093,"byte_end":33113,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33118,"byte_end":33121,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33126,"byte_end":33168,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33173,"byte_end":33223,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33228,"byte_end":33270,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33275,"byte_end":33319,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33324,"byte_end":33327,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33332,"byte_end":33374,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33379,"byte_end":33406,"line_start":376,"line_end":376,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33411,"byte_end":33443,"line_start":377,"line_end":377,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33448,"byte_end":33455,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33460,"byte_end":33463,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33468,"byte_end":33545,"line_start":380,"line_end":380,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33550,"byte_end":33582,"line_start":381,"line_end":381,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33587,"byte_end":33636,"line_start":382,"line_end":382,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33641,"byte_end":33644,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33649,"byte_end":33674,"line_start":384,"line_end":384,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33679,"byte_end":33726,"line_start":385,"line_end":385,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33731,"byte_end":33734,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33739,"byte_end":33777,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33782,"byte_end":33811,"line_start":388,"line_end":388,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33816,"byte_end":33836,"line_start":389,"line_end":389,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33841,"byte_end":33858,"line_start":390,"line_end":390,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33863,"byte_end":33913,"line_start":391,"line_end":391,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33918,"byte_end":33921,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":33926,"byte_end":34002,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34007,"byte_end":34038,"line_start":394,"line_end":394,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34043,"byte_end":34053,"line_start":395,"line_end":395,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34058,"byte_end":34096,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34101,"byte_end":34104,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34109,"byte_end":34139,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34144,"byte_end":34209,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34214,"byte_end":34293,"line_start":400,"line_end":400,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34298,"byte_end":34324,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34329,"byte_end":34359,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34364,"byte_end":34377,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34382,"byte_end":34391,"line_start":404,"line_end":404,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34396,"byte_end":34401,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34406,"byte_end":34413,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34418,"byte_end":34425,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34430,"byte_end":34433,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34438,"byte_end":34453,"line_start":409,"line_end":409,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34663,"byte_end":34672,"line_start":417,"line_end":417,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Poll as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34768,"byte_end":34771,"line_start":423,"line_end":423,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Poll as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38893,"byte_end":38901,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"fn register<S, '_, '_>(&'_ Self, &'_ mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34897,"byte_end":34956,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34961,"byte_end":34964,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34969,"byte_end":35043,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35048,"byte_end":35123,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35128,"byte_end":35198,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35203,"byte_end":35206,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35211,"byte_end":35259,"line_start":435,"line_end":435,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35264,"byte_end":35267,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35272,"byte_end":35287,"line_start":437,"line_end":437,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35292,"byte_end":35295,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ `source: &mut S: event::Source`: This is the source of events that the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35300,"byte_end":35374,"line_start":439,"line_end":439,"column_start":5,"column_end":79}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35379,"byte_end":35442,"line_start":440,"line_end":440,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35447,"byte_end":35450,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35455,"byte_end":35529,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35534,"byte_end":35608,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35613,"byte_end":35681,"line_start":444,"line_end":444,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35686,"byte_end":35755,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35760,"byte_end":35787,"line_start":446,"line_end":446,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35792,"byte_end":35795,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35800,"byte_end":35869,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35874,"byte_end":35895,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35900,"byte_end":35903,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35908,"byte_end":35982,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":35987,"byte_end":36061,"line_start":452,"line_end":452,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36066,"byte_end":36097,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36102,"byte_end":36105,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36110,"byte_end":36185,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36190,"byte_end":36244,"line_start":456,"line_end":456,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36249,"byte_end":36252,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36257,"byte_end":36333,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36338,"byte_end":36368,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36373,"byte_end":36376,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36381,"byte_end":36392,"line_start":461,"line_end":461,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36397,"byte_end":36400,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36405,"byte_end":36476,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36481,"byte_end":36553,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36558,"byte_end":36627,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/ `register` is unspecified behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36632,"byte_end":36671,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36676,"byte_end":36679,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36684,"byte_end":36759,"line_start":468,"line_end":468,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36764,"byte_end":36839,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36844,"byte_end":36917,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36922,"byte_end":36990,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":36995,"byte_end":37014,"line_start":472,"line_end":472,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37019,"byte_end":37022,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37027,"byte_end":37075,"line_start":474,"line_end":474,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37080,"byte_end":37122,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37127,"byte_end":37185,"line_start":476,"line_end":476,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37190,"byte_end":37248,"line_start":477,"line_end":477,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37253,"byte_end":37285,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37290,"byte_end":37293,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37298,"byte_end":37312,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37317,"byte_end":37320,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37480,"byte_end":37508,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37513,"byte_end":37532,"line_start":485,"line_end":485,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37537,"byte_end":37584,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37589,"byte_end":37634,"line_start":487,"line_end":487,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37639,"byte_end":37667,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37672,"byte_end":37701,"line_start":489,"line_end":489,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37706,"byte_end":37745,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37750,"byte_end":37753,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37758,"byte_end":37790,"line_start":492,"line_end":492,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37795,"byte_end":37798,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37803,"byte_end":37856,"line_start":494,"line_end":494,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37861,"byte_end":37913,"line_start":495,"line_end":495,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37918,"byte_end":37983,"line_start":496,"line_end":496,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37988,"byte_end":37991,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":37996,"byte_end":38034,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38039,"byte_end":38068,"line_start":499,"line_end":499,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38073,"byte_end":38093,"line_start":500,"line_end":500,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38098,"byte_end":38115,"line_start":501,"line_end":501,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38120,"byte_end":38170,"line_start":502,"line_end":502,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38175,"byte_end":38178,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38183,"byte_end":38232,"line_start":504,"line_end":504,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38237,"byte_end":38268,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38273,"byte_end":38318,"line_start":506,"line_end":506,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38323,"byte_end":38326,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38331,"byte_end":38341,"line_start":508,"line_end":508,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38346,"byte_end":38384,"line_start":509,"line_end":509,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38389,"byte_end":38392,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38397,"byte_end":38428,"line_start":511,"line_end":511,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38433,"byte_end":38468,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38473,"byte_end":38499,"line_start":513,"line_end":513,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38504,"byte_end":38513,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38518,"byte_end":38521,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38526,"byte_end":38568,"line_start":516,"line_end":516,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38573,"byte_end":38622,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38627,"byte_end":38630,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38635,"byte_end":38665,"line_start":519,"line_end":519,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38670,"byte_end":38712,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38717,"byte_end":38780,"line_start":521,"line_end":521,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38785,"byte_end":38815,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38820,"byte_end":38833,"line_start":523,"line_end":523,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38838,"byte_end":38847,"line_start":524,"line_end":524,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38852,"byte_end":38857,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38862,"byte_end":38869,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":38874,"byte_end":38881,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41569,"byte_end":41579,"line_start":596,"line_end":596,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"fn reregister<S, '_, '_>(&'_ Self, &'_ mut S, Token, Interest)\n-> io::Result<()> where S: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39239,"byte_end":39301,"line_start":540,"line_end":540,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39306,"byte_end":39309,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39314,"byte_end":39383,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39388,"byte_end":39461,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39466,"byte_end":39542,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39547,"byte_end":39550,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39555,"byte_end":39630,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39635,"byte_end":39711,"line_start":547,"line_end":547,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39716,"byte_end":39791,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39796,"byte_end":39825,"line_start":549,"line_end":549,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39830,"byte_end":39833,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39838,"byte_end":39914,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39919,"byte_end":39972,"line_start":552,"line_end":552,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39977,"byte_end":39980,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":39985,"byte_end":40054,"line_start":554,"line_end":554,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40059,"byte_end":40129,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40134,"byte_end":40146,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40151,"byte_end":40154,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40159,"byte_end":40173,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40178,"byte_end":40181,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40341,"byte_end":40369,"line_start":562,"line_end":562,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40374,"byte_end":40393,"line_start":563,"line_end":563,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40398,"byte_end":40445,"line_start":564,"line_end":564,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40450,"byte_end":40487,"line_start":565,"line_end":565,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40492,"byte_end":40520,"line_start":566,"line_end":566,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40525,"byte_end":40554,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40559,"byte_end":40562,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40567,"byte_end":40595,"line_start":569,"line_end":569,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40600,"byte_end":40603,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40608,"byte_end":40661,"line_start":571,"line_end":571,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40666,"byte_end":40718,"line_start":572,"line_end":572,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40723,"byte_end":40788,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40793,"byte_end":40796,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40801,"byte_end":40860,"line_start":575,"line_end":575,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40865,"byte_end":40894,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40899,"byte_end":40919,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40924,"byte_end":40941,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40946,"byte_end":40975,"line_start":579,"line_end":579,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40980,"byte_end":40983,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":40988,"byte_end":41063,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41068,"byte_end":41118,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41123,"byte_end":41154,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41159,"byte_end":41179,"line_start":584,"line_end":584,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41184,"byte_end":41201,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41206,"byte_end":41235,"line_start":586,"line_end":586,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41240,"byte_end":41256,"line_start":587,"line_end":587,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41261,"byte_end":41268,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41273,"byte_end":41280,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41285,"byte_end":41288,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41293,"byte_end":41341,"line_start":591,"line_end":591,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41346,"byte_end":41378,"line_start":592,"line_end":592,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41383,"byte_end":41437,"line_start":593,"line_end":593,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41442,"byte_end":41497,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41502,"byte_end":41557,"line_start":595,"line_end":595,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44050,"byte_end":44060,"line_start":659,"line_end":659,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"fn deregister<S, '_, '_>(&'_ Self, &'_ mut S) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41921,"byte_end":41982,"line_start":608,"line_end":608,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41987,"byte_end":41990,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":41995,"byte_end":42071,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42076,"byte_end":42147,"line_start":611,"line_end":611,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42152,"byte_end":42226,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42231,"byte_end":42303,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42308,"byte_end":42384,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42389,"byte_end":42462,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42467,"byte_end":42480,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42485,"byte_end":42488,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42493,"byte_end":42569,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42574,"byte_end":42627,"line_start":619,"line_end":619,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42632,"byte_end":42635,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42640,"byte_end":42703,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42708,"byte_end":42780,"line_start":622,"line_end":622,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is unspecified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42785,"byte_end":42837,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42842,"byte_end":42845,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42850,"byte_end":42864,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":42869,"byte_end":42872,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43032,"byte_end":43060,"line_start":629,"line_end":629,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43065,"byte_end":43084,"line_start":630,"line_end":630,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43089,"byte_end":43136,"line_start":631,"line_end":631,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43141,"byte_end":43186,"line_start":632,"line_end":632,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43191,"byte_end":43219,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43224,"byte_end":43253,"line_start":634,"line_end":634,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43258,"byte_end":43286,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43291,"byte_end":43294,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43299,"byte_end":43331,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43336,"byte_end":43339,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43344,"byte_end":43397,"line_start":639,"line_end":639,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43402,"byte_end":43454,"line_start":640,"line_end":640,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43459,"byte_end":43524,"line_start":641,"line_end":641,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43529,"byte_end":43532,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43537,"byte_end":43575,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43580,"byte_end":43609,"line_start":644,"line_end":644,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43614,"byte_end":43634,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43639,"byte_end":43656,"line_start":646,"line_end":646,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43661,"byte_end":43690,"line_start":647,"line_end":647,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43695,"byte_end":43698,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43703,"byte_end":43748,"line_start":649,"line_end":649,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43753,"byte_end":43756,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43761,"byte_end":43810,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43815,"byte_end":43818,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43823,"byte_end":43894,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43899,"byte_end":43957,"line_start":654,"line_end":654,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43962,"byte_end":43993,"line_start":655,"line_end":655,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":43998,"byte_end":44014,"line_start":656,"line_end":656,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44019,"byte_end":44026,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44031,"byte_end":44038,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44457,"byte_end":44466,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"fn try_clone<'_>(&'_ Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44257,"byte_end":44306,"line_start":667,"line_end":667,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44311,"byte_end":44314,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44319,"byte_end":44392,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":44397,"byte_end":44445,"line_start":670,"line_end":670,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":45177,"byte_end":45180,"line_start":695,"line_end":695,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Registry as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":45338,"byte_end":45347,"line_start":702,"line_end":702,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Registry as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150735,"byte_end":12150743,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148011,"byte_end":12148083,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148084,"byte_end":12148087,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148088,"byte_end":12148157,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148158,"byte_end":12148161,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148162,"byte_end":12148235,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148236,"byte_end":12148314,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148315,"byte_end":12148360,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148361,"byte_end":12148364,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148365,"byte_end":12148441,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148442,"byte_end":12148514,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148515,"byte_end":12148595,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148596,"byte_end":12148657,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148658,"byte_end":12148719,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148720,"byte_end":12148723,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148724,"byte_end":12148773,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148774,"byte_end":12148807,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148808,"byte_end":12148875,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148876,"byte_end":12148879,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148880,"byte_end":12148894,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148895,"byte_end":12148898,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148899,"byte_end":12148915,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12148916,"byte_end":12148919,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149127,"byte_end":12149155,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149156,"byte_end":12149203,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149204,"byte_end":12149241,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149242,"byte_end":12149270,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149271,"byte_end":12149274,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149275,"byte_end":12149310,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149311,"byte_end":12149341,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149342,"byte_end":12149345,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149346,"byte_end":12149372,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149373,"byte_end":12149426,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149427,"byte_end":12149430,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149431,"byte_end":12149459,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149460,"byte_end":12149463,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149464,"byte_end":12149492,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149493,"byte_end":12149522,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149523,"byte_end":12149568,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149569,"byte_end":12149586,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149587,"byte_end":12149616,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149617,"byte_end":12149633,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149634,"byte_end":12149641,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149642,"byte_end":12149649,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149650,"byte_end":12149653,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149654,"byte_end":12149729,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149730,"byte_end":12149733,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149887,"byte_end":12149935,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149936,"byte_end":12149964,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149965,"byte_end":12149968,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12149969,"byte_end":12150002,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150003,"byte_end":12150019,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150020,"byte_end":12150023,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150024,"byte_end":12150049,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150050,"byte_end":12150071,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150072,"byte_end":12150090,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150091,"byte_end":12150096,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150097,"byte_end":12150100,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150101,"byte_end":12150134,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150135,"byte_end":12150221,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150222,"byte_end":12150251,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150252,"byte_end":12150261,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150262,"byte_end":12150329,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150330,"byte_end":12150339,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150340,"byte_end":12150343,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150344,"byte_end":12150432,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150433,"byte_end":12150462,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150463,"byte_end":12150472,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150473,"byte_end":12150542,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150543,"byte_end":12150552,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150553,"byte_end":12150556,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150557,"byte_end":12150630,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150631,"byte_end":12150682,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150683,"byte_end":12150692,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150693,"byte_end":12150698,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150699,"byte_end":12150706,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150748,"byte_end":12150761,"line_start":92,"line_end":92,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150814,"byte_end":12150822,"line_start":95,"line_end":95,"column_start":8,"column_end":16},"name":"register","qualname":"<SourceFd as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12151027,"byte_end":12151037,"line_start":104,"line_end":104,"column_start":8,"column_end":18},"name":"reregister","qualname":"<SourceFd as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12151244,"byte_end":12151254,"line_start":113,"line_end":113,"column_start":8,"column_end":18},"name":"deregister","qualname":"<SourceFd as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12174007,"byte_end":12174017,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173641,"byte_end":12173701,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173702,"byte_end":12173705,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173706,"byte_end":12173782,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173783,"byte_end":12173859,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173860,"byte_end":12173904,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173905,"byte_end":12173908,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173909,"byte_end":12173964,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12173965,"byte_end":12173995,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12176176,"byte_end":12176186,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"fn is_unnamed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12176506,"byte_end":12176517,"line_start":90,"line_end":90,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"fn as_pathname<'_>(&'_ Self) -> Option<&'_ Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12176959,"byte_end":12176980,"line_start":102,"line_end":102,"column_start":16,"column_end":37},"name":"as_abstract_namespace","qualname":"<SocketAddr>::as_abstract_namespace","value":"fn as_abstract_namespace<'_>(&'_ Self) -> Option<&'_ [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is an abstract namespace\n without the leading null byte.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12177215,"byte_end":12177218,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SocketAddr as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188534,"byte_end":12188537,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12183897,"byte_end":12183937,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12183938,"byte_end":12183941,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12183942,"byte_end":12184020,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184021,"byte_end":12184071,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184072,"byte_end":12184075,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184076,"byte_end":12184156,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184157,"byte_end":12184237,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184238,"byte_end":12184263,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184264,"byte_end":12184267,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184268,"byte_end":12184353,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184354,"byte_end":12184357,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184358,"byte_end":12184370,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184371,"byte_end":12184374,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184375,"byte_end":12184449,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184450,"byte_end":12184530,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184531,"byte_end":12184607,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184608,"byte_end":12184611,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184612,"byte_end":12184692,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184693,"byte_end":12184765,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184766,"byte_end":12184841,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184842,"byte_end":12184919,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12184920,"byte_end":12184999,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185000,"byte_end":12185003,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185004,"byte_end":12185040,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185041,"byte_end":12185089,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185090,"byte_end":12185126,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185127,"byte_end":12185174,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185175,"byte_end":12185227,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185228,"byte_end":12185282,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185283,"byte_end":12185286,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185287,"byte_end":12185306,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185307,"byte_end":12185310,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185311,"byte_end":12185384,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185385,"byte_end":12185454,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185455,"byte_end":12185458,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185459,"byte_end":12185542,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185543,"byte_end":12185546,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185547,"byte_end":12185561,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185562,"byte_end":12185565,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185566,"byte_end":12185643,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185644,"byte_end":12185662,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185663,"byte_end":12185666,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185667,"byte_end":12185674,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185675,"byte_end":12185712,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185713,"byte_end":12185716,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185717,"byte_end":12185762,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185763,"byte_end":12185787,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185788,"byte_end":12185791,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185792,"byte_end":12185845,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185846,"byte_end":12185884,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185885,"byte_end":12185923,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185924,"byte_end":12185927,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185928,"byte_end":12185963,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12185964,"byte_end":12186025,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186026,"byte_end":12186058,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186059,"byte_end":12186105,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186106,"byte_end":12186109,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186110,"byte_end":12186135,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186136,"byte_end":12186186,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186187,"byte_end":12186190,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186191,"byte_end":12186232,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186233,"byte_end":12186309,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186310,"byte_end":12186384,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186385,"byte_end":12186388,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186389,"byte_end":12186431,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186432,"byte_end":12186435,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186436,"byte_end":12186446,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186447,"byte_end":12186485,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186486,"byte_end":12186489,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186490,"byte_end":12186526,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186527,"byte_end":12186560,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186561,"byte_end":12186607,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186608,"byte_end":12186661,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186662,"byte_end":12186738,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186739,"byte_end":12186814,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186815,"byte_end":12186863,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186864,"byte_end":12186928,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186929,"byte_end":12186961,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186962,"byte_end":12186996,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12186997,"byte_end":12187025,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187026,"byte_end":12187056,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187057,"byte_end":12187099,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187100,"byte_end":12187153,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187154,"byte_end":12187213,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187214,"byte_end":12187259,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187260,"byte_end":12187304,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187305,"byte_end":12187339,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187340,"byte_end":12187358,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187359,"byte_end":12187395,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187396,"byte_end":12187409,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187410,"byte_end":12187419,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187420,"byte_end":12187425,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187426,"byte_end":12187433,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187434,"byte_end":12187441,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187442,"byte_end":12187445,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187446,"byte_end":12187510,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187511,"byte_end":12187514,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187515,"byte_end":12187522,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187523,"byte_end":12187541,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187542,"byte_end":12187547,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187548,"byte_end":12187595,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187596,"byte_end":12187622,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187623,"byte_end":12187628,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187629,"byte_end":12187669,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187670,"byte_end":12187710,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187711,"byte_end":12187716,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187717,"byte_end":12187752,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187753,"byte_end":12187795,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187796,"byte_end":12187828,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187829,"byte_end":12187875,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187876,"byte_end":12187879,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187880,"byte_end":12187930,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187931,"byte_end":12187934,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12187935,"byte_end":12188011,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188012,"byte_end":12188086,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188087,"byte_end":12188090,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188091,"byte_end":12188114,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188115,"byte_end":12188132,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188133,"byte_end":12188136,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188137,"byte_end":12188171,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188172,"byte_end":12188175,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188176,"byte_end":12188208,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188209,"byte_end":12188238,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188239,"byte_end":12188291,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188292,"byte_end":12188348,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188349,"byte_end":12188393,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188394,"byte_end":12188424,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188425,"byte_end":12188439,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188440,"byte_end":12188472,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188473,"byte_end":12188482,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188483,"byte_end":12188488,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188489,"byte_end":12188510,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188511,"byte_end":12188518,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12188519,"byte_end":12188526,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190524,"byte_end":12190530,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":981}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190404,"byte_end":12190436,"line_start":208,"line_end":208,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190437,"byte_end":12190440,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190441,"byte_end":12190495,"line_start":210,"line_end":210,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190647,"byte_end":12190662,"line_start":218,"line_end":218,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"fn set_nonblocking<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190581,"byte_end":12190635,"line_start":217,"line_end":217,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192995,"byte_end":12193001,"line_start":283,"line_end":283,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Sender>::try_io","value":"fn try_io<F, T, '_>(&'_ Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190781,"byte_end":12190855,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190860,"byte_end":12190898,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190903,"byte_end":12190906,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190911,"byte_end":12190922,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190927,"byte_end":12190930,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190935,"byte_end":12191005,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191010,"byte_end":12191086,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191091,"byte_end":12191128,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191133,"byte_end":12191136,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191141,"byte_end":12191186,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191191,"byte_end":12191194,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191199,"byte_end":12191213,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191218,"byte_end":12191221,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191226,"byte_end":12191233,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191238,"byte_end":12191266,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191271,"byte_end":12191276,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191281,"byte_end":12191328,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191333,"byte_end":12191349,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191354,"byte_end":12191389,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191394,"byte_end":12191418,"line_start":241,"line_end":241,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191423,"byte_end":12191426,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191431,"byte_end":12191473,"line_start":243,"line_end":243,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191478,"byte_end":12191481,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191486,"byte_end":12191529,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191534,"byte_end":12191537,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191542,"byte_end":12191608,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191613,"byte_end":12191670,"line_start":248,"line_end":248,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191675,"byte_end":12191698,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191703,"byte_end":12191733,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191738,"byte_end":12191789,"line_start":251,"line_end":251,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191794,"byte_end":12191875,"line_start":252,"line_end":252,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191880,"byte_end":12191902,"line_start":253,"line_end":253,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191907,"byte_end":12191935,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191940,"byte_end":12191956,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12191961,"byte_end":12192035,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192040,"byte_end":12192088,"line_start":257,"line_end":257,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192093,"byte_end":12192136,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192141,"byte_end":12192150,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192155,"byte_end":12192163,"line_start":260,"line_end":260,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192168,"byte_end":12192203,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192208,"byte_end":12192211,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192216,"byte_end":12192261,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192266,"byte_end":12192269,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192274,"byte_end":12192343,"line_start":265,"line_end":265,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192348,"byte_end":12192404,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192409,"byte_end":12192436,"line_start":267,"line_end":267,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192441,"byte_end":12192473,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192478,"byte_end":12192529,"line_start":269,"line_end":269,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192534,"byte_end":12192616,"line_start":270,"line_end":270,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192621,"byte_end":12192643,"line_start":271,"line_end":271,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192648,"byte_end":12192676,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192681,"byte_end":12192697,"line_start":273,"line_end":273,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192702,"byte_end":12192775,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192780,"byte_end":12192828,"line_start":275,"line_end":275,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192833,"byte_end":12192876,"line_start":276,"line_end":276,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192881,"byte_end":12192890,"line_start":277,"line_end":277,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192895,"byte_end":12192903,"line_start":278,"line_end":278,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192908,"byte_end":12192942,"line_start":279,"line_end":279,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192947,"byte_end":12192959,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192964,"byte_end":12192971,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12192976,"byte_end":12192983,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193174,"byte_end":12193182,"line_start":292,"line_end":292,"column_start":8,"column_end":16},"name":"register","qualname":"<Sender as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193379,"byte_end":12193389,"line_start":301,"line_end":301,"column_start":8,"column_end":18},"name":"reregister","qualname":"<Sender as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193588,"byte_end":12193598,"line_start":310,"line_end":310,"column_start":8,"column_end":18},"name":"deregister","qualname":"<Sender as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193731,"byte_end":12193736,"line_start":316,"line_end":316,"column_start":8,"column_end":13},"name":"write","qualname":"<Sender as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193854,"byte_end":12193868,"line_start":320,"line_end":320,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<Sender as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194006,"byte_end":12194011,"line_start":324,"line_end":324,"column_start":8,"column_end":13},"name":"flush","qualname":"<Sender as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194138,"byte_end":12194143,"line_start":330,"line_end":330,"column_start":8,"column_end":13},"name":"write","qualname":"<&'_ Sender as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194261,"byte_end":12194275,"line_start":334,"line_end":334,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'_ Sender as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194413,"byte_end":12194418,"line_start":338,"line_end":338,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'_ Sender as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194627,"byte_end":12194631,"line_start":347,"line_end":347,"column_start":8,"column_end":12},"name":"from","qualname":"<Sender as std::convert::From>::from","value":"fn from(ChildStdin) -> Sender","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194851,"byte_end":12194862,"line_start":354,"line_end":354,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<Sender as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> Sender","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195012,"byte_end":12195021,"line_start":362,"line_end":362,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Sender as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195115,"byte_end":12195126,"line_start":368,"line_end":368,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<Sender as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195321,"byte_end":12195329,"line_start":377,"line_end":377,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":985}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195199,"byte_end":12195233,"line_start":373,"line_end":373,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195234,"byte_end":12195237,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195238,"byte_end":12195292,"line_start":375,"line_end":375,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195450,"byte_end":12195465,"line_start":383,"line_end":383,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"fn set_nonblocking<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195382,"byte_end":12195438,"line_start":382,"line_end":382,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197798,"byte_end":12197804,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Receiver>::try_io","value":"fn try_io<F, T, '_>(&'_ Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195584,"byte_end":12195658,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195663,"byte_end":12195701,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195706,"byte_end":12195709,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195714,"byte_end":12195725,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195730,"byte_end":12195733,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195738,"byte_end":12195808,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195813,"byte_end":12195889,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195894,"byte_end":12195931,"line_start":394,"line_end":394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195936,"byte_end":12195939,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195944,"byte_end":12195989,"line_start":396,"line_end":396,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195994,"byte_end":12195997,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196002,"byte_end":12196016,"line_start":398,"line_end":398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196021,"byte_end":12196024,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196029,"byte_end":12196036,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196041,"byte_end":12196069,"line_start":401,"line_end":401,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196074,"byte_end":12196079,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196084,"byte_end":12196131,"line_start":403,"line_end":403,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196136,"byte_end":12196152,"line_start":404,"line_end":404,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196157,"byte_end":12196192,"line_start":405,"line_end":405,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196197,"byte_end":12196221,"line_start":406,"line_end":406,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196226,"byte_end":12196229,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196234,"byte_end":12196276,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196281,"byte_end":12196284,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196289,"byte_end":12196332,"line_start":410,"line_end":410,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196337,"byte_end":12196340,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196345,"byte_end":12196411,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196416,"byte_end":12196473,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196478,"byte_end":12196501,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196506,"byte_end":12196536,"line_start":415,"line_end":415,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196541,"byte_end":12196592,"line_start":416,"line_end":416,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196597,"byte_end":12196678,"line_start":417,"line_end":417,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196683,"byte_end":12196705,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196710,"byte_end":12196738,"line_start":419,"line_end":419,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196743,"byte_end":12196759,"line_start":420,"line_end":420,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196764,"byte_end":12196838,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196843,"byte_end":12196891,"line_start":422,"line_end":422,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196896,"byte_end":12196939,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196944,"byte_end":12196953,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196958,"byte_end":12196966,"line_start":425,"line_end":425,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12196971,"byte_end":12197006,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197011,"byte_end":12197014,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197019,"byte_end":12197064,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197069,"byte_end":12197072,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197077,"byte_end":12197146,"line_start":430,"line_end":430,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197151,"byte_end":12197207,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197212,"byte_end":12197239,"line_start":432,"line_end":432,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197244,"byte_end":12197276,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197281,"byte_end":12197332,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197337,"byte_end":12197419,"line_start":435,"line_end":435,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197424,"byte_end":12197446,"line_start":436,"line_end":436,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197451,"byte_end":12197479,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197484,"byte_end":12197500,"line_start":438,"line_end":438,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197505,"byte_end":12197578,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197583,"byte_end":12197631,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197636,"byte_end":12197679,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197684,"byte_end":12197693,"line_start":442,"line_end":442,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197698,"byte_end":12197706,"line_start":443,"line_end":443,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197711,"byte_end":12197745,"line_start":444,"line_end":444,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197750,"byte_end":12197762,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197767,"byte_end":12197774,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197779,"byte_end":12197786,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197979,"byte_end":12197987,"line_start":457,"line_end":457,"column_start":8,"column_end":16},"name":"register","qualname":"<Receiver as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198184,"byte_end":12198194,"line_start":466,"line_end":466,"column_start":8,"column_end":18},"name":"reregister","qualname":"<Receiver as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198393,"byte_end":12198403,"line_start":475,"line_end":475,"column_start":8,"column_end":18},"name":"deregister","qualname":"<Receiver as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198537,"byte_end":12198541,"line_start":481,"line_end":481,"column_start":8,"column_end":12},"name":"read","qualname":"<Receiver as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198662,"byte_end":12198675,"line_start":485,"line_end":485,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<Receiver as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198847,"byte_end":12198851,"line_start":491,"line_end":491,"column_start":8,"column_end":12},"name":"read","qualname":"<&'_ Receiver as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198972,"byte_end":12198985,"line_start":495,"line_end":495,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'_ Receiver as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199241,"byte_end":12199245,"line_start":504,"line_end":504,"column_start":8,"column_end":12},"name":"from","qualname":"<Receiver as std::convert::From>::from","value":"fn from(ChildStdout) -> Receiver","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199548,"byte_end":12199552,"line_start":514,"line_end":514,"column_start":8,"column_end":12},"name":"from","qualname":"<Receiver as std::convert::From>::from","value":"fn from(ChildStderr) -> Receiver","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199782,"byte_end":12199793,"line_start":521,"line_end":521,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<Receiver as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> Receiver","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199949,"byte_end":12199958,"line_start":529,"line_end":529,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<Receiver as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12200054,"byte_end":12200065,"line_start":535,"line_end":535,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<Receiver as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":988},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":53077,"byte_end":53082,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48128,"byte_end":48184,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48185,"byte_end":48188,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48189,"byte_end":48258,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48259,"byte_end":48315,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48316,"byte_end":48319,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48320,"byte_end":48371,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48372,"byte_end":48375,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48376,"byte_end":48424,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48425,"byte_end":48455,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48456,"byte_end":48520,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48521,"byte_end":48589,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48590,"byte_end":48593,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48594,"byte_end":48607,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48608,"byte_end":48611,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48612,"byte_end":48689,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48690,"byte_end":48759,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48760,"byte_end":48763,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48764,"byte_end":48807,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48808,"byte_end":48811,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48959,"byte_end":48987,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":48988,"byte_end":49035,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49036,"byte_end":49081,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49082,"byte_end":49112,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49113,"byte_end":49116,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49117,"byte_end":49137,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49138,"byte_end":49168,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49169,"byte_end":49203,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49204,"byte_end":49207,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49208,"byte_end":49282,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49283,"byte_end":49317,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49318,"byte_end":49321,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49322,"byte_end":49400,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49401,"byte_end":49425,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49426,"byte_end":49466,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49467,"byte_end":49470,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49471,"byte_end":49504,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49505,"byte_end":49542,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49543,"byte_end":49546,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49547,"byte_end":49606,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49607,"byte_end":49641,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49642,"byte_end":49645,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49646,"byte_end":49672,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49673,"byte_end":49705,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49706,"byte_end":49709,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49710,"byte_end":49729,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49730,"byte_end":49796,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49797,"byte_end":49800,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49801,"byte_end":49829,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49830,"byte_end":49905,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49906,"byte_end":49909,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49910,"byte_end":49984,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":49985,"byte_end":50023,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50024,"byte_end":50051,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50052,"byte_end":50084,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50085,"byte_end":50088,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50089,"byte_end":50167,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50168,"byte_end":50205,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50206,"byte_end":50249,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50250,"byte_end":50304,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50305,"byte_end":50314,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50315,"byte_end":50322,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50323,"byte_end":50326,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50327,"byte_end":50347,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50348,"byte_end":50397,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50398,"byte_end":50401,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50402,"byte_end":50457,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50458,"byte_end":50485,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50486,"byte_end":50489,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50490,"byte_end":50516,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50517,"byte_end":50527,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50528,"byte_end":50554,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50555,"byte_end":50593,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50594,"byte_end":50597,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50598,"byte_end":50628,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50629,"byte_end":50662,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50663,"byte_end":50692,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50693,"byte_end":50766,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50767,"byte_end":50802,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50803,"byte_end":50829,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50830,"byte_end":50879,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50880,"byte_end":50932,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50933,"byte_end":50987,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":50988,"byte_end":51057,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51058,"byte_end":51108,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51109,"byte_end":51142,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51143,"byte_end":51146,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51147,"byte_end":51210,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51211,"byte_end":51280,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51281,"byte_end":51336,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51337,"byte_end":51340,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51341,"byte_end":51407,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51408,"byte_end":51506,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51507,"byte_end":51510,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51511,"byte_end":51562,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51563,"byte_end":51625,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51626,"byte_end":51655,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51656,"byte_end":51740,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51741,"byte_end":51819,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51820,"byte_end":51858,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51859,"byte_end":51888,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51889,"byte_end":51964,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51965,"byte_end":51990,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":51991,"byte_end":52012,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52013,"byte_end":52030,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52031,"byte_end":52057,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52058,"byte_end":52105,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52106,"byte_end":52132,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52133,"byte_end":52212,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52213,"byte_end":52251,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52252,"byte_end":52327,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52328,"byte_end":52383,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52384,"byte_end":52422,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52423,"byte_end":52452,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52453,"byte_end":52525,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52526,"byte_end":52578,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52579,"byte_end":52663,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52664,"byte_end":52740,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52741,"byte_end":52779,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52780,"byte_end":52809,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52810,"byte_end":52885,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52886,"byte_end":52911,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52912,"byte_end":52933,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52934,"byte_end":52951,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52952,"byte_end":52965,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52966,"byte_end":52975,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52976,"byte_end":52981,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52982,"byte_end":52989,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":52990,"byte_end":52997,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":990},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":53083,"byte_end":53092,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/token.rs","byte_start":53132,"byte_end":53136,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"from","qualname":"<usize as std::convert::From>::from","value":"fn from(Token) -> usize","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55754,"byte_end":55759,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1011}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53233,"byte_end":53282,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53283,"byte_end":53286,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53287,"byte_end":53360,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53361,"byte_end":53434,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53435,"byte_end":53438,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53439,"byte_end":53469,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53470,"byte_end":53532,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53533,"byte_end":53576,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53577,"byte_end":53580,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53581,"byte_end":53592,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53593,"byte_end":53596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53597,"byte_end":53675,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53676,"byte_end":53689,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53690,"byte_end":53693,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53694,"byte_end":53772,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53773,"byte_end":53846,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53847,"byte_end":53918,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ unspecified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53919,"byte_end":53935,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53936,"byte_end":53939,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53940,"byte_end":53966,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53967,"byte_end":53970,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":53971,"byte_end":54045,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54046,"byte_end":54124,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54125,"byte_end":54164,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54165,"byte_end":54168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54169,"byte_end":54244,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: https://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54245,"byte_end":54312,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54313,"byte_end":54316,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54317,"byte_end":54331,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54332,"byte_end":54335,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54336,"byte_end":54385,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54386,"byte_end":54389,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54493,"byte_end":54552,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54553,"byte_end":54573,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54574,"byte_end":54602,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54603,"byte_end":54626,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54627,"byte_end":54630,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54631,"byte_end":54673,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54674,"byte_end":54677,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54678,"byte_end":54718,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54719,"byte_end":54722,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54723,"byte_end":54755,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54756,"byte_end":54802,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54803,"byte_end":54806,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54807,"byte_end":54874,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54875,"byte_end":54878,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54879,"byte_end":54950,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54951,"byte_end":54981,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":54982,"byte_end":55013,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55014,"byte_end":55054,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55055,"byte_end":55098,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55099,"byte_end":55149,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55150,"byte_end":55153,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55154,"byte_end":55210,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55211,"byte_end":55258,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55259,"byte_end":55266,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55267,"byte_end":55270,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55271,"byte_end":55341,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55342,"byte_end":55376,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55377,"byte_end":55380,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55381,"byte_end":55460,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55461,"byte_end":55487,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55488,"byte_end":55520,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55521,"byte_end":55573,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55574,"byte_end":55613,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55614,"byte_end":55662,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55663,"byte_end":55692,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55693,"byte_end":55709,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55710,"byte_end":55717,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55718,"byte_end":55725,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55842,"byte_end":55845,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"fn new<'_>(&'_ Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55805,"byte_end":55830,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":56173,"byte_end":56177,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"fn wake<'_>(&'_ Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":56064,"byte_end":56118,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":56123,"byte_end":56126,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":56131,"byte_end":56161,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":161},{"krate":0,"index":193},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/mod.rs","byte_start":56240,"byte_end":56280,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56857,"byte_end":56862,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1015}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56491,"byte_end":56513,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56514,"byte_end":56517,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56518,"byte_end":56593,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56594,"byte_end":56613,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56614,"byte_end":56617,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56618,"byte_end":56681,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56682,"byte_end":56685,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56686,"byte_end":56737,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56738,"byte_end":56771,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56772,"byte_end":56807,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56825,"byte_end":56845,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56950,"byte_end":56955,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"fn token<'_>(&'_ Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56908,"byte_end":56938,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57607,"byte_end":57618,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"fn is_readable<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57024,"byte_end":57082,"line_start":27,"line_end":27,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57087,"byte_end":57090,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57095,"byte_end":57106,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57111,"byte_end":57114,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Out-of-band (OOB) data also triggers readable events. But must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57119,"byte_end":57185,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ application don't actually read OOB data, this could leave an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57190,"byte_end":57255,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ application open to a Denial-of-Service (Dos) attack, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57260,"byte_end":57321,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ <https://github.com/sandstorm-io/sandstorm-website/blob/58f93346028c0576e8147627667328eaaf4be9fa/_posts/2015-04-08-osx-security-bug.md>.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57326,"byte_end":57466,"line_start":34,"line_end":34,"column_start":5,"column_end":145}},{"value":"/ However because Mio uses edge-triggers it will not result in an infinite","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57471,"byte_end":57547,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ loop as described in the article above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57552,"byte_end":57595,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57762,"byte_end":57773,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"fn is_writable<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57692,"byte_end":57750,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58776,"byte_end":58784,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"fn is_error<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57847,"byte_end":57902,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57907,"byte_end":57910,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57915,"byte_end":57990,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":57995,"byte_end":58068,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58073,"byte_end":58123,"line_start":50,"line_end":50,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58128,"byte_end":58131,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58136,"byte_end":58147,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58152,"byte_end":58155,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58160,"byte_end":58235,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58240,"byte_end":58256,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58261,"byte_end":58264,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58269,"byte_end":58329,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58334,"byte_end":58337,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58342,"byte_end":58381,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58386,"byte_end":58425,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58430,"byte_end":58469,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58474,"byte_end":58547,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58552,"byte_end":58555,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58560,"byte_end":58619,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58624,"byte_end":58687,"line_start":65,"line_end":65,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58692,"byte_end":58764,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60098,"byte_end":60112,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"fn is_read_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58855,"byte_end":58916,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58921,"byte_end":58924,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58929,"byte_end":58940,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58945,"byte_end":58948,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":58953,"byte_end":59026,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59031,"byte_end":59044,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59049,"byte_end":59112,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59117,"byte_end":59190,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59195,"byte_end":59214,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59219,"byte_end":59293,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59298,"byte_end":59359,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59364,"byte_end":59367,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59372,"byte_end":59444,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59449,"byte_end":59517,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59522,"byte_end":59557,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59562,"byte_end":59565,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59570,"byte_end":59630,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59635,"byte_end":59638,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59643,"byte_end":59682,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59687,"byte_end":59726,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59731,"byte_end":59770,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59775,"byte_end":59825,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59830,"byte_end":59869,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59874,"byte_end":59877,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59882,"byte_end":59941,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":59946,"byte_end":60009,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60014,"byte_end":60086,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61344,"byte_end":61359,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"fn is_write_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60189,"byte_end":60251,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60256,"byte_end":60259,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60264,"byte_end":60275,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60280,"byte_end":60283,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60288,"byte_end":60357,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60362,"byte_end":60436,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60441,"byte_end":60444,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60449,"byte_end":60517,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60522,"byte_end":60557,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60562,"byte_end":60565,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60570,"byte_end":60642,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60647,"byte_end":60716,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60721,"byte_end":60756,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60761,"byte_end":60764,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60769,"byte_end":60829,"line_start":116,"line_end":116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60834,"byte_end":60837,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60842,"byte_end":60881,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60886,"byte_end":60925,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60930,"byte_end":60969,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":60974,"byte_end":61017,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61022,"byte_end":61071,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61076,"byte_end":61115,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61120,"byte_end":61123,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61128,"byte_end":61187,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61192,"byte_end":61255,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61260,"byte_end":61332,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62131,"byte_end":62142,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"fn is_priority<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61437,"byte_end":61495,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61500,"byte_end":61503,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61508,"byte_end":61519,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61524,"byte_end":61527,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61532,"byte_end":61607,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61612,"byte_end":61631,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61636,"byte_end":61639,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61644,"byte_end":61704,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61709,"byte_end":61712,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61717,"byte_end":61756,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61761,"byte_end":61800,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61805,"byte_end":61844,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61849,"byte_end":61888,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61893,"byte_end":61896,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61901,"byte_end":61960,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":61965,"byte_end":62028,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62033,"byte_end":62105,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62110,"byte_end":62119,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62948,"byte_end":62954,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"fn is_aio<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62216,"byte_end":62269,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62274,"byte_end":62277,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62282,"byte_end":62293,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62298,"byte_end":62301,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62306,"byte_end":62382,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62387,"byte_end":62390,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62395,"byte_end":62455,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62460,"byte_end":62463,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62468,"byte_end":62507,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62512,"byte_end":62551,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62556,"byte_end":62595,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62600,"byte_end":62643,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62648,"byte_end":62651,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62656,"byte_end":62719,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62724,"byte_end":62727,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62732,"byte_end":62791,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62796,"byte_end":62859,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":62864,"byte_end":62936,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63258,"byte_end":63264,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"fn is_lio<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63023,"byte_end":63076,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63081,"byte_end":63084,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63089,"byte_end":63100,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63105,"byte_end":63108,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63113,"byte_end":63188,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":63193,"byte_end":63246,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":64084,"byte_end":64087,"line_start":203,"line_end":203,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Event as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66261,"byte_end":66267,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":172}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65151,"byte_end":65188,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65189,"byte_end":65192,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65193,"byte_end":65268,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65269,"byte_end":65346,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65347,"byte_end":65421,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65422,"byte_end":65464,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65465,"byte_end":65468,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65469,"byte_end":65520,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65521,"byte_end":65524,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65525,"byte_end":65576,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65577,"byte_end":65610,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65611,"byte_end":65614,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65615,"byte_end":65629,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65630,"byte_end":65633,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65737,"byte_end":65765,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65766,"byte_end":65813,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65814,"byte_end":65842,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65843,"byte_end":65871,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65872,"byte_end":65875,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65876,"byte_end":65925,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65926,"byte_end":65958,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65959,"byte_end":65964,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65965,"byte_end":65998,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":65999,"byte_end":66002,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66003,"byte_end":66048,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66049,"byte_end":66052,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66053,"byte_end":66115,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66116,"byte_end":66119,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66120,"byte_end":66152,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66153,"byte_end":66210,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66211,"byte_end":66216,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66217,"byte_end":66233,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66234,"byte_end":66241,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66242,"byte_end":66249,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67100,"byte_end":67104,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66297,"byte_end":66321,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66322,"byte_end":66325,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66326,"byte_end":66390,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66391,"byte_end":66394,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66395,"byte_end":66429,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66430,"byte_end":66474,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66475,"byte_end":66478,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66479,"byte_end":66493,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66494,"byte_end":66497,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66601,"byte_end":66629,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66630,"byte_end":66677,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66678,"byte_end":66706,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66707,"byte_end":66735,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66736,"byte_end":66739,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66740,"byte_end":66789,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66790,"byte_end":66822,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66823,"byte_end":66826,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66827,"byte_end":66863,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66864,"byte_end":66867,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66868,"byte_end":66930,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66931,"byte_end":66934,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66935,"byte_end":66967,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":66968,"byte_end":67025,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67026,"byte_end":67031,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67032,"byte_end":67048,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67049,"byte_end":67056,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67057,"byte_end":67064,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67439,"byte_end":67452,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67171,"byte_end":67240,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67245,"byte_end":67248,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67253,"byte_end":67267,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67272,"byte_end":67275,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67280,"byte_end":67287,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67292,"byte_end":67312,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67317,"byte_end":67320,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67325,"byte_end":67370,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67375,"byte_end":67415,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67420,"byte_end":67427,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67811,"byte_end":67819,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67577,"byte_end":67639,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67644,"byte_end":67647,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67652,"byte_end":67659,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67664,"byte_end":67684,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67689,"byte_end":67692,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67697,"byte_end":67742,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67747,"byte_end":67787,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67792,"byte_end":67799,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68125,"byte_end":68133,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67879,"byte_end":67935,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67940,"byte_end":67943,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67948,"byte_end":67962,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67967,"byte_end":67970,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67975,"byte_end":67982,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67987,"byte_end":68007,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68012,"byte_end":68015,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68020,"byte_end":68065,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68070,"byte_end":68101,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68106,"byte_end":68113,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68934,"byte_end":68938,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68192,"byte_end":68240,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68245,"byte_end":68248,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68253,"byte_end":68267,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68272,"byte_end":68275,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68391,"byte_end":68419,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68424,"byte_end":68471,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68476,"byte_end":68504,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68509,"byte_end":68537,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68542,"byte_end":68545,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68550,"byte_end":68599,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68604,"byte_end":68636,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68641,"byte_end":68644,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68649,"byte_end":68685,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68690,"byte_end":68693,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68698,"byte_end":68760,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68765,"byte_end":68768,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68773,"byte_end":68805,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68810,"byte_end":68867,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68872,"byte_end":68877,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68882,"byte_end":68898,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68903,"byte_end":68910,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":68915,"byte_end":68922,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69906,"byte_end":69911,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69041,"byte_end":69099,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69104,"byte_end":69107,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69112,"byte_end":69123,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69128,"byte_end":69131,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69136,"byte_end":69209,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69214,"byte_end":69232,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69237,"byte_end":69240,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69245,"byte_end":69259,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69264,"byte_end":69267,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69383,"byte_end":69411,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69416,"byte_end":69463,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69468,"byte_end":69496,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69501,"byte_end":69529,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69534,"byte_end":69537,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69542,"byte_end":69591,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69596,"byte_end":69628,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69633,"byte_end":69636,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69641,"byte_end":69677,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69682,"byte_end":69685,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69690,"byte_end":69752,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69757,"byte_end":69760,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69765,"byte_end":69789,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69794,"byte_end":69813,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69818,"byte_end":69849,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69854,"byte_end":69870,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69875,"byte_end":69882,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":69887,"byte_end":69894,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70193,"byte_end":70202,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Events as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70326,"byte_end":70330,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70548,"byte_end":70557,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70677,"byte_end":70682,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"count","qualname":"<Iter as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70776,"byte_end":70779,"line_start":227,"line_end":227,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Events as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":207},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73489,"byte_end":73495,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":70942,"byte_end":71003,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71004,"byte_end":71007,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71008,"byte_end":71071,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71072,"byte_end":71145,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71146,"byte_end":71224,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71225,"byte_end":71237,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71238,"byte_end":71241,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71242,"byte_end":71280,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71281,"byte_end":71284,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71285,"byte_end":71326,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71327,"byte_end":71330,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71331,"byte_end":71365,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71366,"byte_end":71369,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71370,"byte_end":71449,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71450,"byte_end":71524,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71525,"byte_end":71602,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71603,"byte_end":71682,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71683,"byte_end":71700,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71701,"byte_end":71704,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71705,"byte_end":71752,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71753,"byte_end":71799,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71800,"byte_end":71803,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71804,"byte_end":71835,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71836,"byte_end":71839,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71840,"byte_end":71919,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71920,"byte_end":71998,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":71999,"byte_end":72078,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72079,"byte_end":72154,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72155,"byte_end":72212,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72213,"byte_end":72216,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72217,"byte_end":72278,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72279,"byte_end":72282,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72283,"byte_end":72297,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72298,"byte_end":72301,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72302,"byte_end":72360,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72361,"byte_end":72364,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72512,"byte_end":72553,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72554,"byte_end":72581,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72582,"byte_end":72610,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72611,"byte_end":72614,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72615,"byte_end":72631,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72632,"byte_end":72635,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72636,"byte_end":72661,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72662,"byte_end":72687,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72688,"byte_end":72714,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72715,"byte_end":72720,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72721,"byte_end":72724,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72725,"byte_end":72755,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72756,"byte_end":72842,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72843,"byte_end":72872,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72873,"byte_end":72882,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72883,"byte_end":72938,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":72939,"byte_end":72999,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73000,"byte_end":73009,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73010,"byte_end":73013,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73014,"byte_end":73102,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73103,"byte_end":73132,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73133,"byte_end":73142,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73143,"byte_end":73200,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73201,"byte_end":73263,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73264,"byte_end":73273,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73274,"byte_end":73277,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73278,"byte_end":73351,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73352,"byte_end":73409,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73410,"byte_end":73454,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73455,"byte_end":73464,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73465,"byte_end":73470,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73471,"byte_end":73478,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73847,"byte_end":73855,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73502,"byte_end":73557,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73562,"byte_end":73565,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73570,"byte_end":73645,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73650,"byte_end":73725,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73730,"byte_end":73759,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73764,"byte_end":73767,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73772,"byte_end":73839,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74350,"byte_end":74360,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":73986,"byte_end":74044,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74049,"byte_end":74052,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74057,"byte_end":74109,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74114,"byte_end":74178,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74183,"byte_end":74258,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74263,"byte_end":74266,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74271,"byte_end":74342,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74846,"byte_end":74856,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74491,"byte_end":74548,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74553,"byte_end":74556,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74561,"byte_end":74613,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74618,"byte_end":74682,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74687,"byte_end":74754,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74759,"byte_end":74762,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74767,"byte_end":74838,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74976,"byte_end":74984,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"register","qualname":"<Box<T> as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":75179,"byte_end":75189,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"reregister","qualname":"<Box<T> as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":75386,"byte_end":75396,"line_start":136,"line_end":136,"column_start":8,"column_end":18},"name":"deregister","qualname":"<Box<T> as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1740}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/macros.rs","byte_start":10437,"byte_end":10460,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210208,"byte_end":12210234,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210235,"byte_end":12210238,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210239,"byte_end":12210312,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210313,"byte_end":12210391,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210392,"byte_end":12210470,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210471,"byte_end":12210502,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210503,"byte_end":12210506,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210507,"byte_end":12210568,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210569,"byte_end":12210572,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210573,"byte_end":12210584,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210585,"byte_end":12210588,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When using a datagram based socket, i.e. [`UdpSocket`] or [`UnixDatagram`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210589,"byte_end":12210668,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ its only possible to receive a packet once. This means that if you provide a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210669,"byte_end":12210749,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ buffer that is too small you won't be able to receive the data anymore. How","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210750,"byte_end":12210829,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ OSs deal with this situation is different for each OS:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210830,"byte_end":12210888,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/  * Unixes, such as Linux, FreeBSD and macOS, will simply fill the buffer and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210889,"byte_end":12210969,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/    return the amount of bytes written. This means that if the returned value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12210970,"byte_end":12211050,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/    is equal to the size of the buffer it may have only written a part of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211051,"byte_end":12211131,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/    packet (or the packet has the same size as the buffer).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211132,"byte_end":12211194,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/  * Windows returns an `WSAEMSGSIZE` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211195,"byte_end":12211241,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211242,"byte_end":12211245,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Mio does not change the value (either ok or error) returned by the OS, it's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211246,"byte_end":12211325,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ up to the user handle this. How to deal with these difference is still up","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211326,"byte_end":12211403,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ for debate, specifically in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211404,"byte_end":12211435,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ <https://github.com/rust-lang/rust/issues/55794>. The best advice we can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211436,"byte_end":12211512,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ give is to always call receive with a large enough buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/mod.rs","byte_start":12211513,"byte_end":12211575,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213305,"byte_end":12213316,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1174}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212506,"byte_end":12212550,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212551,"byte_end":12212554,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212555,"byte_end":12212569,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212570,"byte_end":12212573,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212677,"byte_end":12212705,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212706,"byte_end":12212753,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212754,"byte_end":12212799,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212800,"byte_end":12212830,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212831,"byte_end":12212859,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212860,"byte_end":12212863,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212864,"byte_end":12212934,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212935,"byte_end":12212938,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212939,"byte_end":12212971,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12212972,"byte_end":12213020,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213021,"byte_end":12213024,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213025,"byte_end":12213063,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213064,"byte_end":12213139,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213140,"byte_end":12213143,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213144,"byte_end":12213206,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213207,"byte_end":12213210,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213211,"byte_end":12213260,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213261,"byte_end":12213277,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213278,"byte_end":12213285,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213286,"byte_end":12213293,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213846,"byte_end":12213850,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213384,"byte_end":12213458,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213463,"byte_end":12213494,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213499,"byte_end":12213502,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213507,"byte_end":12213555,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213560,"byte_end":12213563,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213568,"byte_end":12213599,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213604,"byte_end":12213663,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213668,"byte_end":12213716,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213721,"byte_end":12213798,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213803,"byte_end":12213834,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215134,"byte_end":12215142,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12214784,"byte_end":12214851,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12214856,"byte_end":12214859,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12214864,"byte_end":12214936,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12214941,"byte_end":12215015,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215020,"byte_end":12215092,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215097,"byte_end":12215122,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215657,"byte_end":12215663,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"fn accept<'_>(&'_ Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215275,"byte_end":12215305,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215310,"byte_end":12215313,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215318,"byte_end":12215369,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215374,"byte_end":12215450,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215455,"byte_end":12215528,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215533,"byte_end":12215536,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215541,"byte_end":12215613,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215618,"byte_end":12215645,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215929,"byte_end":12215939,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12215863,"byte_end":12215917,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216203,"byte_end":12216210,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn set_ttl<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216018,"byte_end":12216076,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216081,"byte_end":12216084,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216089,"byte_end":12216165,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216170,"byte_end":12216191,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216480,"byte_end":12216483,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn ttl<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216291,"byte_end":12216349,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216354,"byte_end":12216357,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216362,"byte_end":12216428,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216433,"byte_end":12216436,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216441,"byte_end":12216468,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216801,"byte_end":12216811,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"fn take_error<'_>(&'_ Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216548,"byte_end":12216606,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216611,"byte_end":12216614,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216619,"byte_end":12216693,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216698,"byte_end":12216774,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216779,"byte_end":12216789,"line_start":133,"line_end":133,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216939,"byte_end":12216947,"line_start":140,"line_end":140,"column_start":8,"column_end":16},"name":"register","qualname":"<TcpListener as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217144,"byte_end":12217154,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"reregister","qualname":"<TcpListener as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217353,"byte_end":12217363,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"deregister","qualname":"<TcpListener as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217506,"byte_end":12217509,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TcpListener as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217650,"byte_end":12217661,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<TcpListener as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217785,"byte_end":12217794,"line_start":178,"line_end":178,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<TcpListener as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12218088,"byte_end":12218099,"line_start":191,"line_end":191,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<TcpListener as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> TcpListener","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":" Converts a `RawFd` to a `TcpListener`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `TcpListener`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217903,"byte_end":12217945,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217950,"byte_end":12217953,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217958,"byte_end":12217969,"line_start":187,"line_end":187,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217974,"byte_end":12217977,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217982,"byte_end":12218046,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12218051,"byte_end":12218073,"line_start":190,"line_end":190,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221074,"byte_end":12221083,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1267}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220042,"byte_end":12220115,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220116,"byte_end":12220119,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220120,"byte_end":12220176,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220177,"byte_end":12220180,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220181,"byte_end":12220195,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220196,"byte_end":12220199,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220303,"byte_end":12220349,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220350,"byte_end":12220378,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220379,"byte_end":12220384,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220385,"byte_end":12220432,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220433,"byte_end":12220486,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220487,"byte_end":12220534,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220535,"byte_end":12220580,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220581,"byte_end":12220609,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220610,"byte_end":12220638,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220639,"byte_end":12220642,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220643,"byte_end":12220708,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220709,"byte_end":12220712,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220713,"byte_end":12220745,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220746,"byte_end":12220794,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220795,"byte_end":12220798,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220799,"byte_end":12220837,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220838,"byte_end":12220911,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220912,"byte_end":12220915,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220916,"byte_end":12220978,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220979,"byte_end":12220982,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12220983,"byte_end":12221029,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221030,"byte_end":12221046,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221047,"byte_end":12221054,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221055,"byte_end":12221062,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222740,"byte_end":12222747,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221147,"byte_end":12221214,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221219,"byte_end":12221241,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221246,"byte_end":12221249,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221254,"byte_end":12221265,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221270,"byte_end":12221273,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` may not be connected (and thus usable), unlike","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221278,"byte_end":12221353,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ the API found in `std::net::TcpStream`. Because Mio issues a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221358,"byte_end":12221422,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ *non-blocking* connect it will not block the thread and instead return","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221427,"byte_end":12221501,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ an unconnected `TcpStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221506,"byte_end":12221537,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221542,"byte_end":12221545,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Ensuring the returned stream is connected is surprisingly complex when","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221550,"byte_end":12221624,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ considering cross-platform support. Doing this properly should follow","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221629,"byte_end":12221702,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ the steps below, an example implementation can be found","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221707,"byte_end":12221766,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ [here](https://github.com/Thomasdezeeuw/heph/blob/0c4f1ab3eaf08bea1d65776528bfd6114c9f8374/src/net/tcp/stream.rs#L560-L622).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221771,"byte_end":12221899,"line_start":66,"line_end":66,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221904,"byte_end":12221907,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/  1. Call `TcpStream::connect`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221912,"byte_end":12221945,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/  2. Register the returned stream with at least [write interest].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221950,"byte_end":12222018,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/  3. Wait for a (writable) event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222023,"byte_end":12222059,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/  4. Check `TcpStream::peer_addr`. If it returns `libc::EINPROGRESS` or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222064,"byte_end":12222138,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/     `ErrorKind::NotConnected` it means the stream is not yet connected,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222143,"byte_end":12222218,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/     go back to step 3. If it returns an address it means the stream is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222223,"byte_end":12222297,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     connected, go to step 5. If another error is returned something","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222302,"byte_end":12222373,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/     went wrong.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222378,"byte_end":12222397,"line_start":75,"line_end":75,"column_start":5,"column_end":24}},{"value":"/  5. Now the stream can be used.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222402,"byte_end":12222437,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222442,"byte_end":12222445,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222450,"byte_end":12222520,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222525,"byte_end":12222601,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222606,"byte_end":12222639,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222644,"byte_end":12222647,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [write interest]: Interest::WRITABLE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222652,"byte_end":12222692,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12222697,"byte_end":12222728,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223637,"byte_end":12223645,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223086,"byte_end":12223149,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223154,"byte_end":12223157,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223162,"byte_end":12223232,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223237,"byte_end":12223311,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223316,"byte_end":12223387,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223392,"byte_end":12223414,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223419,"byte_end":12223422,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223427,"byte_end":12223437,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223442,"byte_end":12223445,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223450,"byte_end":12223517,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223522,"byte_end":12223594,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223599,"byte_end":12223625,"line_start":105,"line_end":105,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223853,"byte_end":12223862,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn peer_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223768,"byte_end":12223841,"line_start":112,"line_end":112,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224024,"byte_end":12224034,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12223940,"byte_end":12224012,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224388,"byte_end":12224396,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn shutdown<'_>(&'_ Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224113,"byte_end":12224179,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224184,"byte_end":12224187,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224192,"byte_end":12224264,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224269,"byte_end":12224338,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224343,"byte_end":12224376,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225140,"byte_end":12225151,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn set_nodelay<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224483,"byte_end":12224545,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224550,"byte_end":12224553,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224558,"byte_end":12224627,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224632,"byte_end":12224705,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224710,"byte_end":12224783,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224788,"byte_end":12224863,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224868,"byte_end":12224886,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224891,"byte_end":12224894,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224899,"byte_end":12224910,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224915,"byte_end":12224918,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12224923,"byte_end":12224999,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225004,"byte_end":12225071,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225076,"byte_end":12225128,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225688,"byte_end":12225695,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn nodelay<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225245,"byte_end":12225307,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225312,"byte_end":12225315,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225320,"byte_end":12225390,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225395,"byte_end":12225398,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225403,"byte_end":12225434,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225439,"byte_end":12225442,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225447,"byte_end":12225458,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225463,"byte_end":12225466,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225471,"byte_end":12225547,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225552,"byte_end":12225619,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225624,"byte_end":12225676,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226188,"byte_end":12226195,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn set_ttl<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225765,"byte_end":12225823,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225828,"byte_end":12225831,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225836,"byte_end":12225912,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225917,"byte_end":12225938,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225943,"byte_end":12225946,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225951,"byte_end":12225962,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225967,"byte_end":12225970,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12225975,"byte_end":12226051,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226056,"byte_end":12226119,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226124,"byte_end":12226176,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226703,"byte_end":12226706,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn ttl<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226276,"byte_end":12226334,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226339,"byte_end":12226342,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226347,"byte_end":12226413,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226418,"byte_end":12226421,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226426,"byte_end":12226437,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226442,"byte_end":12226445,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226450,"byte_end":12226526,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226531,"byte_end":12226594,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226599,"byte_end":12226651,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226656,"byte_end":12226659,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226664,"byte_end":12226691,"line_start":187,"line_end":187,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227024,"byte_end":12227034,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"fn take_error<'_>(&'_ Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226771,"byte_end":12226829,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226834,"byte_end":12226837,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226842,"byte_end":12226916,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12226921,"byte_end":12226997,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227002,"byte_end":12227012,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227472,"byte_end":12227476,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227120,"byte_end":12227190,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227195,"byte_end":12227264,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227269,"byte_end":12227308,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227313,"byte_end":12227316,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227321,"byte_end":12227395,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227400,"byte_end":12227460,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229481,"byte_end":12229487,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"try_io","qualname":"<TcpStream>::try_io","value":"fn try_io<F, T, '_>(&'_ Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227563,"byte_end":12227637,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227642,"byte_end":12227680,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227685,"byte_end":12227688,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227693,"byte_end":12227704,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227709,"byte_end":12227712,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227717,"byte_end":12227787,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227792,"byte_end":12227868,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227873,"byte_end":12227910,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227915,"byte_end":12227918,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227923,"byte_end":12227968,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227973,"byte_end":12227976,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12227981,"byte_end":12227995,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228000,"byte_end":12228003,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228093,"byte_end":12228121,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228126,"byte_end":12228131,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228136,"byte_end":12228183,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228188,"byte_end":12228204,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228209,"byte_end":12228225,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228230,"byte_end":12228265,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228270,"byte_end":12228289,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228294,"byte_end":12228336,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228341,"byte_end":12228369,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228374,"byte_end":12228377,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228382,"byte_end":12228434,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228439,"byte_end":12228485,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228490,"byte_end":12228493,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228498,"byte_end":12228541,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228546,"byte_end":12228549,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228554,"byte_end":12228621,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228626,"byte_end":12228682,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228687,"byte_end":12228714,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/ let n = stream.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228719,"byte_end":12228749,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228754,"byte_end":12228805,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228810,"byte_end":12228830,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(stream.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228835,"byte_end":12228918,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228923,"byte_end":12228946,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(stream.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12228951,"byte_end":12229102,"line_start":249,"line_end":249,"column_start":5,"column_end":156}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229107,"byte_end":12229129,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229134,"byte_end":12229162,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229167,"byte_end":12229183,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229188,"byte_end":12229261,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229266,"byte_end":12229314,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229319,"byte_end":12229362,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229367,"byte_end":12229376,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229381,"byte_end":12229389,"line_start":257,"line_end":257,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229394,"byte_end":12229428,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229433,"byte_end":12229445,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229450,"byte_end":12229457,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229462,"byte_end":12229469,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229654,"byte_end":12229658,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"read","qualname":"<TcpStream as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229777,"byte_end":12229790,"line_start":275,"line_end":275,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<TcpStream as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229968,"byte_end":12229972,"line_start":281,"line_end":281,"column_start":8,"column_end":12},"name":"read","qualname":"<&'a TcpStream as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230091,"byte_end":12230104,"line_start":285,"line_end":285,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'a TcpStream as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230275,"byte_end":12230280,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"write","qualname":"<TcpStream as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230396,"byte_end":12230410,"line_start":295,"line_end":295,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<TcpStream as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230546,"byte_end":12230551,"line_start":299,"line_end":299,"column_start":8,"column_end":13},"name":"flush","qualname":"<TcpStream as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230686,"byte_end":12230691,"line_start":305,"line_end":305,"column_start":8,"column_end":13},"name":"write","qualname":"<&'a TcpStream as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230807,"byte_end":12230821,"line_start":309,"line_end":309,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'a TcpStream as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230957,"byte_end":12230962,"line_start":313,"line_end":313,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'a TcpStream as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231097,"byte_end":12231105,"line_start":319,"line_end":319,"column_start":8,"column_end":16},"name":"register","qualname":"<TcpStream as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231302,"byte_end":12231312,"line_start":328,"line_end":328,"column_start":8,"column_end":18},"name":"reregister","qualname":"<TcpStream as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231511,"byte_end":12231521,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"deregister","qualname":"<TcpStream as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231662,"byte_end":12231665,"line_start":343,"line_end":343,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TcpStream as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231804,"byte_end":12231815,"line_start":350,"line_end":350,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<TcpStream as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231937,"byte_end":12231946,"line_start":357,"line_end":357,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<TcpStream as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232236,"byte_end":12232247,"line_start":370,"line_end":370,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<TcpStream as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> TcpStream","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":" Converts a `RawFd` to a `TcpStream`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `TcpStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232053,"byte_end":12232093,"line_start":364,"line_end":364,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232098,"byte_end":12232101,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232106,"byte_end":12232117,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232122,"byte_end":12232125,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232130,"byte_end":12232194,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232199,"byte_end":12232221,"line_start":369,"line_end":369,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236985,"byte_end":12236994,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234347,"byte_end":12234383,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234384,"byte_end":12234387,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234388,"byte_end":12234468,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234469,"byte_end":12234549,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234550,"byte_end":12234577,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234578,"byte_end":12234581,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234582,"byte_end":12234596,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234597,"byte_end":12234600,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234704,"byte_end":12234732,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234733,"byte_end":12234738,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234739,"byte_end":12234786,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234787,"byte_end":12234810,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234811,"byte_end":12234844,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234845,"byte_end":12234902,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234903,"byte_end":12234906,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234907,"byte_end":12234935,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234936,"byte_end":12234981,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12234982,"byte_end":12235010,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235011,"byte_end":12235014,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235015,"byte_end":12235050,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235051,"byte_end":12235086,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235087,"byte_end":12235090,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235091,"byte_end":12235186,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235187,"byte_end":12235201,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235202,"byte_end":12235271,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235272,"byte_end":12235341,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235342,"byte_end":12235345,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235346,"byte_end":12235442,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235443,"byte_end":12235463,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235464,"byte_end":12235520,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235521,"byte_end":12235524,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235525,"byte_end":12235623,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235624,"byte_end":12235641,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235642,"byte_end":12235674,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235675,"byte_end":12235678,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235679,"byte_end":12235773,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235774,"byte_end":12235852,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235853,"byte_end":12235931,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235932,"byte_end":12235935,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235936,"byte_end":12235965,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235966,"byte_end":12235994,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235995,"byte_end":12235998,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12235999,"byte_end":12236047,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236048,"byte_end":12236058,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236059,"byte_end":12236125,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236126,"byte_end":12236162,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236163,"byte_end":12236196,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236197,"byte_end":12236255,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236256,"byte_end":12236283,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236284,"byte_end":12236355,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236356,"byte_end":12236402,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236403,"byte_end":12236484,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236485,"byte_end":12236503,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236504,"byte_end":12236559,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236560,"byte_end":12236587,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236588,"byte_end":12236656,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236657,"byte_end":12236725,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236726,"byte_end":12236762,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236763,"byte_end":12236836,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236837,"byte_end":12236873,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236874,"byte_end":12236891,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236892,"byte_end":12236927,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236928,"byte_end":12236941,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236942,"byte_end":12236951,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236952,"byte_end":12236957,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236958,"byte_end":12236965,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12236966,"byte_end":12236973,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237968,"byte_end":12237972,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237058,"byte_end":12237106,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237111,"byte_end":12237114,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237119,"byte_end":12237133,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237138,"byte_end":12237141,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237257,"byte_end":12237285,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237290,"byte_end":12237295,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237300,"byte_end":12237347,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237352,"byte_end":12237380,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237385,"byte_end":12237388,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237393,"byte_end":12237435,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237440,"byte_end":12237504,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237509,"byte_end":12237546,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237551,"byte_end":12237573,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237578,"byte_end":12237663,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237668,"byte_end":12237724,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237729,"byte_end":12237738,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237743,"byte_end":12237749,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237754,"byte_end":12237757,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237762,"byte_end":12237849,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237854,"byte_end":12237912,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237917,"byte_end":12237932,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237937,"byte_end":12237944,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237949,"byte_end":12237956,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238423,"byte_end":12238431,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238083,"byte_end":12238146,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238151,"byte_end":12238154,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238159,"byte_end":12238229,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238234,"byte_end":12238308,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238313,"byte_end":12238384,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238389,"byte_end":12238411,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239385,"byte_end":12239395,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238554,"byte_end":12238619,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238624,"byte_end":12238627,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238632,"byte_end":12238646,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12238651,"byte_end":12238654,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239052,"byte_end":12239080,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239085,"byte_end":12239090,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239095,"byte_end":12239142,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239147,"byte_end":12239175,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239180,"byte_end":12239183,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239188,"byte_end":12239226,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239231,"byte_end":12239271,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239276,"byte_end":12239329,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239334,"byte_end":12239349,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239354,"byte_end":12239361,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239366,"byte_end":12239373,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240129,"byte_end":12240138,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"fn peer_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239474,"byte_end":12239553,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239558,"byte_end":12239561,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239566,"byte_end":12239580,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239585,"byte_end":12239588,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239704,"byte_end":12239732,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239737,"byte_end":12239742,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239747,"byte_end":12239794,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239799,"byte_end":12239827,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239832,"byte_end":12239835,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239840,"byte_end":12239878,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ let peer_addr = \"127.0.0.1:11100\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239883,"byte_end":12239930,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239935,"byte_end":12239975,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ socket.connect(peer_addr)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12239980,"byte_end":12240011,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(socket.peer_addr()?.ip(), peer_addr.ip());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240016,"byte_end":12240073,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240078,"byte_end":12240093,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240098,"byte_end":12240105,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240110,"byte_end":12240117,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241019,"byte_end":12241026,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn send_to<'_, '_>(&'_ Self, &'_ [u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240216,"byte_end":12240290,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240295,"byte_end":12240323,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240328,"byte_end":12240331,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240336,"byte_end":12240409,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240414,"byte_end":12240454,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240459,"byte_end":12240462,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240467,"byte_end":12240481,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240486,"byte_end":12240489,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240494,"byte_end":12240507,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240512,"byte_end":12240540,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240545,"byte_end":12240592,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240597,"byte_end":12240625,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240630,"byte_end":12240633,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240638,"byte_end":12240696,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240701,"byte_end":12240704,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240709,"byte_end":12240779,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240784,"byte_end":12240831,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240836,"byte_end":12240839,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240844,"byte_end":12240918,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240923,"byte_end":12240953,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240958,"byte_end":12240963,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240968,"byte_end":12240983,"line_start":208,"line_end":208,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12240988,"byte_end":12240995,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241000,"byte_end":12241007,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242327,"byte_end":12242336,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8])\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241161,"byte_end":12241235,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241240,"byte_end":12241291,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241296,"byte_end":12241299,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241304,"byte_end":12241315,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241320,"byte_end":12241323,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241328,"byte_end":12241403,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241408,"byte_end":12241486,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241491,"byte_end":12241539,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241544,"byte_end":12241611,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241616,"byte_end":12241684,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241689,"byte_end":12241692,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241697,"byte_end":12241711,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241716,"byte_end":12241719,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241724,"byte_end":12241737,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241742,"byte_end":12241770,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241775,"byte_end":12241780,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241785,"byte_end":12241832,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241837,"byte_end":12241865,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241870,"byte_end":12241873,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241878,"byte_end":12241936,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241941,"byte_end":12241944,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12241949,"byte_end":12242021,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242026,"byte_end":12242073,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242078,"byte_end":12242081,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242086,"byte_end":12242111,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242116,"byte_end":12242176,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242181,"byte_end":12242261,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242266,"byte_end":12242271,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242276,"byte_end":12242291,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242296,"byte_end":12242303,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242308,"byte_end":12242315,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243679,"byte_end":12243688,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8])\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242463,"byte_end":12242539,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242544,"byte_end":12242620,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242625,"byte_end":12242643,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242648,"byte_end":12242651,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242656,"byte_end":12242667,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242672,"byte_end":12242675,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242680,"byte_end":12242755,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242760,"byte_end":12242838,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242843,"byte_end":12242891,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242896,"byte_end":12242963,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12242968,"byte_end":12243036,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243041,"byte_end":12243044,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243049,"byte_end":12243063,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243068,"byte_end":12243071,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243076,"byte_end":12243089,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243094,"byte_end":12243122,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243127,"byte_end":12243132,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243137,"byte_end":12243184,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243189,"byte_end":12243217,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243222,"byte_end":12243225,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243230,"byte_end":12243288,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243293,"byte_end":12243296,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243301,"byte_end":12243373,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243378,"byte_end":12243425,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243430,"byte_end":12243433,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243438,"byte_end":12243463,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243468,"byte_end":12243528,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243533,"byte_end":12243613,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243618,"byte_end":12243623,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243628,"byte_end":12243643,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243648,"byte_end":12243655,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243660,"byte_end":12243667,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243959,"byte_end":12243963,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"fn send<'_, '_>(&'_ Self, &'_ [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243815,"byte_end":12243902,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12243907,"byte_end":12243947,"line_start":287,"line_end":287,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244587,"byte_end":12244591,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244067,"byte_end":12244153,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244158,"byte_end":12244187,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244192,"byte_end":12244195,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244200,"byte_end":12244211,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244216,"byte_end":12244219,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244224,"byte_end":12244299,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244304,"byte_end":12244377,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244382,"byte_end":12244430,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244435,"byte_end":12244502,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244507,"byte_end":12244575,"line_start":301,"line_end":301,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245229,"byte_end":12245233,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244699,"byte_end":12244775,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244780,"byte_end":12244829,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244834,"byte_end":12244837,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244842,"byte_end":12244853,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244858,"byte_end":12244861,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244866,"byte_end":12244941,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12244946,"byte_end":12245019,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245024,"byte_end":12245072,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245077,"byte_end":12245144,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245149,"byte_end":12245217,"line_start":315,"line_end":315,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245727,"byte_end":12245734,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn connect<'_>(&'_ Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245341,"byte_end":12245413,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245418,"byte_end":12245494,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245499,"byte_end":12245513,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245518,"byte_end":12245521,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245526,"byte_end":12245596,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245601,"byte_end":12245677,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245682,"byte_end":12245715,"line_start":326,"line_end":326,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246588,"byte_end":12246601,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn set_broadcast<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245824,"byte_end":12245888,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245893,"byte_end":12245896,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245901,"byte_end":12245972,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245977,"byte_end":12245989,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12245994,"byte_end":12245997,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246002,"byte_end":12246016,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246021,"byte_end":12246024,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246140,"byte_end":12246168,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246173,"byte_end":12246178,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246183,"byte_end":12246230,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246235,"byte_end":12246263,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246268,"byte_end":12246271,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246276,"byte_end":12246344,"line_start":345,"line_end":345,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246349,"byte_end":12246396,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246401,"byte_end":12246447,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246452,"byte_end":12246457,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246462,"byte_end":12246465,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246470,"byte_end":12246522,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246527,"byte_end":12246532,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246537,"byte_end":12246552,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246557,"byte_end":12246564,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246569,"byte_end":12246576,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247369,"byte_end":12247378,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn broadcast<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246687,"byte_end":12246751,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246756,"byte_end":12246759,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246764,"byte_end":12246811,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246816,"byte_end":12246844,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246849,"byte_end":12246852,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246857,"byte_end":12246890,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246895,"byte_end":12246898,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246903,"byte_end":12246917,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12246922,"byte_end":12246925,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247041,"byte_end":12247069,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247074,"byte_end":12247079,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247084,"byte_end":12247131,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247136,"byte_end":12247164,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247169,"byte_end":12247172,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247177,"byte_end":12247245,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247250,"byte_end":12247303,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247308,"byte_end":12247313,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247318,"byte_end":12247333,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247338,"byte_end":12247345,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247350,"byte_end":12247357,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247682,"byte_end":12247703,"line_start":389,"line_end":389,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn set_multicast_loop_v4<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247450,"byte_end":12247519,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247524,"byte_end":12247527,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247532,"byte_end":12247606,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247611,"byte_end":12247670,"line_start":388,"line_end":388,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248033,"byte_end":12248050,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn multicast_loop_v4<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247797,"byte_end":12247866,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247871,"byte_end":12247874,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247879,"byte_end":12247926,"line_start":395,"line_end":395,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247931,"byte_end":12247967,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247972,"byte_end":12247975,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12247980,"byte_end":12248021,"line_start":398,"line_end":398,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248511,"byte_end":12248531,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn set_multicast_ttl_v4<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248130,"byte_end":12248198,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248203,"byte_end":12248206,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248211,"byte_end":12248281,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248286,"byte_end":12248360,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248365,"byte_end":12248427,"line_start":407,"line_end":407,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248432,"byte_end":12248435,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248440,"byte_end":12248499,"line_start":409,"line_end":409,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248858,"byte_end":12248874,"line_start":420,"line_end":420,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn multicast_ttl_v4<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248625,"byte_end":12248693,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248698,"byte_end":12248701,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248706,"byte_end":12248753,"line_start":416,"line_end":416,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248758,"byte_end":12248793,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248798,"byte_end":12248801,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248806,"byte_end":12248846,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249188,"byte_end":12249209,"line_start":428,"line_end":428,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn set_multicast_loop_v6<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12248952,"byte_end":12249023,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249028,"byte_end":12249031,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249036,"byte_end":12249112,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249117,"byte_end":12249176,"line_start":427,"line_end":427,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249541,"byte_end":12249558,"line_start":438,"line_end":438,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn multicast_loop_v6<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249303,"byte_end":12249374,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249379,"byte_end":12249382,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249387,"byte_end":12249434,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249439,"byte_end":12249475,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249480,"byte_end":12249483,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249488,"byte_end":12249529,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250347,"byte_end":12250354,"line_start":466,"line_end":466,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn set_ttl<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249638,"byte_end":12249696,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249701,"byte_end":12249704,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249709,"byte_end":12249785,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249790,"byte_end":12249811,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249816,"byte_end":12249819,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249824,"byte_end":12249838,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249843,"byte_end":12249846,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249962,"byte_end":12249990,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12249995,"byte_end":12250000,"line_start":452,"line_end":452,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250005,"byte_end":12250052,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250057,"byte_end":12250085,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250090,"byte_end":12250093,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250098,"byte_end":12250156,"line_start":456,"line_end":456,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250161,"byte_end":12250189,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250194,"byte_end":12250223,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250228,"byte_end":12250233,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250238,"byte_end":12250241,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250246,"byte_end":12250281,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250286,"byte_end":12250291,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250296,"byte_end":12250311,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250316,"byte_end":12250323,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250328,"byte_end":12250335,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251101,"byte_end":12251104,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn ttl<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250435,"byte_end":12250493,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250498,"byte_end":12250501,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250506,"byte_end":12250572,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250577,"byte_end":12250580,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250585,"byte_end":12250612,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250617,"byte_end":12250620,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250625,"byte_end":12250639,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250644,"byte_end":12250647,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250763,"byte_end":12250791,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250796,"byte_end":12250801,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250806,"byte_end":12250853,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250858,"byte_end":12250886,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250891,"byte_end":12250894,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250899,"byte_end":12250957,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250962,"byte_end":12250987,"line_start":486,"line_end":486,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12250992,"byte_end":12250995,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251000,"byte_end":12251035,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251040,"byte_end":12251045,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251050,"byte_end":12251065,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251070,"byte_end":12251077,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251082,"byte_end":12251089,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251648,"byte_end":12251665,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn join_multicast_v4<'_, '_, '_>(&'_ Self, &'_ Ipv4Addr, &'_ Ipv4Addr)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251169,"byte_end":12251227,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251232,"byte_end":12251235,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251240,"byte_end":12251314,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251319,"byte_end":12251392,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251397,"byte_end":12251469,"line_start":501,"line_end":501,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251474,"byte_end":12251544,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251549,"byte_end":12251587,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251592,"byte_end":12251636,"line_start":504,"line_end":504,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252172,"byte_end":12252189,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn join_multicast_v6<'_, '_>(&'_ Self, &'_ Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251807,"byte_end":12251867,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251872,"byte_end":12251875,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251880,"byte_end":12251954,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12251959,"byte_end":12252032,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252037,"byte_end":12252111,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252116,"byte_end":12252160,"line_start":514,"line_end":514,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252592,"byte_end":12252610,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn leave_multicast_v4<'_, '_, '_>(&'_ Self, &'_ Ipv4Addr, &'_ Ipv4Addr)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252325,"byte_end":12252384,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252389,"byte_end":12252392,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252397,"byte_end":12252444,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252449,"byte_end":12252481,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252486,"byte_end":12252489,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252494,"byte_end":12252531,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252536,"byte_end":12252580,"line_start":525,"line_end":525,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253022,"byte_end":12253040,"line_start":537,"line_end":537,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn leave_multicast_v6<'_, '_>(&'_ Self, &'_ Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252753,"byte_end":12252814,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252819,"byte_end":12252822,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252827,"byte_end":12252874,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252879,"byte_end":12252911,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252916,"byte_end":12252919,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252924,"byte_end":12252961,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12252966,"byte_end":12253010,"line_start":536,"line_end":536,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253299,"byte_end":12253306,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"fn only_v6<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253177,"byte_end":12253238,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253243,"byte_end":12253287,"line_start":542,"line_end":542,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253639,"byte_end":12253649,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"fn take_error<'_>(&'_ Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253386,"byte_end":12253444,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253449,"byte_end":12253452,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253457,"byte_end":12253531,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253536,"byte_end":12253612,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253617,"byte_end":12253627,"line_start":551,"line_end":551,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255644,"byte_end":12255650,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UdpSocket>::try_io","value":"fn try_io<F, T, '_>(&'_ Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253735,"byte_end":12253809,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253814,"byte_end":12253852,"line_start":557,"line_end":557,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253857,"byte_end":12253860,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253865,"byte_end":12253876,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253881,"byte_end":12253884,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253889,"byte_end":12253959,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12253964,"byte_end":12254040,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254045,"byte_end":12254082,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254087,"byte_end":12254090,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254095,"byte_end":12254140,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254145,"byte_end":12254148,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254153,"byte_end":12254167,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254172,"byte_end":12254175,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254265,"byte_end":12254293,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254298,"byte_end":12254303,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254308,"byte_end":12254355,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254360,"byte_end":12254376,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254381,"byte_end":12254397,"line_start":575,"line_end":575,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254402,"byte_end":12254437,"line_start":576,"line_end":576,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254442,"byte_end":12254461,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254466,"byte_end":12254508,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254513,"byte_end":12254541,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254546,"byte_end":12254549,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254554,"byte_end":12254606,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/ let dgram = UdpSocket::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254611,"byte_end":12254653,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254658,"byte_end":12254661,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254666,"byte_end":12254708,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254713,"byte_end":12254716,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254721,"byte_end":12254787,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254792,"byte_end":12254848,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254853,"byte_end":12254880,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let n = dgram.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254885,"byte_end":12254914,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254919,"byte_end":12254970,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12254975,"byte_end":12254995,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(dgram.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255000,"byte_end":12255082,"line_start":592,"line_end":592,"column_start":5,"column_end":87}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255087,"byte_end":12255110,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(dgram.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255115,"byte_end":12255265,"line_start":594,"line_end":594,"column_start":5,"column_end":155}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255270,"byte_end":12255292,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255297,"byte_end":12255325,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255330,"byte_end":12255346,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255351,"byte_end":12255424,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255429,"byte_end":12255477,"line_start":599,"line_end":599,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255482,"byte_end":12255525,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255530,"byte_end":12255539,"line_start":601,"line_end":601,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255544,"byte_end":12255552,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255557,"byte_end":12255591,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255596,"byte_end":12255608,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255613,"byte_end":12255620,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255625,"byte_end":12255632,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255826,"byte_end":12255834,"line_start":616,"line_end":616,"column_start":8,"column_end":16},"name":"register","qualname":"<UdpSocket as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256031,"byte_end":12256041,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UdpSocket as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256240,"byte_end":12256250,"line_start":634,"line_end":634,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UdpSocket as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256391,"byte_end":12256394,"line_start":640,"line_end":640,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UdpSocket as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256533,"byte_end":12256544,"line_start":647,"line_end":647,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UdpSocket as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256666,"byte_end":12256675,"line_start":654,"line_end":654,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UdpSocket as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256965,"byte_end":12256976,"line_start":667,"line_end":667,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UdpSocket as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UdpSocket","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":" Converts a `RawFd` to a `UdpSocket`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UdpSocket`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256782,"byte_end":12256822,"line_start":661,"line_end":661,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256827,"byte_end":12256830,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256835,"byte_end":12256846,"line_start":663,"line_end":663,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256851,"byte_end":12256854,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256859,"byte_end":12256923,"line_start":665,"line_end":665,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256928,"byte_end":12256950,"line_start":666,"line_end":666,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258190,"byte_end":12258202,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1490}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258151,"byte_end":12258178,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258343,"byte_end":12258347,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258272,"byte_end":12258331,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258841,"byte_end":12258849,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258490,"byte_end":12258559,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258564,"byte_end":12258567,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258572,"byte_end":12258645,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258650,"byte_end":12258724,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; it is left up to the user to set it in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258729,"byte_end":12258802,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258807,"byte_end":12258829,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259166,"byte_end":12259173,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn connect<P, '_>(&'_ Self, P) -> io::Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258981,"byte_end":12259030,"line_start":33,"line_end":33,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259035,"byte_end":12259038,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259043,"byte_end":12259113,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259118,"byte_end":12259154,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259351,"byte_end":12259358,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259270,"byte_end":12259339,"line_start":41,"line_end":41,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259528,"byte_end":12259532,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259468,"byte_end":12259516,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259842,"byte_end":12259852,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259791,"byte_end":12259830,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260086,"byte_end":12260095,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn peer_addr<'_>(&'_ Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12259956,"byte_end":12260002,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260007,"byte_end":12260010,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260015,"byte_end":12260074,"line_start":63,"line_end":63,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260356,"byte_end":12260365,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8])\n-> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260198,"byte_end":12260232,"line_start":68,"line_end":68,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260237,"byte_end":12260240,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260245,"byte_end":12260314,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260319,"byte_end":12260344,"line_start":71,"line_end":71,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260639,"byte_end":12260643,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260531,"byte_end":12260565,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260570,"byte_end":12260573,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260578,"byte_end":12260627,"line_start":79,"line_end":79,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260882,"byte_end":12260889,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn send_to<P, '_, '_>(&'_ Self, &'_ [u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260751,"byte_end":12260805,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260810,"byte_end":12260813,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12260818,"byte_end":12260870,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261314,"byte_end":12261318,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"fn send<'_, '_>(&'_ Self, &'_ [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261027,"byte_end":12261077,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261082,"byte_end":12261085,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261090,"byte_end":12261162,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261167,"byte_end":12261237,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261242,"byte_end":12261245,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261250,"byte_end":12261302,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261481,"byte_end":12261491,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn take_error<'_>(&'_ Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261422,"byte_end":12261469,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261857,"byte_end":12261865,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn shutdown<'_>(&'_ Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261577,"byte_end":12261642,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261647,"byte_end":12261650,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261655,"byte_end":12261723,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261728,"byte_end":12261798,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261803,"byte_end":12261845,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264172,"byte_end":12264178,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixDatagram>::try_io","value":"fn try_io<F, T, '_>(&'_ Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12261952,"byte_end":12262026,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262031,"byte_end":12262069,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262074,"byte_end":12262077,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262082,"byte_end":12262093,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262098,"byte_end":12262101,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262106,"byte_end":12262176,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262181,"byte_end":12262257,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262262,"byte_end":12262299,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262304,"byte_end":12262307,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262312,"byte_end":12262357,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262362,"byte_end":12262365,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262370,"byte_end":12262384,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262389,"byte_end":12262392,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262397,"byte_end":12262404,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262409,"byte_end":12262437,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262442,"byte_end":12262447,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262452,"byte_end":12262499,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262504,"byte_end":12262520,"line_start":132,"line_end":132,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262525,"byte_end":12262560,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixDatagram;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262565,"byte_end":12262596,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262601,"byte_end":12262604,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let (dgram1, dgram2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262609,"byte_end":12262658,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262663,"byte_end":12262666,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is writable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262671,"byte_end":12262713,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262718,"byte_end":12262721,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ // Write to the dgram using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262726,"byte_end":12262791,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262796,"byte_end":12262853,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262858,"byte_end":12262881,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/ let n = dgram1.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262886,"byte_end":12262916,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262921,"byte_end":12262972,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(dgram1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12262977,"byte_end":12263060,"line_start":145,"line_end":145,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263065,"byte_end":12263087,"line_start":146,"line_end":146,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263092,"byte_end":12263120,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263125,"byte_end":12263141,"line_start":148,"line_end":148,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263146,"byte_end":12263219,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263224,"byte_end":12263272,"line_start":150,"line_end":150,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263277,"byte_end":12263320,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263325,"byte_end":12263334,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263339,"byte_end":12263347,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263352,"byte_end":12263387,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263392,"byte_end":12263395,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263400,"byte_end":12263442,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263447,"byte_end":12263450,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263455,"byte_end":12263521,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263526,"byte_end":12263582,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263587,"byte_end":12263614,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/ let n = dgram2.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263619,"byte_end":12263649,"line_start":161,"line_end":161,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263654,"byte_end":12263705,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(dgram2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263710,"byte_end":12263793,"line_start":163,"line_end":163,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263798,"byte_end":12263820,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263825,"byte_end":12263853,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263858,"byte_end":12263874,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263879,"byte_end":12263952,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12263957,"byte_end":12264005,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264010,"byte_end":12264053,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264058,"byte_end":12264067,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264072,"byte_end":12264080,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264085,"byte_end":12264119,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264124,"byte_end":12264136,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264141,"byte_end":12264148,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264153,"byte_end":12264160,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264357,"byte_end":12264365,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixDatagram as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264562,"byte_end":12264572,"line_start":194,"line_end":194,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixDatagram as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264771,"byte_end":12264781,"line_start":203,"line_end":203,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixDatagram as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264925,"byte_end":12264928,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnixDatagram as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265057,"byte_end":12265068,"line_start":215,"line_end":215,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265180,"byte_end":12265189,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265472,"byte_end":12265483,"line_start":233,"line_end":233,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UnixDatagram","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":" Converts a `RawFd` to a `UnixDatagram`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UnixDatagram`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265286,"byte_end":12265329,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265334,"byte_end":12265337,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265342,"byte_end":12265353,"line_start":229,"line_end":229,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265358,"byte_end":12265361,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265366,"byte_end":12265430,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265435,"byte_end":12265457,"line_start":232,"line_end":232,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12265894,"byte_end":12265906,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1586}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12265837,"byte_end":12265882,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266051,"byte_end":12266055,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12265976,"byte_end":12266039,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266549,"byte_end":12266557,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266198,"byte_end":12266267,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266272,"byte_end":12266275,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266280,"byte_end":12266353,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266358,"byte_end":12266432,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266437,"byte_end":12266510,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266515,"byte_end":12266537,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266872,"byte_end":12266878,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"fn accept<'_>(&'_ Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266693,"byte_end":12266748,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266753,"byte_end":12266756,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266761,"byte_end":12266833,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266838,"byte_end":12266860,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267053,"byte_end":12267063,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12266987,"byte_end":12267041,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267226,"byte_end":12267236,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn take_error<'_>(&'_ Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267167,"byte_end":12267214,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267365,"byte_end":12267373,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixListener as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267570,"byte_end":12267580,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixListener as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267779,"byte_end":12267789,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixListener as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267933,"byte_end":12267936,"line_start":77,"line_end":77,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnixListener as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268065,"byte_end":12268076,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixListener as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268188,"byte_end":12268197,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixListener as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268480,"byte_end":12268491,"line_start":101,"line_end":101,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixListener as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UnixListener","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":" Converts a `RawFd` to a `UnixListener`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UnixListener`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268294,"byte_end":12268337,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268342,"byte_end":12268345,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268350,"byte_end":12268361,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268366,"byte_end":12268369,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268374,"byte_end":12268438,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268443,"byte_end":12268465,"line_start":100,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12268926,"byte_end":12268936,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1671}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12268876,"byte_end":12268914,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269219,"byte_end":12269226,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"fn connect<P>(P) -> io::Result<UnixStream> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269002,"byte_end":12269045,"line_start":17,"line_end":17,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269050,"byte_end":12269053,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269058,"byte_end":12269128,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately. Usually it means the backlog is full.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269133,"byte_end":12269207,"line_start":20,"line_end":20,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269921,"byte_end":12269929,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269366,"byte_end":12269431,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269436,"byte_end":12269439,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269444,"byte_end":12269515,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269520,"byte_end":12269594,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269599,"byte_end":12269670,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269675,"byte_end":12269697,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269702,"byte_end":12269705,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269710,"byte_end":12269720,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269725,"byte_end":12269728,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269733,"byte_end":12269801,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269806,"byte_end":12269878,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12269883,"byte_end":12269909,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270193,"byte_end":12270197,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270055,"byte_end":12270104,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270109,"byte_end":12270112,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270117,"byte_end":12270181,"line_start":45,"line_end":45,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270479,"byte_end":12270489,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270399,"byte_end":12270467,"line_start":52,"line_end":52,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270672,"byte_end":12270681,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn peer_addr<'_>(&'_ Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270591,"byte_end":12270660,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270841,"byte_end":12270851,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn take_error<'_>(&'_ Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270782,"byte_end":12270829,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271218,"byte_end":12271226,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn shutdown<'_>(&'_ Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12270937,"byte_end":12271003,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271008,"byte_end":12271011,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271016,"byte_end":12271084,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271089,"byte_end":12271159,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271164,"byte_end":12271206,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273539,"byte_end":12273545,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixStream>::try_io","value":"fn try_io<F, T, '_>(&'_ Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271313,"byte_end":12271387,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271392,"byte_end":12271430,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271435,"byte_end":12271438,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271443,"byte_end":12271454,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271459,"byte_end":12271462,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271467,"byte_end":12271537,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271542,"byte_end":12271618,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271623,"byte_end":12271660,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271665,"byte_end":12271668,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271673,"byte_end":12271718,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271723,"byte_end":12271726,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271731,"byte_end":12271745,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271750,"byte_end":12271753,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271758,"byte_end":12271765,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271770,"byte_end":12271798,"line_start":90,"line_end":90,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271803,"byte_end":12271808,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271813,"byte_end":12271860,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271865,"byte_end":12271881,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271886,"byte_end":12271921,"line_start":94,"line_end":94,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixStream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271926,"byte_end":12271955,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271960,"byte_end":12271963,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let (stream1, stream2) = UnixStream::pair()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12271968,"byte_end":12272017,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272022,"byte_end":12272025,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272030,"byte_end":12272073,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272078,"byte_end":12272081,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Write to the stream using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272086,"byte_end":12272152,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272157,"byte_end":12272214,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272219,"byte_end":12272242,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let n = stream1.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272247,"byte_end":12272278,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272283,"byte_end":12272334,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(stream1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272339,"byte_end":12272423,"line_start":106,"line_end":106,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272428,"byte_end":12272450,"line_start":107,"line_end":107,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272455,"byte_end":12272483,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272488,"byte_end":12272504,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272509,"byte_end":12272582,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272587,"byte_end":12272635,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272640,"byte_end":12272683,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272688,"byte_end":12272697,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272702,"byte_end":12272710,"line_start":114,"line_end":114,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272715,"byte_end":12272750,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272755,"byte_end":12272758,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272763,"byte_end":12272806,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272811,"byte_end":12272814,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272819,"byte_end":12272886,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272891,"byte_end":12272947,"line_start":120,"line_end":120,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272952,"byte_end":12272979,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/ let n = stream2.try_io(|| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12272984,"byte_end":12273015,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273020,"byte_end":12273071,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(stream2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273076,"byte_end":12273160,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273165,"byte_end":12273187,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273192,"byte_end":12273220,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273225,"byte_end":12273241,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273246,"byte_end":12273319,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273324,"byte_end":12273372,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273377,"byte_end":12273420,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273425,"byte_end":12273434,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273439,"byte_end":12273447,"line_start":132,"line_end":132,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273452,"byte_end":12273486,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273491,"byte_end":12273503,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273508,"byte_end":12273515,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273520,"byte_end":12273527,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273713,"byte_end":12273717,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"read","qualname":"<UnixStream as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273836,"byte_end":12273849,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<UnixStream as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274028,"byte_end":12274032,"line_start":156,"line_end":156,"column_start":8,"column_end":12},"name":"read","qualname":"<&'a UnixStream as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274151,"byte_end":12274164,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<&'a UnixStream as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274336,"byte_end":12274341,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"write","qualname":"<UnixStream as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274457,"byte_end":12274471,"line_start":170,"line_end":170,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<UnixStream as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274607,"byte_end":12274612,"line_start":174,"line_end":174,"column_start":8,"column_end":13},"name":"flush","qualname":"<UnixStream as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274748,"byte_end":12274753,"line_start":180,"line_end":180,"column_start":8,"column_end":13},"name":"write","qualname":"<&'a UnixStream as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274869,"byte_end":12274883,"line_start":184,"line_end":184,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<&'a UnixStream as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275019,"byte_end":12275024,"line_start":188,"line_end":188,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'a UnixStream as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275160,"byte_end":12275168,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixStream as event::source::Source>::register","value":"fn register<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275365,"byte_end":12275375,"line_start":203,"line_end":203,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixStream as event::source::Source>::reregister","value":"fn reregister<'_, '_>(&'_ mut Self, &'_ Registry, Token, Interest)\n-> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":209},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275574,"byte_end":12275584,"line_start":212,"line_end":212,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixStream as event::source::Source>::deregister","value":"fn deregister<'_, '_>(&'_ mut Self, &'_ Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":{"krate":0,"index":210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275726,"byte_end":12275729,"line_start":218,"line_end":218,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnixStream as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275856,"byte_end":12275867,"line_start":224,"line_end":224,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixStream as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6614},"children":[],"decl_id":{"krate":1,"index":6615},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275977,"byte_end":12275986,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixStream as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd<'_>(&'_ Self) -> RawFd","parent":{"krate":1,"index":6610},"children":[],"decl_id":{"krate":1,"index":6611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276265,"byte_end":12276276,"line_start":242,"line_end":242,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixStream as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> UnixStream","parent":{"krate":1,"index":6612},"children":[],"decl_id":{"krate":1,"index":6613},"docs":" Converts a `RawFd` to a `UnixStream`.","sig":null,"attributes":[{"value":"/ Converts a `RawFd` to a `UnixStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276081,"byte_end":12276122,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276127,"byte_end":12276130,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276135,"byte_end":12276146,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276151,"byte_end":12276154,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that the socket is in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276159,"byte_end":12276223,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276228,"byte_end":12276250,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1717,"byte_end":1721,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1610,"byte_end":1647,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1728,"byte_end":1753,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1767,"byte_end":1771,"line_start":77,"line_end":77,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1782,"byte_end":1796,"line_start":78,"line_end":78,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1805,"byte_end":1808,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1817,"byte_end":1864,"line_start":80,"line_end":80,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2184,"byte_end":2192,"line_start":96,"line_end":96,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2199,"byte_end":2229,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2242,"byte_end":2300,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2459,"byte_end":2462,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation that `panic!`s the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2467,"byte_end":2541,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2546,"byte_end":2615,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2620,"byte_end":2668,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2673,"byte_end":2676,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2681,"byte_end":2738,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2743,"byte_end":2746,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2901,"byte_end":2977,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":2982,"byte_end":3030,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3035,"byte_end":3038,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3189,"byte_end":3192,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3197,"byte_end":3269,"line_start":119,"line_end":119,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":264},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3281,"byte_end":3286,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3293,"byte_end":3321,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3326,"byte_end":3329,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3334,"byte_end":3375,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3380,"byte_end":3383,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3388,"byte_end":3445,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3450,"byte_end":3484,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3489,"byte_end":3517,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3530,"byte_end":3605,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3610,"byte_end":3660,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3665,"byte_end":3668,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3673,"byte_end":3709,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3722,"byte_end":3797,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3802,"byte_end":3878,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3883,"byte_end":3933,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3938,"byte_end":3941,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3946,"byte_end":3979,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":3984,"byte_end":4027,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4032,"byte_end":4035,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4153,"byte_end":4183,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4188,"byte_end":4228,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4233,"byte_end":4286,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4291,"byte_end":4319,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4324,"byte_end":4396,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4401,"byte_end":4429,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4434,"byte_end":4478,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4483,"byte_end":4510,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4515,"byte_end":4527,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4532,"byte_end":4539,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4544,"byte_end":4551,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4556,"byte_end":4559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4564,"byte_end":4633,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4638,"byte_end":4708,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4713,"byte_end":4787,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4792,"byte_end":4818,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4823,"byte_end":4826,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4831,"byte_end":4882,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4887,"byte_end":4890,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4895,"byte_end":4929,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4934,"byte_end":4937,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":4942,"byte_end":5018,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5023,"byte_end":5097,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5102,"byte_end":5182,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5187,"byte_end":5262,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5267,"byte_end":5335,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5340,"byte_end":5352,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5357,"byte_end":5360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5365,"byte_end":5441,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5446,"byte_end":5517,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5522,"byte_end":5525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5530,"byte_end":5576,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5581,"byte_end":5584,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5746,"byte_end":5778,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5783,"byte_end":5822,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5827,"byte_end":5867,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5872,"byte_end":5902,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5907,"byte_end":5958,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":5963,"byte_end":6018,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6023,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6079,"byte_end":6082,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6087,"byte_end":6164,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6169,"byte_end":6247,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6252,"byte_end":6268,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6273,"byte_end":6308,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6313,"byte_end":6386,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6391,"byte_end":6403,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6408,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6420,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6432,"byte_end":6435,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6440,"byte_end":6512,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6517,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6561,"byte_end":6564,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6569,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6631,"byte_end":6634,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6639,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6677,"byte_end":6680,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6685,"byte_end":6755,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6760,"byte_end":6836,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6841,"byte_end":6916,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":6921,"byte_end":6995,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7000,"byte_end":7075,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7080,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7094,"byte_end":7097,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7102,"byte_end":7176,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7181,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7201,"byte_end":7204,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7209,"byte_end":7252,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7257,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7309,"byte_end":7312,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7474,"byte_end":7492,"line_start":219,"line_end":219,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7497,"byte_end":7527,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7532,"byte_end":7564,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7569,"byte_end":7616,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7621,"byte_end":7656,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7661,"byte_end":7695,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7700,"byte_end":7750,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7755,"byte_end":7806,"line_start":226,"line_end":226,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7811,"byte_end":7864,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7869,"byte_end":7906,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7911,"byte_end":7986,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":7991,"byte_end":8019,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8024,"byte_end":8034,"line_start":231,"line_end":231,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8039,"byte_end":8107,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8112,"byte_end":8178,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8183,"byte_end":8186,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8191,"byte_end":8221,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8226,"byte_end":8262,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8267,"byte_end":8342,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8347,"byte_end":8400,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8405,"byte_end":8438,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8443,"byte_end":8475,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8480,"byte_end":8557,"line_start":241,"line_end":241,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8562,"byte_end":8609,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8614,"byte_end":8659,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8664,"byte_end":8718,"line_start":244,"line_end":244,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8723,"byte_end":8798,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8803,"byte_end":8848,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8853,"byte_end":8879,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8884,"byte_end":8961,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":8966,"byte_end":9037,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9042,"byte_end":9081,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9086,"byte_end":9152,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9157,"byte_end":9209,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9214,"byte_end":9235,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9240,"byte_end":9257,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9262,"byte_end":9298,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9303,"byte_end":9316,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9321,"byte_end":9330,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9335,"byte_end":9357,"line_start":258,"line_end":258,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9362,"byte_end":9367,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9372,"byte_end":9375,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9380,"byte_end":9425,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9430,"byte_end":9477,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9482,"byte_end":9487,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9492,"byte_end":9499,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":9504,"byte_end":9511,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12194,"byte_end":12202,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15521,"byte_end":15529,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15672,"byte_end":15680,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15808,"byte_end":15816,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28305,"byte_end":28309,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34649,"byte_end":34653,"line_start":416,"line_end":416,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34754,"byte_end":34758,"line_start":422,"line_end":422,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34882,"byte_end":34890,"line_start":428,"line_end":428,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":45159,"byte_end":45167,"line_start":694,"line_end":694,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":45320,"byte_end":45328,"line_start":701,"line_end":701,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12126885,"byte_end":12126893,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12135666,"byte_end":12135674,"line_start":298,"line_end":298,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12135769,"byte_end":12135777,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12135854,"byte_end":12135862,"line_start":311,"line_end":311,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136090,"byte_end":12136096,"line_start":322,"line_end":322,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136222,"byte_end":12136228,"line_start":328,"line_end":328,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136351,"byte_end":12136357,"line_start":336,"line_end":336,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136829,"byte_end":12136835,"line_start":347,"line_end":347,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136860,"byte_end":12136866,"line_start":348,"line_end":348,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150792,"byte_end":12150800,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/waker.rs","byte_start":12154183,"byte_end":12154188,"line_start":80,"line_end":80,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/net.rs","byte_start":12159327,"byte_end":12159342,"line_start":68,"line_end":68,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12174214,"byte_end":12174224,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12175153,"byte_end":12175163,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12177195,"byte_end":12177205,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12177585,"byte_end":12177597,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/mod.rs","byte_start":12123251,"byte_end":12123264,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190568,"byte_end":12190574,"line_start":216,"line_end":216,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193158,"byte_end":12193164,"line_start":291,"line_end":291,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193715,"byte_end":12193721,"line_start":315,"line_end":315,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194611,"byte_end":12194617,"line_start":346,"line_end":346,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194828,"byte_end":12194834,"line_start":353,"line_end":353,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194996,"byte_end":12195002,"line_start":361,"line_end":361,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195099,"byte_end":12195105,"line_start":367,"line_end":367,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195367,"byte_end":12195375,"line_start":381,"line_end":381,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197961,"byte_end":12197969,"line_start":456,"line_end":456,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198519,"byte_end":12198527,"line_start":480,"line_end":480,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199223,"byte_end":12199231,"line_start":503,"line_end":503,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199530,"byte_end":12199538,"line_start":513,"line_end":513,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199757,"byte_end":12199765,"line_start":520,"line_end":520,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199931,"byte_end":12199939,"line_start":528,"line_end":528,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12200036,"byte_end":12200044,"line_start":534,"line_end":534,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55793,"byte_end":55798,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56896,"byte_end":56901,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":64069,"byte_end":64074,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":64783,"byte_end":64795,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67158,"byte_end":67164,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70280,"byte_end":70284,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70760,"byte_end":70766,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74930,"byte_end":74933,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12202819,"byte_end":12202827,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12204127,"byte_end":12204135,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12204402,"byte_end":12204410,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12204539,"byte_end":12204547,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12207431,"byte_end":12207439,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12207744,"byte_end":12207754,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12210052,"byte_end":12210062,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213366,"byte_end":12213377,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216918,"byte_end":12216929,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217485,"byte_end":12217496,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217629,"byte_end":12217640,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217764,"byte_end":12217775,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217885,"byte_end":12217896,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221131,"byte_end":12221140,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229635,"byte_end":12229644,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230256,"byte_end":12230265,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231078,"byte_end":12231087,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231643,"byte_end":12231652,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231785,"byte_end":12231794,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231918,"byte_end":12231927,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232037,"byte_end":12232046,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237042,"byte_end":12237051,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255807,"byte_end":12255816,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256372,"byte_end":12256381,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256514,"byte_end":12256523,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256647,"byte_end":12256656,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256766,"byte_end":12256775,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258253,"byte_end":12258265,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264335,"byte_end":12264347,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264903,"byte_end":12264915,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265035,"byte_end":12265047,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265158,"byte_end":12265170,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265267,"byte_end":12265279,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12265957,"byte_end":12265969,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267343,"byte_end":12267355,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267911,"byte_end":12267923,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268043,"byte_end":12268055,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268166,"byte_end":12268178,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268275,"byte_end":12268287,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12268985,"byte_end":12268995,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273693,"byte_end":12273703,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274316,"byte_end":12274326,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275140,"byte_end":12275150,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275706,"byte_end":12275716,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275836,"byte_end":12275846,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275957,"byte_end":12275967,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276064,"byte_end":12276074,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1354,"byte_end":1359,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/lib.rs","byte_start":1424,"byte_end":1427,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1108}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":12194,"byte_end":12202,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15521,"byte_end":15529,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":3395}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15672,"byte_end":15680,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":3421}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/interest.rs","byte_start":15808,"byte_end":15816,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":28305,"byte_end":28309,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34649,"byte_end":34653,"line_start":416,"line_end":416,"column_start":18,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34754,"byte_end":34758,"line_start":422,"line_end":422,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":34882,"byte_end":34890,"line_start":428,"line_end":428,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":45159,"byte_end":45167,"line_start":694,"line_end":694,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/poll.rs","byte_start":45320,"byte_end":45328,"line_start":701,"line_end":701,"column_start":18,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12126885,"byte_end":12126893,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12135666,"byte_end":12135674,"line_start":298,"line_end":298,"column_start":10,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12135769,"byte_end":12135777,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":498},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12135854,"byte_end":12135862,"line_start":311,"line_end":311,"column_start":15,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136090,"byte_end":12136096,"line_start":322,"line_end":322,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136222,"byte_end":12136228,"line_start":328,"line_end":328,"column_start":16,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136351,"byte_end":12136357,"line_start":336,"line_end":336,"column_start":19,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136829,"byte_end":12136835,"line_start":347,"line_end":347,"column_start":22,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/selector/kqueue.rs","byte_start":12136860,"byte_end":12136866,"line_start":348,"line_end":348,"column_start":22,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/sourcefd.rs","byte_start":12150792,"byte_end":12150800,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/waker.rs","byte_start":12154183,"byte_end":12154188,"line_start":80,"line_end":80,"column_start":10,"column_end":15},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/net.rs","byte_start":12159327,"byte_end":12159342,"line_start":68,"line_end":68,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12174214,"byte_end":12174224,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12175153,"byte_end":12175163,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12177195,"byte_end":12177205,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/uds/socketaddr.rs","byte_start":12177585,"byte_end":12177597,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/mod.rs","byte_start":12123251,"byte_end":12123264,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12190568,"byte_end":12190574,"line_start":216,"line_end":216,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193158,"byte_end":12193164,"line_start":291,"line_end":291,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":980},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12193715,"byte_end":12193721,"line_start":315,"line_end":315,"column_start":16,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194611,"byte_end":12194617,"line_start":346,"line_end":346,"column_start":27,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":980},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194828,"byte_end":12194834,"line_start":353,"line_end":353,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12194996,"byte_end":12195002,"line_start":361,"line_end":361,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195099,"byte_end":12195105,"line_start":367,"line_end":367,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12195367,"byte_end":12195375,"line_start":381,"line_end":381,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12197961,"byte_end":12197969,"line_start":456,"line_end":456,"column_start":24,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":984},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12198519,"byte_end":12198527,"line_start":480,"line_end":480,"column_start":15,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":4667}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199223,"byte_end":12199231,"line_start":503,"line_end":503,"column_start":28,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199530,"byte_end":12199538,"line_start":513,"line_end":513,"column_start":28,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199757,"byte_end":12199765,"line_start":520,"line_end":520,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12199931,"byte_end":12199939,"line_start":528,"line_end":528,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/sys/unix/pipe.rs","byte_start":12200036,"byte_end":12200044,"line_start":534,"line_end":534,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":984},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/waker.rs","byte_start":55793,"byte_end":55798,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":56896,"byte_end":56901,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":64069,"byte_end":64074,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/event.rs","byte_start":64783,"byte_end":64795,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":67158,"byte_end":67164,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70280,"byte_end":70284,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1018},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/events.rs","byte_start":70760,"byte_end":70766,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/event/source.rs","byte_start":74930,"byte_end":74933,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12202819,"byte_end":12202827,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12204127,"byte_end":12204135,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12204402,"byte_end":12204410,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12204539,"byte_end":12204547,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1069},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12207431,"byte_end":12207439,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12207744,"byte_end":12207754,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/io_source.rs","byte_start":12210052,"byte_end":12210062,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12213366,"byte_end":12213377,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12216918,"byte_end":12216929,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1173},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217485,"byte_end":12217496,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1173},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217629,"byte_end":12217640,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1173},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217764,"byte_end":12217775,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1173},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/listener.rs","byte_start":12217885,"byte_end":12217896,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1173},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12221131,"byte_end":12221140,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12229635,"byte_end":12229644,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":4667}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12230256,"byte_end":12230265,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231078,"byte_end":12231087,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1266},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231643,"byte_end":12231652,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231785,"byte_end":12231794,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12231918,"byte_end":12231927,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/tcp/stream.rs","byte_start":12232037,"byte_end":12232046,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12237042,"byte_end":12237051,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12255807,"byte_end":12255816,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1384},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256372,"byte_end":12256381,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1384},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256514,"byte_end":12256523,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256647,"byte_end":12256656,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/udp.rs","byte_start":12256766,"byte_end":12256775,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12258253,"byte_end":12258265,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264335,"byte_end":12264347,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1489},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12264903,"byte_end":12264915,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265035,"byte_end":12265047,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1489},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265158,"byte_end":12265170,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1489},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/datagram.rs","byte_start":12265267,"byte_end":12265279,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1489},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12265957,"byte_end":12265969,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267343,"byte_end":12267355,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1585},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12267911,"byte_end":12267923,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1585},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268043,"byte_end":12268055,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1585},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268166,"byte_end":12268178,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1585},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/listener.rs","byte_start":12268275,"byte_end":12268287,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1585},"to":{"krate":1,"index":6612}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12268985,"byte_end":12268995,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12273693,"byte_end":12273703,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1670},"to":{"krate":1,"index":4667}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12274316,"byte_end":12274326,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1670},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275140,"byte_end":12275150,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1670},"to":{"krate":0,"index":207}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275706,"byte_end":12275716,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275836,"byte_end":12275846,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1670},"to":{"krate":1,"index":6614}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12275957,"byte_end":12275967,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1670},"to":{"krate":1,"index":6610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.6/src/net/uds/stream.rs","byte_start":12276064,"byte_end":12276074,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1670},"to":{"krate":1,"index":6612}}]}