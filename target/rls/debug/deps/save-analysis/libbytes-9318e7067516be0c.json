{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","bytes","--edition=2018","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=9318e7067516be0c","-C","extra-filename=-9318e7067516be0c","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbytes-9318e7067516be0c.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[7733216626845442038,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":0,"byte_end":3519,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4456,"byte_end":4459,"line_start":32,"line_end":32,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4484,"byte_end":4490,"line_start":33,"line_end":33,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4513,"byte_end":4518,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4540,"byte_end":4548,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1281},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4571,"byte_end":4576,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1288},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4598,"byte_end":4602,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4632,"byte_end":4643,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"alias_span":null,"name":"UninitSlice","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2984,"byte_end":2987,"line_start":85,"line_end":85,"column_start":22,"column_end":25},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2989,"byte_end":2995,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":471},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":3066,"byte_end":3071,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":3099,"byte_end":3107,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":0,"byte_end":3519,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":650},{"krate":0,"index":959},{"krate":0,"index":1020},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":189,"byte_end":199,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/ Provides abstractions for working with bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":240,"byte_end":289,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":290,"byte_end":293,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `bytes` crate provides an efficient byte buffer structure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":294,"byte_end":359,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ ([`Bytes`](struct.Bytes.html)) and traits for working with buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":360,"byte_end":429,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ implementations ([`Buf`], [`BufMut`]).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":430,"byte_end":472,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":473,"byte_end":476,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":477,"byte_end":504,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":505,"byte_end":538,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":539,"byte_end":542,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # `Bytes`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":543,"byte_end":556,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":557,"byte_end":560,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":561,"byte_end":638,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":639,"byte_end":717,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":718,"byte_end":764,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":765,"byte_end":768,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":769,"byte_end":849,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":850,"byte_end":928,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":929,"byte_end":1009,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ be freed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1010,"byte_end":1023,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1024,"byte_end":1027,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1028,"byte_end":1117,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/ or `Vec<u8>`), but usually a `BytesMut` is used first and written to. For","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1118,"byte_end":1195,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1196,"byte_end":1208,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1209,"byte_end":1212,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1213,"byte_end":1224,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1225,"byte_end":1259,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1264,"byte_end":1312,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1313,"byte_end":1346,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ buf.put_u16(1234);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1347,"byte_end":1369,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1370,"byte_end":1373,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let a = buf.split();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1374,"byte_end":1398,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(a, b\"hello world\\x04\\xD2\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1399,"byte_end":1445,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1446,"byte_end":1449,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"goodbye world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1450,"byte_end":1485,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1486,"byte_end":1489,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let b = buf.split();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1490,"byte_end":1514,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(b, b\"goodbye world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1515,"byte_end":1555,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1556,"byte_end":1559,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf.capacity(), 998);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1560,"byte_end":1596,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1597,"byte_end":1604,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1605,"byte_end":1608,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ In the above example, only a single buffer of 1024 is allocated. The handles","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1609,"byte_end":1689,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ `a` and `b` will share the underlying buffer and maintain indices tracking","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1690,"byte_end":1768,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ the view into the buffer represented by the handle.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1769,"byte_end":1824,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1825,"byte_end":1828,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ See the [struct docs] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1829,"byte_end":1872,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1873,"byte_end":1876,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [struct docs]: struct.Bytes.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1877,"byte_end":1913,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1914,"byte_end":1917,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1918,"byte_end":1939,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1940,"byte_end":1943,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ These two traits provide read and write access to buffers. The underlying","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":1944,"byte_end":2021,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ storage may or may not be in contiguous memory. For example, `Bytes` is a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2022,"byte_end":2099,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ buffer that guarantees contiguous memory, but a [rope] stores the bytes in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2100,"byte_end":2178,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ disjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2179,"byte_end":2256,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ position in the underlying byte storage. When bytes are read or written, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2257,"byte_end":2337,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ cursor is advanced.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2338,"byte_end":2361,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2362,"byte_end":2365,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2366,"byte_end":2429,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2430,"byte_end":2433,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Relation with `Read` and `Write`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2434,"byte_end":2473,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2474,"byte_end":2477,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ At first glance, it may seem that `Buf` and `BufMut` overlap in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2478,"byte_end":2545,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ functionality with `std::io::Read` and `std::io::Write`. However, they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2546,"byte_end":2620,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ serve different purposes. A buffer is the value that is provided as an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2621,"byte_end":2695,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ argument to `Read::read` and `Write::write`. `Read` and `Write` may then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2696,"byte_end":2772,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ perform a syscall, which has the potential of failing. Operations on `Buf`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2773,"byte_end":2851,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ and `BufMut` are infallible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2852,"byte_end":2884,"line_start":77,"line_end":77,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":92},{"krate":0,"index":196},{"krate":0,"index":242},{"krate":0,"index":259},{"krate":0,"index":283},{"krate":0,"index":309},{"krate":0,"index":360},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[{"value":"/ Utilities for working with buffers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3521,"byte_end":3560,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3561,"byte_end":3564,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A buffer is any structure that contains a sequence of bytes. The bytes may","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3565,"byte_end":3643,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ or may not be stored in contiguous memory. This module contains traits used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3644,"byte_end":3723,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ to abstract over buffers as well as utilities for working with buffer types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3724,"byte_end":3804,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3805,"byte_end":3808,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3809,"byte_end":3830,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3831,"byte_end":3834,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These are the two foundational traits for abstractly working with buffers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3835,"byte_end":3913,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ They can be thought as iterators for byte structures. They offer additional","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3914,"byte_end":3993,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ performance over `Iterator` by providing an API optimized for byte slices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":3994,"byte_end":4072,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4073,"byte_end":4076,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Buf`] and [`BufMut`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4077,"byte_end":4125,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4126,"byte_end":4129,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4130,"byte_end":4193,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4194,"byte_end":4221,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/mod.rs","byte_start":4222,"byte_end":4255,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7265,"byte_end":7268,"line_start":76,"line_end":76,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[{"value":"/ Read bytes from a buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6548,"byte_end":6577,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6578,"byte_end":6581,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that read operations are infallible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6582,"byte_end":6659,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `Buf` value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6660,"byte_end":6740,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ is a cursor into the buffer. Reading from `Buf` advances the cursor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6741,"byte_end":6812,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ position. It can be thought of as an efficient `Iterator` for collections of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6813,"byte_end":6893,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6894,"byte_end":6904,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6905,"byte_end":6908,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The simplest `Buf` is a `&[u8]`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6909,"byte_end":6945,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6946,"byte_end":6949,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6950,"byte_end":6957,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6958,"byte_end":6977,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6978,"byte_end":6981,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":6982,"byte_end":7020,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7021,"byte_end":7024,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7025,"byte_end":7060,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'e', buf.get_u8());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7061,"byte_end":7096,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'l', buf.get_u8());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7097,"byte_end":7132,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7133,"byte_end":7136,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let mut rest = [0; 8];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7137,"byte_end":7163,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ buf.copy_to_slice(&mut rest);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7164,"byte_end":7197,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7198,"byte_end":7201,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&rest[..], &b\"lo world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7202,"byte_end":7246,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7247,"byte_end":7254,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8017,"byte_end":8026,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[{"value":"/ Returns the number of bytes between the current position and the end of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7275,"byte_end":7350,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7355,"byte_end":7370,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7375,"byte_end":7378,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7383,"byte_end":7458,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ by `chunk()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7463,"byte_end":7480,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7485,"byte_end":7488,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7493,"byte_end":7507,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7512,"byte_end":7515,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7520,"byte_end":7527,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7532,"byte_end":7551,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7556,"byte_end":7559,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7564,"byte_end":7602,"line_start":88,"line_end":88,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7607,"byte_end":7610,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 11);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7615,"byte_end":7651,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7656,"byte_end":7659,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7664,"byte_end":7681,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7686,"byte_end":7689,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7694,"byte_end":7730,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7735,"byte_end":7742,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7747,"byte_end":7750,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7755,"byte_end":7778,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7783,"byte_end":7786,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining` should ensure that the return value does","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7791,"byte_end":7866,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ not change unless a call is made to `advance` or any other function that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7871,"byte_end":7947,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ is documented to change the `Buf`'s current position.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":7952,"byte_end":8009,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":9044,"byte_end":9049,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"chunk","qualname":"::buf::buf_impl::Buf::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[{"value":"/ Returns a slice starting at the current position and of length between 0","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8049,"byte_end":8125,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ and `Buf::remaining()`. Note that this *can* return shorter slice (this allows","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8130,"byte_end":8212,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/ non-continuous internal representation).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8217,"byte_end":8261,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8266,"byte_end":8269,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8274,"byte_end":8345,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8350,"byte_end":8364,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8369,"byte_end":8372,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8377,"byte_end":8391,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8396,"byte_end":8399,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8404,"byte_end":8411,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8416,"byte_end":8435,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8440,"byte_end":8443,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8448,"byte_end":8486,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8491,"byte_end":8494,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8499,"byte_end":8548,"line_start":118,"line_end":118,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8553,"byte_end":8556,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8561,"byte_end":8580,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8585,"byte_end":8588,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8593,"byte_end":8636,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8641,"byte_end":8648,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8653,"byte_end":8656,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8661,"byte_end":8684,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8689,"byte_end":8692,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8697,"byte_end":8773,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `chunk()` should return an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8778,"byte_end":8851,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ empty slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":8856,"byte_end":8872,"line_start":129,"line_end":129,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11630,"byte_end":11637,"line_start":207,"line_end":207,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the Buf","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10747,"byte_end":10789,"line_start":177,"line_end":177,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10794,"byte_end":10797,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The next call to `chunk()` will return a slice starting `cnt` bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10802,"byte_end":10873,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10878,"byte_end":10917,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10922,"byte_end":10925,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10930,"byte_end":10944,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10949,"byte_end":10952,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10957,"byte_end":10964,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10969,"byte_end":10988,"line_start":185,"line_end":185,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":10993,"byte_end":10996,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11001,"byte_end":11039,"line_start":187,"line_end":187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11044,"byte_end":11047,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11052,"byte_end":11101,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11106,"byte_end":11109,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11114,"byte_end":11133,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11138,"byte_end":11141,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11146,"byte_end":11189,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11194,"byte_end":11201,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11206,"byte_end":11209,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11214,"byte_end":11226,"line_start":196,"line_end":196,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11231,"byte_end":11234,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11239,"byte_end":11299,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11304,"byte_end":11307,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11312,"byte_end":11335,"line_start":200,"line_end":200,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11340,"byte_end":11343,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance` to panic if `cnt >","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11348,"byte_end":11421,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ self.remaining()`. If the implementation does not panic, the call must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11426,"byte_end":11500,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ behave as if `cnt == self.remaining()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11505,"byte_end":11548,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11553,"byte_end":11556,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11561,"byte_end":11622,"line_start":206,"line_end":206,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12040,"byte_end":12053,"line_start":226,"line_end":226,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"fn has_remaining<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[{"value":"/ Returns true if there are any more bytes to consume","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11667,"byte_end":11722,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11727,"byte_end":11730,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining() != 0`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11735,"byte_end":11785,"line_start":211,"line_end":211,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11790,"byte_end":11793,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11798,"byte_end":11812,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11817,"byte_end":11820,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11825,"byte_end":11832,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11837,"byte_end":11856,"line_start":216,"line_end":216,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11861,"byte_end":11864,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"a\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11869,"byte_end":11897,"line_start":218,"line_end":218,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11902,"byte_end":11905,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11910,"byte_end":11943,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11948,"byte_end":11951,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11956,"byte_end":11973,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11978,"byte_end":11981,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":11986,"byte_end":12020,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12025,"byte_end":12032,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12678,"byte_end":12691,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"fn copy_to_slice<'_, '_>(&'_ mut Self, &'_ mut [u8])","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[{"value":"/ Copies bytes from `self` into `dst`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12111,"byte_end":12151,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12156,"byte_end":12159,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The cursor is advanced by the number of bytes copied. `self` must have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12164,"byte_end":12238,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ enough remaining bytes to fill `dst`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12243,"byte_end":12284,"line_start":233,"line_end":233,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12289,"byte_end":12292,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12297,"byte_end":12311,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12316,"byte_end":12319,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12324,"byte_end":12331,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12336,"byte_end":12355,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12360,"byte_end":12363,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12368,"byte_end":12406,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12411,"byte_end":12436,"line_start":241,"line_end":241,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12441,"byte_end":12444,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ buf.copy_to_slice(&mut dst);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12449,"byte_end":12481,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(&b\"hello\"[..], &dst);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12486,"byte_end":12522,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(6, buf.remaining());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12527,"byte_end":12562,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12567,"byte_end":12574,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12579,"byte_end":12582,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12587,"byte_end":12599,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12604,"byte_end":12607,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This function panics if `self.remaining() < dst.len()`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":12612,"byte_end":12670,"line_start":250,"line_end":250,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13542,"byte_end":13548,"line_start":288,"line_end":288,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"fn get_u8<'_>(&'_ mut Self) -> u8","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets an unsigned 8 bit integer from `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13154,"byte_end":13201,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13206,"byte_end":13209,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13214,"byte_end":13256,"line_start":274,"line_end":274,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13261,"byte_end":13264,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13269,"byte_end":13283,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13288,"byte_end":13291,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13296,"byte_end":13303,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13308,"byte_end":13327,"line_start":279,"line_end":279,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13332,"byte_end":13335,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13340,"byte_end":13377,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_u8());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13382,"byte_end":13414,"line_start":282,"line_end":282,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13419,"byte_end":13426,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13431,"byte_end":13434,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13439,"byte_end":13451,"line_start":285,"line_end":285,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13456,"byte_end":13459,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13464,"byte_end":13534,"line_start":287,"line_end":287,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14076,"byte_end":14082,"line_start":311,"line_end":311,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"fn get_i8<'_>(&'_ mut Self) -> i8","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets a signed 8 bit integer from `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13691,"byte_end":13735,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13740,"byte_end":13743,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13748,"byte_end":13790,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13795,"byte_end":13798,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13803,"byte_end":13817,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13822,"byte_end":13825,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13830,"byte_end":13837,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13842,"byte_end":13861,"line_start":302,"line_end":302,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13866,"byte_end":13869,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13874,"byte_end":13911,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_i8());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13916,"byte_end":13948,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13953,"byte_end":13960,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13965,"byte_end":13968,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13973,"byte_end":13985,"line_start":308,"line_end":308,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13990,"byte_end":13993,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":13998,"byte_end":14068,"line_start":310,"line_end":310,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14658,"byte_end":14665,"line_start":334,"line_end":334,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"fn get_u16<'_>(&'_ mut Self) -> u16","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14231,"byte_end":14304,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14309,"byte_end":14312,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14317,"byte_end":14359,"line_start":320,"line_end":320,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14364,"byte_end":14367,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14372,"byte_end":14386,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14391,"byte_end":14394,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14399,"byte_end":14406,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14411,"byte_end":14430,"line_start":325,"line_end":325,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14435,"byte_end":14438,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14443,"byte_end":14484,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14489,"byte_end":14527,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14532,"byte_end":14539,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14544,"byte_end":14547,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14552,"byte_end":14564,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14569,"byte_end":14572,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14577,"byte_end":14650,"line_start":333,"line_end":333,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15179,"byte_end":15189,"line_start":354,"line_end":354,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"fn get_u16_le<'_>(&'_ mut Self) -> u16","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14746,"byte_end":14822,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14827,"byte_end":14830,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14835,"byte_end":14877,"line_start":340,"line_end":340,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14882,"byte_end":14885,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14890,"byte_end":14904,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14909,"byte_end":14912,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14917,"byte_end":14924,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14929,"byte_end":14948,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14953,"byte_end":14956,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":14961,"byte_end":15002,"line_start":347,"line_end":347,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15007,"byte_end":15048,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15053,"byte_end":15060,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15065,"byte_end":15068,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15073,"byte_end":15085,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15090,"byte_end":15093,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15098,"byte_end":15171,"line_start":353,"line_end":353,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15812,"byte_end":15822,"line_start":377,"line_end":377,"column_start":8,"column_end":18},"name":"get_u16_ne","qualname":"::buf::buf_impl::Buf::get_u16_ne","value":"fn get_u16_ne<'_>(&'_ mut Self) -> u16","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15270,"byte_end":15346,"line_start":358,"line_end":358,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15351,"byte_end":15354,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15359,"byte_end":15401,"line_start":360,"line_end":360,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15406,"byte_end":15409,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15414,"byte_end":15428,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15433,"byte_end":15436,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15441,"byte_end":15448,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15453,"byte_end":15472,"line_start":365,"line_end":365,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15477,"byte_end":15480,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15485,"byte_end":15545,"line_start":367,"line_end":367,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15550,"byte_end":15584,"line_start":368,"line_end":368,"column_start":5,"column_end":39}},{"value":"/     false => b\"\\x09\\x08 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15589,"byte_end":15624,"line_start":369,"line_end":369,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15629,"byte_end":15635,"line_start":370,"line_end":370,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809, buf.get_u16_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15640,"byte_end":15681,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15686,"byte_end":15693,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15698,"byte_end":15701,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15706,"byte_end":15718,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15723,"byte_end":15726,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15731,"byte_end":15804,"line_start":376,"line_end":376,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16327,"byte_end":16334,"line_start":397,"line_end":397,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"fn get_i16<'_>(&'_ mut Self) -> i16","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15903,"byte_end":15973,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15978,"byte_end":15981,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":15986,"byte_end":16028,"line_start":383,"line_end":383,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16033,"byte_end":16036,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16041,"byte_end":16055,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16060,"byte_end":16063,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16068,"byte_end":16075,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16080,"byte_end":16099,"line_start":388,"line_end":388,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16104,"byte_end":16107,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16112,"byte_end":16153,"line_start":390,"line_end":390,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16158,"byte_end":16196,"line_start":391,"line_end":391,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16201,"byte_end":16208,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16213,"byte_end":16216,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16221,"byte_end":16233,"line_start":394,"line_end":394,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16238,"byte_end":16241,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16246,"byte_end":16319,"line_start":396,"line_end":396,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16845,"byte_end":16855,"line_start":417,"line_end":417,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"fn get_i16_le<'_>(&'_ mut Self) -> i16","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16415,"byte_end":16488,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16493,"byte_end":16496,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16501,"byte_end":16543,"line_start":403,"line_end":403,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16548,"byte_end":16551,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16556,"byte_end":16570,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16575,"byte_end":16578,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16583,"byte_end":16590,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16595,"byte_end":16614,"line_start":408,"line_end":408,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16619,"byte_end":16622,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16627,"byte_end":16668,"line_start":410,"line_end":410,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16673,"byte_end":16714,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16719,"byte_end":16726,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16731,"byte_end":16734,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16739,"byte_end":16751,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16756,"byte_end":16759,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16764,"byte_end":16837,"line_start":416,"line_end":416,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17475,"byte_end":17485,"line_start":440,"line_end":440,"column_start":8,"column_end":18},"name":"get_i16_ne","qualname":"::buf::buf_impl::Buf::get_i16_ne","value":"fn get_i16_ne<'_>(&'_ mut Self) -> i16","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":16936,"byte_end":17009,"line_start":421,"line_end":421,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17014,"byte_end":17017,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17022,"byte_end":17064,"line_start":423,"line_end":423,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17069,"byte_end":17072,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17077,"byte_end":17091,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17096,"byte_end":17099,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17104,"byte_end":17111,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17116,"byte_end":17135,"line_start":428,"line_end":428,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17140,"byte_end":17143,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17148,"byte_end":17208,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17213,"byte_end":17247,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/     false => b\"\\x09\\x08 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17252,"byte_end":17287,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17292,"byte_end":17298,"line_start":433,"line_end":433,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809, buf.get_i16_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17303,"byte_end":17344,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17349,"byte_end":17356,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17361,"byte_end":17364,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17369,"byte_end":17381,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17386,"byte_end":17389,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17394,"byte_end":17467,"line_start":439,"line_end":439,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18009,"byte_end":18016,"line_start":460,"line_end":460,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"fn get_u32<'_>(&'_ mut Self) -> u32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17566,"byte_end":17643,"line_start":444,"line_end":444,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17648,"byte_end":17651,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17656,"byte_end":17698,"line_start":446,"line_end":446,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17703,"byte_end":17706,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17711,"byte_end":17725,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17730,"byte_end":17733,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17738,"byte_end":17745,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17750,"byte_end":17769,"line_start":451,"line_end":451,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17774,"byte_end":17777,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17782,"byte_end":17831,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17836,"byte_end":17878,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17883,"byte_end":17890,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17895,"byte_end":17898,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17903,"byte_end":17915,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17920,"byte_end":17923,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":17928,"byte_end":18001,"line_start":459,"line_end":459,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18546,"byte_end":18556,"line_start":480,"line_end":480,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"fn get_u32_le<'_>(&'_ mut Self) -> u32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18097,"byte_end":18177,"line_start":464,"line_end":464,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18182,"byte_end":18185,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18190,"byte_end":18232,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18237,"byte_end":18240,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18245,"byte_end":18259,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18264,"byte_end":18267,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18272,"byte_end":18279,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18284,"byte_end":18303,"line_start":471,"line_end":471,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18308,"byte_end":18311,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18316,"byte_end":18365,"line_start":473,"line_end":473,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18370,"byte_end":18415,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18420,"byte_end":18427,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18432,"byte_end":18435,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18440,"byte_end":18452,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18457,"byte_end":18460,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18465,"byte_end":18538,"line_start":479,"line_end":479,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19199,"byte_end":19209,"line_start":503,"line_end":503,"column_start":8,"column_end":18},"name":"get_u32_ne","qualname":"::buf::buf_impl::Buf::get_u32_ne","value":"fn get_u32_ne<'_>(&'_ mut Self) -> u32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18637,"byte_end":18713,"line_start":484,"line_end":484,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18718,"byte_end":18721,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18726,"byte_end":18768,"line_start":486,"line_end":486,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18773,"byte_end":18776,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18781,"byte_end":18795,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18800,"byte_end":18803,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18808,"byte_end":18815,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18820,"byte_end":18839,"line_start":491,"line_end":491,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18844,"byte_end":18847,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18852,"byte_end":18912,"line_start":493,"line_end":493,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09\\xA0\\xA1 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18917,"byte_end":18959,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/     false => b\"\\xA1\\xA0\\x09\\x08 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":18964,"byte_end":19007,"line_start":495,"line_end":495,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19012,"byte_end":19018,"line_start":496,"line_end":496,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19023,"byte_end":19068,"line_start":497,"line_end":497,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19073,"byte_end":19080,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19085,"byte_end":19088,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19093,"byte_end":19105,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19110,"byte_end":19113,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19118,"byte_end":19191,"line_start":502,"line_end":502,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19726,"byte_end":19733,"line_start":523,"line_end":523,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"fn get_i32<'_>(&'_ mut Self) -> i32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19290,"byte_end":19360,"line_start":507,"line_end":507,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19365,"byte_end":19368,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19373,"byte_end":19415,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19420,"byte_end":19423,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19428,"byte_end":19442,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19447,"byte_end":19450,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19455,"byte_end":19462,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19467,"byte_end":19486,"line_start":514,"line_end":514,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19491,"byte_end":19494,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19499,"byte_end":19548,"line_start":516,"line_end":516,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19553,"byte_end":19595,"line_start":517,"line_end":517,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19600,"byte_end":19607,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19612,"byte_end":19615,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19620,"byte_end":19632,"line_start":520,"line_end":520,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19637,"byte_end":19640,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19645,"byte_end":19718,"line_start":522,"line_end":522,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20256,"byte_end":20266,"line_start":543,"line_end":543,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"fn get_i32_le<'_>(&'_ mut Self) -> i32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19814,"byte_end":19887,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19892,"byte_end":19895,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19900,"byte_end":19942,"line_start":529,"line_end":529,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19947,"byte_end":19950,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19955,"byte_end":19969,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19974,"byte_end":19977,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19982,"byte_end":19989,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":19994,"byte_end":20013,"line_start":534,"line_end":534,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20018,"byte_end":20021,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20026,"byte_end":20075,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20080,"byte_end":20125,"line_start":537,"line_end":537,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20130,"byte_end":20137,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20142,"byte_end":20145,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20150,"byte_end":20162,"line_start":540,"line_end":540,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20167,"byte_end":20170,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20175,"byte_end":20248,"line_start":542,"line_end":542,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20906,"byte_end":20916,"line_start":566,"line_end":566,"column_start":8,"column_end":18},"name":"get_i32_ne","qualname":"::buf::buf_impl::Buf::get_i32_ne","value":"fn get_i32_ne<'_>(&'_ mut Self) -> i32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20347,"byte_end":20420,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20425,"byte_end":20428,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20433,"byte_end":20475,"line_start":549,"line_end":549,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20480,"byte_end":20483,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20488,"byte_end":20502,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20507,"byte_end":20510,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20515,"byte_end":20522,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20527,"byte_end":20546,"line_start":554,"line_end":554,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20551,"byte_end":20554,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20559,"byte_end":20619,"line_start":556,"line_end":556,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09\\xA0\\xA1 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20624,"byte_end":20666,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/     false => b\"\\xA1\\xA0\\x09\\x08 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20671,"byte_end":20714,"line_start":558,"line_end":558,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20719,"byte_end":20725,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20730,"byte_end":20775,"line_start":560,"line_end":560,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20780,"byte_end":20787,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20792,"byte_end":20795,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20800,"byte_end":20812,"line_start":563,"line_end":563,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20817,"byte_end":20820,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20825,"byte_end":20898,"line_start":565,"line_end":565,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21460,"byte_end":21467,"line_start":586,"line_end":586,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"fn get_u64<'_>(&'_ mut Self) -> u64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":20997,"byte_end":21070,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21075,"byte_end":21078,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21083,"byte_end":21125,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21130,"byte_end":21133,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21138,"byte_end":21152,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21157,"byte_end":21160,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21165,"byte_end":21172,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21177,"byte_end":21196,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21201,"byte_end":21204,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21209,"byte_end":21274,"line_start":579,"line_end":579,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21279,"byte_end":21329,"line_start":580,"line_end":580,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21334,"byte_end":21341,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21346,"byte_end":21349,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21354,"byte_end":21366,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21371,"byte_end":21374,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21379,"byte_end":21452,"line_start":585,"line_end":585,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22017,"byte_end":22027,"line_start":606,"line_end":606,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"fn get_u64_le<'_>(&'_ mut Self) -> u64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21548,"byte_end":21624,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21629,"byte_end":21632,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21637,"byte_end":21679,"line_start":592,"line_end":592,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21684,"byte_end":21687,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21692,"byte_end":21706,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21711,"byte_end":21714,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21719,"byte_end":21726,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21731,"byte_end":21750,"line_start":597,"line_end":597,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21755,"byte_end":21758,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21763,"byte_end":21828,"line_start":599,"line_end":599,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21833,"byte_end":21886,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21891,"byte_end":21898,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21903,"byte_end":21906,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21911,"byte_end":21923,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21928,"byte_end":21931,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":21936,"byte_end":22009,"line_start":605,"line_end":605,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22710,"byte_end":22720,"line_start":629,"line_end":629,"column_start":8,"column_end":18},"name":"get_u64_ne","qualname":"::buf::buf_impl::Buf::get_u64_ne","value":"fn get_u64_ne<'_>(&'_ mut Self) -> u64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22108,"byte_end":22184,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22189,"byte_end":22192,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22197,"byte_end":22239,"line_start":612,"line_end":612,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22244,"byte_end":22247,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22252,"byte_end":22266,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22271,"byte_end":22274,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22279,"byte_end":22286,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22291,"byte_end":22310,"line_start":617,"line_end":617,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22315,"byte_end":22318,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22323,"byte_end":22383,"line_start":619,"line_end":619,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22388,"byte_end":22446,"line_start":620,"line_end":620,"column_start":5,"column_end":63}},{"value":"/     false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22451,"byte_end":22510,"line_start":621,"line_end":621,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22515,"byte_end":22521,"line_start":622,"line_end":622,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22526,"byte_end":22579,"line_start":623,"line_end":623,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22584,"byte_end":22591,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22596,"byte_end":22599,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22604,"byte_end":22616,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22621,"byte_end":22624,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22629,"byte_end":22702,"line_start":628,"line_end":628,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23261,"byte_end":23268,"line_start":649,"line_end":649,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"fn get_i64<'_>(&'_ mut Self) -> i64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22801,"byte_end":22871,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22876,"byte_end":22879,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22884,"byte_end":22926,"line_start":635,"line_end":635,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22931,"byte_end":22934,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22939,"byte_end":22953,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22958,"byte_end":22961,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22966,"byte_end":22973,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":22978,"byte_end":22997,"line_start":640,"line_end":640,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23002,"byte_end":23005,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23010,"byte_end":23075,"line_start":642,"line_end":642,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23080,"byte_end":23130,"line_start":643,"line_end":643,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23135,"byte_end":23142,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23147,"byte_end":23150,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23155,"byte_end":23167,"line_start":646,"line_end":646,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23172,"byte_end":23175,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23180,"byte_end":23253,"line_start":648,"line_end":648,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23815,"byte_end":23825,"line_start":669,"line_end":669,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"fn get_i64_le<'_>(&'_ mut Self) -> i64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23349,"byte_end":23422,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23427,"byte_end":23430,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23435,"byte_end":23477,"line_start":655,"line_end":655,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23482,"byte_end":23485,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23490,"byte_end":23504,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23509,"byte_end":23512,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23517,"byte_end":23524,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23529,"byte_end":23548,"line_start":660,"line_end":660,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23553,"byte_end":23556,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23561,"byte_end":23626,"line_start":662,"line_end":662,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23631,"byte_end":23684,"line_start":663,"line_end":663,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23689,"byte_end":23696,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23701,"byte_end":23704,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23709,"byte_end":23721,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23726,"byte_end":23729,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23734,"byte_end":23807,"line_start":668,"line_end":668,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24505,"byte_end":24515,"line_start":692,"line_end":692,"column_start":8,"column_end":18},"name":"get_i64_ne","qualname":"::buf::buf_impl::Buf::get_i64_ne","value":"fn get_i64_ne<'_>(&'_ mut Self) -> i64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23906,"byte_end":23979,"line_start":673,"line_end":673,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23984,"byte_end":23987,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":23992,"byte_end":24034,"line_start":675,"line_end":675,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24039,"byte_end":24042,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24047,"byte_end":24061,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24066,"byte_end":24069,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24074,"byte_end":24081,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24086,"byte_end":24105,"line_start":680,"line_end":680,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24110,"byte_end":24113,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24118,"byte_end":24178,"line_start":682,"line_end":682,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24183,"byte_end":24241,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/     false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24246,"byte_end":24305,"line_start":684,"line_end":684,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24310,"byte_end":24316,"line_start":685,"line_end":685,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24321,"byte_end":24374,"line_start":686,"line_end":686,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24379,"byte_end":24386,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24391,"byte_end":24394,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24399,"byte_end":24411,"line_start":689,"line_end":689,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24416,"byte_end":24419,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24424,"byte_end":24497,"line_start":691,"line_end":691,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25110,"byte_end":25118,"line_start":712,"line_end":712,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"fn get_u128<'_>(&'_ mut Self) -> u128","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24596,"byte_end":24670,"line_start":696,"line_end":696,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24675,"byte_end":24678,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24683,"byte_end":24726,"line_start":698,"line_end":698,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24731,"byte_end":24734,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24739,"byte_end":24753,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24758,"byte_end":24761,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24766,"byte_end":24773,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24778,"byte_end":24797,"line_start":703,"line_end":703,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24802,"byte_end":24805,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24810,"byte_end":24907,"line_start":705,"line_end":705,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24912,"byte_end":24979,"line_start":706,"line_end":706,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24984,"byte_end":24991,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":24996,"byte_end":24999,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25004,"byte_end":25016,"line_start":709,"line_end":709,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25021,"byte_end":25024,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25029,"byte_end":25102,"line_start":711,"line_end":711,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25721,"byte_end":25732,"line_start":732,"line_end":732,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"fn get_u128_le<'_>(&'_ mut Self) -> u128","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25201,"byte_end":25278,"line_start":716,"line_end":716,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25283,"byte_end":25286,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25291,"byte_end":25334,"line_start":718,"line_end":718,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25339,"byte_end":25342,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25347,"byte_end":25361,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25366,"byte_end":25369,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25374,"byte_end":25381,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25386,"byte_end":25405,"line_start":723,"line_end":723,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25410,"byte_end":25413,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25418,"byte_end":25515,"line_start":725,"line_end":725,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25520,"byte_end":25590,"line_start":726,"line_end":726,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25595,"byte_end":25602,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25607,"byte_end":25610,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25615,"byte_end":25627,"line_start":729,"line_end":729,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25632,"byte_end":25635,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25640,"byte_end":25713,"line_start":731,"line_end":731,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26500,"byte_end":26511,"line_start":755,"line_end":755,"column_start":8,"column_end":19},"name":"get_u128_ne","qualname":"::buf::buf_impl::Buf::get_u128_ne","value":"fn get_u128_ne<'_>(&'_ mut Self) -> u128","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25815,"byte_end":25892,"line_start":736,"line_end":736,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25897,"byte_end":25900,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25905,"byte_end":25948,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25953,"byte_end":25956,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25961,"byte_end":25975,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25980,"byte_end":25983,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":25988,"byte_end":25995,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26000,"byte_end":26019,"line_start":743,"line_end":743,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26024,"byte_end":26027,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26032,"byte_end":26092,"line_start":745,"line_end":745,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26097,"byte_end":26187,"line_start":746,"line_end":746,"column_start":5,"column_end":95}},{"value":"/     false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26192,"byte_end":26283,"line_start":747,"line_end":747,"column_start":5,"column_end":96}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26288,"byte_end":26294,"line_start":748,"line_end":748,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26299,"byte_end":26369,"line_start":749,"line_end":749,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26374,"byte_end":26381,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26386,"byte_end":26389,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26394,"byte_end":26406,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26411,"byte_end":26414,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26419,"byte_end":26492,"line_start":754,"line_end":754,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27105,"byte_end":27113,"line_start":775,"line_end":775,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"fn get_i128<'_>(&'_ mut Self) -> i128","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26594,"byte_end":26665,"line_start":759,"line_end":759,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26670,"byte_end":26673,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26678,"byte_end":26721,"line_start":761,"line_end":761,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26726,"byte_end":26729,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26734,"byte_end":26748,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26753,"byte_end":26756,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26761,"byte_end":26768,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26773,"byte_end":26792,"line_start":766,"line_end":766,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26797,"byte_end":26800,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26805,"byte_end":26902,"line_start":768,"line_end":768,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26907,"byte_end":26974,"line_start":769,"line_end":769,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26979,"byte_end":26986,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26991,"byte_end":26994,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":26999,"byte_end":27011,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27016,"byte_end":27019,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27024,"byte_end":27097,"line_start":774,"line_end":774,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27713,"byte_end":27724,"line_start":795,"line_end":795,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"fn get_i128_le<'_>(&'_ mut Self) -> i128","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27196,"byte_end":27270,"line_start":779,"line_end":779,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27275,"byte_end":27278,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27283,"byte_end":27326,"line_start":781,"line_end":781,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27331,"byte_end":27334,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27339,"byte_end":27353,"line_start":783,"line_end":783,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27358,"byte_end":27361,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27366,"byte_end":27373,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27378,"byte_end":27397,"line_start":786,"line_end":786,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27402,"byte_end":27405,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27410,"byte_end":27507,"line_start":788,"line_end":788,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27512,"byte_end":27582,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27587,"byte_end":27594,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27599,"byte_end":27602,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27607,"byte_end":27619,"line_start":792,"line_end":792,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27624,"byte_end":27627,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27632,"byte_end":27705,"line_start":794,"line_end":794,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28489,"byte_end":28500,"line_start":818,"line_end":818,"column_start":8,"column_end":19},"name":"get_i128_ne","qualname":"::buf::buf_impl::Buf::get_i128_ne","value":"fn get_i128_ne<'_>(&'_ mut Self) -> i128","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27807,"byte_end":27881,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27886,"byte_end":27889,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27894,"byte_end":27937,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27942,"byte_end":27945,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27950,"byte_end":27964,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27969,"byte_end":27972,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27977,"byte_end":27984,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":27989,"byte_end":28008,"line_start":806,"line_end":806,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28013,"byte_end":28016,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28021,"byte_end":28081,"line_start":808,"line_end":808,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28086,"byte_end":28176,"line_start":809,"line_end":809,"column_start":5,"column_end":95}},{"value":"/     false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28181,"byte_end":28272,"line_start":810,"line_end":810,"column_start":5,"column_end":96}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28277,"byte_end":28283,"line_start":811,"line_end":811,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28288,"byte_end":28358,"line_start":812,"line_end":812,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28363,"byte_end":28370,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28375,"byte_end":28378,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28383,"byte_end":28395,"line_start":815,"line_end":815,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28400,"byte_end":28403,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28408,"byte_end":28481,"line_start":817,"line_end":817,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29025,"byte_end":29033,"line_start":838,"line_end":838,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"fn get_uint<'_>(&'_ mut Self, usize) -> u64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28583,"byte_end":28656,"line_start":822,"line_end":822,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28661,"byte_end":28664,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28669,"byte_end":28718,"line_start":824,"line_end":824,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28723,"byte_end":28726,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28731,"byte_end":28745,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28750,"byte_end":28753,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28758,"byte_end":28765,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28770,"byte_end":28789,"line_start":829,"line_end":829,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28794,"byte_end":28797,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28802,"byte_end":28847,"line_start":831,"line_end":831,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28852,"byte_end":28894,"line_start":832,"line_end":832,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28899,"byte_end":28906,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28911,"byte_end":28914,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28919,"byte_end":28931,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28936,"byte_end":28939,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":28944,"byte_end":29017,"line_start":837,"line_end":837,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29576,"byte_end":29587,"line_start":858,"line_end":858,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"fn get_uint_le<'_>(&'_ mut Self, usize) -> u64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29128,"byte_end":29204,"line_start":842,"line_end":842,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29209,"byte_end":29212,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29217,"byte_end":29266,"line_start":844,"line_end":844,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29271,"byte_end":29274,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29279,"byte_end":29293,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29298,"byte_end":29301,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29306,"byte_end":29313,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29318,"byte_end":29337,"line_start":849,"line_end":849,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29342,"byte_end":29345,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29350,"byte_end":29395,"line_start":851,"line_end":851,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint_le(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29400,"byte_end":29445,"line_start":852,"line_end":852,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29450,"byte_end":29457,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29462,"byte_end":29465,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29470,"byte_end":29482,"line_start":855,"line_end":855,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29487,"byte_end":29490,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29495,"byte_end":29568,"line_start":857,"line_end":857,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30243,"byte_end":30254,"line_start":881,"line_end":881,"column_start":8,"column_end":19},"name":"get_uint_ne","qualname":"::buf::buf_impl::Buf::get_uint_ne","value":"fn get_uint_ne<'_>(&'_ mut Self, usize) -> u64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29682,"byte_end":29758,"line_start":862,"line_end":862,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29763,"byte_end":29766,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29771,"byte_end":29820,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29825,"byte_end":29828,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29833,"byte_end":29847,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29852,"byte_end":29855,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29860,"byte_end":29867,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29872,"byte_end":29891,"line_start":869,"line_end":869,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29896,"byte_end":29899,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29904,"byte_end":29964,"line_start":871,"line_end":871,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":29969,"byte_end":30007,"line_start":872,"line_end":872,"column_start":5,"column_end":43}},{"value":"/     false => b\"\\x03\\x02\\x01 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30012,"byte_end":30051,"line_start":873,"line_end":873,"column_start":5,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30056,"byte_end":30062,"line_start":874,"line_end":874,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x010203, buf.get_uint_ne(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30067,"byte_end":30112,"line_start":875,"line_end":875,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30117,"byte_end":30124,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30129,"byte_end":30132,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30137,"byte_end":30149,"line_start":878,"line_end":878,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30154,"byte_end":30157,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30162,"byte_end":30235,"line_start":880,"line_end":880,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30878,"byte_end":30885,"line_start":905,"line_end":905,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"fn get_int<'_>(&'_ mut Self, usize) -> i64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30440,"byte_end":30510,"line_start":889,"line_end":889,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30515,"byte_end":30518,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30523,"byte_end":30572,"line_start":891,"line_end":891,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30577,"byte_end":30580,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30585,"byte_end":30599,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30604,"byte_end":30607,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30612,"byte_end":30619,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30624,"byte_end":30643,"line_start":896,"line_end":896,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30648,"byte_end":30651,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30656,"byte_end":30701,"line_start":898,"line_end":898,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30706,"byte_end":30747,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30752,"byte_end":30759,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30764,"byte_end":30767,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30772,"byte_end":30784,"line_start":902,"line_end":902,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30789,"byte_end":30792,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30797,"byte_end":30870,"line_start":904,"line_end":904,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31424,"byte_end":31434,"line_start":925,"line_end":925,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"fn get_int_le<'_>(&'_ mut Self, usize) -> i64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":30980,"byte_end":31053,"line_start":909,"line_end":909,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31058,"byte_end":31061,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31066,"byte_end":31115,"line_start":911,"line_end":911,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31120,"byte_end":31123,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31128,"byte_end":31142,"line_start":913,"line_end":913,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31147,"byte_end":31150,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31155,"byte_end":31162,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31167,"byte_end":31186,"line_start":916,"line_end":916,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31191,"byte_end":31194,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31199,"byte_end":31244,"line_start":918,"line_end":918,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int_le(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31249,"byte_end":31293,"line_start":919,"line_end":919,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31298,"byte_end":31305,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31310,"byte_end":31313,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31318,"byte_end":31330,"line_start":922,"line_end":922,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31335,"byte_end":31338,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31343,"byte_end":31416,"line_start":924,"line_end":924,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32086,"byte_end":32096,"line_start":948,"line_end":948,"column_start":8,"column_end":18},"name":"get_int_ne","qualname":"::buf::buf_impl::Buf::get_int_ne","value":"fn get_int_ne<'_>(&'_ mut Self, usize) -> i64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31529,"byte_end":31602,"line_start":929,"line_end":929,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31607,"byte_end":31610,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31615,"byte_end":31664,"line_start":931,"line_end":931,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31669,"byte_end":31672,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31677,"byte_end":31691,"line_start":933,"line_end":933,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31696,"byte_end":31699,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31704,"byte_end":31711,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31716,"byte_end":31735,"line_start":936,"line_end":936,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31740,"byte_end":31743,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31748,"byte_end":31808,"line_start":938,"line_end":938,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31813,"byte_end":31851,"line_start":939,"line_end":939,"column_start":5,"column_end":43}},{"value":"/     false => b\"\\x03\\x02\\x01 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31856,"byte_end":31895,"line_start":940,"line_end":940,"column_start":5,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31900,"byte_end":31906,"line_start":941,"line_end":941,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x010203, buf.get_int_ne(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31911,"byte_end":31955,"line_start":942,"line_end":942,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31960,"byte_end":31967,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31972,"byte_end":31975,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31980,"byte_end":31992,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":31997,"byte_end":32000,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32005,"byte_end":32078,"line_start":947,"line_end":947,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32756,"byte_end":32763,"line_start":973,"line_end":973,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"fn get_f32<'_>(&'_ mut Self) -> f32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32280,"byte_end":32353,"line_start":956,"line_end":956,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32358,"byte_end":32394,"line_start":957,"line_end":957,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32399,"byte_end":32402,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32407,"byte_end":32449,"line_start":959,"line_end":959,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32454,"byte_end":32457,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32462,"byte_end":32476,"line_start":961,"line_end":961,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32481,"byte_end":32484,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32489,"byte_end":32496,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32501,"byte_end":32520,"line_start":964,"line_end":964,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32525,"byte_end":32528,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32533,"byte_end":32582,"line_start":966,"line_end":966,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32587,"byte_end":32625,"line_start":967,"line_end":967,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32630,"byte_end":32637,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32642,"byte_end":32645,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32650,"byte_end":32662,"line_start":970,"line_end":970,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32667,"byte_end":32670,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32675,"byte_end":32748,"line_start":972,"line_end":972,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33321,"byte_end":33331,"line_start":994,"line_end":994,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"fn get_f32_le<'_>(&'_ mut Self) -> f32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32839,"byte_end":32912,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32917,"byte_end":32956,"line_start":978,"line_end":978,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32961,"byte_end":32964,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":32969,"byte_end":33011,"line_start":980,"line_end":980,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33016,"byte_end":33019,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33024,"byte_end":33038,"line_start":982,"line_end":982,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33043,"byte_end":33046,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33051,"byte_end":33058,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33063,"byte_end":33082,"line_start":985,"line_end":985,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33087,"byte_end":33090,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33095,"byte_end":33144,"line_start":987,"line_end":987,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33149,"byte_end":33190,"line_start":988,"line_end":988,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33195,"byte_end":33202,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33207,"byte_end":33210,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33215,"byte_end":33227,"line_start":991,"line_end":991,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33232,"byte_end":33235,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33240,"byte_end":33313,"line_start":993,"line_end":993,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34009,"byte_end":34019,"line_start":1018,"line_end":1018,"column_start":8,"column_end":18},"name":"get_f32_ne","qualname":"::buf::buf_impl::Buf::get_f32_ne","value":"fn get_f32_ne<'_>(&'_ mut Self) -> f32","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33410,"byte_end":33483,"line_start":998,"line_end":998,"column_start":5,"column_end":78}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33488,"byte_end":33527,"line_start":999,"line_end":999,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33532,"byte_end":33535,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33540,"byte_end":33582,"line_start":1001,"line_end":1001,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33587,"byte_end":33590,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33595,"byte_end":33609,"line_start":1003,"line_end":1003,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33614,"byte_end":33617,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33622,"byte_end":33629,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33634,"byte_end":33653,"line_start":1006,"line_end":1006,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33658,"byte_end":33661,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33666,"byte_end":33726,"line_start":1008,"line_end":1008,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x3F\\x99\\x99\\x9A hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33731,"byte_end":33773,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/     false => b\"\\x9A\\x99\\x99\\x3F hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33778,"byte_end":33821,"line_start":1010,"line_end":1010,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33826,"byte_end":33832,"line_start":1011,"line_end":1011,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33837,"byte_end":33878,"line_start":1012,"line_end":1012,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33883,"byte_end":33890,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33895,"byte_end":33898,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33903,"byte_end":33915,"line_start":1015,"line_end":1015,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33920,"byte_end":33923,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":33928,"byte_end":34001,"line_start":1017,"line_end":1017,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34590,"byte_end":34597,"line_start":1039,"line_end":1039,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"fn get_f64<'_>(&'_ mut Self) -> f64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34098,"byte_end":34171,"line_start":1022,"line_end":1022,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34176,"byte_end":34212,"line_start":1023,"line_end":1023,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34217,"byte_end":34220,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34225,"byte_end":34267,"line_start":1025,"line_end":1025,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34272,"byte_end":34275,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34280,"byte_end":34294,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34299,"byte_end":34302,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34307,"byte_end":34314,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34319,"byte_end":34338,"line_start":1030,"line_end":1030,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34343,"byte_end":34346,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34351,"byte_end":34416,"line_start":1032,"line_end":1032,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34421,"byte_end":34459,"line_start":1033,"line_end":1033,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34464,"byte_end":34471,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34476,"byte_end":34479,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34484,"byte_end":34496,"line_start":1036,"line_end":1036,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34501,"byte_end":34504,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34509,"byte_end":34582,"line_start":1038,"line_end":1038,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35171,"byte_end":35181,"line_start":1060,"line_end":1060,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"fn get_f64_le<'_>(&'_ mut Self) -> f64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34673,"byte_end":34746,"line_start":1043,"line_end":1043,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34751,"byte_end":34790,"line_start":1044,"line_end":1044,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34795,"byte_end":34798,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34803,"byte_end":34845,"line_start":1046,"line_end":1046,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34850,"byte_end":34853,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34858,"byte_end":34872,"line_start":1048,"line_end":1048,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34877,"byte_end":34880,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34885,"byte_end":34892,"line_start":1050,"line_end":1050,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34897,"byte_end":34916,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34921,"byte_end":34924,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34929,"byte_end":34994,"line_start":1053,"line_end":1053,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_le());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":34999,"byte_end":35040,"line_start":1054,"line_end":1054,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35045,"byte_end":35052,"line_start":1055,"line_end":1055,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35057,"byte_end":35060,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35065,"byte_end":35077,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35082,"byte_end":35085,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35090,"byte_end":35163,"line_start":1059,"line_end":1059,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35891,"byte_end":35901,"line_start":1084,"line_end":1084,"column_start":8,"column_end":18},"name":"get_f64_ne","qualname":"::buf::buf_impl::Buf::get_f64_ne","value":"fn get_f64_ne<'_>(&'_ mut Self) -> f64","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35260,"byte_end":35333,"line_start":1064,"line_end":1064,"column_start":5,"column_end":78}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35338,"byte_end":35377,"line_start":1065,"line_end":1065,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35382,"byte_end":35385,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35390,"byte_end":35432,"line_start":1067,"line_end":1067,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35437,"byte_end":35440,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35445,"byte_end":35459,"line_start":1069,"line_end":1069,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35464,"byte_end":35467,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35472,"byte_end":35479,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35484,"byte_end":35503,"line_start":1072,"line_end":1072,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35508,"byte_end":35511,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35516,"byte_end":35576,"line_start":1074,"line_end":1074,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35581,"byte_end":35639,"line_start":1075,"line_end":1075,"column_start":5,"column_end":63}},{"value":"/     false => b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35644,"byte_end":35703,"line_start":1076,"line_end":1076,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35708,"byte_end":35714,"line_start":1077,"line_end":1077,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_ne());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35719,"byte_end":35760,"line_start":1078,"line_end":1078,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35765,"byte_end":35772,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35777,"byte_end":35780,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35785,"byte_end":35797,"line_start":1081,"line_end":1081,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35802,"byte_end":35805,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35810,"byte_end":35883,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36474,"byte_end":36487,"line_start":1103,"line_end":1103,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"::buf::buf_impl::Buf::copy_to_bytes","value":"fn copy_to_bytes<'_>(&'_ mut Self, usize) -> crate::Bytes","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Consumes `len` bytes inside self and returns new instance of `Bytes`\n with this data.","sig":null,"attributes":[{"value":"/ Consumes `len` bytes inside self and returns new instance of `Bytes`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":35980,"byte_end":36052,"line_start":1088,"line_end":1088,"column_start":5,"column_end":77}},{"value":"/ with this data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36057,"byte_end":36076,"line_start":1089,"line_end":1089,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36081,"byte_end":36084,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function may be optimized by the underlying type to avoid actual","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36089,"byte_end":36162,"line_start":1091,"line_end":1091,"column_start":5,"column_end":78}},{"value":"/ copies. For example, `Bytes` implementation will do a shallow copy","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36167,"byte_end":36237,"line_start":1092,"line_end":1092,"column_start":5,"column_end":75}},{"value":"/ (ref-count increment).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36242,"byte_end":36268,"line_start":1093,"line_end":1093,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36273,"byte_end":36276,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36281,"byte_end":36295,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36300,"byte_end":36303,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36308,"byte_end":36315,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36320,"byte_end":36339,"line_start":1098,"line_end":1098,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36344,"byte_end":36347,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let bytes = (&b\"hello world\"[..]).copy_to_bytes(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36352,"byte_end":36407,"line_start":1100,"line_end":1100,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&bytes[..], &b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36412,"byte_end":36454,"line_start":1101,"line_end":1101,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36459,"byte_end":36466,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37329,"byte_end":37333,"line_start":1134,"line_end":1134,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::buf_impl::Buf::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36756,"byte_end":36829,"line_start":1113,"line_end":1113,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36834,"byte_end":36837,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Buf` which will read at most","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36842,"byte_end":36915,"line_start":1115,"line_end":1115,"column_start":5,"column_end":78}},{"value":"/ `limit` bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36920,"byte_end":36938,"line_start":1116,"line_end":1116,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36943,"byte_end":36946,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36951,"byte_end":36965,"line_start":1118,"line_end":1118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36970,"byte_end":36973,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36978,"byte_end":36985,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":36990,"byte_end":37019,"line_start":1121,"line_end":1121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37024,"byte_end":37027,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\"[..].take(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37032,"byte_end":37077,"line_start":1123,"line_end":1123,"column_start":5,"column_end":50}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37082,"byte_end":37107,"line_start":1124,"line_end":1124,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37112,"byte_end":37115,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37120,"byte_end":37142,"line_start":1126,"line_end":1126,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37147,"byte_end":37177,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37182,"byte_end":37185,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37190,"byte_end":37225,"line_start":1129,"line_end":1129,"column_start":5,"column_end":40}},{"value":"/ dst.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37230,"byte_end":37246,"line_start":1130,"line_end":1130,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37251,"byte_end":37273,"line_start":1131,"line_end":1131,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\" world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37278,"byte_end":37309,"line_start":1132,"line_end":1132,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37314,"byte_end":37321,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37926,"byte_end":37931,"line_start":1156,"line_end":1156,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::buf_impl::Buf::chain","value":"fn chain<U>(Self, U) -> Chain<Self, U> where U: Buf, Self: Sized","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this buffer with another.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37447,"byte_end":37512,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37517,"byte_end":37520,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ The returned `Buf` instance will first consume all bytes from `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37525,"byte_end":37598,"line_start":1143,"line_end":1143,"column_start":5,"column_end":78}},{"value":"/ Afterwards the output is equivalent to the output of next.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37603,"byte_end":37665,"line_start":1144,"line_end":1144,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37670,"byte_end":37673,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37678,"byte_end":37692,"line_start":1146,"line_end":1146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37697,"byte_end":37700,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37705,"byte_end":37712,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37717,"byte_end":37736,"line_start":1149,"line_end":1149,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37741,"byte_end":37744,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37749,"byte_end":37804,"line_start":1151,"line_end":1151,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37809,"byte_end":37812,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ let full = chain.copy_to_bytes(11);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37817,"byte_end":37856,"line_start":1153,"line_end":1153,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(full.chunk(), b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37861,"byte_end":37906,"line_start":1154,"line_end":1154,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":37911,"byte_end":37918,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42254,"byte_end":42263,"line_start":1343,"line_end":1343,"column_start":8,"column_end":17},"name":"remaining","qualname":"<&'_ [u8] as buf::buf_impl::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42237,"byte_end":42246,"line_start":1342,"line_end":1342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42329,"byte_end":42334,"line_start":1348,"line_end":1348,"column_start":8,"column_end":13},"name":"chunk","qualname":"<&'_ [u8] as buf::buf_impl::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42312,"byte_end":42321,"line_start":1347,"line_end":1347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42394,"byte_end":42401,"line_start":1353,"line_end":1353,"column_start":8,"column_end":15},"name":"advance","qualname":"<&'_ [u8] as buf::buf_impl::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42377,"byte_end":42386,"line_start":1352,"line_end":1352,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44147,"byte_end":44153,"line_start":29,"line_end":29,"column_start":18,"column_end":24},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[{"value":"/ A trait for values that provide sequential write access to bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43576,"byte_end":43645,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43646,"byte_end":43649,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Write bytes to a buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43650,"byte_end":43677,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43678,"byte_end":43681,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that write operations are infallible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43682,"byte_end":43760,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `BufMut`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43761,"byte_end":43838,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ value is a cursor into the buffer. Writing to `BufMut` advances the cursor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43839,"byte_end":43917,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ position.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43918,"byte_end":43931,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43932,"byte_end":43935,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The simplest `BufMut` is a `Vec<u8>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43936,"byte_end":43977,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43978,"byte_end":43981,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43982,"byte_end":43989,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":43990,"byte_end":44012,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44013,"byte_end":44016,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44017,"byte_end":44042,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44043,"byte_end":44046,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44047,"byte_end":44080,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44081,"byte_end":44084,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44085,"byte_end":44121,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44122,"byte_end":44129,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45350,"byte_end":45363,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be written from the current","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44160,"byte_end":44228,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ position until the end of the buffer is reached.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44233,"byte_end":44285,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44290,"byte_end":44293,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44298,"byte_end":44373,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ by `chunk_mut()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44378,"byte_end":44399,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44404,"byte_end":44407,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Writing to a `BufMut` may involve allocating more memory on the fly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44412,"byte_end":44484,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ Implementations may fail before reaching the number of bytes indicated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44489,"byte_end":44563,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ by this method if they encounter an allocation failure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44568,"byte_end":44627,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44632,"byte_end":44635,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44640,"byte_end":44654,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44659,"byte_end":44662,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44667,"byte_end":44674,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44679,"byte_end":44701,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44706,"byte_end":44709,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 10];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44714,"byte_end":44740,"line_start":45,"line_end":45,"column_start":5,"column_end":31}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44745,"byte_end":44776,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44781,"byte_end":44784,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let original_remaining = buf.remaining_mut();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44789,"byte_end":44838,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44843,"byte_end":44870,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44875,"byte_end":44878,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(original_remaining - 5, buf.remaining_mut());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44883,"byte_end":44943,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44948,"byte_end":44955,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44960,"byte_end":44963,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44968,"byte_end":44991,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":44996,"byte_end":44999,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining_mut` should ensure that the return value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45004,"byte_end":45078,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ does not change unless a call is made to `advance_mut` or any other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45083,"byte_end":45154,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ function that is documented to change the `BufMut`'s current position.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45159,"byte_end":45233,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45238,"byte_end":45241,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45246,"byte_end":45256,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45261,"byte_end":45264,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ `remaining_mut` may return value smaller than actual available space.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45269,"byte_end":45342,"line_start":62,"line_end":62,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46632,"byte_end":46643,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the BufMut","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45386,"byte_end":45431,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45436,"byte_end":45439,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The next call to `chunk_mut` will return a slice starting `cnt` bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45444,"byte_end":45517,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45522,"byte_end":45561,"line_start":68,"line_end":68,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45566,"byte_end":45569,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because there is no guarantee that the bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45574,"byte_end":45646,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ being advanced past have been initialized.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45651,"byte_end":45697,"line_start":71,"line_end":71,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45702,"byte_end":45705,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45710,"byte_end":45724,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45729,"byte_end":45732,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45737,"byte_end":45744,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45749,"byte_end":45771,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45776,"byte_end":45779,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45784,"byte_end":45825,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45830,"byte_end":45833,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ // Write some data","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45838,"byte_end":45860,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ buf.chunk_mut()[0..2].copy_from_slice(b\"he\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45865,"byte_end":45914,"line_start":81,"line_end":81,"column_start":5,"column_end":54}},{"value":"/ unsafe { buf.advance_mut(2) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45919,"byte_end":45953,"line_start":82,"line_end":82,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45958,"byte_end":45961,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // write more bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45966,"byte_end":45989,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/ buf.chunk_mut()[0..3].copy_from_slice(b\"llo\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":45994,"byte_end":46044,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46049,"byte_end":46052,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ unsafe { buf.advance_mut(3); }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46057,"byte_end":46091,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46096,"byte_end":46099,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46104,"byte_end":46133,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46138,"byte_end":46168,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46173,"byte_end":46180,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46185,"byte_end":46188,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46193,"byte_end":46205,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46210,"byte_end":46213,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining_mut()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46218,"byte_end":46282,"line_start":95,"line_end":95,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46287,"byte_end":46290,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46295,"byte_end":46318,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46323,"byte_end":46326,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance_mut` to panic if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46331,"byte_end":46401,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ `cnt > self.remaining_mut()`. If the implementation does not panic,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46406,"byte_end":46477,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ the call must behave as if `cnt == self.remaining_mut()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46482,"byte_end":46543,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46548,"byte_end":46551,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46556,"byte_end":46617,"line_start":103,"line_end":103,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47109,"byte_end":47126,"line_start":124,"line_end":124,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"fn has_remaining_mut<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[{"value":"/ Returns true if there is space in `self` for more bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46673,"byte_end":46733,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46738,"byte_end":46741,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining_mut() != 0`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46746,"byte_end":46800,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46805,"byte_end":46808,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46813,"byte_end":46827,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46832,"byte_end":46835,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46840,"byte_end":46847,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46852,"byte_end":46874,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46879,"byte_end":46882,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46887,"byte_end":46912,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46917,"byte_end":46948,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46953,"byte_end":46956,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining_mut());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":46961,"byte_end":46998,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47003,"byte_end":47006,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47011,"byte_end":47038,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47043,"byte_end":47046,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining_mut());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47051,"byte_end":47089,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47094,"byte_end":47101,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48999,"byte_end":49008,"line_start":175,"line_end":175,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"::buf::buf_mut::BufMut::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[{"value":"/ Returns a mutable slice starting at the current BufMut position and of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47188,"byte_end":47262,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47267,"byte_end":47359,"line_start":129,"line_end":129,"column_start":5,"column_end":97}},{"value":"/ whole remainder of the buffer (this allows non-continuous implementation).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47364,"byte_end":47442,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47447,"byte_end":47450,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47455,"byte_end":47526,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47531,"byte_end":47545,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47550,"byte_end":47553,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The returned byte slice may represent uninitialized memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47558,"byte_end":47621,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47626,"byte_end":47629,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47634,"byte_end":47648,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47653,"byte_end":47656,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47661,"byte_end":47668,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47673,"byte_end":47695,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47700,"byte_end":47703,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47708,"byte_end":47749,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47754,"byte_end":47757,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47762,"byte_end":47774,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47779,"byte_end":47813,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/     buf.chunk_mut()[0..].as_mut_ptr().write(b'h');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47818,"byte_end":47872,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[1..].as_mut_ptr().write(b'e');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47877,"byte_end":47931,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47936,"byte_end":47939,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47944,"byte_end":47971,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47976,"byte_end":47979,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     buf.chunk_mut()[0..].as_mut_ptr().write(b'l');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":47984,"byte_end":48038,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[1..].as_mut_ptr().write(b'l');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48043,"byte_end":48097,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[2..].as_mut_ptr().write(b'o');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48102,"byte_end":48156,"line_start":153,"line_end":153,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48161,"byte_end":48164,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48169,"byte_end":48196,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48201,"byte_end":48206,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48211,"byte_end":48214,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48219,"byte_end":48248,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48253,"byte_end":48283,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48288,"byte_end":48295,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48300,"byte_end":48303,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48308,"byte_end":48331,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48336,"byte_end":48339,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. `chunk_mut` should return an empty","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48344,"byte_end":48416,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ slice **if and only if** `remaining_mut()` returns 0. In other words,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48421,"byte_end":48494,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ `chunk_mut()` returning an empty slice implies that `remaining_mut()` will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48499,"byte_end":48577,"line_start":166,"line_end":166,"column_start":5,"column_end":83}},{"value":"/ return 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48582,"byte_end":48660,"line_start":167,"line_end":167,"column_start":5,"column_end":83}},{"value":"/ return an empty slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48665,"byte_end":48691,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48696,"byte_end":48699,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function may trigger an out-of-memory abort if it tries to allocate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48704,"byte_end":48780,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ memory and fails to do so.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":48785,"byte_end":48815,"line_start":171,"line_end":171,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49535,"byte_end":49538,"line_start":197,"line_end":197,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"fn put<T, '_>(&'_ mut Self, T) where T: super::Buf, Self: Sized","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49046,"byte_end":49117,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49122,"byte_end":49150,"line_start":178,"line_end":178,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49155,"byte_end":49158,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49163,"byte_end":49177,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49182,"byte_end":49185,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49190,"byte_end":49197,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49202,"byte_end":49224,"line_start":183,"line_end":183,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49229,"byte_end":49232,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49237,"byte_end":49262,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49267,"byte_end":49270,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49275,"byte_end":49296,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/ buf.put(&b\"ello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49301,"byte_end":49327,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ buf.put(&b\" world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49332,"byte_end":49360,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49365,"byte_end":49368,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49373,"byte_end":49409,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49414,"byte_end":49421,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49426,"byte_end":49429,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49434,"byte_end":49446,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49451,"byte_end":49454,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` does not have enough capacity to contain `src`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":49459,"byte_end":49527,"line_start":196,"line_end":196,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50598,"byte_end":50607,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"fn put_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50098,"byte_end":50169,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50174,"byte_end":50202,"line_start":222,"line_end":222,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50207,"byte_end":50210,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ `self` must have enough remaining capacity to contain all of `src`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50215,"byte_end":50286,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50291,"byte_end":50294,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50299,"byte_end":50306,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50311,"byte_end":50333,"line_start":227,"line_end":227,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50338,"byte_end":50341,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50346,"byte_end":50371,"line_start":229,"line_end":229,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50376,"byte_end":50379,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50384,"byte_end":50389,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50394,"byte_end":50429,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/     buf.put_slice(b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50434,"byte_end":50466,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50471,"byte_end":50474,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, buf.remaining_mut());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50479,"byte_end":50522,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50527,"byte_end":50532,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50537,"byte_end":50540,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello\\0\", &dst);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50545,"byte_end":50578,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":50583,"byte_end":50590,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51906,"byte_end":51915,"line_start":293,"line_end":293,"column_start":8,"column_end":17},"name":"put_bytes","qualname":"::buf::buf_mut::BufMut::put_bytes","value":"fn put_bytes<'_>(&'_ mut Self, u8, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Put `cnt` bytes `val` into `self`.","sig":null,"attributes":[{"value":"/ Put `cnt` bytes `val` into `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51264,"byte_end":51302,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51307,"byte_end":51310,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Logically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51315,"byte_end":51403,"line_start":270,"line_end":270,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51408,"byte_end":51411,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ `self` must have at least `cnt` remaining capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51416,"byte_end":51471,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51476,"byte_end":51479,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51484,"byte_end":51491,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51496,"byte_end":51518,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51523,"byte_end":51526,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51531,"byte_end":51556,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51561,"byte_end":51564,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51569,"byte_end":51574,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51579,"byte_end":51614,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/     buf.put_bytes(b'a', 4);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51619,"byte_end":51650,"line_start":281,"line_end":281,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51655,"byte_end":51658,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, buf.remaining_mut());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51663,"byte_end":51706,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51711,"byte_end":51716,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51721,"byte_end":51724,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaaa\\0\\0\", &dst);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51729,"byte_end":51763,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51768,"byte_end":51775,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51780,"byte_end":51783,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51788,"byte_end":51800,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51805,"byte_end":51808,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51813,"byte_end":51882,"line_start":291,"line_end":291,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":51887,"byte_end":51898,"line_start":292,"line_end":292,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52444,"byte_end":52450,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"fn put_u8<'_>(&'_ mut Self, u8)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 8 bit integer to `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52027,"byte_end":52074,"line_start":299,"line_end":299,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52079,"byte_end":52082,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52087,"byte_end":52129,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52134,"byte_end":52137,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52142,"byte_end":52156,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52161,"byte_end":52164,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52169,"byte_end":52176,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52181,"byte_end":52203,"line_start":306,"line_end":306,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52208,"byte_end":52211,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52216,"byte_end":52241,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ buf.put_u8(0x01);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52246,"byte_end":52267,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52272,"byte_end":52301,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52306,"byte_end":52313,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52318,"byte_end":52321,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52326,"byte_end":52338,"line_start":313,"line_end":313,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52343,"byte_end":52346,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52351,"byte_end":52420,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52425,"byte_end":52436,"line_start":316,"line_end":316,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52949,"byte_end":52955,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"fn put_i8<'_>(&'_ mut Self, i8)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes a signed 8 bit integer to `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52535,"byte_end":52579,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52584,"byte_end":52587,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52592,"byte_end":52634,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52639,"byte_end":52642,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52647,"byte_end":52661,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52666,"byte_end":52669,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52674,"byte_end":52681,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52686,"byte_end":52708,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52713,"byte_end":52716,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52721,"byte_end":52746,"line_start":331,"line_end":331,"column_start":5,"column_end":30}},{"value":"/ buf.put_i8(0x01);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52751,"byte_end":52772,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52777,"byte_end":52806,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52811,"byte_end":52818,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52823,"byte_end":52826,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52831,"byte_end":52843,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52848,"byte_end":52851,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52856,"byte_end":52925,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":52930,"byte_end":52941,"line_start":339,"line_end":339,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53495,"byte_end":53502,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"fn put_u16<'_>(&'_ mut Self, u16)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53045,"byte_end":53118,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53123,"byte_end":53126,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53131,"byte_end":53173,"line_start":347,"line_end":347,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53178,"byte_end":53181,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53186,"byte_end":53200,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53205,"byte_end":53208,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53213,"byte_end":53220,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53225,"byte_end":53247,"line_start":352,"line_end":352,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53252,"byte_end":53255,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53260,"byte_end":53285,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16(0x0809);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53290,"byte_end":53314,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53319,"byte_end":53352,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53357,"byte_end":53364,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53369,"byte_end":53372,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53377,"byte_end":53389,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53394,"byte_end":53397,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53402,"byte_end":53471,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53476,"byte_end":53487,"line_start":362,"line_end":362,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54032,"byte_end":54042,"line_start":385,"line_end":385,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"fn put_u16_le<'_>(&'_ mut Self, u16)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53576,"byte_end":53652,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53657,"byte_end":53660,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53665,"byte_end":53707,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53712,"byte_end":53715,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53720,"byte_end":53734,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53739,"byte_end":53742,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53747,"byte_end":53754,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53759,"byte_end":53781,"line_start":374,"line_end":374,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53786,"byte_end":53789,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53794,"byte_end":53819,"line_start":376,"line_end":376,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_le(0x0809);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53824,"byte_end":53851,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53856,"byte_end":53889,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53894,"byte_end":53901,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53906,"byte_end":53909,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53914,"byte_end":53926,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53931,"byte_end":53934,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":53939,"byte_end":54008,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54013,"byte_end":54024,"line_start":384,"line_end":384,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54686,"byte_end":54696,"line_start":411,"line_end":411,"column_start":8,"column_end":18},"name":"put_u16_ne","qualname":"::buf::buf_mut::BufMut::put_u16_ne","value":"fn put_u16_ne<'_>(&'_ mut Self, u16)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54116,"byte_end":54192,"line_start":389,"line_end":389,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54197,"byte_end":54200,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54205,"byte_end":54247,"line_start":391,"line_end":391,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54252,"byte_end":54255,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54260,"byte_end":54274,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54279,"byte_end":54282,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54287,"byte_end":54294,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54299,"byte_end":54321,"line_start":396,"line_end":396,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54326,"byte_end":54329,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54334,"byte_end":54359,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_ne(0x0809);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54364,"byte_end":54391,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54396,"byte_end":54432,"line_start":400,"line_end":400,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54437,"byte_end":54474,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54479,"byte_end":54491,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54496,"byte_end":54533,"line_start":403,"line_end":403,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54538,"byte_end":54543,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54548,"byte_end":54555,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54560,"byte_end":54563,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54568,"byte_end":54580,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54585,"byte_end":54588,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54593,"byte_end":54662,"line_start":409,"line_end":409,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54667,"byte_end":54678,"line_start":410,"line_end":410,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55217,"byte_end":55224,"line_start":433,"line_end":433,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"fn put_i16<'_>(&'_ mut Self, i16)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54770,"byte_end":54840,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54845,"byte_end":54848,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54853,"byte_end":54895,"line_start":417,"line_end":417,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54900,"byte_end":54903,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54908,"byte_end":54922,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54927,"byte_end":54930,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54935,"byte_end":54942,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54947,"byte_end":54969,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54974,"byte_end":54977,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":54982,"byte_end":55007,"line_start":424,"line_end":424,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16(0x0809);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55012,"byte_end":55036,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55041,"byte_end":55074,"line_start":426,"line_end":426,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55079,"byte_end":55086,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55091,"byte_end":55094,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55099,"byte_end":55111,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55116,"byte_end":55119,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55124,"byte_end":55193,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55198,"byte_end":55209,"line_start":432,"line_end":432,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55751,"byte_end":55761,"line_start":455,"line_end":455,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"fn put_i16_le<'_>(&'_ mut Self, i16)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55298,"byte_end":55371,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55376,"byte_end":55379,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55384,"byte_end":55426,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55431,"byte_end":55434,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55439,"byte_end":55453,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55458,"byte_end":55461,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55466,"byte_end":55473,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55478,"byte_end":55500,"line_start":444,"line_end":444,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55505,"byte_end":55508,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55513,"byte_end":55538,"line_start":446,"line_end":446,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_le(0x0809);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55543,"byte_end":55570,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55575,"byte_end":55608,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55613,"byte_end":55620,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55625,"byte_end":55628,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55633,"byte_end":55645,"line_start":451,"line_end":451,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55650,"byte_end":55653,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55658,"byte_end":55727,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55732,"byte_end":55743,"line_start":454,"line_end":454,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56402,"byte_end":56412,"line_start":481,"line_end":481,"column_start":8,"column_end":18},"name":"put_i16_ne","qualname":"::buf::buf_mut::BufMut::put_i16_ne","value":"fn put_i16_ne<'_>(&'_ mut Self, i16)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55835,"byte_end":55908,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55913,"byte_end":55916,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55921,"byte_end":55963,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55968,"byte_end":55971,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55976,"byte_end":55990,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":55995,"byte_end":55998,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56003,"byte_end":56010,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56015,"byte_end":56037,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56042,"byte_end":56045,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56050,"byte_end":56075,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_ne(0x0809);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56080,"byte_end":56107,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56112,"byte_end":56148,"line_start":470,"line_end":470,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56153,"byte_end":56190,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56195,"byte_end":56207,"line_start":472,"line_end":472,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56212,"byte_end":56249,"line_start":473,"line_end":473,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56254,"byte_end":56259,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56264,"byte_end":56271,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56276,"byte_end":56279,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56284,"byte_end":56296,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56301,"byte_end":56304,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56309,"byte_end":56378,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56383,"byte_end":56394,"line_start":480,"line_end":480,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56948,"byte_end":56955,"line_start":503,"line_end":503,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"fn put_u32<'_>(&'_ mut Self, u32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56486,"byte_end":56559,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56564,"byte_end":56567,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56572,"byte_end":56614,"line_start":487,"line_end":487,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56619,"byte_end":56622,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56627,"byte_end":56641,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56646,"byte_end":56649,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56654,"byte_end":56661,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56666,"byte_end":56688,"line_start":492,"line_end":492,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56693,"byte_end":56696,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56701,"byte_end":56726,"line_start":494,"line_end":494,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32(0x0809A0A1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56731,"byte_end":56759,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56764,"byte_end":56805,"line_start":496,"line_end":496,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56810,"byte_end":56817,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56822,"byte_end":56825,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56830,"byte_end":56842,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56847,"byte_end":56850,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56855,"byte_end":56924,"line_start":501,"line_end":501,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":56929,"byte_end":56940,"line_start":502,"line_end":502,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57497,"byte_end":57507,"line_start":525,"line_end":525,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"fn put_u32_le<'_>(&'_ mut Self, u32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57029,"byte_end":57105,"line_start":507,"line_end":507,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57110,"byte_end":57113,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57118,"byte_end":57160,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57165,"byte_end":57168,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57173,"byte_end":57187,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57192,"byte_end":57195,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57200,"byte_end":57207,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57212,"byte_end":57234,"line_start":514,"line_end":514,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57239,"byte_end":57242,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57247,"byte_end":57272,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_le(0x0809A0A1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57277,"byte_end":57308,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57313,"byte_end":57354,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57359,"byte_end":57366,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57371,"byte_end":57374,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57379,"byte_end":57391,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57396,"byte_end":57399,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57404,"byte_end":57473,"line_start":523,"line_end":523,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57478,"byte_end":57489,"line_start":524,"line_end":524,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58171,"byte_end":58181,"line_start":551,"line_end":551,"column_start":8,"column_end":18},"name":"put_u32_ne","qualname":"::buf::buf_mut::BufMut::put_u32_ne","value":"fn put_u32_ne<'_>(&'_ mut Self, u32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57581,"byte_end":57657,"line_start":529,"line_end":529,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57662,"byte_end":57665,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57670,"byte_end":57712,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57717,"byte_end":57720,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57725,"byte_end":57739,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57744,"byte_end":57747,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57752,"byte_end":57759,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57764,"byte_end":57786,"line_start":536,"line_end":536,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57791,"byte_end":57794,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57799,"byte_end":57824,"line_start":538,"line_end":538,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_ne(0x0809A0A1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57829,"byte_end":57860,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57865,"byte_end":57901,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57906,"byte_end":57951,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57956,"byte_end":57968,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":57973,"byte_end":58018,"line_start":543,"line_end":543,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58023,"byte_end":58028,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58033,"byte_end":58040,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58045,"byte_end":58048,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58053,"byte_end":58065,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58070,"byte_end":58073,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58078,"byte_end":58147,"line_start":549,"line_end":549,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58152,"byte_end":58163,"line_start":550,"line_end":550,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58714,"byte_end":58721,"line_start":573,"line_end":573,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"fn put_i32<'_>(&'_ mut Self, i32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58255,"byte_end":58325,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58330,"byte_end":58333,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58338,"byte_end":58380,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58385,"byte_end":58388,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58393,"byte_end":58407,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58412,"byte_end":58415,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58420,"byte_end":58427,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58432,"byte_end":58454,"line_start":562,"line_end":562,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58459,"byte_end":58462,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58467,"byte_end":58492,"line_start":564,"line_end":564,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32(0x0809A0A1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58497,"byte_end":58525,"line_start":565,"line_end":565,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58530,"byte_end":58571,"line_start":566,"line_end":566,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58576,"byte_end":58583,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58588,"byte_end":58591,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58596,"byte_end":58608,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58613,"byte_end":58616,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58621,"byte_end":58690,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58695,"byte_end":58706,"line_start":572,"line_end":572,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59260,"byte_end":59270,"line_start":595,"line_end":595,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"fn put_i32_le<'_>(&'_ mut Self, i32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58795,"byte_end":58868,"line_start":577,"line_end":577,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58873,"byte_end":58876,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58881,"byte_end":58923,"line_start":579,"line_end":579,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58928,"byte_end":58931,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58936,"byte_end":58950,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58955,"byte_end":58958,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58963,"byte_end":58970,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":58975,"byte_end":58997,"line_start":584,"line_end":584,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59002,"byte_end":59005,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59010,"byte_end":59035,"line_start":586,"line_end":586,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_le(0x0809A0A1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59040,"byte_end":59071,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59076,"byte_end":59117,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59122,"byte_end":59129,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59134,"byte_end":59137,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59142,"byte_end":59154,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59159,"byte_end":59162,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59167,"byte_end":59236,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59241,"byte_end":59252,"line_start":594,"line_end":594,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59931,"byte_end":59941,"line_start":621,"line_end":621,"column_start":8,"column_end":18},"name":"put_i32_ne","qualname":"::buf::buf_mut::BufMut::put_i32_ne","value":"fn put_i32_ne<'_>(&'_ mut Self, i32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59344,"byte_end":59417,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59422,"byte_end":59425,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59430,"byte_end":59472,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59477,"byte_end":59480,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59485,"byte_end":59499,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59504,"byte_end":59507,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59512,"byte_end":59519,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59524,"byte_end":59546,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59551,"byte_end":59554,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59559,"byte_end":59584,"line_start":608,"line_end":608,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_ne(0x0809A0A1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59589,"byte_end":59620,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59625,"byte_end":59661,"line_start":610,"line_end":610,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59666,"byte_end":59711,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59716,"byte_end":59728,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59733,"byte_end":59778,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59783,"byte_end":59788,"line_start":614,"line_end":614,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59793,"byte_end":59800,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59805,"byte_end":59808,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59813,"byte_end":59825,"line_start":617,"line_end":617,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59830,"byte_end":59833,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59838,"byte_end":59907,"line_start":619,"line_end":619,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":59912,"byte_end":59923,"line_start":620,"line_end":620,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60505,"byte_end":60512,"line_start":643,"line_end":643,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"fn put_u64<'_>(&'_ mut Self, u64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60015,"byte_end":60092,"line_start":625,"line_end":625,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60097,"byte_end":60100,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60105,"byte_end":60147,"line_start":627,"line_end":627,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60152,"byte_end":60155,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60160,"byte_end":60174,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60179,"byte_end":60182,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60187,"byte_end":60194,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60199,"byte_end":60221,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60226,"byte_end":60229,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60234,"byte_end":60259,"line_start":634,"line_end":634,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64(0x0102030405060708);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60264,"byte_end":60300,"line_start":635,"line_end":635,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60305,"byte_end":60362,"line_start":636,"line_end":636,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60367,"byte_end":60374,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60379,"byte_end":60382,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60387,"byte_end":60399,"line_start":639,"line_end":639,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60404,"byte_end":60407,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60412,"byte_end":60481,"line_start":641,"line_end":641,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60486,"byte_end":60497,"line_start":642,"line_end":642,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61078,"byte_end":61088,"line_start":665,"line_end":665,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"fn put_u64_le<'_>(&'_ mut Self, u64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60586,"byte_end":60662,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60667,"byte_end":60670,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60675,"byte_end":60717,"line_start":649,"line_end":649,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60722,"byte_end":60725,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60730,"byte_end":60744,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60749,"byte_end":60752,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60757,"byte_end":60764,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60769,"byte_end":60791,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60796,"byte_end":60799,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60804,"byte_end":60829,"line_start":656,"line_end":656,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_le(0x0102030405060708);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60834,"byte_end":60873,"line_start":657,"line_end":657,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60878,"byte_end":60935,"line_start":658,"line_end":658,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60940,"byte_end":60947,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60952,"byte_end":60955,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60960,"byte_end":60972,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60977,"byte_end":60980,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":60985,"byte_end":61054,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61059,"byte_end":61070,"line_start":664,"line_end":664,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61792,"byte_end":61802,"line_start":691,"line_end":691,"column_start":8,"column_end":18},"name":"put_u64_ne","qualname":"::buf::buf_mut::BufMut::put_u64_ne","value":"fn put_u64_ne<'_>(&'_ mut Self, u64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61162,"byte_end":61238,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61243,"byte_end":61246,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61251,"byte_end":61293,"line_start":671,"line_end":671,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61298,"byte_end":61301,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61306,"byte_end":61320,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61325,"byte_end":61328,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61333,"byte_end":61340,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61345,"byte_end":61367,"line_start":676,"line_end":676,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61372,"byte_end":61375,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61380,"byte_end":61405,"line_start":678,"line_end":678,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_ne(0x0102030405060708);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61410,"byte_end":61449,"line_start":679,"line_end":679,"column_start":5,"column_end":44}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61454,"byte_end":61490,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61495,"byte_end":61556,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61561,"byte_end":61573,"line_start":682,"line_end":682,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61578,"byte_end":61639,"line_start":683,"line_end":683,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61644,"byte_end":61649,"line_start":684,"line_end":684,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61654,"byte_end":61661,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61666,"byte_end":61669,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61674,"byte_end":61686,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61691,"byte_end":61694,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61699,"byte_end":61768,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61773,"byte_end":61784,"line_start":690,"line_end":690,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62363,"byte_end":62370,"line_start":713,"line_end":713,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"fn put_i64<'_>(&'_ mut Self, i64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61876,"byte_end":61950,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61955,"byte_end":61958,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":61963,"byte_end":62005,"line_start":697,"line_end":697,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62010,"byte_end":62013,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62018,"byte_end":62032,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62037,"byte_end":62040,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62045,"byte_end":62052,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62057,"byte_end":62079,"line_start":702,"line_end":702,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62084,"byte_end":62087,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62092,"byte_end":62117,"line_start":704,"line_end":704,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64(0x0102030405060708);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62122,"byte_end":62158,"line_start":705,"line_end":705,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62163,"byte_end":62220,"line_start":706,"line_end":706,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62225,"byte_end":62232,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62237,"byte_end":62240,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62245,"byte_end":62257,"line_start":709,"line_end":709,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62262,"byte_end":62265,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62270,"byte_end":62339,"line_start":711,"line_end":711,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62344,"byte_end":62355,"line_start":712,"line_end":712,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62933,"byte_end":62943,"line_start":735,"line_end":735,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"fn put_i64_le<'_>(&'_ mut Self, i64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62444,"byte_end":62517,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62522,"byte_end":62525,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62530,"byte_end":62572,"line_start":719,"line_end":719,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62577,"byte_end":62580,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62585,"byte_end":62599,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62604,"byte_end":62607,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62612,"byte_end":62619,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62624,"byte_end":62646,"line_start":724,"line_end":724,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62651,"byte_end":62654,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62659,"byte_end":62684,"line_start":726,"line_end":726,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_le(0x0102030405060708);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62689,"byte_end":62728,"line_start":727,"line_end":727,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62733,"byte_end":62790,"line_start":728,"line_end":728,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62795,"byte_end":62802,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62807,"byte_end":62810,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62815,"byte_end":62827,"line_start":731,"line_end":731,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62832,"byte_end":62835,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62840,"byte_end":62909,"line_start":733,"line_end":733,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":62914,"byte_end":62925,"line_start":734,"line_end":734,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63644,"byte_end":63654,"line_start":761,"line_end":761,"column_start":8,"column_end":18},"name":"put_i64_ne","qualname":"::buf::buf_mut::BufMut::put_i64_ne","value":"fn put_i64_ne<'_>(&'_ mut Self, i64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63017,"byte_end":63090,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63095,"byte_end":63098,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63103,"byte_end":63145,"line_start":741,"line_end":741,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63150,"byte_end":63153,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63158,"byte_end":63172,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63177,"byte_end":63180,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63185,"byte_end":63192,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63197,"byte_end":63219,"line_start":746,"line_end":746,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63224,"byte_end":63227,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63232,"byte_end":63257,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_ne(0x0102030405060708);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63262,"byte_end":63301,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63306,"byte_end":63342,"line_start":750,"line_end":750,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63347,"byte_end":63408,"line_start":751,"line_end":751,"column_start":5,"column_end":66}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63413,"byte_end":63425,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63430,"byte_end":63491,"line_start":753,"line_end":753,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63496,"byte_end":63501,"line_start":754,"line_end":754,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63506,"byte_end":63513,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63518,"byte_end":63521,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63526,"byte_end":63538,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63543,"byte_end":63546,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63551,"byte_end":63620,"line_start":759,"line_end":759,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63625,"byte_end":63636,"line_start":760,"line_end":760,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64269,"byte_end":64277,"line_start":783,"line_end":783,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"fn put_u128<'_>(&'_ mut Self, u128)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63728,"byte_end":63806,"line_start":765,"line_end":765,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63811,"byte_end":63814,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63819,"byte_end":63862,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63867,"byte_end":63870,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63875,"byte_end":63889,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63894,"byte_end":63897,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63902,"byte_end":63909,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63914,"byte_end":63936,"line_start":772,"line_end":772,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63941,"byte_end":63944,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63949,"byte_end":63974,"line_start":774,"line_end":774,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128(0x01020304050607080910111213141516);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":63979,"byte_end":64032,"line_start":775,"line_end":775,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64037,"byte_end":64126,"line_start":776,"line_end":776,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64131,"byte_end":64138,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64143,"byte_end":64146,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64151,"byte_end":64163,"line_start":779,"line_end":779,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64168,"byte_end":64171,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64176,"byte_end":64245,"line_start":781,"line_end":781,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64250,"byte_end":64261,"line_start":782,"line_end":782,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64895,"byte_end":64906,"line_start":805,"line_end":805,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"fn put_u128_le<'_>(&'_ mut Self, u128)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64352,"byte_end":64429,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64434,"byte_end":64437,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64442,"byte_end":64485,"line_start":789,"line_end":789,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64490,"byte_end":64493,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64498,"byte_end":64512,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64517,"byte_end":64520,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64525,"byte_end":64532,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64537,"byte_end":64559,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64564,"byte_end":64567,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64572,"byte_end":64597,"line_start":796,"line_end":796,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_le(0x01020304050607080910111213141516);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64602,"byte_end":64658,"line_start":797,"line_end":797,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64663,"byte_end":64752,"line_start":798,"line_end":798,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64757,"byte_end":64764,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64769,"byte_end":64772,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64777,"byte_end":64789,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64794,"byte_end":64797,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64802,"byte_end":64871,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64876,"byte_end":64887,"line_start":804,"line_end":804,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65694,"byte_end":65705,"line_start":831,"line_end":831,"column_start":8,"column_end":19},"name":"put_u128_ne","qualname":"::buf::buf_mut::BufMut::put_u128_ne","value":"fn put_u128_ne<'_>(&'_ mut Self, u128)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":64981,"byte_end":65058,"line_start":809,"line_end":809,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65063,"byte_end":65066,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65071,"byte_end":65114,"line_start":811,"line_end":811,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65119,"byte_end":65122,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65127,"byte_end":65141,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65146,"byte_end":65149,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65154,"byte_end":65161,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65166,"byte_end":65188,"line_start":816,"line_end":816,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65193,"byte_end":65196,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65201,"byte_end":65226,"line_start":818,"line_end":818,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_ne(0x01020304050607080910111213141516);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65231,"byte_end":65287,"line_start":819,"line_end":819,"column_start":5,"column_end":61}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65292,"byte_end":65328,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65333,"byte_end":65426,"line_start":821,"line_end":821,"column_start":5,"column_end":98}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65431,"byte_end":65443,"line_start":822,"line_end":822,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65448,"byte_end":65541,"line_start":823,"line_end":823,"column_start":5,"column_end":98}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65546,"byte_end":65551,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65556,"byte_end":65563,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65568,"byte_end":65571,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65576,"byte_end":65588,"line_start":827,"line_end":827,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65593,"byte_end":65596,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65601,"byte_end":65670,"line_start":829,"line_end":829,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65675,"byte_end":65686,"line_start":830,"line_end":830,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66318,"byte_end":66326,"line_start":853,"line_end":853,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"fn put_i128<'_>(&'_ mut Self, i128)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65780,"byte_end":65855,"line_start":835,"line_end":835,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65860,"byte_end":65863,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65868,"byte_end":65911,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65916,"byte_end":65919,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65924,"byte_end":65938,"line_start":839,"line_end":839,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65943,"byte_end":65946,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65951,"byte_end":65958,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65963,"byte_end":65985,"line_start":842,"line_end":842,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65990,"byte_end":65993,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":65998,"byte_end":66023,"line_start":844,"line_end":844,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128(0x01020304050607080910111213141516);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66028,"byte_end":66081,"line_start":845,"line_end":845,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66086,"byte_end":66175,"line_start":846,"line_end":846,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66180,"byte_end":66187,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66192,"byte_end":66195,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66200,"byte_end":66212,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66217,"byte_end":66220,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66225,"byte_end":66294,"line_start":851,"line_end":851,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66299,"byte_end":66310,"line_start":852,"line_end":852,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66941,"byte_end":66952,"line_start":875,"line_end":875,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"fn put_i128_le<'_>(&'_ mut Self, i128)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66401,"byte_end":66475,"line_start":857,"line_end":857,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66480,"byte_end":66483,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66488,"byte_end":66531,"line_start":859,"line_end":859,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66536,"byte_end":66539,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66544,"byte_end":66558,"line_start":861,"line_end":861,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66563,"byte_end":66566,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66571,"byte_end":66578,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66583,"byte_end":66605,"line_start":864,"line_end":864,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66610,"byte_end":66613,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66618,"byte_end":66643,"line_start":866,"line_end":866,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_le(0x01020304050607080910111213141516);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66648,"byte_end":66704,"line_start":867,"line_end":867,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66709,"byte_end":66798,"line_start":868,"line_end":868,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66803,"byte_end":66810,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66815,"byte_end":66818,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66823,"byte_end":66835,"line_start":871,"line_end":871,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66840,"byte_end":66843,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66848,"byte_end":66917,"line_start":873,"line_end":873,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":66922,"byte_end":66933,"line_start":874,"line_end":874,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67737,"byte_end":67748,"line_start":901,"line_end":901,"column_start":8,"column_end":19},"name":"put_i128_ne","qualname":"::buf::buf_mut::BufMut::put_i128_ne","value":"fn put_i128_ne<'_>(&'_ mut Self, i128)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67027,"byte_end":67101,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67106,"byte_end":67109,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67114,"byte_end":67157,"line_start":881,"line_end":881,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67162,"byte_end":67165,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67170,"byte_end":67184,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67189,"byte_end":67192,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67197,"byte_end":67204,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67209,"byte_end":67231,"line_start":886,"line_end":886,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67236,"byte_end":67239,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67244,"byte_end":67269,"line_start":888,"line_end":888,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_ne(0x01020304050607080910111213141516);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67274,"byte_end":67330,"line_start":889,"line_end":889,"column_start":5,"column_end":61}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67335,"byte_end":67371,"line_start":890,"line_end":890,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67376,"byte_end":67469,"line_start":891,"line_end":891,"column_start":5,"column_end":98}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67474,"byte_end":67486,"line_start":892,"line_end":892,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67491,"byte_end":67584,"line_start":893,"line_end":893,"column_start":5,"column_end":98}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67589,"byte_end":67594,"line_start":894,"line_end":894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67599,"byte_end":67606,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67611,"byte_end":67614,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67619,"byte_end":67631,"line_start":897,"line_end":897,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67636,"byte_end":67639,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67644,"byte_end":67713,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67718,"byte_end":67729,"line_start":900,"line_end":900,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68290,"byte_end":68298,"line_start":923,"line_end":923,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"fn put_uint<'_>(&'_ mut Self, u64, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67823,"byte_end":67896,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67901,"byte_end":67904,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67909,"byte_end":67958,"line_start":907,"line_end":907,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67963,"byte_end":67966,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67971,"byte_end":67985,"line_start":909,"line_end":909,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67990,"byte_end":67993,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":67998,"byte_end":68005,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68010,"byte_end":68032,"line_start":912,"line_end":912,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68037,"byte_end":68040,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68045,"byte_end":68070,"line_start":914,"line_end":914,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint(0x010203, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68075,"byte_end":68105,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68110,"byte_end":68147,"line_start":916,"line_end":916,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68152,"byte_end":68159,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68164,"byte_end":68167,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68172,"byte_end":68184,"line_start":919,"line_end":919,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68189,"byte_end":68192,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68197,"byte_end":68266,"line_start":921,"line_end":921,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68271,"byte_end":68282,"line_start":922,"line_end":922,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68898,"byte_end":68909,"line_start":945,"line_end":945,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"fn put_uint_le<'_>(&'_ mut Self, u64, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68421,"byte_end":68501,"line_start":927,"line_end":927,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68506,"byte_end":68509,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68514,"byte_end":68563,"line_start":929,"line_end":929,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68568,"byte_end":68571,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68576,"byte_end":68590,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68595,"byte_end":68598,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68603,"byte_end":68610,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68615,"byte_end":68637,"line_start":934,"line_end":934,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68642,"byte_end":68645,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68650,"byte_end":68675,"line_start":936,"line_end":936,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_le(0x010203, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68680,"byte_end":68713,"line_start":937,"line_end":937,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68718,"byte_end":68755,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68760,"byte_end":68767,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68772,"byte_end":68775,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68780,"byte_end":68792,"line_start":941,"line_end":941,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68797,"byte_end":68800,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68805,"byte_end":68874,"line_start":943,"line_end":943,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":68879,"byte_end":68890,"line_start":944,"line_end":944,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69605,"byte_end":69616,"line_start":971,"line_end":971,"column_start":8,"column_end":19},"name":"put_uint_ne","qualname":"::buf::buf_mut::BufMut::put_uint_ne","value":"fn put_uint_ne<'_>(&'_ mut Self, u64, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69010,"byte_end":69090,"line_start":949,"line_end":949,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69095,"byte_end":69098,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69103,"byte_end":69152,"line_start":951,"line_end":951,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69157,"byte_end":69160,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69165,"byte_end":69179,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69184,"byte_end":69187,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69192,"byte_end":69199,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69204,"byte_end":69226,"line_start":956,"line_end":956,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69231,"byte_end":69234,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69239,"byte_end":69264,"line_start":958,"line_end":958,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_ne(0x010203, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69269,"byte_end":69302,"line_start":959,"line_end":959,"column_start":5,"column_end":38}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69307,"byte_end":69343,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69348,"byte_end":69389,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69394,"byte_end":69406,"line_start":962,"line_end":962,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69411,"byte_end":69452,"line_start":963,"line_end":963,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69457,"byte_end":69462,"line_start":964,"line_end":964,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69467,"byte_end":69474,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69479,"byte_end":69482,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69487,"byte_end":69499,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69504,"byte_end":69507,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69512,"byte_end":69581,"line_start":969,"line_end":969,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69586,"byte_end":69597,"line_start":970,"line_end":970,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70318,"byte_end":70325,"line_start":997,"line_end":997,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"fn put_int<'_>(&'_ mut Self, i64, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes low `nbytes` of a signed integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes low `nbytes` of a signed integer to `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69809,"byte_end":69888,"line_start":979,"line_end":979,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69893,"byte_end":69896,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69901,"byte_end":69950,"line_start":981,"line_end":981,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69955,"byte_end":69958,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69963,"byte_end":69977,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69982,"byte_end":69985,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":69990,"byte_end":69997,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70002,"byte_end":70024,"line_start":986,"line_end":986,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70029,"byte_end":70032,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70037,"byte_end":70062,"line_start":988,"line_end":988,"column_start":5,"column_end":30}},{"value":"/ buf.put_int(0x0504010203, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70067,"byte_end":70100,"line_start":989,"line_end":989,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70105,"byte_end":70142,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70147,"byte_end":70154,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70159,"byte_end":70162,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70167,"byte_end":70179,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70184,"byte_end":70187,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70192,"byte_end":70261,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/ `self` or if `nbytes` is greater than 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70266,"byte_end":70310,"line_start":996,"line_end":996,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70963,"byte_end":70973,"line_start":1019,"line_end":1019,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"fn put_int_le<'_>(&'_ mut Self, i64, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes low `nbytes` of a signed integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes low `nbytes` of a signed integer to `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70448,"byte_end":70530,"line_start":1001,"line_end":1001,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70535,"byte_end":70538,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70543,"byte_end":70592,"line_start":1003,"line_end":1003,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70597,"byte_end":70600,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70605,"byte_end":70619,"line_start":1005,"line_end":1005,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70624,"byte_end":70627,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70632,"byte_end":70639,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70644,"byte_end":70666,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70671,"byte_end":70674,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70679,"byte_end":70704,"line_start":1010,"line_end":1010,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_le(0x0504010203, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70709,"byte_end":70745,"line_start":1011,"line_end":1011,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70750,"byte_end":70787,"line_start":1012,"line_end":1012,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70792,"byte_end":70799,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70804,"byte_end":70807,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70812,"byte_end":70824,"line_start":1015,"line_end":1015,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70829,"byte_end":70832,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70837,"byte_end":70906,"line_start":1017,"line_end":1017,"column_start":5,"column_end":74}},{"value":"/ `self` or if `nbytes` is greater than 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":70911,"byte_end":70955,"line_start":1018,"line_end":1018,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71703,"byte_end":71713,"line_start":1045,"line_end":1045,"column_start":8,"column_end":18},"name":"put_int_ne","qualname":"::buf::buf_mut::BufMut::put_int_ne","value":"fn put_int_ne<'_>(&'_ mut Self, i64, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes low `nbytes` of a signed integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes low `nbytes` of a signed integer to `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71074,"byte_end":71156,"line_start":1023,"line_end":1023,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71161,"byte_end":71164,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71169,"byte_end":71218,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71223,"byte_end":71226,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71231,"byte_end":71245,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71250,"byte_end":71253,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71258,"byte_end":71265,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71270,"byte_end":71292,"line_start":1030,"line_end":1030,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71297,"byte_end":71300,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71305,"byte_end":71330,"line_start":1032,"line_end":1032,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_ne(0x010203, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71335,"byte_end":71367,"line_start":1033,"line_end":1033,"column_start":5,"column_end":37}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71372,"byte_end":71408,"line_start":1034,"line_end":1034,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71413,"byte_end":71454,"line_start":1035,"line_end":1035,"column_start":5,"column_end":46}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71459,"byte_end":71471,"line_start":1036,"line_end":1036,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71476,"byte_end":71517,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71522,"byte_end":71527,"line_start":1038,"line_end":1038,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71532,"byte_end":71539,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71544,"byte_end":71547,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71552,"byte_end":71564,"line_start":1041,"line_end":1041,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71569,"byte_end":71572,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71577,"byte_end":71646,"line_start":1043,"line_end":1043,"column_start":5,"column_end":74}},{"value":"/ `self` or if `nbytes` is greater than 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71651,"byte_end":71695,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72404,"byte_end":72411,"line_start":1072,"line_end":1072,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"fn put_f32<'_>(&'_ mut Self, f32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71904,"byte_end":71978,"line_start":1053,"line_end":1053,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":71983,"byte_end":72019,"line_start":1054,"line_end":1054,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72024,"byte_end":72027,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72032,"byte_end":72074,"line_start":1056,"line_end":1056,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72079,"byte_end":72082,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72087,"byte_end":72101,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72106,"byte_end":72109,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72114,"byte_end":72121,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72126,"byte_end":72148,"line_start":1061,"line_end":1061,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72153,"byte_end":72156,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72161,"byte_end":72186,"line_start":1063,"line_end":1063,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32(1.2f32);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72191,"byte_end":72215,"line_start":1064,"line_end":1064,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72220,"byte_end":72261,"line_start":1065,"line_end":1065,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72266,"byte_end":72273,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72278,"byte_end":72281,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72286,"byte_end":72298,"line_start":1068,"line_end":1068,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72303,"byte_end":72306,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72311,"byte_end":72380,"line_start":1070,"line_end":1070,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72385,"byte_end":72396,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72985,"byte_end":72995,"line_start":1095,"line_end":1095,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"fn put_f32_le<'_>(&'_ mut Self, f32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72479,"byte_end":72553,"line_start":1076,"line_end":1076,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72558,"byte_end":72597,"line_start":1077,"line_end":1077,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72602,"byte_end":72605,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72610,"byte_end":72652,"line_start":1079,"line_end":1079,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72657,"byte_end":72660,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72665,"byte_end":72679,"line_start":1081,"line_end":1081,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72684,"byte_end":72687,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72692,"byte_end":72699,"line_start":1083,"line_end":1083,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72704,"byte_end":72726,"line_start":1084,"line_end":1084,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72731,"byte_end":72734,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72739,"byte_end":72764,"line_start":1086,"line_end":1086,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_le(1.2f32);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72769,"byte_end":72796,"line_start":1087,"line_end":1087,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72801,"byte_end":72842,"line_start":1088,"line_end":1088,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72847,"byte_end":72854,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72859,"byte_end":72862,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72867,"byte_end":72879,"line_start":1091,"line_end":1091,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72884,"byte_end":72887,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72892,"byte_end":72961,"line_start":1093,"line_end":1093,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":72966,"byte_end":72977,"line_start":1094,"line_end":1094,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73693,"byte_end":73703,"line_start":1122,"line_end":1122,"column_start":8,"column_end":18},"name":"put_f32_ne","qualname":"::buf::buf_mut::BufMut::put_f32_ne","value":"fn put_f32_ne<'_>(&'_ mut Self, f32)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes an IEEE754 single-precision (4 bytes) floating point number to\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73066,"byte_end":73139,"line_start":1099,"line_end":1099,"column_start":5,"column_end":78}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73144,"byte_end":73183,"line_start":1100,"line_end":1100,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73188,"byte_end":73191,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73196,"byte_end":73238,"line_start":1102,"line_end":1102,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73243,"byte_end":73246,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73251,"byte_end":73265,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73270,"byte_end":73273,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73278,"byte_end":73285,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73290,"byte_end":73312,"line_start":1107,"line_end":1107,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73317,"byte_end":73320,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73325,"byte_end":73350,"line_start":1109,"line_end":1109,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_ne(1.2f32);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73355,"byte_end":73382,"line_start":1110,"line_end":1110,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73387,"byte_end":73423,"line_start":1111,"line_end":1111,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73428,"byte_end":73473,"line_start":1112,"line_end":1112,"column_start":5,"column_end":50}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73478,"byte_end":73490,"line_start":1113,"line_end":1113,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73495,"byte_end":73540,"line_start":1114,"line_end":1114,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73545,"byte_end":73550,"line_start":1115,"line_end":1115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73555,"byte_end":73562,"line_start":1116,"line_end":1116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73567,"byte_end":73570,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73575,"byte_end":73587,"line_start":1118,"line_end":1118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73592,"byte_end":73595,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73600,"byte_end":73669,"line_start":1120,"line_end":1120,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73674,"byte_end":73685,"line_start":1121,"line_end":1121,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74290,"byte_end":74297,"line_start":1145,"line_end":1145,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"fn put_f64<'_>(&'_ mut Self, f64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73774,"byte_end":73848,"line_start":1126,"line_end":1126,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73853,"byte_end":73889,"line_start":1127,"line_end":1127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73894,"byte_end":73897,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73902,"byte_end":73944,"line_start":1129,"line_end":1129,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73949,"byte_end":73952,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73957,"byte_end":73971,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73976,"byte_end":73979,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73984,"byte_end":73991,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":73996,"byte_end":74018,"line_start":1134,"line_end":1134,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74023,"byte_end":74026,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74031,"byte_end":74056,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64(1.2f64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74061,"byte_end":74085,"line_start":1137,"line_end":1137,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74090,"byte_end":74147,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74152,"byte_end":74159,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74164,"byte_end":74167,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74172,"byte_end":74184,"line_start":1141,"line_end":1141,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74189,"byte_end":74192,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74197,"byte_end":74266,"line_start":1143,"line_end":1143,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74271,"byte_end":74282,"line_start":1144,"line_end":1144,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74887,"byte_end":74897,"line_start":1168,"line_end":1168,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"fn put_f64_le<'_>(&'_ mut Self, f64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74365,"byte_end":74439,"line_start":1149,"line_end":1149,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74444,"byte_end":74483,"line_start":1150,"line_end":1150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74488,"byte_end":74491,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74496,"byte_end":74538,"line_start":1152,"line_end":1152,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74543,"byte_end":74546,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74551,"byte_end":74565,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74570,"byte_end":74573,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74578,"byte_end":74585,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74590,"byte_end":74612,"line_start":1157,"line_end":1157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74617,"byte_end":74620,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74625,"byte_end":74650,"line_start":1159,"line_end":1159,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_le(1.2f64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74655,"byte_end":74682,"line_start":1160,"line_end":1160,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74687,"byte_end":74744,"line_start":1161,"line_end":1161,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74749,"byte_end":74756,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74761,"byte_end":74764,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74769,"byte_end":74781,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74786,"byte_end":74789,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74794,"byte_end":74863,"line_start":1166,"line_end":1166,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74868,"byte_end":74879,"line_start":1167,"line_end":1167,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75628,"byte_end":75638,"line_start":1195,"line_end":1195,"column_start":8,"column_end":18},"name":"put_f64_ne","qualname":"::buf::buf_mut::BufMut::put_f64_ne","value":"fn put_f64_ne<'_>(&'_ mut Self, f64)","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":74968,"byte_end":75042,"line_start":1172,"line_end":1172,"column_start":5,"column_end":79}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75047,"byte_end":75086,"line_start":1173,"line_end":1173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75091,"byte_end":75094,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75099,"byte_end":75141,"line_start":1175,"line_end":1175,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75146,"byte_end":75149,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75154,"byte_end":75168,"line_start":1177,"line_end":1177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75173,"byte_end":75176,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75181,"byte_end":75188,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75193,"byte_end":75215,"line_start":1180,"line_end":1180,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75220,"byte_end":75223,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75228,"byte_end":75253,"line_start":1182,"line_end":1182,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_ne(1.2f64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75258,"byte_end":75285,"line_start":1183,"line_end":1183,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75290,"byte_end":75326,"line_start":1184,"line_end":1184,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75331,"byte_end":75392,"line_start":1185,"line_end":1185,"column_start":5,"column_end":66}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75397,"byte_end":75409,"line_start":1186,"line_end":1186,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75414,"byte_end":75475,"line_start":1187,"line_end":1187,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75480,"byte_end":75485,"line_start":1188,"line_end":1188,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75490,"byte_end":75497,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75502,"byte_end":75505,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75510,"byte_end":75522,"line_start":1191,"line_end":1191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75527,"byte_end":75530,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75535,"byte_end":75604,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75609,"byte_end":75620,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":76053,"byte_end":76058,"line_start":1212,"line_end":1212,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::buf_mut::BufMut::limit","value":"fn limit(Self, usize) -> Limit<Self> where Self: Sized","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which can write at most `limit` bytes to `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75709,"byte_end":75780,"line_start":1199,"line_end":1199,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75785,"byte_end":75788,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75793,"byte_end":75807,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75812,"byte_end":75815,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75820,"byte_end":75827,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75832,"byte_end":75854,"line_start":1204,"line_end":1204,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75859,"byte_end":75862,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ let arr = &mut [0u8; 128][..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75867,"byte_end":75901,"line_start":1206,"line_end":1206,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(arr.remaining_mut(), 128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75906,"byte_end":75947,"line_start":1207,"line_end":1207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75952,"byte_end":75955,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ let dst = arr.limit(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75960,"byte_end":75988,"line_start":1209,"line_end":1209,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(dst.remaining_mut(), 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":75993,"byte_end":76033,"line_start":1210,"line_end":1210,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":76038,"byte_end":76045,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77625,"byte_end":77634,"line_start":1270,"line_end":1270,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::buf_mut::BufMut::chain_mut","value":"fn chain_mut<U>(Self, U) -> Chain<Self, U> where U: BufMut, Self: Sized","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adapter which will chain this buffer with another.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77061,"byte_end":77126,"line_start":1250,"line_end":1250,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77131,"byte_end":77134,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ The returned `BufMut` instance will first write to all bytes from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77139,"byte_end":77208,"line_start":1252,"line_end":1252,"column_start":5,"column_end":74}},{"value":"/ `self`. Afterwards, it will write to `next`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77213,"byte_end":77261,"line_start":1253,"line_end":1253,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77266,"byte_end":77269,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77274,"byte_end":77288,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77293,"byte_end":77296,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77301,"byte_end":77308,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77313,"byte_end":77335,"line_start":1258,"line_end":1258,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77340,"byte_end":77343,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 5];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77348,"byte_end":77373,"line_start":1260,"line_end":1260,"column_start":5,"column_end":30}},{"value":"/ let mut b = [0u8; 6];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77378,"byte_end":77403,"line_start":1261,"line_end":1261,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77408,"byte_end":77411,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ let mut chain = (&mut a[..]).chain_mut(&mut b[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77416,"byte_end":77471,"line_start":1263,"line_end":1263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77476,"byte_end":77479,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ chain.put_slice(b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77484,"byte_end":77520,"line_start":1265,"line_end":1265,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77525,"byte_end":77528,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77533,"byte_end":77566,"line_start":1267,"line_end":1267,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77571,"byte_end":77605,"line_start":1268,"line_end":1268,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":77610,"byte_end":77617,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80149,"byte_end":80162,"line_start":1388,"line_end":1388,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"<&'_ mut [u8] as buf::buf_mut::BufMut>::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":127},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80132,"byte_end":80141,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80228,"byte_end":80237,"line_start":1393,"line_end":1393,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"<&'_ mut [u8] as buf::buf_mut::BufMut>::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80211,"byte_end":80220,"line_start":1392,"line_end":1392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80428,"byte_end":80439,"line_start":1399,"line_end":1399,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"<&'_ mut [u8] as buf::buf_mut::BufMut>::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":128},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80404,"byte_end":80413,"line_start":1398,"line_end":1398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80651,"byte_end":80660,"line_start":1406,"line_end":1406,"column_start":8,"column_end":17},"name":"put_slice","qualname":"<&'_ mut [u8] as buf::buf_mut::BufMut>::put_slice","value":"fn put_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80634,"byte_end":80643,"line_start":1405,"line_end":1405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80816,"byte_end":80825,"line_start":1413,"line_end":1413,"column_start":8,"column_end":17},"name":"put_bytes","qualname":"<&'_ mut [u8] as buf::buf_mut::BufMut>::put_bytes","value":"fn put_bytes<'_>(&'_ mut Self, u8, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81090,"byte_end":81103,"line_start":1424,"line_end":1424,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"<Vec<u8> as buf::buf_mut::BufMut>::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":127},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81073,"byte_end":81082,"line_start":1423,"line_end":1423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81266,"byte_end":81277,"line_start":1430,"line_end":1430,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"<Vec<u8> as buf::buf_mut::BufMut>::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":128},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81242,"byte_end":81251,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81605,"byte_end":81614,"line_start":1445,"line_end":1445,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"<Vec<u8> as buf::buf_mut::BufMut>::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81588,"byte_end":81597,"line_start":1444,"line_end":1444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":82038,"byte_end":82041,"line_start":1459,"line_end":1459,"column_start":8,"column_end":11},"name":"put","qualname":"<Vec<u8> as buf::buf_mut::BufMut>::put","value":"fn put<T, '_>(&'_ mut Self, T) where T: super::Buf, Self: Sized","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":82535,"byte_end":82544,"line_start":1481,"line_end":1481,"column_start":8,"column_end":17},"name":"put_slice","qualname":"<Vec<u8> as buf::buf_mut::BufMut>::put_slice","value":"fn put_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":82518,"byte_end":82527,"line_start":1480,"line_end":1480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":82621,"byte_end":82630,"line_start":1485,"line_end":1485,"column_start":8,"column_end":17},"name":"put_bytes","qualname":"<Vec<u8> as buf::buf_mut::BufMut>::put_bytes","value":"fn put_bytes<'_>(&'_ mut Self, u8, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83814,"byte_end":83819,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[{"value":"/ A `Chain` sequences two buffers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83043,"byte_end":83079,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83080,"byte_end":83083,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Chain` is an adapter that links two underlying buffers and provides a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83084,"byte_end":83158,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ continuous view across both buffers. It is able to sequence either immutable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83159,"byte_end":83239,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ buffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83240,"byte_end":83308,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83309,"byte_end":83312,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`Buf::chain`]. Please see that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83313,"byte_end":83392,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ function's documentation for more detail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83393,"byte_end":83438,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83439,"byte_end":83442,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83443,"byte_end":83457,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83458,"byte_end":83461,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83462,"byte_end":83469,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83470,"byte_end":83498,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83499,"byte_end":83502,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83503,"byte_end":83537,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83538,"byte_end":83568,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83569,"byte_end":83572,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let full: Bytes = buf.copy_to_bytes(11);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83573,"byte_end":83617,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(full[..], b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83618,"byte_end":83663,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83664,"byte_end":83671,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83672,"byte_end":83675,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Buf::chain`]: trait.Buf.html#method.chain","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83676,"byte_end":83723,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83724,"byte_end":83751,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83752,"byte_end":83785,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84309,"byte_end":84318,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"fn first_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the first underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84023,"byte_end":84074,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84079,"byte_end":84082,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84087,"byte_end":84101,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84106,"byte_end":84109,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84114,"byte_end":84121,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84126,"byte_end":84145,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84150,"byte_end":84153,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84158,"byte_end":84187,"line_start":50,"line_end":50,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84192,"byte_end":84222,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84227,"byte_end":84230,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.first_ref()[..], b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84235,"byte_end":84285,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84290,"byte_end":84297,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84733,"byte_end":84742,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"fn first_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84361,"byte_end":84420,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84425,"byte_end":84428,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84433,"byte_end":84447,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84452,"byte_end":84455,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84460,"byte_end":84467,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84472,"byte_end":84491,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84496,"byte_end":84499,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello\"[..])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84504,"byte_end":84537,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84542,"byte_end":84572,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84577,"byte_end":84580,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ buf.first_mut().advance(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84585,"byte_end":84616,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84621,"byte_end":84624,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(9);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84629,"byte_end":84665,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(full, b\"elloworld\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84670,"byte_end":84709,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84714,"byte_end":84721,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85081,"byte_end":85089,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"fn last_ref<'_>(&'_ Self) -> &'_ U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the last underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84797,"byte_end":84847,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84852,"byte_end":84855,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84860,"byte_end":84874,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84879,"byte_end":84882,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84887,"byte_end":84894,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84899,"byte_end":84918,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84923,"byte_end":84926,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84931,"byte_end":84960,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":84965,"byte_end":84995,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85000,"byte_end":85003,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.last_ref()[..], b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85008,"byte_end":85057,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85062,"byte_end":85069,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85505,"byte_end":85513,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"fn last_mut<'_>(&'_ mut Self) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85132,"byte_end":85190,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85195,"byte_end":85198,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85203,"byte_end":85217,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85222,"byte_end":85225,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85230,"byte_end":85237,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85242,"byte_end":85261,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85266,"byte_end":85269,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85274,"byte_end":85308,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85313,"byte_end":85343,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85348,"byte_end":85351,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ buf.last_mut().advance(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85356,"byte_end":85386,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85391,"byte_end":85394,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85399,"byte_end":85436,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(full, b\"hello orld\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85441,"byte_end":85481,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85486,"byte_end":85493,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85946,"byte_end":85956,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[{"value":"/ Consumes this `Chain`, returning the underlying values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85568,"byte_end":85627,"line_start":113,"line_end":113,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85632,"byte_end":85635,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85640,"byte_end":85654,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85659,"byte_end":85662,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85667,"byte_end":85674,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85679,"byte_end":85698,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85703,"byte_end":85706,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let chain = (&b\"hello\"[..])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85711,"byte_end":85742,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85747,"byte_end":85777,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85782,"byte_end":85785,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let (first, last) = chain.into_inner();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85790,"byte_end":85833,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(first[..], b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85838,"byte_end":85878,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(last[..], b\"world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85883,"byte_end":85922,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":85927,"byte_end":85934,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":86079,"byte_end":86088,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"remaining","qualname":"<Chain<T, U> as buf::buf_impl::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":86189,"byte_end":86194,"line_start":141,"line_end":141,"column_start":8,"column_end":13},"name":"chunk","qualname":"<Chain<T, U> as buf::buf_impl::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":86344,"byte_end":86351,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"advance","qualname":"<Chain<T, U> as buf::buf_impl::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":86928,"byte_end":86941,"line_start":174,"line_end":174,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"<Chain<T, U> as buf::buf_impl::Buf>::copy_to_bytes","value":"fn copy_to_bytes<'_>(&'_ mut Self, usize) -> Bytes","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":75},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":87581,"byte_end":87594,"line_start":198,"line_end":198,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"<Chain<T, U> as buf::buf_mut::BufMut>::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":127},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":87723,"byte_end":87732,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"<Chain<T, U> as buf::buf_mut::BufMut>::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":87916,"byte_end":87927,"line_start":212,"line_end":212,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"<Chain<T, U> as buf::buf_mut::BufMut>::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":128},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":88439,"byte_end":88448,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Chain<T, U> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89007,"byte_end":89015,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1277}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Iterator over the bytes contained by the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88529,"byte_end":88581,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88582,"byte_end":88585,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88586,"byte_end":88600,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88601,"byte_end":88604,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88605,"byte_end":88621,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88622,"byte_end":88625,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88626,"byte_end":88633,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88634,"byte_end":88655,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88656,"byte_end":88659,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88660,"byte_end":88699,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88700,"byte_end":88735,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88736,"byte_end":88739,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88740,"byte_end":88780,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88781,"byte_end":88821,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88822,"byte_end":88862,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88863,"byte_end":88897,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88898,"byte_end":88905,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88906,"byte_end":88909,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: trait.Buf.html#method.iter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88910,"byte_end":88950,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":88951,"byte_end":88978,"line_start":22,"line_end":22,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89500,"byte_end":89503,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<IntoIter<T>>::new","value":"fn new(T) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Creates an iterator over the bytes contained by the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89064,"byte_end":89127,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89132,"byte_end":89135,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89140,"byte_end":89154,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89159,"byte_end":89162,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89167,"byte_end":89174,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89179,"byte_end":89200,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89205,"byte_end":89208,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from_static(b\"abc\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89213,"byte_end":89254,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89259,"byte_end":89294,"line_start":37,"line_end":37,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89299,"byte_end":89302,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89307,"byte_end":89347,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89352,"byte_end":89392,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89397,"byte_end":89437,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89442,"byte_end":89476,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89481,"byte_end":89488,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89968,"byte_end":89978,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `IntoIter`, returning the underlying value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89569,"byte_end":89630,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89635,"byte_end":89638,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89643,"byte_end":89657,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89662,"byte_end":89665,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89670,"byte_end":89681,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89686,"byte_end":89714,"line_start":53,"line_end":53,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89719,"byte_end":89722,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89727,"byte_end":89766,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89771,"byte_end":89806,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89811,"byte_end":89814,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89819,"byte_end":89859,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89864,"byte_end":89867,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let buf = iter.into_inner();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89872,"byte_end":89904,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(2, buf.remaining());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89909,"byte_end":89944,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89949,"byte_end":89956,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90457,"byte_end":90464,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90022,"byte_end":90067,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90072,"byte_end":90075,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90080,"byte_end":90145,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90150,"byte_end":90153,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90158,"byte_end":90172,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90177,"byte_end":90180,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90185,"byte_end":90196,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90201,"byte_end":90229,"line_start":74,"line_end":74,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90234,"byte_end":90237,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90242,"byte_end":90281,"line_start":76,"line_end":76,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90286,"byte_end":90321,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90326,"byte_end":90329,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90334,"byte_end":90374,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90379,"byte_end":90382,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, iter.get_ref().remaining());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90387,"byte_end":90433,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90438,"byte_end":90445,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90997,"byte_end":91004,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90511,"byte_end":90564,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90569,"byte_end":90572,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90577,"byte_end":90642,"line_start":89,"line_end":89,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90647,"byte_end":90650,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90655,"byte_end":90669,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90674,"byte_end":90677,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90682,"byte_end":90693,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BytesMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90698,"byte_end":90729,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90734,"byte_end":90737,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let buf = BytesMut::from(&b\"abc\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90742,"byte_end":90784,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90789,"byte_end":90824,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90829,"byte_end":90832,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90837,"byte_end":90877,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90882,"byte_end":90885,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ iter.get_mut().advance(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90890,"byte_end":90920,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90925,"byte_end":90928,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90933,"byte_end":90973,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":90978,"byte_end":90985,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":91129,"byte_end":91133,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<T> as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<u8>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":91339,"byte_end":91348,"line_start":124,"line_end":124,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<T> as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91709,"byte_end":91714,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which limits the amount of bytes that can be written","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91576,"byte_end":91651,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ to an underlying buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91652,"byte_end":91680,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91937,"byte_end":91947,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this `Limit`, returning the underlying value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91867,"byte_end":91925,"line_start":19,"line_end":19,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92131,"byte_end":92138,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91991,"byte_end":92039,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92044,"byte_end":92047,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92052,"byte_end":92119,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92333,"byte_end":92340,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92185,"byte_end":92241,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92246,"byte_end":92249,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92254,"byte_end":92321,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92636,"byte_end":92641,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"fn limit<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be written","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92399,"byte_end":92458,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92463,"byte_end":92466,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92471,"byte_end":92481,"line_start":40,"line_end":40,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92486,"byte_end":92489,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than indicated by this method then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92494,"byte_end":92570,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92575,"byte_end":92624,"line_start":43,"line_end":43,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92906,"byte_end":92915,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"fn set_limit<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be written.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92690,"byte_end":92747,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92752,"byte_end":92755,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92760,"byte_end":92770,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92775,"byte_end":92778,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92783,"byte_end":92859,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ number of available bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":92864,"byte_end":92894,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":93027,"byte_end":93040,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"<Limit<T> as buf::buf_mut::BufMut>::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":127},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":93130,"byte_end":93139,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"<Limit<T> as buf::buf_mut::BufMut>::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":93317,"byte_end":93328,"line_start":70,"line_end":70,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"<Limit<T> as buf::buf_mut::BufMut>::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":128},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93761,"byte_end":93765,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which limits the bytes read from an underlying buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93505,"byte_end":93579,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93580,"byte_end":93583,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `take()` on `Buf`. See","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93584,"byte_end":93654,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ documentation of [`take()`](trait.Buf.html#method.take) for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93655,"byte_end":93732,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94378,"byte_end":94388,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Take`, returning the underlying value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93908,"byte_end":93965,"line_start":20,"line_end":20,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93970,"byte_end":93973,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93978,"byte_end":93992,"line_start":22,"line_end":22,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93997,"byte_end":94000,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94005,"byte_end":94016,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94021,"byte_end":94050,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94055,"byte_end":94058,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94063,"byte_end":94104,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94109,"byte_end":94134,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94139,"byte_end":94142,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94147,"byte_end":94169,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94174,"byte_end":94206,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94211,"byte_end":94214,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94219,"byte_end":94254,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94259,"byte_end":94262,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94267,"byte_end":94283,"line_start":35,"line_end":35,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94288,"byte_end":94310,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94315,"byte_end":94354,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94359,"byte_end":94366,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94763,"byte_end":94770,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94432,"byte_end":94477,"line_start":43,"line_end":43,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94482,"byte_end":94485,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94490,"byte_end":94555,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94560,"byte_end":94563,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94568,"byte_end":94582,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94587,"byte_end":94590,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94595,"byte_end":94606,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94611,"byte_end":94630,"line_start":50,"line_end":50,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94635,"byte_end":94638,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".take(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94643,"byte_end":94680,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94685,"byte_end":94688,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, buf.get_ref().remaining());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94693,"byte_end":94739,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94744,"byte_end":94751,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95255,"byte_end":95262,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94817,"byte_end":94870,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94875,"byte_end":94878,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94883,"byte_end":94948,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94953,"byte_end":94956,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94961,"byte_end":94975,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94980,"byte_end":94983,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":94988,"byte_end":94999,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95004,"byte_end":95033,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95038,"byte_end":95041,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95046,"byte_end":95087,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95092,"byte_end":95117,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95122,"byte_end":95125,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().advance(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95130,"byte_end":95159,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95164,"byte_end":95167,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95172,"byte_end":95194,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"ll\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95199,"byte_end":95231,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95236,"byte_end":95243,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95814,"byte_end":95819,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn limit<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95321,"byte_end":95378,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95383,"byte_end":95386,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95391,"byte_end":95401,"line_start":83,"line_end":83,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95406,"byte_end":95409,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than indicated by this method then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95414,"byte_end":95487,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95492,"byte_end":95541,"line_start":86,"line_end":86,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95546,"byte_end":95549,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95554,"byte_end":95568,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95573,"byte_end":95576,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95581,"byte_end":95592,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95597,"byte_end":95616,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95621,"byte_end":95624,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95629,"byte_end":95670,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95675,"byte_end":95678,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, buf.limit());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95683,"byte_end":95714,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95719,"byte_end":95754,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(1, buf.limit());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95759,"byte_end":95790,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95795,"byte_end":95802,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96459,"byte_end":96468,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn set_limit<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be read.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95868,"byte_end":95922,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95927,"byte_end":95930,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95935,"byte_end":95945,"line_start":105,"line_end":105,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95950,"byte_end":95953,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":95958,"byte_end":96031,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ number of available bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96036,"byte_end":96066,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96071,"byte_end":96074,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96079,"byte_end":96093,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96098,"byte_end":96101,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96106,"byte_end":96117,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96122,"byte_end":96151,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96156,"byte_end":96159,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96164,"byte_end":96205,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96210,"byte_end":96235,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96240,"byte_end":96243,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96248,"byte_end":96270,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96275,"byte_end":96307,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96312,"byte_end":96315,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96320,"byte_end":96336,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96341,"byte_end":96344,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buf.set_limit(3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96349,"byte_end":96370,"line_start":123,"line_end":123,"column_start":5,"column_end":26}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96375,"byte_end":96397,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96402,"byte_end":96435,"line_start":125,"line_end":125,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96440,"byte_end":96447,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96566,"byte_end":96575,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"remaining","qualname":"<Take<T> as buf::buf_impl::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96661,"byte_end":96666,"line_start":137,"line_end":137,"column_start":8,"column_end":13},"name":"chunk","qualname":"<Take<T> as buf::buf_impl::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96791,"byte_end":96798,"line_start":142,"line_end":142,"column_start":8,"column_end":15},"name":"advance","qualname":"<Take<T> as buf::buf_impl::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96934,"byte_end":96947,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"<Take<T> as buf::buf_impl::Buf>::copy_to_bytes","value":"fn copy_to_bytes<'_>(&'_ mut Self, usize) -> Bytes","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":75},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97947,"byte_end":97958,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"UninitSlice","qualname":"::buf::uninit_slice::UninitSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uninitialized byte slice.","sig":null,"attributes":[{"value":"/ Uninitialized byte slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97307,"byte_end":97336,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97337,"byte_end":97340,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returned by `BufMut::chunk_mut()`, the referenced byte slice may be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97341,"byte_end":97412,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ uninitialized. The wrapper provides safe access without introducing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97413,"byte_end":97484,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97485,"byte_end":97508,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97509,"byte_end":97512,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The safety invariants of this wrapper are:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97513,"byte_end":97559,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97560,"byte_end":97563,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/  1. Reading from an `UninitSlice` is undefined behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97564,"byte_end":97624,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/  2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97625,"byte_end":97703,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97704,"byte_end":97707,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97708,"byte_end":97785,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ that it is possible in safe code to write uninitialized bytes to an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97786,"byte_end":97857,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ `&mut [MaybeUninit<u8>]`, which this type prohibits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97858,"byte_end":97914,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"repr(transparent)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97915,"byte_end":97935,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98758,"byte_end":98776,"line_start":48,"line_end":48,"column_start":19,"column_end":37},"name":"from_raw_parts_mut","qualname":"<UninitSlice>::from_raw_parts_mut","value":"unsafe fn from_raw_parts_mut<'a>(*mut u8, usize) -> &'a mut UninitSlice","parent":null,"children":[],"decl_id":null,"docs":" Create a `&mut UninitSlice` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Create a `&mut UninitSlice` from a pointer and a length.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98171,"byte_end":98231,"line_start":29,"line_end":29,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98236,"byte_end":98239,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98244,"byte_end":98256,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98261,"byte_end":98264,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `ptr` references a valid memory region owned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98269,"byte_end":98345,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ by the caller representing a byte slice for the duration of `'a`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98350,"byte_end":98419,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98424,"byte_end":98427,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98432,"byte_end":98446,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98451,"byte_end":98454,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98459,"byte_end":98466,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98471,"byte_end":98503,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98508,"byte_end":98511,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\".to_vec();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98516,"byte_end":98556,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"/ let ptr = bytes.as_ptr() as *mut _;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98561,"byte_end":98600,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let len = bytes.len();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98605,"byte_end":98631,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98636,"byte_end":98639,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98644,"byte_end":98713,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98718,"byte_end":98725,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98730,"byte_end":98739,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99481,"byte_end":99491,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"write_byte","qualname":"<UninitSlice>::write_byte","value":"fn write_byte<'_>(&'_ mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Write a single byte at the specified offset.","sig":null,"attributes":[{"value":"/ Write a single byte at the specified offset.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":98994,"byte_end":99042,"line_start":54,"line_end":54,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99047,"byte_end":99050,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99055,"byte_end":99067,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99072,"byte_end":99075,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The function panics if `index` is out of bounds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99080,"byte_end":99132,"line_start":58,"line_end":58,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99137,"byte_end":99140,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99145,"byte_end":99159,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99164,"byte_end":99167,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99172,"byte_end":99179,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99184,"byte_end":99216,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99221,"byte_end":99224,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99229,"byte_end":99267,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99272,"byte_end":99353,"line_start":66,"line_end":66,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99358,"byte_end":99361,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ slice.write_byte(0, b'b');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99366,"byte_end":99396,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99401,"byte_end":99404,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"boo\", &data[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99409,"byte_end":99443,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99448,"byte_end":99455,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99460,"byte_end":99469,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100200,"byte_end":100215,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<UninitSlice>::copy_from_slice","value":"fn copy_from_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":null,"children":[],"decl_id":null,"docs":" Copies bytes  from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies bytes  from `src` into `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99636,"byte_end":99677,"line_start":79,"line_end":79,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99682,"byte_end":99685,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The length of `src` must be the same as `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99690,"byte_end":99741,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99746,"byte_end":99749,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99754,"byte_end":99766,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99771,"byte_end":99774,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function panics if `src` has a different length than `self`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99779,"byte_end":99847,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99852,"byte_end":99855,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99860,"byte_end":99874,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99879,"byte_end":99882,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99887,"byte_end":99894,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99899,"byte_end":99931,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99936,"byte_end":99939,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99944,"byte_end":99982,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":99987,"byte_end":100068,"line_start":93,"line_end":93,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100073,"byte_end":100076,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ slice.copy_from_slice(b\"bar\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100081,"byte_end":100115,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100120,"byte_end":100123,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"bar\", &data[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100128,"byte_end":100162,"line_start":97,"line_end":97,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100167,"byte_end":100174,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100179,"byte_end":100188,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100905,"byte_end":100915,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<UninitSlice>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Return a raw pointer to the slice's buffer.","sig":null,"attributes":[{"value":"/ Return a raw pointer to the slice's buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100430,"byte_end":100477,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100482,"byte_end":100485,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100490,"byte_end":100502,"line_start":112,"line_end":112,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100507,"byte_end":100510,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The caller **must not** read from the referenced memory and **must not**","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100515,"byte_end":100591,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ write **uninitialized** bytes to the slice either.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100596,"byte_end":100650,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100655,"byte_end":100658,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100663,"byte_end":100677,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100682,"byte_end":100685,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100690,"byte_end":100697,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100702,"byte_end":100724,"line_start":120,"line_end":120,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100729,"byte_end":100732,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100737,"byte_end":100766,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100771,"byte_end":100805,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ let ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100810,"byte_end":100867,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100872,"byte_end":100879,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100884,"byte_end":100893,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101780,"byte_end":101799,"line_start":153,"line_end":153,"column_start":19,"column_end":38},"name":"as_uninit_slice_mut","qualname":"<UninitSlice>::as_uninit_slice_mut","value":"unsafe fn as_uninit_slice_mut<'a>(&'a mut Self) -> &'a mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.","sig":null,"attributes":[{"value":"/ Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":100989,"byte_end":101050,"line_start":131,"line_end":131,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101055,"byte_end":101058,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101063,"byte_end":101075,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101080,"byte_end":101083,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The caller **must not** read from the referenced memory and **must not** write","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101088,"byte_end":101170,"line_start":135,"line_end":135,"column_start":5,"column_end":87}},{"value":"/ **uninitialized** bytes to the slice either. This is because `BufMut` implementation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101175,"byte_end":101263,"line_start":136,"line_end":136,"column_start":5,"column_end":93}},{"value":"/ that created the `UninitSlice` knows which parts are initialized. Writing uninitalized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101268,"byte_end":101358,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ bytes to the slice may cause the `BufMut` to read those bytes and trigger undefined","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101363,"byte_end":101450,"line_start":138,"line_end":138,"column_start":5,"column_end":92}},{"value":"/ behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101455,"byte_end":101468,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101473,"byte_end":101476,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101481,"byte_end":101495,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101500,"byte_end":101503,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101508,"byte_end":101515,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101520,"byte_end":101542,"line_start":144,"line_end":144,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101547,"byte_end":101550,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101555,"byte_end":101584,"line_start":146,"line_end":146,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101589,"byte_end":101623,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101628,"byte_end":101640,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/     let uninit_slice = BufMut::chunk_mut(&mut slice).as_uninit_slice_mut();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101645,"byte_end":101724,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101729,"byte_end":101735,"line_start":150,"line_end":150,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101740,"byte_end":101747,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101752,"byte_end":101761,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102246,"byte_end":102249,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<UninitSlice>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the slice.","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101917,"byte_end":101962,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101967,"byte_end":101970,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101975,"byte_end":101989,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":101994,"byte_end":101997,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102002,"byte_end":102009,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102014,"byte_end":102036,"line_start":162,"line_end":162,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102041,"byte_end":102044,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102049,"byte_end":102078,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102083,"byte_end":102117,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/ let len = BufMut::chunk_mut(&mut slice).len();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102122,"byte_end":102172,"line_start":166,"line_end":166,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102177,"byte_end":102180,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(len, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102185,"byte_end":102208,"line_start":168,"line_end":168,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102213,"byte_end":102220,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102225,"byte_end":102234,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102339,"byte_end":102342,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UninitSlice as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/vec_deque.rs","byte_start":103516,"byte_end":103525,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"remaining","qualname":"<VecDeque<u8> as buf::buf_impl::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/vec_deque.rs","byte_start":103577,"byte_end":103582,"line_start":10,"line_end":10,"column_start":8,"column_end":13},"name":"chunk","qualname":"<VecDeque<u8> as buf::buf_impl::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/vec_deque.rs","byte_start":103740,"byte_end":103747,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"advance","qualname":"<VecDeque<u8> as buf::buf_impl::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107843,"byte_end":107848,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"decl_id":null,"docs":" A cheaply cloneable and sliceable chunk of contiguous memory.","sig":null,"attributes":[{"value":"/ A cheaply cloneable and sliceable chunk of contiguous memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104215,"byte_end":104280,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104281,"byte_end":104284,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104285,"byte_end":104362,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104363,"byte_end":104441,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104442,"byte_end":104488,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104489,"byte_end":104492,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104493,"byte_end":104573,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104574,"byte_end":104633,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104634,"byte_end":104637,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Bytes` does not have a single implementation. It is an interface, whose","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104638,"byte_end":104714,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ exact behavior is implemented through dynamic dispatch in several underlying","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104715,"byte_end":104795,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ implementations of `Bytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104796,"byte_end":104827,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104828,"byte_end":104831,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ All `Bytes` implementations must fulfill the following requirements:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104832,"byte_end":104904,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ - They are cheaply cloneable and thereby shareable between an unlimited amount","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104905,"byte_end":104987,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/   of components, for example by modifying a reference count.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":104988,"byte_end":105052,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/ - Instances can be sliced to refer to a subset of the original buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105053,"byte_end":105127,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105128,"byte_end":105131,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105132,"byte_end":105139,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105140,"byte_end":105161,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105162,"byte_end":105165,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut mem = Bytes::from(\"Hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105166,"byte_end":105211,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ let a = mem.slice(0..5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105212,"byte_end":105240,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105241,"byte_end":105244,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, \"Hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105245,"byte_end":105272,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105273,"byte_end":105276,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let b = mem.split_to(6);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105277,"byte_end":105305,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105306,"byte_end":105309,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem, \"world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105310,"byte_end":105339,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(b, \"Hello \");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105340,"byte_end":105368,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105369,"byte_end":105376,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105377,"byte_end":105380,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Memory layout","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105381,"byte_end":105400,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105401,"byte_end":105404,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `Bytes` struct itself is fairly small, limited to 4 `usize` fields used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105405,"byte_end":105484,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ to track information about which segment of the underlying memory the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105485,"byte_end":105558,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ `Bytes` handle has access to.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105559,"byte_end":105592,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105593,"byte_end":105596,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `Bytes` keeps both a pointer to the shared state containing the full memory","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105597,"byte_end":105676,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ slice and a pointer to the start of the region visible by the handle.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105677,"byte_end":105750,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ `Bytes` also tracks the length of its view into the memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105751,"byte_end":105814,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105815,"byte_end":105818,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Sharing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105819,"byte_end":105832,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105833,"byte_end":105836,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ `Bytes` contains a vtable, which allows implementations of `Bytes` to define","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105837,"byte_end":105917,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ how sharing/cloning is implemented in detail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105918,"byte_end":105967,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/ When `Bytes::clone()` is called, `Bytes` will call the vtable function for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":105968,"byte_end":106046,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ cloning the backing storage in order to share it behind between multiple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106047,"byte_end":106123,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ `Bytes` instances.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106124,"byte_end":106146,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106147,"byte_end":106150,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which refer to constant memory (e.g. created","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106151,"byte_end":106227,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ via `Bytes::from_static()`) the cloning implementation will be a no-op.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106228,"byte_end":106303,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106304,"byte_end":106307,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which point to a reference counted shared storage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106308,"byte_end":106389,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ (e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106390,"byte_end":106462,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ reference count.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106463,"byte_end":106483,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106484,"byte_end":106487,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Due to this mechanism, multiple `Bytes` instances may point to the same","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106488,"byte_end":106563,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ shared memory region.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106564,"byte_end":106589,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/ Each `Bytes` instance can point to different sections within that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106590,"byte_end":106659,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ memory region, and `Bytes` instances may or may not have overlapping views","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106660,"byte_end":106738,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ into the memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106739,"byte_end":106759,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106760,"byte_end":106763,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The following diagram visualizes a scenario where 2 `Bytes` instances make","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106764,"byte_end":106842,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ use of an `Arc`-based backing storage, and provide access to different views:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106843,"byte_end":106924,"line_start":83,"line_end":83,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106925,"byte_end":106928,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106929,"byte_end":106940,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106941,"byte_end":106944,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/    Arc ptrs                   ┌─────────┐","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":106945,"byte_end":107012,"line_start":87,"line_end":87,"column_start":1,"column_end":46}},{"value":"/    ________________________ / │ Bytes 2 │","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107013,"byte_end":107062,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/   /                           └─────────┘","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107063,"byte_end":107130,"line_start":89,"line_end":89,"column_start":1,"column_end":46}},{"value":"/  /          ┌───────────┐     |         |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107131,"byte_end":107202,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/ |_________/ │  Bytes 1  │     |         |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107203,"byte_end":107252,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/ |           └───────────┘     |         |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107253,"byte_end":107324,"line_start":92,"line_end":92,"column_start":1,"column_end":46}},{"value":"/ |           |           | ___/ data     | tail","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107325,"byte_end":107375,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ |      data |      tail |/              |","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107376,"byte_end":107421,"line_start":94,"line_end":94,"column_start":1,"column_end":46}},{"value":"/ v           v           v               v","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107422,"byte_end":107467,"line_start":95,"line_end":95,"column_start":1,"column_end":46}},{"value":"/ ┌─────┬─────┬───────────┬───────────────┬─────┐","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107468,"byte_end":107613,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/ │ Arc │     │           │               │     │","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107614,"byte_end":107677,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/ └─────┴─────┴───────────┴───────────────┴─────┘","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107678,"byte_end":107823,"line_start":98,"line_end":98,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":107824,"byte_end":107831,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108684,"byte_end":108687,"line_start":134,"line_end":134,"column_start":18,"column_end":21},"name":"new","qualname":"<Bytes>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"/ Creates a new empty `Bytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108345,"byte_end":108377,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108382,"byte_end":108385,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This will not allocate and the returned `Bytes` handle will be empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108390,"byte_end":108463,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108468,"byte_end":108471,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108476,"byte_end":108490,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108495,"byte_end":108498,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108503,"byte_end":108510,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108515,"byte_end":108536,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108541,"byte_end":108544,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108549,"byte_end":108574,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&b[..], b\"\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108579,"byte_end":108607,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108612,"byte_end":108619,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108624,"byte_end":108633,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108638,"byte_end":108666,"line_start":133,"line_end":133,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109422,"byte_end":109433,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"const fn from_static(&'static [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"/ Creates a new `Bytes` from a static slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109013,"byte_end":109059,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109064,"byte_end":109067,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The returned `Bytes` will point directly to the static slice. There is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109072,"byte_end":109146,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ no allocating or copying.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109151,"byte_end":109180,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109185,"byte_end":109188,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109193,"byte_end":109207,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109212,"byte_end":109215,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109220,"byte_end":109227,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109232,"byte_end":109253,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109258,"byte_end":109261,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from_static(b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109266,"byte_end":109307,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109312,"byte_end":109345,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109350,"byte_end":109357,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109362,"byte_end":109371,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109376,"byte_end":109404,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110178,"byte_end":110181,"line_start":192,"line_end":192,"column_start":18,"column_end":21},"name":"len","qualname":"<Bytes>::len","value":"const fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `Bytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109919,"byte_end":109977,"line_start":181,"line_end":181,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109982,"byte_end":109985,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":109990,"byte_end":110004,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110009,"byte_end":110012,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110017,"byte_end":110024,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110029,"byte_end":110050,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110055,"byte_end":110058,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from(&b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110063,"byte_end":110102,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110107,"byte_end":110134,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110139,"byte_end":110146,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110151,"byte_end":110160,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110464,"byte_end":110472,"line_start":207,"line_end":207,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"const fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `Bytes` has a length of 0.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110228,"byte_end":110278,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110283,"byte_end":110286,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110291,"byte_end":110305,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110310,"byte_end":110313,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110318,"byte_end":110325,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110330,"byte_end":110351,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110356,"byte_end":110359,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110364,"byte_end":110389,"line_start":203,"line_end":203,"column_start":5,"column_end":30}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110394,"byte_end":110420,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110425,"byte_end":110432,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110437,"byte_end":110446,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110590,"byte_end":110605,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"fn copy_from_slice<'_>(&'_ [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[{"value":"/ Creates `Bytes` instance from slice, by copying it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110523,"byte_end":110578,"line_start":211,"line_end":211,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111265,"byte_end":111270,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"fn slice<'_, impl RangeBounds<usize>>(&'_ Self, impl RangeBounds<usize>)\n-> Self where impl RangeBounds<usize>: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[{"value":"/ Returns a slice of self for the provided range.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110669,"byte_end":110720,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110725,"byte_end":110728,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This will increment the reference count for the underlying memory and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110733,"byte_end":110806,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ return a new `Bytes` handle set to the slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110811,"byte_end":110860,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110865,"byte_end":110868,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110873,"byte_end":110902,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110907,"byte_end":110910,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110915,"byte_end":110929,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110934,"byte_end":110937,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110942,"byte_end":110949,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110954,"byte_end":110975,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110980,"byte_end":110983,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":110988,"byte_end":111033,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/ let b = a.slice(2..5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111038,"byte_end":111064,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111069,"byte_end":111072,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"llo\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111077,"byte_end":111108,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111113,"byte_end":111120,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111125,"byte_end":111128,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111133,"byte_end":111145,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111150,"byte_end":111153,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Requires that `begin <= end` and `end <= self.len()`, otherwise slicing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111158,"byte_end":111233,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ will panic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":111238,"byte_end":111253,"line_start":237,"line_end":237,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113197,"byte_end":113206,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"fn slice_ref<'_, '_>(&'_ Self, &'_ [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[{"value":"/ Returns a slice of self that is equivalent to the given `subset`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112275,"byte_end":112344,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112349,"byte_end":112352,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ When processing a `Bytes` buffer with other tools, one often gets a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112357,"byte_end":112428,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ `&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112433,"byte_end":112506,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ This function turns that `&[u8]` into another `Bytes`, as if one had","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112511,"byte_end":112583,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ called `self.slice()` with the offsets that correspond to `subset`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112588,"byte_end":112659,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112664,"byte_end":112667,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112672,"byte_end":112701,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112706,"byte_end":112709,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112714,"byte_end":112728,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112733,"byte_end":112736,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112741,"byte_end":112748,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112753,"byte_end":112774,"line_start":292,"line_end":292,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112779,"byte_end":112782,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let bytes = Bytes::from(&b\"012345678\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112787,"byte_end":112834,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/ let as_slice = bytes.as_ref();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112839,"byte_end":112873,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ let subset = &as_slice[2..6];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112878,"byte_end":112911,"line_start":296,"line_end":296,"column_start":5,"column_end":38}},{"value":"/ let subslice = bytes.slice_ref(&subset);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112916,"byte_end":112960,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&subslice[..], b\"2345\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":112965,"byte_end":113004,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113009,"byte_end":113016,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113021,"byte_end":113024,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113029,"byte_end":113041,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113046,"byte_end":113049,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Requires that the given `sub` slice is in fact contained within the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113054,"byte_end":113125,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ `Bytes` buffer; otherwise this function will panic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":113130,"byte_end":113185,"line_start":304,"line_end":304,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114888,"byte_end":114897,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"fn split_off<'_>(&'_ mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114179,"byte_end":114228,"line_start":338,"line_end":338,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114233,"byte_end":114236,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `Bytes`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114241,"byte_end":114316,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114321,"byte_end":114355,"line_start":341,"line_end":341,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114360,"byte_end":114363,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114368,"byte_end":114443,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114448,"byte_end":114471,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114476,"byte_end":114479,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114484,"byte_end":114498,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114503,"byte_end":114506,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114511,"byte_end":114518,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114523,"byte_end":114544,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114549,"byte_end":114552,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114557,"byte_end":114606,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_off(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114611,"byte_end":114638,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114643,"byte_end":114646,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114651,"byte_end":114684,"line_start":354,"line_end":354,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114689,"byte_end":114723,"line_start":355,"line_end":355,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114728,"byte_end":114735,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114740,"byte_end":114743,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114748,"byte_end":114760,"line_start":358,"line_end":358,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114765,"byte_end":114768,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114773,"byte_end":114798,"line_start":360,"line_end":360,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":114803,"byte_end":114876,"line_start":361,"line_end":361,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116071,"byte_end":116079,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"fn split_to<'_>(&'_ mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115364,"byte_end":115413,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115418,"byte_end":115421,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115426,"byte_end":115495,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ `Bytes` contains elements `[0, at)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115500,"byte_end":115540,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115545,"byte_end":115548,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115553,"byte_end":115628,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115633,"byte_end":115656,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115661,"byte_end":115664,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115669,"byte_end":115683,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115688,"byte_end":115691,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115696,"byte_end":115703,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115708,"byte_end":115729,"line_start":398,"line_end":398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115734,"byte_end":115737,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115742,"byte_end":115791,"line_start":400,"line_end":400,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_to(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115796,"byte_end":115822,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115827,"byte_end":115830,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\" world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115835,"byte_end":115869,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115874,"byte_end":115907,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115912,"byte_end":115919,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115924,"byte_end":115927,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115932,"byte_end":115944,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115949,"byte_end":115952,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115957,"byte_end":115982,"line_start":409,"line_end":409,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":115987,"byte_end":116059,"line_start":410,"line_end":410,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117156,"byte_end":117164,"line_start":456,"line_end":456,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"fn truncate<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116544,"byte_end":116615,"line_start":435,"line_end":435,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116620,"byte_end":116629,"line_start":436,"line_end":436,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116634,"byte_end":116637,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116642,"byte_end":116711,"line_start":438,"line_end":438,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116716,"byte_end":116727,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116732,"byte_end":116735,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116740,"byte_end":116812,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116817,"byte_end":116868,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116873,"byte_end":116876,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116881,"byte_end":116895,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116900,"byte_end":116903,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116908,"byte_end":116915,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116920,"byte_end":116941,"line_start":447,"line_end":447,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116946,"byte_end":116949,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":116954,"byte_end":117005,"line_start":449,"line_end":449,"column_start":5,"column_end":56}},{"value":"/ buf.truncate(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117010,"byte_end":117030,"line_start":450,"line_end":450,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117035,"byte_end":117069,"line_start":451,"line_end":451,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117074,"byte_end":117081,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117086,"byte_end":117089,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117094,"byte_end":117130,"line_start":454,"line_end":454,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117135,"byte_end":117144,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117994,"byte_end":117999,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117724,"byte_end":117765,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117770,"byte_end":117773,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117778,"byte_end":117792,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117797,"byte_end":117800,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117805,"byte_end":117812,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117817,"byte_end":117838,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117843,"byte_end":117846,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117851,"byte_end":117902,"line_start":478,"line_end":478,"column_start":5,"column_end":56}},{"value":"/ buf.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117907,"byte_end":117923,"line_start":479,"line_end":479,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117928,"byte_end":117956,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117961,"byte_end":117968,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":117973,"byte_end":117982,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118873,"byte_end":118877,"line_start":524,"line_end":524,"column_start":8,"column_end":12},"name":"drop","qualname":"<Bytes as core::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":1,"index":3510},"children":[],"decl_id":{"krate":1,"index":3511},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118856,"byte_end":118865,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119018,"byte_end":119023,"line_start":531,"line_end":531,"column_start":8,"column_end":13},"name":"clone","qualname":"<Bytes as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Bytes","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119001,"byte_end":119010,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119164,"byte_end":119173,"line_start":538,"line_end":538,"column_start":8,"column_end":17},"name":"remaining","qualname":"<Bytes as buf::buf_impl::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119147,"byte_end":119156,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119239,"byte_end":119244,"line_start":543,"line_end":543,"column_start":8,"column_end":13},"name":"chunk","qualname":"<Bytes as buf::buf_impl::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119222,"byte_end":119231,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119315,"byte_end":119322,"line_start":548,"line_end":548,"column_start":8,"column_end":15},"name":"advance","qualname":"<Bytes as buf::buf_impl::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119298,"byte_end":119307,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119584,"byte_end":119597,"line_start":561,"line_end":561,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"<Bytes as buf::buf_impl::Buf>::copy_to_bytes","value":"fn copy_to_bytes<'_>(&'_ mut Self, usize) -> crate::Bytes","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":75},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119920,"byte_end":119925,"line_start":576,"line_end":576,"column_start":8,"column_end":13},"name":"deref","qualname":"<Bytes as core::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":3486},"children":[],"decl_id":{"krate":1,"index":3488},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119903,"byte_end":119912,"line_start":575,"line_end":575,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120027,"byte_end":120033,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Bytes as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120010,"byte_end":120019,"line_start":582,"line_end":582,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120120,"byte_end":120124,"line_start":589,"line_end":589,"column_start":8,"column_end":12},"name":"hash","qualname":"<Bytes as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: hash::Hasher","parent":{"krate":1,"index":10533},"children":[],"decl_id":{"krate":1,"index":10534},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120274,"byte_end":120280,"line_start":598,"line_end":598,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Bytes as core::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":2857},"children":[],"decl_id":{"krate":1,"index":2859},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120427,"byte_end":120436,"line_start":607,"line_end":607,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Bytes as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120617,"byte_end":120626,"line_start":616,"line_end":616,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Bytes as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120734,"byte_end":120743,"line_start":622,"line_end":622,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Bytes as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = u8>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120892,"byte_end":120894,"line_start":630,"line_end":630,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121015,"byte_end":121026,"line_start":636,"line_end":636,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Bytes as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121167,"byte_end":121170,"line_start":642,"line_end":642,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Bytes as core::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Bytes) -> cmp::Ordering","parent":{"krate":1,"index":2951},"children":[],"decl_id":{"krate":1,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121329,"byte_end":121331,"line_start":650,"line_end":650,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ [u8]) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121446,"byte_end":121457,"line_start":656,"line_end":656,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Bytes as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ [u8]) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121598,"byte_end":121600,"line_start":662,"line_end":662,"column_start":8,"column_end":10},"name":"eq","qualname":"<[u8] as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121707,"byte_end":121718,"line_start":668,"line_end":668,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<[u8] as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121877,"byte_end":121879,"line_start":674,"line_end":674,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ str) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122003,"byte_end":122014,"line_start":680,"line_end":680,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Bytes as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ str) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122164,"byte_end":122166,"line_start":686,"line_end":686,"column_start":8,"column_end":10},"name":"eq","qualname":"<str as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122272,"byte_end":122283,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<str as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122457,"byte_end":122459,"line_start":698,"line_end":698,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Vec<u8>) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122574,"byte_end":122585,"line_start":704,"line_end":704,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Bytes as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Vec<u8>) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122737,"byte_end":122739,"line_start":710,"line_end":710,"column_start":8,"column_end":10},"name":"eq","qualname":"<Vec<u8> as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122849,"byte_end":122860,"line_start":716,"line_end":716,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Vec<u8> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123022,"byte_end":123024,"line_start":722,"line_end":722,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ String) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123137,"byte_end":123148,"line_start":728,"line_end":728,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Bytes as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ String) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123304,"byte_end":123306,"line_start":734,"line_end":734,"column_start":8,"column_end":10},"name":"eq","qualname":"<String as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123415,"byte_end":123426,"line_start":740,"line_end":740,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<String as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123598,"byte_end":123600,"line_start":746,"line_end":746,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [u8] as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123708,"byte_end":123719,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<&'_ [u8] as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123879,"byte_end":123881,"line_start":758,"line_end":758,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ str as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123988,"byte_end":123999,"line_start":764,"line_end":764,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<&'_ str as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Bytes) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124217,"byte_end":124219,"line_start":773,"line_end":773,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ &'a T) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124375,"byte_end":124386,"line_start":782,"line_end":782,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Bytes as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ &'a T) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124540,"byte_end":124547,"line_start":791,"line_end":791,"column_start":8,"column_end":15},"name":"default","qualname":"<Bytes as core::default::Default>::default","value":"fn default() -> Bytes","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124523,"byte_end":124532,"line_start":790,"line_end":790,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124635,"byte_end":124639,"line_start":797,"line_end":797,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as core::convert::From>::from","value":"fn from(&'static [u8]) -> Bytes","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124759,"byte_end":124763,"line_start":803,"line_end":803,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as core::convert::From>::from","value":"fn from(&'static str) -> Bytes","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124888,"byte_end":124892,"line_start":809,"line_end":809,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as core::convert::From>::from","value":"fn from(Vec<u8>) -> Bytes","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":125822,"byte_end":125826,"line_start":844,"line_end":844,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as core::convert::From>::from","value":"fn from(Box<[u8]>) -> Bytes","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":126700,"byte_end":126704,"line_start":875,"line_end":875,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as core::convert::From>::from","value":"fn from(String) -> Bytes","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":126810,"byte_end":126814,"line_start":881,"line_end":881,"column_start":8,"column_end":12},"name":"from","qualname":"<Vec<u8> as core::convert::From>::from","value":"fn from(Bytes) -> Vec<u8>","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141483,"byte_end":141491,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A unique reference to a contiguous slice of memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140253,"byte_end":140308,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140309,"byte_end":140312,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` represents a unique view into a potentially shared memory region.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140313,"byte_end":140393,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ Given the uniqueness guarantee, owners of `BytesMut` handles are able to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140394,"byte_end":140470,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ mutate the memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140471,"byte_end":140493,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140494,"byte_end":140497,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140498,"byte_end":140577,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ into `buf`, a slice length, and a guarantee that no other `BytesMut` for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140578,"byte_end":140658,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ same `buf` overlaps with its slice. That guarantee means that a write lock","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140659,"byte_end":140737,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ is not required.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140738,"byte_end":140758,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140759,"byte_end":140762,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Growth","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140763,"byte_end":140775,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140776,"byte_end":140779,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `BytesMut`'s `BufMut` implementation will implicitly grow its buffer as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140780,"byte_end":140855,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ necessary. However, explicitly reserving the required space up-front before","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140856,"byte_end":140935,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ a series of inserts will be more efficient.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140936,"byte_end":140983,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140984,"byte_end":140987,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":140988,"byte_end":141002,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141003,"byte_end":141006,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141007,"byte_end":141014,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141015,"byte_end":141049,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141050,"byte_end":141053,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141054,"byte_end":141100,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141101,"byte_end":141104,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141105,"byte_end":141126,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ buf.put_u8(b'e');","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141127,"byte_end":141148,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/ buf.put(&b\"llo\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141149,"byte_end":141174,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141175,"byte_end":141178,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buf[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141179,"byte_end":141214,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141215,"byte_end":141218,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Freeze the buffer so that it can be shared","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141219,"byte_end":141268,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/ let a = buf.freeze();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141269,"byte_end":141294,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141295,"byte_end":141298,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // This does not allocate, instead `b` points to the same memory.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141299,"byte_end":141368,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/ let b = a.clone();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141369,"byte_end":141391,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141392,"byte_end":141395,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141396,"byte_end":141429,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141430,"byte_end":141463,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":141464,"byte_end":141471,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144215,"byte_end":144228,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"fn with_capacity(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with the specified capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143495,"byte_end":143552,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143557,"byte_end":143560,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The returned `BytesMut` will be able to hold at least `capacity` bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143565,"byte_end":143639,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ without reallocating.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143644,"byte_end":143669,"line_start":122,"line_end":122,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143674,"byte_end":143677,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the length","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143682,"byte_end":143756,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ of the returned `BytesMut`, but only the capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143761,"byte_end":143815,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143820,"byte_end":143823,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143828,"byte_end":143842,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143847,"byte_end":143850,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143855,"byte_end":143862,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143867,"byte_end":143901,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143906,"byte_end":143909,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::with_capacity(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143914,"byte_end":143962,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143967,"byte_end":143970,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // `bytes` contains no data, even though there is capacity","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143975,"byte_end":144037,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(bytes.len(), 0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144042,"byte_end":144073,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144078,"byte_end":144081,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ bytes.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144086,"byte_end":144121,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144126,"byte_end":144129,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&bytes[..], b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144134,"byte_end":144177,"line_start":139,"line_end":139,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144182,"byte_end":144189,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144194,"byte_end":144203,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144827,"byte_end":144830,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"fn new() -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with default capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144328,"byte_end":144379,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144384,"byte_end":144387,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Resulting object has length 0 and unspecified capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144392,"byte_end":144451,"line_start":148,"line_end":148,"column_start":5,"column_end":64}},{"value":"/ This function does not allocate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144456,"byte_end":144492,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144497,"byte_end":144500,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144505,"byte_end":144519,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144524,"byte_end":144527,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144532,"byte_end":144539,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144544,"byte_end":144578,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144583,"byte_end":144586,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144591,"byte_end":144627,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144632,"byte_end":144635,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, bytes.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144640,"byte_end":144671,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144676,"byte_end":144679,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ bytes.reserve(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144684,"byte_end":144705,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/ bytes.put_slice(b\"xy\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144710,"byte_end":144737,"line_start":161,"line_end":161,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144742,"byte_end":144745,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"xy\"[..], &bytes[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144750,"byte_end":144789,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144794,"byte_end":144801,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144806,"byte_end":144815,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145155,"byte_end":145158,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144893,"byte_end":144954,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144959,"byte_end":144962,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144967,"byte_end":144981,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144986,"byte_end":144989,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":144994,"byte_end":145001,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145006,"byte_end":145030,"line_start":175,"line_end":175,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145035,"byte_end":145038,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145043,"byte_end":145085,"line_start":177,"line_end":177,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145090,"byte_end":145117,"line_start":178,"line_end":178,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145122,"byte_end":145129,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145134,"byte_end":145143,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145456,"byte_end":145464,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `BytesMut` has a length of 0.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145205,"byte_end":145258,"line_start":185,"line_end":185,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145263,"byte_end":145266,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145271,"byte_end":145285,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145290,"byte_end":145293,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145298,"byte_end":145305,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145310,"byte_end":145334,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145339,"byte_end":145342,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145347,"byte_end":145387,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145392,"byte_end":145418,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145423,"byte_end":145430,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145435,"byte_end":145444,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145797,"byte_end":145805,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the `BytesMut` can hold without reallocating.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145515,"byte_end":145592,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145597,"byte_end":145600,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145605,"byte_end":145619,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145624,"byte_end":145627,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145632,"byte_end":145639,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145644,"byte_end":145668,"line_start":205,"line_end":205,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145673,"byte_end":145676,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145681,"byte_end":145721,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b.capacity(), 64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145726,"byte_end":145759,"line_start":208,"line_end":208,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145764,"byte_end":145771,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145776,"byte_end":145785,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146621,"byte_end":146627,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"fn freeze(Self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"/ Converts `self` into an immutable `Bytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145852,"byte_end":145898,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145903,"byte_end":145906,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The conversion is zero cost and is used to indicate that the slice","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145911,"byte_end":145981,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ referenced by the handle will no longer be mutated. Once the conversion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":145986,"byte_end":146061,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ is done, the handle can be cloned and shared across threads.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146066,"byte_end":146130,"line_start":219,"line_end":219,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146135,"byte_end":146138,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146143,"byte_end":146157,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146162,"byte_end":146165,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146170,"byte_end":146177,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146182,"byte_end":146216,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146221,"byte_end":146241,"line_start":225,"line_end":225,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146246,"byte_end":146249,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::with_capacity(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146254,"byte_end":146298,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/ b.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146303,"byte_end":146334,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ let b1 = b.freeze();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146339,"byte_end":146363,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/ let b2 = b1.clone();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146368,"byte_end":146392,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146397,"byte_end":146400,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let th = thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146405,"byte_end":146441,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(&b1[..], b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146446,"byte_end":146490,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146495,"byte_end":146502,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146507,"byte_end":146510,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b2[..], b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146515,"byte_end":146555,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ th.join().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146560,"byte_end":146583,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146588,"byte_end":146595,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":146600,"byte_end":146609,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147683,"byte_end":147689,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"zeroed","qualname":"<BytesMut>::zeroed","value":"fn zeroed(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut`, which is initialized with zero.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut`, which is initialized with zero.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147369,"byte_end":147430,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147435,"byte_end":147438,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147443,"byte_end":147457,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147462,"byte_end":147465,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147470,"byte_end":147477,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147482,"byte_end":147506,"line_start":267,"line_end":267,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147511,"byte_end":147514,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let zeros = BytesMut::zeroed(42);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147519,"byte_end":147556,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147561,"byte_end":147564,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zeros.len(), 42);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147569,"byte_end":147601,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ zeros.into_iter().for_each(|x| assert_eq!(x, 0));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147606,"byte_end":147659,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147664,"byte_end":147671,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148553,"byte_end":148562,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"fn split_off<'_>(&'_ mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147768,"byte_end":147817,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147822,"byte_end":147825,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147830,"byte_end":147897,"line_start":280,"line_end":280,"column_start":5,"column_end":72}},{"value":"/ `BytesMut` contains elements `[at, capacity)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147902,"byte_end":147952,"line_start":281,"line_end":281,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147957,"byte_end":147960,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":147965,"byte_end":148036,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ and sets a few indices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148041,"byte_end":148068,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148073,"byte_end":148076,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148081,"byte_end":148095,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148100,"byte_end":148103,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148108,"byte_end":148115,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148120,"byte_end":148144,"line_start":289,"line_end":289,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148149,"byte_end":148152,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148157,"byte_end":148209,"line_start":291,"line_end":291,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_off(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148214,"byte_end":148245,"line_start":292,"line_end":292,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148250,"byte_end":148253,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'j';","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148258,"byte_end":148274,"line_start":294,"line_end":294,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'!';","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148279,"byte_end":148295,"line_start":295,"line_end":295,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148300,"byte_end":148303,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"jello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148308,"byte_end":148341,"line_start":297,"line_end":297,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\"!world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148346,"byte_end":148380,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148385,"byte_end":148392,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148397,"byte_end":148400,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148405,"byte_end":148417,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148422,"byte_end":148425,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > capacity`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148430,"byte_end":148460,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148465,"byte_end":148541,"line_start":304,"line_end":304,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149805,"byte_end":149810,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"fn split<'_>(&'_ mut Self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"/ Removes the bytes from the current view, returning them in a new","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":148929,"byte_end":148997,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ `BytesMut` handle.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149002,"byte_end":149024,"line_start":321,"line_end":321,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149029,"byte_end":149032,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will be empty, but will retain any additional","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149037,"byte_end":149105,"line_start":323,"line_end":323,"column_start":5,"column_end":73}},{"value":"/ capacity that it had before the operation. This is identical to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149110,"byte_end":149177,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/ `self.split_to(self.len())`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149182,"byte_end":149214,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149219,"byte_end":149222,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149227,"byte_end":149302,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149307,"byte_end":149330,"line_start":328,"line_end":328,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149335,"byte_end":149338,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149343,"byte_end":149357,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149362,"byte_end":149365,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149370,"byte_end":149377,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149382,"byte_end":149416,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149421,"byte_end":149424,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149429,"byte_end":149477,"line_start":335,"line_end":335,"column_start":5,"column_end":53}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149482,"byte_end":149515,"line_start":336,"line_end":336,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149520,"byte_end":149523,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let other = buf.split();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149528,"byte_end":149556,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149561,"byte_end":149564,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149569,"byte_end":149597,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(1013, buf.capacity());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149602,"byte_end":149639,"line_start":341,"line_end":341,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149644,"byte_end":149647,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(other, b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149652,"byte_end":149694,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149699,"byte_end":149706,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149711,"byte_end":149793,"line_start":345,"line_end":345,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150678,"byte_end":150686,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"fn split_to<'_>(&'_ mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149904,"byte_end":149954,"line_start":351,"line_end":351,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149959,"byte_end":149962,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":149967,"byte_end":150047,"line_start":353,"line_end":353,"column_start":5,"column_end":85}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150052,"byte_end":150084,"line_start":354,"line_end":354,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150089,"byte_end":150092,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150097,"byte_end":150172,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150177,"byte_end":150200,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150205,"byte_end":150208,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150213,"byte_end":150227,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150232,"byte_end":150235,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150240,"byte_end":150247,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150252,"byte_end":150276,"line_start":362,"line_end":362,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150281,"byte_end":150284,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150289,"byte_end":150341,"line_start":364,"line_end":364,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_to(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150346,"byte_end":150376,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150381,"byte_end":150384,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'!';","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150389,"byte_end":150405,"line_start":367,"line_end":367,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'j';","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150410,"byte_end":150426,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150431,"byte_end":150434,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"!world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150439,"byte_end":150473,"line_start":370,"line_end":370,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"jello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150478,"byte_end":150511,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150516,"byte_end":150523,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150528,"byte_end":150531,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150536,"byte_end":150548,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150553,"byte_end":150556,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150561,"byte_end":150586,"line_start":376,"line_end":376,"column_start":5,"column_end":30}},{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":150591,"byte_end":150666,"line_start":377,"line_end":377,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151706,"byte_end":151714,"line_start":416,"line_end":416,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"fn truncate<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151043,"byte_end":151114,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151119,"byte_end":151128,"line_start":395,"line_end":395,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151133,"byte_end":151136,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151141,"byte_end":151210,"line_start":397,"line_end":397,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151215,"byte_end":151226,"line_start":398,"line_end":398,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151231,"byte_end":151234,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Existing underlying capacity is preserved.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151239,"byte_end":151285,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151290,"byte_end":151293,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151298,"byte_end":151370,"line_start":402,"line_end":402,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151375,"byte_end":151426,"line_start":403,"line_end":403,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151431,"byte_end":151434,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151439,"byte_end":151453,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151458,"byte_end":151461,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151466,"byte_end":151473,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151478,"byte_end":151502,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151507,"byte_end":151510,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151515,"byte_end":151569,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ buf.truncate(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151574,"byte_end":151594,"line_start":411,"line_end":411,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151599,"byte_end":151633,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151638,"byte_end":151645,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151650,"byte_end":151653,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151658,"byte_end":151694,"line_start":415,"line_end":415,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152156,"byte_end":152161,"line_start":435,"line_end":435,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data. Existing capacity is preserved.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data. Existing capacity is preserved.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151862,"byte_end":151935,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151940,"byte_end":151943,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151948,"byte_end":151962,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151967,"byte_end":151970,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151975,"byte_end":151982,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":151987,"byte_end":152011,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152016,"byte_end":152019,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152024,"byte_end":152078,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/ buf.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152083,"byte_end":152099,"line_start":432,"line_end":432,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152104,"byte_end":152132,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152137,"byte_end":152144,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152886,"byte_end":152892,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"fn resize<'_>(&'_ mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the buffer so that `len` is equal to `new_len`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152212,"byte_end":152271,"line_start":439,"line_end":439,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152276,"byte_end":152279,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the buffer is extended by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152284,"byte_end":152353,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/ difference with each additional byte set to `value`. If `new_len` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152358,"byte_end":152430,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/ less than `len`, the buffer is simply truncated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152435,"byte_end":152487,"line_start":443,"line_end":443,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152492,"byte_end":152495,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152500,"byte_end":152514,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152519,"byte_end":152522,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152527,"byte_end":152534,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152539,"byte_end":152563,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152568,"byte_end":152571,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152576,"byte_end":152610,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152615,"byte_end":152618,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ buf.resize(3, 0x1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152623,"byte_end":152646,"line_start":452,"line_end":452,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x1]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152651,"byte_end":152694,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152699,"byte_end":152702,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ buf.resize(2, 0x2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152707,"byte_end":152730,"line_start":455,"line_end":455,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152735,"byte_end":152773,"line_start":456,"line_end":456,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152778,"byte_end":152781,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ buf.resize(4, 0x3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152786,"byte_end":152809,"line_start":458,"line_end":458,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152814,"byte_end":152862,"line_start":459,"line_end":459,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":152867,"byte_end":152874,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153965,"byte_end":153972,"line_start":502,"line_end":502,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"unsafe fn set_len<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[{"value":"/ Sets the length of the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153335,"byte_end":153369,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153374,"byte_end":153377,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the buffer without actually","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153382,"byte_end":153450,"line_start":478,"line_end":478,"column_start":5,"column_end":73}},{"value":"/ modifying the data, so it is up to the caller to ensure that the data","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153455,"byte_end":153528,"line_start":479,"line_end":479,"column_start":5,"column_end":78}},{"value":"/ has been initialized.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153533,"byte_end":153558,"line_start":480,"line_end":480,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153563,"byte_end":153566,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153571,"byte_end":153585,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153590,"byte_end":153593,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153598,"byte_end":153605,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153610,"byte_end":153634,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153639,"byte_end":153642,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153647,"byte_end":153699,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153704,"byte_end":153707,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153712,"byte_end":153724,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/     b.set_len(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153729,"byte_end":153750,"line_start":490,"line_end":490,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153755,"byte_end":153760,"line_start":491,"line_end":491,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153765,"byte_end":153768,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153773,"byte_end":153806,"line_start":493,"line_end":493,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153811,"byte_end":153814,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153819,"byte_end":153831,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/     b.set_len(11);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153836,"byte_end":153858,"line_start":496,"line_end":496,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153863,"byte_end":153868,"line_start":497,"line_end":497,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153873,"byte_end":153876,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153881,"byte_end":153920,"line_start":499,"line_end":499,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153925,"byte_end":153932,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":153937,"byte_end":153946,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156375,"byte_end":156382,"line_start":566,"line_end":566,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"fn reserve<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154098,"byte_end":154171,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ into the given `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154176,"byte_end":154206,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154211,"byte_end":154214,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154219,"byte_end":154294,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154299,"byte_end":154366,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154371,"byte_end":154374,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Before allocating new buffer space, the function will attempt to reclaim","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154379,"byte_end":154455,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ space in the existing buffer. If the current handle references a view","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154460,"byte_end":154533,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ into a larger original buffer, and all other handles referencing part","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154538,"byte_end":154611,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ of the same original buffer have been dropped, then the current view","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154616,"byte_end":154688,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ can be copied/shifted to the front of the buffer and the handle can take","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154693,"byte_end":154769,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ ownership of the full buffer, provided that the full buffer is large","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154774,"byte_end":154846,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ enough to fit the requested additional capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154851,"byte_end":154903,"line_start":519,"line_end":519,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154908,"byte_end":154911,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This optimization will only happen if shifting the data from the current","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154916,"byte_end":154992,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ view to the front of the buffer is not too expensive in terms of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":154997,"byte_end":155069,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ (amortized) time required. The precise condition is subject to change;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155074,"byte_end":155148,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ as of now, the length of the data being shifted needs to be at least as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155153,"byte_end":155228,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ large as the distance that it's shifted by. If the current view is empty","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155233,"byte_end":155309,"line_start":525,"line_end":525,"column_start":5,"column_end":81}},{"value":"/ and the original buffer is large enough to fit the requested additional","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155314,"byte_end":155389,"line_start":526,"line_end":526,"column_start":5,"column_end":80}},{"value":"/ capacity, then reallocations will never happen.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155394,"byte_end":155445,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155450,"byte_end":155453,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155458,"byte_end":155472,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155477,"byte_end":155480,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ In the following example, a new buffer is allocated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155485,"byte_end":155541,"line_start":531,"line_end":531,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155546,"byte_end":155549,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155554,"byte_end":155561,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155566,"byte_end":155590,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155595,"byte_end":155598,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155603,"byte_end":155651,"line_start":536,"line_end":536,"column_start":5,"column_end":53}},{"value":"/ buf.reserve(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155656,"byte_end":155676,"line_start":537,"line_end":537,"column_start":5,"column_end":25}},{"value":"/ assert!(buf.capacity() >= 69);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155681,"byte_end":155715,"line_start":538,"line_end":538,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155720,"byte_end":155727,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155732,"byte_end":155735,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ In the following example, the existing buffer is reclaimed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155740,"byte_end":155803,"line_start":541,"line_end":541,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155808,"byte_end":155811,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155816,"byte_end":155823,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155828,"byte_end":155862,"line_start":544,"line_end":544,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155867,"byte_end":155870,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155875,"byte_end":155922,"line_start":546,"line_end":546,"column_start":5,"column_end":52}},{"value":"/ buf.put(&[0; 64][..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155927,"byte_end":155953,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155958,"byte_end":155961,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let ptr = buf.as_ptr();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155966,"byte_end":155993,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/ let other = buf.split();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":155998,"byte_end":156026,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156031,"byte_end":156034,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156039,"byte_end":156067,"line_start":552,"line_end":552,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf.capacity(), 64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156072,"byte_end":156107,"line_start":553,"line_end":553,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156112,"byte_end":156115,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ drop(other);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156120,"byte_end":156136,"line_start":555,"line_end":555,"column_start":5,"column_end":21}},{"value":"/ buf.reserve(128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156141,"byte_end":156162,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156167,"byte_end":156170,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.capacity(), 128);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156175,"byte_end":156211,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf.as_ptr(), ptr);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156216,"byte_end":156250,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156255,"byte_end":156262,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156267,"byte_end":156270,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156275,"byte_end":156287,"line_start":562,"line_end":562,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156292,"byte_end":156295,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156300,"byte_end":156349,"line_start":564,"line_end":564,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":156354,"byte_end":156363,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164767,"byte_end":164784,"line_start":764,"line_end":764,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"fn extend_from_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this `BytesMut`.","sig":null,"attributes":[{"value":"/ Appends given bytes to this `BytesMut`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164325,"byte_end":164368,"line_start":748,"line_end":748,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164373,"byte_end":164376,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ If this `BytesMut` object does not have enough capacity, it is resized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164381,"byte_end":164455,"line_start":750,"line_end":750,"column_start":5,"column_end":79}},{"value":"/ first.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164460,"byte_end":164470,"line_start":751,"line_end":751,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164475,"byte_end":164478,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164483,"byte_end":164497,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164502,"byte_end":164505,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164510,"byte_end":164517,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164522,"byte_end":164546,"line_start":756,"line_end":756,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164551,"byte_end":164554,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164559,"byte_end":164604,"line_start":758,"line_end":758,"column_start":5,"column_end":50}},{"value":"/ buf.extend_from_slice(b\"aaabbb\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164609,"byte_end":164646,"line_start":759,"line_end":759,"column_start":5,"column_end":42}},{"value":"/ buf.extend_from_slice(b\"cccddd\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164651,"byte_end":164688,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164693,"byte_end":164696,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164701,"byte_end":164743,"line_start":762,"line_end":762,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":164748,"byte_end":164755,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":166069,"byte_end":166076,"line_start":805,"line_end":805,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"fn unsplit<'_>(&'_ mut Self, BytesMut)","parent":null,"children":[],"decl_id":null,"docs":" Absorbs a `BytesMut` that was previously split off.","sig":null,"attributes":[{"value":"/ Absorbs a `BytesMut` that was previously split off.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165184,"byte_end":165239,"line_start":781,"line_end":781,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165244,"byte_end":165247,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ If the two `BytesMut` objects were previously contiguous and not mutated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165252,"byte_end":165328,"line_start":783,"line_end":783,"column_start":5,"column_end":81}},{"value":"/ in a way that causes re-allocation i.e., if `other` was created by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165333,"byte_end":165403,"line_start":784,"line_end":784,"column_start":5,"column_end":75}},{"value":"/ calling `split_off` on this `BytesMut`, then this is an `O(1)` operation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165408,"byte_end":165484,"line_start":785,"line_end":785,"column_start":5,"column_end":81}},{"value":"/ that just decreases a reference count and sets a few indices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165489,"byte_end":165554,"line_start":786,"line_end":786,"column_start":5,"column_end":70}},{"value":"/ Otherwise this method degenerates to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165559,"byte_end":165599,"line_start":787,"line_end":787,"column_start":5,"column_end":45}},{"value":"/ `self.extend_from_slice(other.as_ref())`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165604,"byte_end":165649,"line_start":788,"line_end":788,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165654,"byte_end":165657,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165662,"byte_end":165676,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165681,"byte_end":165684,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165689,"byte_end":165696,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165701,"byte_end":165725,"line_start":793,"line_end":793,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165730,"byte_end":165733,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165738,"byte_end":165784,"line_start":795,"line_end":795,"column_start":5,"column_end":51}},{"value":"/ buf.extend_from_slice(b\"aaabbbcccddd\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165789,"byte_end":165832,"line_start":796,"line_end":796,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165837,"byte_end":165840,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let split = buf.split_off(6);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165845,"byte_end":165878,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b\"aaabbb\", &buf[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165883,"byte_end":165919,"line_start":799,"line_end":799,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"cccddd\", &split[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165924,"byte_end":165962,"line_start":800,"line_end":800,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165967,"byte_end":165970,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ buf.unsplit(split);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":165975,"byte_end":165998,"line_start":802,"line_end":802,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":166003,"byte_end":166045,"line_start":803,"line_end":803,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":166050,"byte_end":166057,"line_start":804,"line_end":804,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173182,"byte_end":173200,"line_start":1025,"line_end":1025,"column_start":12,"column_end":30},"name":"spare_capacity_mut","qualname":"<BytesMut>::spare_capacity_mut","value":"fn spare_capacity_mut<'_>(&'_ mut Self) -> &'_ mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.","sig":null,"attributes":[{"value":"/ Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172269,"byte_end":172356,"line_start":995,"line_end":995,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172361,"byte_end":172364,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The returned slice can be used to fill the buffer with data (e.g. by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172369,"byte_end":172441,"line_start":997,"line_end":997,"column_start":5,"column_end":77}},{"value":"/ reading from a file) before marking the data as initialized using the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172446,"byte_end":172519,"line_start":998,"line_end":998,"column_start":5,"column_end":78}},{"value":"/ [`set_len`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172524,"byte_end":172547,"line_start":999,"line_end":999,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172552,"byte_end":172555,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ [`set_len`]: BytesMut::set_len","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172560,"byte_end":172594,"line_start":1001,"line_end":1001,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172599,"byte_end":172602,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172607,"byte_end":172621,"line_start":1003,"line_end":1003,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172626,"byte_end":172629,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172634,"byte_end":172641,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172646,"byte_end":172670,"line_start":1006,"line_end":1006,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172675,"byte_end":172678,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ // Allocate buffer big enough for 10 bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172683,"byte_end":172730,"line_start":1008,"line_end":1008,"column_start":5,"column_end":52}},{"value":"/ let mut buf = BytesMut::with_capacity(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172735,"byte_end":172781,"line_start":1009,"line_end":1009,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172786,"byte_end":172789,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ // Fill in the first 3 elements.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172794,"byte_end":172830,"line_start":1011,"line_end":1011,"column_start":5,"column_end":41}},{"value":"/ let uninit = buf.spare_capacity_mut();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172835,"byte_end":172877,"line_start":1012,"line_end":1012,"column_start":5,"column_end":47}},{"value":"/ uninit[0].write(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172882,"byte_end":172905,"line_start":1013,"line_end":1013,"column_start":5,"column_end":28}},{"value":"/ uninit[1].write(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172910,"byte_end":172933,"line_start":1014,"line_end":1014,"column_start":5,"column_end":28}},{"value":"/ uninit[2].write(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172938,"byte_end":172961,"line_start":1015,"line_end":1015,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172966,"byte_end":172969,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ // Mark the first 3 bytes of the buffer as being initialized.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":172974,"byte_end":173039,"line_start":1017,"line_end":1017,"column_start":5,"column_end":70}},{"value":"/ unsafe {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173044,"byte_end":173056,"line_start":1018,"line_end":1018,"column_start":5,"column_end":17}},{"value":"/     buf.set_len(3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173061,"byte_end":173084,"line_start":1019,"line_end":1019,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173089,"byte_end":173094,"line_start":1020,"line_end":1020,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173099,"byte_end":173102,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173107,"byte_end":173144,"line_start":1022,"line_end":1022,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173149,"byte_end":173156,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173161,"byte_end":173170,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173462,"byte_end":173466,"line_start":1036,"line_end":1036,"column_start":8,"column_end":12},"name":"drop","qualname":"<BytesMut as core::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":1,"index":3510},"children":[],"decl_id":{"krate":1,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173913,"byte_end":173922,"line_start":1054,"line_end":1054,"column_start":8,"column_end":17},"name":"remaining","qualname":"<BytesMut as buf::buf_impl::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":32},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173896,"byte_end":173905,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173988,"byte_end":173993,"line_start":1059,"line_end":1059,"column_start":8,"column_end":13},"name":"chunk","qualname":"<BytesMut as buf::buf_impl::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173971,"byte_end":173980,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174064,"byte_end":174071,"line_start":1064,"line_end":1064,"column_start":8,"column_end":15},"name":"advance","qualname":"<BytesMut as buf::buf_impl::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174047,"byte_end":174056,"line_start":1063,"line_end":1063,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174344,"byte_end":174357,"line_start":1076,"line_end":1076,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"<BytesMut as buf::buf_impl::Buf>::copy_to_bytes","value":"fn copy_to_bytes<'_>(&'_ mut Self, usize) -> crate::Bytes","parent":{"krate":0,"index":31},"children":[],"decl_id":{"krate":0,"index":75},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174499,"byte_end":174512,"line_start":1083,"line_end":1083,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"<BytesMut as buf::buf_mut::BufMut>::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":127},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174482,"byte_end":174491,"line_start":1082,"line_end":1082,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174598,"byte_end":174609,"line_start":1088,"line_end":1088,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"<BytesMut as buf::buf_mut::BufMut>::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":128},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174574,"byte_end":174583,"line_start":1087,"line_end":1087,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174877,"byte_end":174886,"line_start":1100,"line_end":1100,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"<BytesMut as buf::buf_mut::BufMut>::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174860,"byte_end":174869,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175177,"byte_end":175180,"line_start":1110,"line_end":1110,"column_start":8,"column_end":11},"name":"put","qualname":"<BytesMut as buf::buf_mut::BufMut>::put","value":"fn put<T, '_>(&'_ mut Self, T) where T: crate::Buf, Self: Sized","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175445,"byte_end":175454,"line_start":1122,"line_end":1122,"column_start":8,"column_end":17},"name":"put_slice","qualname":"<BytesMut as buf::buf_mut::BufMut>::put_slice","value":"fn put_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175531,"byte_end":175540,"line_start":1126,"line_end":1126,"column_start":8,"column_end":17},"name":"put_bytes","qualname":"<BytesMut as buf::buf_mut::BufMut>::put_bytes","value":"fn put_bytes<'_>(&'_ mut Self, u8, usize)","parent":{"krate":0,"index":126},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175910,"byte_end":175916,"line_start":1142,"line_end":1142,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<BytesMut as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175893,"byte_end":175902,"line_start":1141,"line_end":1141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176040,"byte_end":176045,"line_start":1151,"line_end":1151,"column_start":8,"column_end":13},"name":"deref","qualname":"<BytesMut as core::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":3486},"children":[],"decl_id":{"krate":1,"index":3488},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176023,"byte_end":176032,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176148,"byte_end":176154,"line_start":1158,"line_end":1158,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<BytesMut as core::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":{"krate":1,"index":3163},"children":[],"decl_id":{"krate":1,"index":3165},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176131,"byte_end":176140,"line_start":1157,"line_end":1157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176268,"byte_end":176277,"line_start":1165,"line_end":1165,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<BytesMut as core::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":{"krate":1,"index":3499},"children":[],"decl_id":{"krate":1,"index":3500},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176251,"byte_end":176260,"line_start":1164,"line_end":1164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176381,"byte_end":176385,"line_start":1171,"line_end":1171,"column_start":8,"column_end":12},"name":"from","qualname":"<BytesMut as core::convert::From>::from","value":"fn from(&'a [u8]) -> BytesMut","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176510,"byte_end":176514,"line_start":1177,"line_end":1177,"column_start":8,"column_end":12},"name":"from","qualname":"<BytesMut as core::convert::From>::from","value":"fn from(&'a str) -> BytesMut","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176630,"byte_end":176634,"line_start":1183,"line_end":1183,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as core::convert::From>::from","value":"fn from(BytesMut) -> Bytes","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176728,"byte_end":176730,"line_start":1189,"line_end":1189,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176857,"byte_end":176868,"line_start":1195,"line_end":1195,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BytesMut as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177015,"byte_end":177018,"line_start":1201,"line_end":1201,"column_start":8,"column_end":11},"name":"cmp","qualname":"<BytesMut as core::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> cmp::Ordering","parent":{"krate":1,"index":2951},"children":[],"decl_id":{"krate":1,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177192,"byte_end":177199,"line_start":1210,"line_end":1210,"column_start":8,"column_end":15},"name":"default","qualname":"<BytesMut as core::default::Default>::default","value":"fn default() -> BytesMut","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177175,"byte_end":177184,"line_start":1209,"line_end":1209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177287,"byte_end":177291,"line_start":1216,"line_end":1216,"column_start":8,"column_end":12},"name":"hash","qualname":"<BytesMut as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: hash::Hasher","parent":{"krate":1,"index":10533},"children":[],"decl_id":{"krate":1,"index":10534},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177468,"byte_end":177474,"line_start":1226,"line_end":1226,"column_start":8,"column_end":14},"name":"borrow","qualname":"<BytesMut as core::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":2857},"children":[],"decl_id":{"krate":1,"index":2859},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177567,"byte_end":177577,"line_start":1232,"line_end":1232,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<BytesMut as core::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":{"krate":1,"index":2860},"children":[],"decl_id":{"krate":1,"index":2862},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177687,"byte_end":177696,"line_start":1239,"line_end":1239,"column_start":8,"column_end":17},"name":"write_str","qualname":"<BytesMut as core::fmt::Write>::write_str","value":"fn write_str<'_, '_>(&'_ mut Self, &'_ str) -> fmt::Result","parent":{"krate":1,"index":10245},"children":[],"decl_id":{"krate":1,"index":10246},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177670,"byte_end":177679,"line_start":1238,"line_end":1238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177923,"byte_end":177932,"line_start":1249,"line_end":1249,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<BytesMut as core::fmt::Write>::write_fmt","value":"fn write_fmt<'_, '_>(&'_ mut Self, fmt::Arguments) -> fmt::Result","parent":{"krate":1,"index":10245},"children":[],"decl_id":{"krate":1,"index":10249},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177906,"byte_end":177915,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178060,"byte_end":178065,"line_start":1255,"line_end":1255,"column_start":8,"column_end":13},"name":"clone","qualname":"<BytesMut as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> BytesMut","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178231,"byte_end":178240,"line_start":1264,"line_end":1264,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<BytesMut as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178424,"byte_end":178433,"line_start":1273,"line_end":1273,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a BytesMut as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178536,"byte_end":178542,"line_start":1279,"line_end":1279,"column_start":8,"column_end":14},"name":"extend","qualname":"<BytesMut as core::iter::Extend>::extend","value":"fn extend<T, '_>(&'_ mut Self, T) where T: IntoIterator<Item = u8>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179000,"byte_end":179006,"line_start":1299,"line_end":1299,"column_start":8,"column_end":14},"name":"extend","qualname":"<BytesMut as core::iter::Extend>::extend","value":"fn extend<T, '_>(&'_ mut Self, T) where T: IntoIterator<Item = &'a u8>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179183,"byte_end":179189,"line_start":1308,"line_end":1308,"column_start":8,"column_end":14},"name":"extend","qualname":"<BytesMut as core::iter::Extend>::extend","value":"fn extend<T, '_>(&'_ mut Self, T) where T: IntoIterator<Item = Bytes>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179402,"byte_end":179411,"line_start":1319,"line_end":1319,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<BytesMut as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = u8>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179579,"byte_end":179588,"line_start":1325,"line_end":1325,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<BytesMut as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = &'a u8>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184337,"byte_end":184339,"line_start":1470,"line_end":1470,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ [u8]) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184449,"byte_end":184460,"line_start":1476,"line_end":1476,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BytesMut as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ [u8]) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184597,"byte_end":184599,"line_start":1482,"line_end":1482,"column_start":8,"column_end":10},"name":"eq","qualname":"<[u8] as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184712,"byte_end":184723,"line_start":1488,"line_end":1488,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<[u8] as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184888,"byte_end":184890,"line_start":1494,"line_end":1494,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ str) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185009,"byte_end":185020,"line_start":1500,"line_end":1500,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BytesMut as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ str) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185166,"byte_end":185168,"line_start":1506,"line_end":1506,"column_start":8,"column_end":10},"name":"eq","qualname":"<str as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185280,"byte_end":185291,"line_start":1512,"line_end":1512,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<str as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185471,"byte_end":185473,"line_start":1518,"line_end":1518,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Vec<u8>) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185591,"byte_end":185602,"line_start":1524,"line_end":1524,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BytesMut as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Vec<u8>) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185750,"byte_end":185752,"line_start":1530,"line_end":1530,"column_start":8,"column_end":10},"name":"eq","qualname":"<Vec<u8> as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185868,"byte_end":185879,"line_start":1536,"line_end":1536,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Vec<u8> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186018,"byte_end":186020,"line_start":1542,"line_end":1542,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ String) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186136,"byte_end":186147,"line_start":1548,"line_end":1548,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BytesMut as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ String) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186299,"byte_end":186301,"line_start":1554,"line_end":1554,"column_start":8,"column_end":10},"name":"eq","qualname":"<String as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186416,"byte_end":186427,"line_start":1560,"line_end":1560,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<String as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186654,"byte_end":186656,"line_start":1569,"line_end":1569,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ &'a T) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186818,"byte_end":186829,"line_start":1578,"line_end":1578,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<BytesMut as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ &'a T) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186965,"byte_end":186967,"line_start":1584,"line_end":1584,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [u8] as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187081,"byte_end":187092,"line_start":1590,"line_end":1590,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<&'_ [u8] as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187258,"byte_end":187260,"line_start":1596,"line_end":1596,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ str as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187373,"byte_end":187384,"line_start":1602,"line_end":1602,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<&'_ str as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BytesMut) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187522,"byte_end":187524,"line_start":1608,"line_end":1608,"column_start":8,"column_end":10},"name":"eq","qualname":"<Bytes as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BytesMut) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187643,"byte_end":187645,"line_start":1614,"line_end":1614,"column_start":8,"column_end":10},"name":"eq","qualname":"<BytesMut as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Bytes) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187758,"byte_end":187762,"line_start":1620,"line_end":1620,"column_start":8,"column_end":12},"name":"from","qualname":"<Vec<u8> as core::convert::From>::from","value":"fn from(BytesMut) -> Self","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":194027,"byte_end":194030,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Bytes as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":194163,"byte_end":194166,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BytesMut as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42174,"byte_end":42177,"line_start":1337,"line_end":1337,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80052,"byte_end":80055,"line_start":1382,"line_end":1382,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81059,"byte_end":81062,"line_start":1422,"line_end":1422,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83862,"byte_end":83867,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":86028,"byte_end":86033,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":87524,"byte_end":87529,"line_start":193,"line_end":193,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":88324,"byte_end":88329,"line_start":231,"line_end":231,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89046,"byte_end":89054,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":91087,"byte_end":91095,"line_start":110,"line_end":110,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":91495,"byte_end":91503,"line_start":130,"line_end":130,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91852,"byte_end":91857,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":93009,"byte_end":93014,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93894,"byte_end":93898,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96549,"byte_end":96553,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97985,"byte_end":97996,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102318,"byte_end":102329,"line_start":176,"line_end":176,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/vec_deque.rs","byte_start":103494,"byte_end":103502,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108333,"byte_end":108338,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118790,"byte_end":118795,"line_start":519,"line_end":519,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118820,"byte_end":118825,"line_start":520,"line_end":520,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118844,"byte_end":118849,"line_start":522,"line_end":522,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118989,"byte_end":118994,"line_start":529,"line_end":529,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119135,"byte_end":119140,"line_start":536,"line_end":536,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119866,"byte_end":119871,"line_start":572,"line_end":572,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119998,"byte_end":120003,"line_start":581,"line_end":581,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120105,"byte_end":120110,"line_start":588,"line_end":588,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120259,"byte_end":120264,"line_start":597,"line_end":597,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120354,"byte_end":120359,"line_start":603,"line_end":603,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120719,"byte_end":120724,"line_start":621,"line_end":621,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120877,"byte_end":120882,"line_start":629,"line_end":629,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121000,"byte_end":121005,"line_start":635,"line_end":635,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121152,"byte_end":121157,"line_start":641,"line_end":641,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121279,"byte_end":121284,"line_start":647,"line_end":647,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121314,"byte_end":121319,"line_start":649,"line_end":649,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121431,"byte_end":121436,"line_start":655,"line_end":655,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121862,"byte_end":121867,"line_start":673,"line_end":673,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121988,"byte_end":121993,"line_start":679,"line_end":679,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122442,"byte_end":122447,"line_start":697,"line_end":697,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122559,"byte_end":122564,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122720,"byte_end":122723,"line_start":709,"line_end":709,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122832,"byte_end":122835,"line_start":715,"line_end":715,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123007,"byte_end":123012,"line_start":721,"line_end":721,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123122,"byte_end":123127,"line_start":727,"line_end":727,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123288,"byte_end":123294,"line_start":733,"line_end":733,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123399,"byte_end":123405,"line_start":739,"line_end":739,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124171,"byte_end":124176,"line_start":769,"line_end":769,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124328,"byte_end":124333,"line_start":778,"line_end":778,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124511,"byte_end":124516,"line_start":789,"line_end":789,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124620,"byte_end":124625,"line_start":796,"line_end":796,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124744,"byte_end":124749,"line_start":802,"line_end":802,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124873,"byte_end":124878,"line_start":808,"line_end":808,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":125807,"byte_end":125812,"line_start":843,"line_end":843,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":126685,"byte_end":126690,"line_start":874,"line_end":874,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":126793,"byte_end":126796,"line_start":880,"line_end":880,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":127026,"byte_end":127032,"line_start":889,"line_end":889,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":131303,"byte_end":131309,"line_start":1039,"line_end":1039,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143480,"byte_end":143488,"line_start":118,"line_end":118,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173444,"byte_end":173452,"line_start":1035,"line_end":1035,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173881,"byte_end":173889,"line_start":1052,"line_end":1052,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174467,"byte_end":174475,"line_start":1081,"line_end":1081,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175878,"byte_end":175886,"line_start":1140,"line_end":1140,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175983,"byte_end":175991,"line_start":1147,"line_end":1147,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176116,"byte_end":176124,"line_start":1156,"line_end":1156,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176236,"byte_end":176244,"line_start":1163,"line_end":1163,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176363,"byte_end":176371,"line_start":1170,"line_end":1170,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176492,"byte_end":176500,"line_start":1176,"line_end":1176,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176615,"byte_end":176620,"line_start":1182,"line_end":1182,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176710,"byte_end":176718,"line_start":1188,"line_end":1188,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176839,"byte_end":176847,"line_start":1194,"line_end":1194,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176997,"byte_end":177005,"line_start":1200,"line_end":1200,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177130,"byte_end":177138,"line_start":1206,"line_end":1206,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177160,"byte_end":177168,"line_start":1208,"line_end":1208,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177269,"byte_end":177277,"line_start":1215,"line_end":1215,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177450,"byte_end":177458,"line_start":1225,"line_end":1225,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177549,"byte_end":177557,"line_start":1231,"line_end":1231,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177655,"byte_end":177663,"line_start":1237,"line_end":1237,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178042,"byte_end":178050,"line_start":1254,"line_end":1254,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178152,"byte_end":178160,"line_start":1260,"line_end":1260,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178518,"byte_end":178526,"line_start":1278,"line_end":1278,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178982,"byte_end":178990,"line_start":1298,"line_end":1298,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179165,"byte_end":179173,"line_start":1307,"line_end":1307,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179384,"byte_end":179392,"line_start":1318,"line_end":1318,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179561,"byte_end":179569,"line_start":1324,"line_end":1324,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":181316,"byte_end":181322,"line_start":1376,"line_end":1376,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184196,"byte_end":184204,"line_start":1460,"line_end":1460,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184229,"byte_end":184237,"line_start":1461,"line_end":1461,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184319,"byte_end":184327,"line_start":1469,"line_end":1469,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184431,"byte_end":184439,"line_start":1475,"line_end":1475,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184870,"byte_end":184878,"line_start":1493,"line_end":1493,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184991,"byte_end":184999,"line_start":1499,"line_end":1499,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185453,"byte_end":185461,"line_start":1517,"line_end":1517,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185573,"byte_end":185581,"line_start":1523,"line_end":1523,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185733,"byte_end":185736,"line_start":1529,"line_end":1529,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185851,"byte_end":185854,"line_start":1535,"line_end":1535,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186000,"byte_end":186008,"line_start":1541,"line_end":1541,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186118,"byte_end":186126,"line_start":1547,"line_end":1547,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186283,"byte_end":186289,"line_start":1553,"line_end":1553,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186400,"byte_end":186406,"line_start":1559,"line_end":1559,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186602,"byte_end":186610,"line_start":1565,"line_end":1565,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186765,"byte_end":186773,"line_start":1574,"line_end":1574,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187507,"byte_end":187512,"line_start":1607,"line_end":1607,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187625,"byte_end":187633,"line_start":1613,"line_end":1613,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187741,"byte_end":187744,"line_start":1619,"line_end":1619,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":193166,"byte_end":193174,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":194012,"byte_end":194017,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":194145,"byte_end":194153,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/hex.rs","byte_start":194393,"byte_end":194401,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/hex.rs","byte_start":194577,"byte_end":194585,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/loom.rs","byte_start":195449,"byte_end":195458,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":3372,"byte_end":3377,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":2958,"byte_end":2961,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_impl.rs","byte_start":42174,"byte_end":42177,"line_start":1337,"line_end":1337,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":432},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":80052,"byte_end":80055,"line_start":1382,"line_end":1382,"column_start":44,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":4,"index":432},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/buf_mut.rs","byte_start":81059,"byte_end":81062,"line_start":1422,"line_end":1422,"column_start":24,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":4,"index":7780},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":83862,"byte_end":83867,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":86028,"byte_end":86033,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1266},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":87524,"byte_end":87529,"line_start":193,"line_end":193,"column_start":30,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1266},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/chain.rs","byte_start":88324,"byte_end":88329,"line_start":231,"line_end":231,"column_start":29,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":89046,"byte_end":89054,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":91087,"byte_end":91095,"line_start":110,"line_end":110,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1275},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/iter.rs","byte_start":91495,"byte_end":91503,"line_start":130,"line_end":130,"column_start":36,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1275},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":91852,"byte_end":91857,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/limit.rs","byte_start":93009,"byte_end":93014,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1281},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":93894,"byte_end":93898,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/take.rs","byte_start":96549,"byte_end":96553,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1288},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":97985,"byte_end":97996,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/uninit_slice.rs","byte_start":102318,"byte_end":102329,"line_start":176,"line_end":176,"column_start":21,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":341},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/buf/vec_deque.rs","byte_start":103494,"byte_end":103502,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":4,"index":4628},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":108333,"byte_end":108338,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118790,"byte_end":118795,"line_start":519,"line_end":519,"column_start":22,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118820,"byte_end":118825,"line_start":520,"line_end":520,"column_start":22,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118844,"byte_end":118849,"line_start":522,"line_end":522,"column_start":15,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":118989,"byte_end":118994,"line_start":529,"line_end":529,"column_start":16,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119135,"byte_end":119140,"line_start":536,"line_end":536,"column_start":14,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":471},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119866,"byte_end":119871,"line_start":572,"line_end":572,"column_start":16,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":119998,"byte_end":120003,"line_start":581,"line_end":581,"column_start":22,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120105,"byte_end":120110,"line_start":588,"line_end":588,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":10533}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120259,"byte_end":120264,"line_start":597,"line_end":597,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2857}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120354,"byte_end":120359,"line_start":603,"line_end":603,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120719,"byte_end":120724,"line_start":621,"line_end":621,"column_start":27,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":120877,"byte_end":120882,"line_start":629,"line_end":629,"column_start":20,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121000,"byte_end":121005,"line_start":635,"line_end":635,"column_start":21,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121152,"byte_end":121157,"line_start":641,"line_end":641,"column_start":14,"column_end":19},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121279,"byte_end":121284,"line_start":647,"line_end":647,"column_start":13,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121314,"byte_end":121319,"line_start":649,"line_end":649,"column_start":26,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121431,"byte_end":121436,"line_start":655,"line_end":655,"column_start":27,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121862,"byte_end":121867,"line_start":673,"line_end":673,"column_start":25,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":121988,"byte_end":121993,"line_start":679,"line_end":679,"column_start":26,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122442,"byte_end":122447,"line_start":697,"line_end":697,"column_start":29,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122559,"byte_end":122564,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122720,"byte_end":122723,"line_start":709,"line_end":709,"column_start":27,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":4,"index":7780},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":122832,"byte_end":122835,"line_start":715,"line_end":715,"column_start":28,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":4,"index":7780},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123007,"byte_end":123012,"line_start":721,"line_end":721,"column_start":28,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123122,"byte_end":123127,"line_start":727,"line_end":727,"column_start":29,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123288,"byte_end":123294,"line_start":733,"line_end":733,"column_start":27,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":4,"index":8368},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":123399,"byte_end":123405,"line_start":739,"line_end":739,"column_start":28,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":4,"index":8368},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124171,"byte_end":124176,"line_start":769,"line_end":769,"column_start":42,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124328,"byte_end":124333,"line_start":778,"line_end":778,"column_start":43,"column_end":48},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124511,"byte_end":124516,"line_start":789,"line_end":789,"column_start":18,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124620,"byte_end":124625,"line_start":796,"line_end":796,"column_start":30,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124744,"byte_end":124749,"line_start":802,"line_end":802,"column_start":29,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":124873,"byte_end":124878,"line_start":808,"line_end":808,"column_start":24,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":125807,"byte_end":125812,"line_start":843,"line_end":843,"column_start":26,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":126685,"byte_end":126690,"line_start":874,"line_end":874,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":126793,"byte_end":126796,"line_start":880,"line_end":880,"column_start":22,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":4,"index":7780},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":127026,"byte_end":127032,"line_start":889,"line_end":889,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":476},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes.rs","byte_start":131303,"byte_end":131309,"line_start":1039,"line_end":1039,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":143480,"byte_end":143488,"line_start":118,"line_end":118,"column_start":6,"column_end":14},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173444,"byte_end":173452,"line_start":1035,"line_end":1035,"column_start":15,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":173881,"byte_end":173889,"line_start":1052,"line_end":1052,"column_start":14,"column_end":22},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":31}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":174467,"byte_end":174475,"line_start":1081,"line_end":1081,"column_start":24,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175878,"byte_end":175886,"line_start":1140,"line_end":1140,"column_start":22,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":175983,"byte_end":175991,"line_start":1147,"line_end":1147,"column_start":16,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176116,"byte_end":176124,"line_start":1156,"line_end":1156,"column_start":22,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176236,"byte_end":176244,"line_start":1163,"line_end":1163,"column_start":19,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3499}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176363,"byte_end":176371,"line_start":1170,"line_end":1170,"column_start":29,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176492,"byte_end":176500,"line_start":1176,"line_end":1176,"column_start":28,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176615,"byte_end":176620,"line_start":1182,"line_end":1182,"column_start":25,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176710,"byte_end":176718,"line_start":1188,"line_end":1188,"column_start":20,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176839,"byte_end":176847,"line_start":1194,"line_end":1194,"column_start":21,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":176997,"byte_end":177005,"line_start":1200,"line_end":1200,"column_start":14,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177130,"byte_end":177138,"line_start":1206,"line_end":1206,"column_start":13,"column_end":21},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177160,"byte_end":177168,"line_start":1208,"line_end":1208,"column_start":18,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177269,"byte_end":177277,"line_start":1215,"line_end":1215,"column_start":21,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":10533}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177450,"byte_end":177458,"line_start":1225,"line_end":1225,"column_start":23,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2857}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177549,"byte_end":177557,"line_start":1231,"line_end":1231,"column_start":26,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2860}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":177655,"byte_end":177663,"line_start":1237,"line_end":1237,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":10245}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178042,"byte_end":178050,"line_start":1254,"line_end":1254,"column_start":16,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178152,"byte_end":178160,"line_start":1260,"line_end":1260,"column_start":23,"column_end":31},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178518,"byte_end":178526,"line_start":1278,"line_end":1278,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":178982,"byte_end":178990,"line_start":1298,"line_end":1298,"column_start":29,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179165,"byte_end":179173,"line_start":1307,"line_end":1307,"column_start":24,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179384,"byte_end":179392,"line_start":1318,"line_end":1318,"column_start":27,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":179561,"byte_end":179569,"line_start":1324,"line_end":1324,"column_start":35,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":181316,"byte_end":181322,"line_start":1376,"line_end":1376,"column_start":6,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184196,"byte_end":184204,"line_start":1460,"line_end":1460,"column_start":22,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184229,"byte_end":184237,"line_start":1461,"line_end":1461,"column_start":22,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184319,"byte_end":184327,"line_start":1469,"line_end":1469,"column_start":26,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184431,"byte_end":184439,"line_start":1475,"line_end":1475,"column_start":27,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184870,"byte_end":184878,"line_start":1493,"line_end":1493,"column_start":25,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":184991,"byte_end":184999,"line_start":1499,"line_end":1499,"column_start":26,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185453,"byte_end":185461,"line_start":1517,"line_end":1517,"column_start":29,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185573,"byte_end":185581,"line_start":1523,"line_end":1523,"column_start":30,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185733,"byte_end":185736,"line_start":1529,"line_end":1529,"column_start":30,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":4,"index":7780},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":185851,"byte_end":185854,"line_start":1535,"line_end":1535,"column_start":31,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":4,"index":7780},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186000,"byte_end":186008,"line_start":1541,"line_end":1541,"column_start":28,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186118,"byte_end":186126,"line_start":1547,"line_end":1547,"column_start":29,"column_end":37},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186283,"byte_end":186289,"line_start":1553,"line_end":1553,"column_start":30,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":4,"index":8368},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186400,"byte_end":186406,"line_start":1559,"line_end":1559,"column_start":31,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":4,"index":8368},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186602,"byte_end":186610,"line_start":1565,"line_end":1565,"column_start":42,"column_end":50},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":186765,"byte_end":186773,"line_start":1574,"line_end":1574,"column_start":43,"column_end":51},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187507,"byte_end":187512,"line_start":1607,"line_end":1607,"column_start":30,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187625,"byte_end":187633,"line_start":1613,"line_end":1613,"column_start":27,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/bytes_mut.rs","byte_start":187741,"byte_end":187744,"line_start":1619,"line_end":1619,"column_start":25,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":4,"index":7780},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":193166,"byte_end":193174,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":194012,"byte_end":194017,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":471},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/debug.rs","byte_start":194145,"byte_end":194153,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/hex.rs","byte_start":194393,"byte_end":194401,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":10308}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/fmt/hex.rs","byte_start":194577,"byte_end":194585,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":10310}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/loom.rs","byte_start":195449,"byte_end":195458,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"kind":{"Impl":{"id":116}},"from":{"krate":1,"index":9771},"to":{"krate":0,"index":1033}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.4.0/src/lib.rs","byte_start":3372,"byte_end":3377,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1050},"to":{"krate":1,"index":3510}}]}