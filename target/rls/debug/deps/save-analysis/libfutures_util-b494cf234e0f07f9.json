{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=b494cf234e0f07f9","-C","extra-filename=-b494cf234e0f07f9","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","futures_core=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_core-8be431a497bc3c9f.rmeta","--extern","futures_task=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_task-22e84083e6177a2f.rmeta","--extern","pin_project_lite=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpin_project_lite-6d07fd99c72705e6.rmeta","--extern","pin_utils=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpin_utils-5814714d9f4dcbe0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_util-b494cf234e0f07f9.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[7694453814300953793,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":5,"id":{"name":"futures_core","disambiguator":[9123476880726111055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":12,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":14,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":16,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":17,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":18,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[568644568986885198,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[15761437803434426678,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[6971910164290660896,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":169},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13770},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":21},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12107,"byte_end":12116,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":24},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12118,"byte_end":12132,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":27},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":44},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6772},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":16330,"byte_end":16334,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":6863},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6772},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7206},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7021},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6961},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7071},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7133},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7314},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6911},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":47424,"byte_end":47434,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":0,"index":7665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7812},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7995},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8117},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7739},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7493},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8310},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8316},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8335},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8348},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":823},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":887},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8387},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":985},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":997},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8528},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8573},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8630},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8699},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13874,"byte_end":13882,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13884,"byte_end":13891,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8780},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14043,"byte_end":14053,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8788},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14055,"byte_end":14064,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1255},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8864},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8909},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8966},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":9035},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14297,"byte_end":14309,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14311,"byte_end":14321,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":9116},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14486,"byte_end":14495,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":9124},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14497,"byte_end":14505,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":9130},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14716,"byte_end":14727,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14729,"byte_end":14746,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14748,"byte_end":14757,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13278},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1572},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":14849,"byte_end":14858,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":1,"index":13770},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":44},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":90},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138653,"byte_end":138662,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":5,"index":93},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138664,"byte_end":138678,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":5,"index":110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138712,"byte_end":138723,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":5,"index":96},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138725,"byte_end":138731,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":5,"index":127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138733,"byte_end":138742,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143140,"byte_end":143145,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9196},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143260,"byte_end":143267,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143378,"byte_end":143383,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9307},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143496,"byte_end":143502,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9347},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143613,"byte_end":143618,"line_start":45,"line_end":45,"column_start":22,"column_end":27},"alias_span":null,"name":"Count","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143729,"byte_end":143734,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9424},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143853,"byte_end":143862,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9468},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":143975,"byte_end":143981,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":144102,"byte_end":144111,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":144499,"byte_end":144503,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9771},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":144610,"byte_end":144613,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"alias_span":null,"name":"Any","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":144720,"byte_end":144723,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"alias_span":null,"name":"All","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":145217,"byte_end":145224,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":145333,"byte_end":145337,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9994},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":145460,"byte_end":145472,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10069},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":145835,"byte_end":145838,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146221,"byte_end":146225,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146358,"byte_end":146372,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10343},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146482,"byte_end":146488,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10392},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146490,"byte_end":146498,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146500,"byte_end":146504,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146506,"byte_end":146513,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146515,"byte_end":146523,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10441},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146633,"byte_end":146637,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146758,"byte_end":146767,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":146876,"byte_end":146880,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147001,"byte_end":147010,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10667},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147131,"byte_end":147140,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147249,"byte_end":147253,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10785},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147360,"byte_end":147363,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10842},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147528,"byte_end":147534,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10890},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147711,"byte_end":147722,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":10934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":147831,"byte_end":147835,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":11003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":148090,"byte_end":148105,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":11048},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":148344,"byte_end":148352,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":3439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":148571,"byte_end":148587,"line_start":207,"line_end":207,"column_start":34,"column_end":50},"alias_span":null,"name":"FlattenUnordered","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":11305},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":149305,"byte_end":149322,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1624}},{"kind":"Use","ref_id":{"krate":0,"index":9832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138858,"byte_end":138861,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"alias_span":null,"name":"All","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9771},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138863,"byte_end":138866,"line_start":21,"line_end":21,"column_start":10,"column_end":13},"alias_span":null,"name":"Any","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138868,"byte_end":138873,"line_start":21,"line_end":21,"column_start":15,"column_end":20},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9196},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138875,"byte_end":138882,"line_start":21,"line_end":21,"column_start":22,"column_end":29},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9307},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138884,"byte_end":138890,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9347},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138892,"byte_end":138897,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"alias_span":null,"name":"Count","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138899,"byte_end":138904,"line_start":21,"line_end":21,"column_start":46,"column_end":51},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9424},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138906,"byte_end":138915,"line_start":21,"line_end":21,"column_start":53,"column_end":62},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9468},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138917,"byte_end":138923,"line_start":21,"line_end":21,"column_start":64,"column_end":70},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138925,"byte_end":138934,"line_start":21,"line_end":21,"column_start":72,"column_end":81},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10122},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138936,"byte_end":138943,"line_start":21,"line_end":21,"column_start":83,"column_end":90},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9649},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138945,"byte_end":138952,"line_start":21,"line_end":21,"column_start":92,"column_end":99},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138958,"byte_end":138962,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138964,"byte_end":138971,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138973,"byte_end":138977,"line_start":22,"line_end":22,"column_start":20,"column_end":24},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138979,"byte_end":138986,"line_start":22,"line_end":22,"column_start":26,"column_end":33},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10069},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138988,"byte_end":138991,"line_start":22,"line_end":22,"column_start":35,"column_end":38},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138993,"byte_end":138997,"line_start":22,"line_end":22,"column_start":40,"column_end":44},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10343},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138999,"byte_end":139005,"line_start":22,"line_end":22,"column_start":46,"column_end":52},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10392},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139007,"byte_end":139015,"line_start":22,"line_end":22,"column_start":54,"column_end":62},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139017,"byte_end":139021,"line_start":22,"line_end":22,"column_start":64,"column_end":68},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139023,"byte_end":139030,"line_start":22,"line_end":22,"column_start":70,"column_end":77},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139032,"byte_end":139040,"line_start":22,"line_end":22,"column_start":79,"column_end":87},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139042,"byte_end":139046,"line_start":22,"line_end":22,"column_start":89,"column_end":93},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139052,"byte_end":139066,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10441},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139068,"byte_end":139072,"line_start":23,"line_end":23,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139074,"byte_end":139083,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":3593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139085,"byte_end":139094,"line_start":23,"line_end":23,"column_start":38,"column_end":47},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9994},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139096,"byte_end":139108,"line_start":23,"line_end":23,"column_start":49,"column_end":61},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139110,"byte_end":139114,"line_start":23,"line_end":23,"column_start":63,"column_end":67},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10667},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139116,"byte_end":139125,"line_start":23,"line_end":23,"column_start":69,"column_end":78},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139127,"byte_end":139136,"line_start":23,"line_end":23,"column_start":80,"column_end":89},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139138,"byte_end":139142,"line_start":23,"line_end":23,"column_start":91,"column_end":95},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":9245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139148,"byte_end":139153,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10785},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139155,"byte_end":139158,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10842},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139272,"byte_end":139278,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":10890},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139329,"byte_end":139340,"line_start":34,"line_end":34,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139537,"byte_end":139552,"line_start":43,"line_end":43,"column_start":5,"column_end":20},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11048},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139554,"byte_end":139562,"line_start":43,"line_end":43,"column_start":22,"column_end":30},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139564,"byte_end":139580,"line_start":43,"line_end":43,"column_start":32,"column_end":48},"alias_span":null,"name":"FlatMapUnordered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":3439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139582,"byte_end":139598,"line_start":43,"line_end":43,"column_start":50,"column_end":66},"alias_span":null,"name":"FlattenUnordered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11305},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139600,"byte_end":139617,"line_start":43,"line_end":43,"column_start":68,"column_end":85},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11366},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":313300,"byte_end":313307,"line_start":27,"line_end":27,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":11634},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":314302,"byte_end":314312,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":11812},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":314992,"byte_end":314998,"line_start":70,"line_end":70,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":11873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":315115,"byte_end":315122,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":11881},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":315247,"byte_end":315257,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":11938},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":315378,"byte_end":315387,"line_start":82,"line_end":82,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":315516,"byte_end":315528,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12064},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":315651,"byte_end":315661,"line_start":90,"line_end":90,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":315926,"byte_end":315945,"line_start":98,"line_end":98,"column_start":38,"column_end":57},"alias_span":null,"name":"TryFlattenUnordered","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316068,"byte_end":316078,"line_start":102,"line_end":102,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316199,"byte_end":316208,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12315},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316382,"byte_end":316391,"line_start":112,"line_end":112,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12363},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316393,"byte_end":316407,"line_start":112,"line_end":112,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12364},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316393,"byte_end":316407,"line_start":112,"line_end":112,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316525,"byte_end":316532,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":4620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316654,"byte_end":316664,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316666,"byte_end":316675,"line_start":120,"line_end":120,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316805,"byte_end":316817,"line_start":124,"line_end":124,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":316946,"byte_end":316958,"line_start":128,"line_end":128,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":317221,"byte_end":317239,"line_start":136,"line_end":136,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12696},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":317486,"byte_end":317497,"line_start":144,"line_end":144,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":12744},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":317766,"byte_end":317786,"line_start":152,"line_end":152,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":3813}},{"kind":"Use","ref_id":{"krate":0,"index":4620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139868,"byte_end":139878,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11366},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139880,"byte_end":139887,"line_start":54,"line_end":54,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11430},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139889,"byte_end":139896,"line_start":54,"line_end":54,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11568},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139898,"byte_end":139908,"line_start":54,"line_end":54,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11499},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139910,"byte_end":139919,"line_start":54,"line_end":54,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11634},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139921,"byte_end":139931,"line_start":54,"line_end":54,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11746},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139933,"byte_end":139939,"line_start":54,"line_end":54,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11677},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139941,"byte_end":139946,"line_start":54,"line_end":54,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11812},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139948,"byte_end":139954,"line_start":54,"line_end":54,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139960,"byte_end":139970,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139972,"byte_end":139981,"line_start":55,"line_end":55,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11938},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139983,"byte_end":139992,"line_start":55,"line_end":55,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":139994,"byte_end":140006,"line_start":55,"line_end":55,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12064},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140008,"byte_end":140018,"line_start":55,"line_end":55,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140020,"byte_end":140027,"line_start":55,"line_end":55,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11881},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140029,"byte_end":140039,"line_start":55,"line_end":55,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":11873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140041,"byte_end":140048,"line_start":55,"line_end":55,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140054,"byte_end":140066,"line_start":56,"line_end":56,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":4935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140068,"byte_end":140080,"line_start":56,"line_end":56,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140082,"byte_end":140094,"line_start":56,"line_end":56,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140096,"byte_end":140105,"line_start":56,"line_end":56,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140339,"byte_end":140357,"line_start":67,"line_end":67,"column_start":5,"column_end":23},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12696},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140359,"byte_end":140370,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140372,"byte_end":140391,"line_start":67,"line_end":67,"column_start":38,"column_end":57},"alias_span":null,"name":"TryFlattenUnordered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12744},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140393,"byte_end":140413,"line_start":67,"line_end":67,"column_start":59,"column_end":79},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12315},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140472,"byte_end":140481,"line_start":71,"line_end":71,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12363},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140483,"byte_end":140497,"line_start":71,"line_end":71,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12364},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140483,"byte_end":140497,"line_start":71,"line_end":71,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5093},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140554,"byte_end":140558,"line_start":76,"line_end":76,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12805},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140560,"byte_end":140564,"line_start":76,"line_end":76,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140603,"byte_end":140609,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12814},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140611,"byte_end":140617,"line_start":79,"line_end":79,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140666,"byte_end":140677,"line_start":82,"line_end":82,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12823},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140679,"byte_end":140689,"line_start":82,"line_end":82,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5215},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140726,"byte_end":140731,"line_start":85,"line_end":85,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140733,"byte_end":140738,"line_start":85,"line_end":85,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140773,"byte_end":140777,"line_start":88,"line_end":88,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12838},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140779,"byte_end":140783,"line_start":88,"line_end":88,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5311},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140824,"byte_end":140831,"line_start":91,"line_end":91,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140833,"byte_end":140840,"line_start":91,"line_end":91,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5361},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140881,"byte_end":140888,"line_start":94,"line_end":94,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5353},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140890,"byte_end":140896,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140951,"byte_end":140965,"line_start":97,"line_end":97,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12880},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":140967,"byte_end":140980,"line_start":97,"line_end":97,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5445},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141019,"byte_end":141025,"line_start":100,"line_end":100,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141027,"byte_end":141033,"line_start":100,"line_end":100,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5516},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141100,"byte_end":141120,"line_start":103,"line_end":103,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12964},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141122,"byte_end":141130,"line_start":103,"line_end":103,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":12983},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141132,"byte_end":141150,"line_start":103,"line_end":103,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5605},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141189,"byte_end":141195,"line_start":106,"line_end":106,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141197,"byte_end":141203,"line_start":106,"line_end":106,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":5705},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141381,"byte_end":141395,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446457,"byte_end":446465,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":13179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446467,"byte_end":446471,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":13180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446467,"byte_end":446471,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":13159},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446473,"byte_end":446480,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":13160},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446473,"byte_end":446480,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":13149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446482,"byte_end":446492,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":13168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446494,"byte_end":446504,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":5747}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141595,"byte_end":141611,"line_start":121,"line_end":121,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":6228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141798,"byte_end":141808,"line_start":129,"line_end":129,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":6203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141810,"byte_end":141819,"line_start":129,"line_end":129,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141987,"byte_end":141998,"line_start":136,"line_end":136,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":142000,"byte_end":142017,"line_start":136,"line_end":136,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":142019,"byte_end":142028,"line_start":136,"line_end":136,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13278},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":142030,"byte_end":142037,"line_start":136,"line_end":136,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":13279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":142030,"byte_end":142037,"line_start":136,"line_end":136,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":0,"index":6299},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":142120,"byte_end":142129,"line_start":139,"line_end":139,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1606}},{"kind":"Use","ref_id":{"krate":5,"index":96},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":14072},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495248,"byte_end":495255,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":1,"index":43815},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495257,"byte_end":495261,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":1,"index":43851},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495263,"byte_end":495271,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":1,"index":43860},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495273,"byte_end":495287,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":1,"index":14082},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495289,"byte_end":495294,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495321,"byte_end":495330,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495332,"byte_end":495346,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":19},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495348,"byte_end":495358,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":16},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495360,"byte_end":495365,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":22},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495367,"byte_end":495377,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495379,"byte_end":495394,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495420,"byte_end":495430,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495454,"byte_end":495468,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":94},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495554,"byte_end":495561,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":122},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495647,"byte_end":495652,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495739,"byte_end":495748,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":22,"index":407},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495750,"byte_end":495758,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":5,"index":197},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495837,"byte_end":495848,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":0,"index":6422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495884,"byte_end":495897,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6333}},{"kind":"Use","ref_id":{"krate":0,"index":6419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495899,"byte_end":495907,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6333}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6324},{"krate":0,"index":6327},{"krate":0,"index":6330},{"krate":0,"index":6333},{"krate":0,"index":6432},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6499},{"krate":0,"index":6713}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":234,"byte_end":240,"line_start":5,"line_end":5,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1590}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":6728},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":6725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6729},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35396,"byte_end":35397,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::future::flatten::Flatten::First::f","value":"Fut1","parent":{"krate":0,"index":6728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6730},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":6725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6731},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35431,"byte_end":35432,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::future::flatten::Flatten::Second::f","value":"Fut2","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6732},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":6725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6725},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":6728},{"krate":0,"index":6730},{"krate":0,"index":6732}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35703,"byte_end":35716,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35987,"byte_end":35991,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":36716,"byte_end":36729,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":36996,"byte_end":37005,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6772},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":39787,"byte_end":39791,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6774}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41610,"byte_end":41620,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":39988,"byte_end":40056,"line_start":23,"line_end":23,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40061,"byte_end":40064,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40069,"byte_end":40137,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40142,"byte_end":40187,"line_start":26,"line_end":26,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40192,"byte_end":40195,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40200,"byte_end":40214,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40219,"byte_end":40222,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40227,"byte_end":40234,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40239,"byte_end":40280,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40285,"byte_end":40316,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40321,"byte_end":40377,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40382,"byte_end":40406,"line_start":34,"line_end":34,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40411,"byte_end":40446,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40451,"byte_end":40476,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40481,"byte_end":40484,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40489,"byte_end":40538,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40543,"byte_end":40546,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40551,"byte_end":40593,"line_start":40,"line_end":40,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40598,"byte_end":40637,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40642,"byte_end":40681,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40686,"byte_end":40703,"line_start":43,"line_end":43,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40708,"byte_end":40711,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40716,"byte_end":40786,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40791,"byte_end":40830,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40835,"byte_end":40876,"line_start":47,"line_end":47,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40881,"byte_end":40907,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40912,"byte_end":40915,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40920,"byte_end":40930,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40935,"byte_end":40952,"line_start":51,"line_end":51,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40957,"byte_end":40991,"line_start":52,"line_end":52,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":40996,"byte_end":41043,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41048,"byte_end":41097,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41102,"byte_end":41164,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41169,"byte_end":41193,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41198,"byte_end":41241,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41246,"byte_end":41303,"line_start":58,"line_end":58,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41308,"byte_end":41383,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41388,"byte_end":41418,"line_start":60,"line_end":60,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41423,"byte_end":41440,"line_start":61,"line_end":61,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41445,"byte_end":41459,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41464,"byte_end":41548,"line_start":63,"line_end":63,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41553,"byte_end":41562,"line_start":64,"line_end":64,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41567,"byte_end":41572,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41577,"byte_end":41586,"line_start":66,"line_end":66,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41591,"byte_end":41598,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41724,"byte_end":41737,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41873,"byte_end":41877,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fuse<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Fut::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6811},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42635,"byte_end":42645,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6812},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42679,"byte_end":42685,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"future","qualname":"::future::future::map::Map::Incomplete::future","value":"Fut","parent":{"krate":0,"index":6811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6813},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42704,"byte_end":42705,"line_start":19,"line_end":19,"column_start":13,"column_end":14},"name":"f","qualname":"::future::future::map::Map::Incomplete::f","value":"F","parent":{"krate":0,"index":6811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6814},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42729,"byte_end":42737,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6808},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42613,"byte_end":42616,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":6811},{"krate":0,"index":6814}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12045231,"byte_end":12045240,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":43018,"byte_end":43031,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":43305,"byte_end":43309,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6863},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6865}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6911},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":6913}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6961},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6964}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7021},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7023}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":7074}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7133},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":7137}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7206},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7209}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":7268}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7314},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":7316}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnOnce(Self::Output)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Output) -> (), Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":31942,"byte_end":31947,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":31713,"byte_end":31754,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":31759,"byte_end":31762,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":31767,"byte_end":31842,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":31847,"byte_end":31904,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":31909,"byte_end":31934,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32407,"byte_end":32418,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32106,"byte_end":32147,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32152,"byte_end":32155,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32160,"byte_end":32219,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32312,"byte_end":32369,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32374,"byte_end":32399,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn poll_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<Self::Output>\nwhere Self: Unpin","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66083,"byte_end":66093,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":7362}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66342,"byte_end":66355,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoFuture<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66537,"byte_end":66541,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<IntoFuture<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66520,"byte_end":66529,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":7399},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67067,"byte_end":67072,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":7396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7400},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67082,"byte_end":67083,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::First::f","value":"Fut1","parent":{"krate":0,"index":7399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7401},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67101,"byte_end":67107,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":7396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67117,"byte_end":67118,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::Second::f","value":"Fut2","parent":{"krate":0,"index":7401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7403},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67136,"byte_end":67141,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":7396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7396},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67034,"byte_end":67044,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7399},{"krate":0,"index":7401},{"krate":0,"index":7403}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67413,"byte_end":67426,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67733,"byte_end":67737,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":68629,"byte_end":68642,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":68947,"byte_end":68956,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7446},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72010,"byte_end":72015,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":7443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7447},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72025,"byte_end":72026,"line_start":11,"line_end":11,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First::f","value":"Fut1","parent":{"krate":0,"index":7446},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7448},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72044,"byte_end":72050,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":7443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7449},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72060,"byte_end":72061,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second::f","value":"Fut2","parent":{"krate":0,"index":7448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7450},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72079,"byte_end":72084,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":7443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7443},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":71974,"byte_end":71987,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7446},{"krate":0,"index":7448},{"krate":0,"index":7450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72362,"byte_end":72375,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72688,"byte_end":72692,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7493},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":44770,"byte_end":44780,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7496}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":45028,"byte_end":45041,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":7557}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":45309,"byte_end":45325,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":7616}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":45913,"byte_end":45920,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":7669}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7739},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":46160,"byte_end":46166,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7743}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7812},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":46416,"byte_end":46423,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":7815}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":46631,"byte_end":46637,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":7876}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":46856,"byte_end":46865,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7937}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7995},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":47137,"byte_end":47147,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7998}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":47520,"byte_end":47525,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8059}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8117},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":47766,"byte_end":47772,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8120}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48029,"byte_end":48040,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":8183}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48324,"byte_end":48336,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":8255}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":504},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48626,"byte_end":48638,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48562,"byte_end":48615,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51398,"byte_end":51404,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50026,"byte_end":50084,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50089,"byte_end":50092,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50097,"byte_end":50172,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50177,"byte_end":50247,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50252,"byte_end":50325,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50330,"byte_end":50359,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50364,"byte_end":50367,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50372,"byte_end":50447,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50452,"byte_end":50527,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50532,"byte_end":50579,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50584,"byte_end":50587,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50592,"byte_end":50667,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50672,"byte_end":50698,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50703,"byte_end":50706,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50711,"byte_end":50725,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50730,"byte_end":50733,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50738,"byte_end":50745,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50750,"byte_end":50788,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50793,"byte_end":50796,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50801,"byte_end":50842,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50847,"byte_end":50892,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50897,"byte_end":50939,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50944,"byte_end":50980,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50985,"byte_end":50994,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":50999,"byte_end":51006,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51011,"byte_end":51014,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51019,"byte_end":51091,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51096,"byte_end":51107,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51112,"byte_end":51115,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51120,"byte_end":51127,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51132,"byte_end":51170,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51175,"byte_end":51178,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51183,"byte_end":51224,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51229,"byte_end":51275,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51280,"byte_end":51322,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51327,"byte_end":51364,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51369,"byte_end":51378,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51383,"byte_end":51390,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52963,"byte_end":52977,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51595,"byte_end":51712,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51717,"byte_end":51720,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51725,"byte_end":51847,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51852,"byte_end":51902,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51907,"byte_end":51910,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51915,"byte_end":51990,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":51995,"byte_end":52070,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52075,"byte_end":52122,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52127,"byte_end":52130,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52135,"byte_end":52210,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52215,"byte_end":52290,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52295,"byte_end":52342,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52347,"byte_end":52350,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52355,"byte_end":52430,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52435,"byte_end":52461,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52466,"byte_end":52469,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52474,"byte_end":52488,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52493,"byte_end":52496,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52501,"byte_end":52508,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52513,"byte_end":52551,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52556,"byte_end":52559,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52564,"byte_end":52605,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52610,"byte_end":52655,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52660,"byte_end":52721,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52726,"byte_end":52758,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52763,"byte_end":52766,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52771,"byte_end":52817,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52822,"byte_end":52883,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52888,"byte_end":52921,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52926,"byte_end":52935,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52940,"byte_end":52947,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":52952,"byte_end":52955,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54734,"byte_end":54741,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error) ->\nE, Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53211,"byte_end":53267,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53272,"byte_end":53275,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53280,"byte_end":53354,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53359,"byte_end":53420,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53425,"byte_end":53495,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53500,"byte_end":53575,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53580,"byte_end":53615,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53620,"byte_end":53623,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53628,"byte_end":53703,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53708,"byte_end":53783,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53788,"byte_end":53835,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53840,"byte_end":53843,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53848,"byte_end":53923,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53928,"byte_end":53954,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53959,"byte_end":53962,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53967,"byte_end":53981,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53986,"byte_end":53989,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":53994,"byte_end":54001,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54006,"byte_end":54044,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54049,"byte_end":54052,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54057,"byte_end":54098,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54103,"byte_end":54149,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54154,"byte_end":54197,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54202,"byte_end":54239,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54244,"byte_end":54253,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54258,"byte_end":54265,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54270,"byte_end":54273,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54278,"byte_end":54351,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54356,"byte_end":54370,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54375,"byte_end":54378,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54383,"byte_end":54390,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54395,"byte_end":54433,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54438,"byte_end":54441,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54446,"byte_end":54487,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54492,"byte_end":54537,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54542,"byte_end":54585,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54590,"byte_end":54626,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54631,"byte_end":54640,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54645,"byte_end":54652,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54657,"byte_end":54660,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54665,"byte_end":54691,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54696,"byte_end":54726,"line_start":307,"line_end":307,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55905,"byte_end":55913,"line_start":341,"line_end":341,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":54934,"byte_end":55004,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55009,"byte_end":55058,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55063,"byte_end":55066,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55071,"byte_end":55134,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55139,"byte_end":55207,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55212,"byte_end":55285,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55290,"byte_end":55366,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55371,"byte_end":55416,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55421,"byte_end":55424,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55429,"byte_end":55504,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55509,"byte_end":55535,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55540,"byte_end":55543,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55548,"byte_end":55562,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55567,"byte_end":55570,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55575,"byte_end":55582,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55587,"byte_end":55625,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55630,"byte_end":55633,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55638,"byte_end":55679,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55684,"byte_end":55735,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55740,"byte_end":55797,"line_start":335,"line_end":335,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55802,"byte_end":55811,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55816,"byte_end":55823,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55828,"byte_end":55831,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55836,"byte_end":55862,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":55867,"byte_end":55897,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56209,"byte_end":56216,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized, Self::Ok: Into<U>","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56089,"byte_end":56147,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56152,"byte_end":56201,"line_start":350,"line_end":350,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57771,"byte_end":57779,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56390,"byte_end":56459,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56464,"byte_end":56538,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56543,"byte_end":56546,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56551,"byte_end":56626,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56631,"byte_end":56701,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56706,"byte_end":56771,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56776,"byte_end":56842,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56847,"byte_end":56881,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56886,"byte_end":56889,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56894,"byte_end":56969,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":56974,"byte_end":57000,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57005,"byte_end":57008,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57013,"byte_end":57027,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57032,"byte_end":57035,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57040,"byte_end":57047,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57052,"byte_end":57090,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57095,"byte_end":57098,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57103,"byte_end":57144,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57149,"byte_end":57194,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57199,"byte_end":57274,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57279,"byte_end":57315,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57320,"byte_end":57329,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57334,"byte_end":57341,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57346,"byte_end":57349,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57354,"byte_end":57430,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57435,"byte_end":57446,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57451,"byte_end":57454,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57459,"byte_end":57466,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57471,"byte_end":57509,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57514,"byte_end":57517,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57522,"byte_end":57563,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57568,"byte_end":57614,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57619,"byte_end":57695,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57700,"byte_end":57737,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57742,"byte_end":57751,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":57756,"byte_end":57763,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59400,"byte_end":59407,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58033,"byte_end":58098,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58103,"byte_end":58175,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58180,"byte_end":58183,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58188,"byte_end":58263,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58268,"byte_end":58338,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58343,"byte_end":58408,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58413,"byte_end":58489,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58494,"byte_end":58512,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58517,"byte_end":58520,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58525,"byte_end":58600,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58605,"byte_end":58631,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58636,"byte_end":58639,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58644,"byte_end":58658,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58663,"byte_end":58666,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58671,"byte_end":58678,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58683,"byte_end":58721,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58726,"byte_end":58729,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58734,"byte_end":58775,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58780,"byte_end":58826,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58831,"byte_end":58906,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58911,"byte_end":58948,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58953,"byte_end":58962,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58967,"byte_end":58974,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58979,"byte_end":58982,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":58987,"byte_end":59060,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59065,"byte_end":59079,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59084,"byte_end":59087,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59092,"byte_end":59099,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59104,"byte_end":59142,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59147,"byte_end":59150,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59155,"byte_end":59196,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59201,"byte_end":59246,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59251,"byte_end":59325,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59330,"byte_end":59366,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59371,"byte_end":59380,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59385,"byte_end":59392,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60383,"byte_end":60393,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59656,"byte_end":59729,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59734,"byte_end":59737,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59742,"byte_end":59817,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59822,"byte_end":59895,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59900,"byte_end":59969,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":59974,"byte_end":60027,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60032,"byte_end":60035,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60040,"byte_end":60054,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60059,"byte_end":60062,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60067,"byte_end":60074,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60079,"byte_end":60120,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60125,"byte_end":60163,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60168,"byte_end":60171,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60176,"byte_end":60218,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60223,"byte_end":60304,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60309,"byte_end":60349,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60354,"byte_end":60363,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60368,"byte_end":60375,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61319,"byte_end":61330,"line_start":493,"line_end":493,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60592,"byte_end":60663,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60668,"byte_end":60671,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60676,"byte_end":60751,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60756,"byte_end":60829,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60834,"byte_end":60903,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60908,"byte_end":60962,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60967,"byte_end":60970,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60975,"byte_end":60989,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":60994,"byte_end":60997,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61002,"byte_end":61009,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61014,"byte_end":61055,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61060,"byte_end":61098,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61103,"byte_end":61106,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61111,"byte_end":61154,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61159,"byte_end":61239,"line_start":489,"line_end":489,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61244,"byte_end":61285,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61290,"byte_end":61299,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61304,"byte_end":61311,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61715,"byte_end":61726,"line_start":505,"line_end":505,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61534,"byte_end":61609,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61614,"byte_end":61643,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61648,"byte_end":61651,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61656,"byte_end":61707,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62905,"byte_end":62923,"line_start":538,"line_end":538,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":61961,"byte_end":62036,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62041,"byte_end":62064,"line_start":514,"line_end":514,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62069,"byte_end":62072,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62077,"byte_end":62149,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62154,"byte_end":62227,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62232,"byte_end":62246,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62251,"byte_end":62254,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62259,"byte_end":62329,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62334,"byte_end":62352,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62357,"byte_end":62360,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62365,"byte_end":62379,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62384,"byte_end":62387,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62392,"byte_end":62399,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62404,"byte_end":62445,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62450,"byte_end":62488,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62493,"byte_end":62539,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62544,"byte_end":62547,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62552,"byte_end":62612,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62617,"byte_end":62696,"line_start":531,"line_end":531,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62701,"byte_end":62704,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62709,"byte_end":62766,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62771,"byte_end":62823,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62828,"byte_end":62871,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62876,"byte_end":62885,"line_start":536,"line_end":536,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":62890,"byte_end":62897,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64014,"byte_end":64028,"line_start":570,"line_end":570,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63183,"byte_end":63254,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63259,"byte_end":63296,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63301,"byte_end":63350,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63355,"byte_end":63358,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63363,"byte_end":63432,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63437,"byte_end":63510,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63515,"byte_end":63585,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63590,"byte_end":63608,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63613,"byte_end":63616,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63621,"byte_end":63689,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63694,"byte_end":63697,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63702,"byte_end":63716,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63721,"byte_end":63724,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63729,"byte_end":63736,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63741,"byte_end":63779,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63784,"byte_end":63787,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63792,"byte_end":63833,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63838,"byte_end":63890,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63895,"byte_end":63942,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63947,"byte_end":63980,"line_start":567,"line_end":567,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63985,"byte_end":63994,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":63999,"byte_end":64006,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65283,"byte_end":65294,"line_start":610,"line_end":610,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64582,"byte_end":64635,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64640,"byte_end":64676,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64681,"byte_end":64684,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64689,"byte_end":64738,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64743,"byte_end":64810,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64815,"byte_end":64828,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64833,"byte_end":64836,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64841,"byte_end":64855,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64860,"byte_end":64863,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64868,"byte_end":64875,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64880,"byte_end":64939,"line_start":599,"line_end":599,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64944,"byte_end":64947,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64952,"byte_end":64971,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64976,"byte_end":64994,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":64999,"byte_end":65071,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65076,"byte_end":65108,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65113,"byte_end":65120,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65125,"byte_end":65201,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65206,"byte_end":65209,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65214,"byte_end":65263,"line_start":608,"line_end":608,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65268,"byte_end":65275,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65553,"byte_end":65567,"line_start":619,"line_end":619,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn try_poll_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65450,"byte_end":65523,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":65528,"byte_end":65545,"line_start":618,"line_end":618,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8310},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73736,"byte_end":73740,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":8312}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73602,"byte_end":73639,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73657,"byte_end":73724,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":601},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74282,"byte_end":74286,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn lazy<F, R>(F) -> Lazy<F> where F: for<'_, '_> FnOnce(&'_ mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73845,"byte_end":73913,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73914,"byte_end":73917,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73918,"byte_end":73981,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73982,"byte_end":73985,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73986,"byte_end":74000,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74001,"byte_end":74004,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74005,"byte_end":74012,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74013,"byte_end":74054,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74055,"byte_end":74079,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74080,"byte_end":74083,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74084,"byte_end":74116,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74117,"byte_end":74144,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74145,"byte_end":74148,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74149,"byte_end":74186,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74187,"byte_end":74211,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74212,"byte_end":74219,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74220,"byte_end":74256,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74257,"byte_end":74266,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74267,"byte_end":74274,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74494,"byte_end":74507,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Lazy<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74664,"byte_end":74668,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"poll","qualname":"<Lazy<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<R>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8316},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75113,"byte_end":75120,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8318}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":74974,"byte_end":75016,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75034,"byte_end":75101,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75208,"byte_end":75221,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":647},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75681,"byte_end":75688,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75261,"byte_end":75341,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75342,"byte_end":75355,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75356,"byte_end":75359,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75360,"byte_end":75422,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75423,"byte_end":75426,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75427,"byte_end":75441,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75442,"byte_end":75445,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75446,"byte_end":75459,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75460,"byte_end":75501,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75502,"byte_end":75526,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75527,"byte_end":75530,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75531,"byte_end":75566,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75567,"byte_end":75593,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75594,"byte_end":75613,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75614,"byte_end":75623,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75624,"byte_end":75631,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75840,"byte_end":75844,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<Pending<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":76003,"byte_end":76008,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8324},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76460,"byte_end":76466,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":8322},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76425,"byte_end":76455,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8326},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76480,"byte_end":76483,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::maybe_done::MaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":8324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8327},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76533,"byte_end":76537,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":8322},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76490,"byte_end":76528,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8329},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76538,"byte_end":76549,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"0","qualname":"::future::maybe_done::MaybeDone::Done::0","value":"<Fut as futures_core::Future>::Output","parent":{"krate":0,"index":8327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8330},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76699,"byte_end":76703,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":8322},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76556,"byte_end":76622,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76627,"byte_end":76694,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":8322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76396,"byte_end":76405,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"enum MaybeDone<Fut> where Fut: Future {\n    Future(Fut),\n    Done(Fut::Output),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":8324},{"krate":0,"index":8327},{"krate":0,"index":8330}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76274,"byte_end":76311,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76312,"byte_end":76315,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76316,"byte_end":76369,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77224,"byte_end":77234,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn maybe_done<Fut>(Fut) -> MaybeDone<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76763,"byte_end":76800,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76801,"byte_end":76804,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76805,"byte_end":76819,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76820,"byte_end":76823,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76824,"byte_end":76831,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76832,"byte_end":76873,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76874,"byte_end":76898,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76899,"byte_end":76924,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76925,"byte_end":76928,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76929,"byte_end":76978,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76979,"byte_end":77000,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77001,"byte_end":77053,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77054,"byte_end":77089,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77090,"byte_end":77145,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77146,"byte_end":77198,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77199,"byte_end":77208,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77209,"byte_end":77216,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77675,"byte_end":77685,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn output_mut<'_>(Pin<&'_ mut Self>) -> Option<&'_ mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77377,"byte_end":77462,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77467,"byte_end":77538,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77543,"byte_end":77616,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77621,"byte_end":77649,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77654,"byte_end":77663,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78033,"byte_end":78044,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn take_output<'_>(Pin<&'_ mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77913,"byte_end":77979,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77984,"byte_end":78007,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78012,"byte_end":78021,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78487,"byte_end":78500,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78720,"byte_end":78724,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8337},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79669,"byte_end":79675,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":8335},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79634,"byte_end":79664,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8339},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79689,"byte_end":79692,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":8337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8340},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79742,"byte_end":79746,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":8335},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79699,"byte_end":79737,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8342},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79747,"byte_end":79754,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Done::0","value":"<Fut as futures_core::TryFuture>::Ok","parent":{"krate":0,"index":8340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8343},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79954,"byte_end":79958,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":8335},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79761,"byte_end":79830,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79835,"byte_end":79905,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79910,"byte_end":79949,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":8335},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79599,"byte_end":79611,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"enum TryMaybeDone<Fut> where Fut: TryFuture {\n    Future(Fut),\n    Done(Fut::Ok),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":8337},{"krate":0,"index":8340},{"krate":0,"index":8343}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79459,"byte_end":79510,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79511,"byte_end":79514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":79515,"byte_end":79572,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":746},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80072,"byte_end":80086,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn try_maybe_done<Fut>(Fut) -> TryMaybeDone<Fut> where Fut: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80024,"byte_end":80064,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80573,"byte_end":80583,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn output_mut<'_>(Pin<&'_ mut Self>) -> Option<&'_ mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80264,"byte_end":80349,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80354,"byte_end":80425,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80430,"byte_end":80514,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80519,"byte_end":80547,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80552,"byte_end":80561,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80933,"byte_end":80944,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn take_output<'_>(Pin<&'_ mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80810,"byte_end":80879,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80884,"byte_end":80907,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80912,"byte_end":80921,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":81392,"byte_end":81405,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryMaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":81651,"byte_end":81655,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryMaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8348},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83155,"byte_end":83167,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":8350}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83268,"byte_end":83275,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"default","qualname":"<OptionFuture<F> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83416,"byte_end":83420,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<OptionFuture<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83704,"byte_end":83717,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OptionFuture<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83903,"byte_end":83907,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionFuture<T> as core::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":823},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84285,"byte_end":84291,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":825}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84165,"byte_end":84205,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84206,"byte_end":84273,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84878,"byte_end":84885,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84342,"byte_end":84413,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84414,"byte_end":84417,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84418,"byte_end":84484,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84485,"byte_end":84488,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84489,"byte_end":84503,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84504,"byte_end":84507,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84508,"byte_end":84515,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84516,"byte_end":84557,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84558,"byte_end":84591,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84592,"byte_end":84631,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84632,"byte_end":84635,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84636,"byte_end":84693,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84694,"byte_end":84737,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84738,"byte_end":84743,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84744,"byte_end":84747,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84748,"byte_end":84789,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84790,"byte_end":84852,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84853,"byte_end":84862,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84863,"byte_end":84870,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":85047,"byte_end":85050,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":85266,"byte_end":85270,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollFn<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8387},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":85819,"byte_end":85832,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":8389}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":86013,"byte_end":86017,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollImmediate<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Option<T>>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":85996,"byte_end":86005,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":86515,"byte_end":86528,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":87607,"byte_end":87616,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":887},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89240,"byte_end":89254,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"fn poll_immediate<F>(F) -> PollImmediate<F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88052,"byte_end":88125,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88126,"byte_end":88250,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88251,"byte_end":88254,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88255,"byte_end":88268,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88269,"byte_end":88272,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88273,"byte_end":88340,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88341,"byte_end":88344,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88345,"byte_end":88511,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88512,"byte_end":88637,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88638,"byte_end":88641,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88642,"byte_end":88656,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88657,"byte_end":88660,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88661,"byte_end":88668,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88669,"byte_end":88710,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88711,"byte_end":88735,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88736,"byte_end":88739,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88740,"byte_end":88792,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88793,"byte_end":88826,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88827,"byte_end":88830,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88831,"byte_end":88892,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88893,"byte_end":88923,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88924,"byte_end":88933,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88934,"byte_end":88941,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88942,"byte_end":88945,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88946,"byte_end":88970,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88971,"byte_end":88974,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88975,"byte_end":88982,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":88983,"byte_end":89024,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89025,"byte_end":89060,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89061,"byte_end":89108,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89109,"byte_end":89125,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89126,"byte_end":89185,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89186,"byte_end":89214,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89215,"byte_end":89224,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":89225,"byte_end":89232,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89677,"byte_end":89682,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89526,"byte_end":89573,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89598,"byte_end":89665,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89805,"byte_end":89815,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89722,"byte_end":89779,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89784,"byte_end":89793,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89946,"byte_end":89959,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Ready<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90084,"byte_end":90088,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Ready<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90067,"byte_end":90076,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":929},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90481,"byte_end":90486,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90235,"byte_end":90295,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90296,"byte_end":90299,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90300,"byte_end":90314,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90315,"byte_end":90318,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90319,"byte_end":90326,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90327,"byte_end":90368,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90369,"byte_end":90393,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90394,"byte_end":90397,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90398,"byte_end":90427,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90428,"byte_end":90455,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90456,"byte_end":90465,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90466,"byte_end":90473,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90821,"byte_end":90823,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90555,"byte_end":90622,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90623,"byte_end":90626,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90627,"byte_end":90641,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90642,"byte_end":90645,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90646,"byte_end":90653,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90654,"byte_end":90695,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90696,"byte_end":90720,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90721,"byte_end":90724,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90725,"byte_end":90763,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90764,"byte_end":90795,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90796,"byte_end":90805,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90806,"byte_end":90813,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91154,"byte_end":91157,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90887,"byte_end":90953,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90954,"byte_end":90957,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90958,"byte_end":90972,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90973,"byte_end":90976,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90977,"byte_end":90984,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90985,"byte_end":91026,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91027,"byte_end":91051,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91052,"byte_end":91055,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91056,"byte_end":91095,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91096,"byte_end":91128,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91129,"byte_end":91138,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":91139,"byte_end":91146,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8528},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93443,"byte_end":93447,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":8531},{"krate":0,"index":8532}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8573},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93513,"byte_end":93518,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":8577},{"krate":0,"index":8578},{"krate":0,"index":8579}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8630},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93590,"byte_end":93595,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":8635},{"krate":0,"index":8636},{"krate":0,"index":8637},{"krate":0,"index":8638}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8699},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93673,"byte_end":93678,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":8705},{"krate":0,"index":8706},{"krate":0,"index":8707},{"krate":0,"index":8708},{"krate":0,"index":8709}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":985},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94293,"byte_end":94297,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93716,"byte_end":93787,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93788,"byte_end":93791,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93792,"byte_end":93863,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93864,"byte_end":93939,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93940,"byte_end":93943,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":93944,"byte_end":94013,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94014,"byte_end":94040,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94041,"byte_end":94044,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94045,"byte_end":94059,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94060,"byte_end":94063,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94064,"byte_end":94071,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94072,"byte_end":94113,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94114,"byte_end":94138,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94139,"byte_end":94142,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94143,"byte_end":94167,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94168,"byte_end":94192,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94193,"byte_end":94227,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94228,"byte_end":94231,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94232,"byte_end":94267,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94268,"byte_end":94277,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94278,"byte_end":94285,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":988},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94843,"byte_end":94848,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3> where\nFut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94504,"byte_end":94556,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94557,"byte_end":94560,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94561,"byte_end":94575,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94576,"byte_end":94579,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94580,"byte_end":94587,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94588,"byte_end":94629,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94630,"byte_end":94654,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94655,"byte_end":94658,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94659,"byte_end":94683,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94684,"byte_end":94708,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94709,"byte_end":94733,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94734,"byte_end":94773,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94774,"byte_end":94777,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94778,"byte_end":94817,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94818,"byte_end":94827,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":94828,"byte_end":94835,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95510,"byte_end":95515,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95140,"byte_end":95192,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95193,"byte_end":95196,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95197,"byte_end":95211,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95212,"byte_end":95215,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95216,"byte_end":95223,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95224,"byte_end":95265,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95266,"byte_end":95290,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95291,"byte_end":95294,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95295,"byte_end":95319,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95320,"byte_end":95344,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95345,"byte_end":95369,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95370,"byte_end":95394,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95395,"byte_end":95437,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95438,"byte_end":95441,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95442,"byte_end":95484,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95485,"byte_end":95494,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95495,"byte_end":95502,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":997},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96280,"byte_end":96285,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95879,"byte_end":95931,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95932,"byte_end":95935,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95936,"byte_end":95950,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95951,"byte_end":95954,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95955,"byte_end":95962,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":95963,"byte_end":96004,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96005,"byte_end":96029,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96030,"byte_end":96033,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96034,"byte_end":96058,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96059,"byte_end":96083,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96084,"byte_end":96108,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96109,"byte_end":96133,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96134,"byte_end":96158,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96159,"byte_end":96204,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96205,"byte_end":96208,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96209,"byte_end":96254,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96255,"byte_end":96264,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join.rs","byte_start":96265,"byte_end":96272,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":97656,"byte_end":97663,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1080}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":97535,"byte_end":97602,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":97603,"byte_end":97644,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98114,"byte_end":98117,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JoinAll<F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99758,"byte_end":99766,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator, I::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98472,"byte_end":98552,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98553,"byte_end":98563,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98564,"byte_end":98567,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98568,"byte_end":98647,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98648,"byte_end":98728,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98729,"byte_end":98747,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98748,"byte_end":98751,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98752,"byte_end":98829,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98830,"byte_end":98887,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98888,"byte_end":98891,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98892,"byte_end":98906,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98907,"byte_end":98910,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98911,"byte_end":98993,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98994,"byte_end":99078,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99079,"byte_end":99163,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99164,"byte_end":99167,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99168,"byte_end":99237,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99238,"byte_end":99241,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99242,"byte_end":99310,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99311,"byte_end":99314,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99315,"byte_end":99392,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99393,"byte_end":99474,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99475,"byte_end":99478,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99479,"byte_end":99493,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99494,"byte_end":99497,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99498,"byte_end":99505,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99506,"byte_end":99547,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99548,"byte_end":99582,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99583,"byte_end":99586,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99587,"byte_end":99624,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99625,"byte_end":99628,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99629,"byte_end":99676,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99677,"byte_end":99680,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99681,"byte_end":99732,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99733,"byte_end":99742,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":99743,"byte_end":99750,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":100663,"byte_end":100667,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinAll<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":101602,"byte_end":101611,"line_start":163,"line_end":163,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<JoinAll<F> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8780},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102005,"byte_end":102011,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8783}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":101867,"byte_end":101908,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":101909,"byte_end":101976,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104275,"byte_end":104281,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102102,"byte_end":102172,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102173,"byte_end":102176,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102177,"byte_end":102255,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102256,"byte_end":102332,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102333,"byte_end":102405,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102406,"byte_end":102409,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102410,"byte_end":102482,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102483,"byte_end":102511,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102512,"byte_end":102515,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102516,"byte_end":102583,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102584,"byte_end":102648,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102649,"byte_end":102699,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102700,"byte_end":102703,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102704,"byte_end":102718,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102719,"byte_end":102722,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102723,"byte_end":102743,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102744,"byte_end":102747,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102748,"byte_end":102755,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102756,"byte_end":102797,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102798,"byte_end":102816,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102817,"byte_end":102833,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102834,"byte_end":102857,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102858,"byte_end":102879,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102880,"byte_end":102886,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102887,"byte_end":102890,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102891,"byte_end":102982,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102983,"byte_end":103008,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103009,"byte_end":103068,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103069,"byte_end":103078,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103079,"byte_end":103085,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103086,"byte_end":103111,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103112,"byte_end":103142,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103143,"byte_end":103149,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103150,"byte_end":103153,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103154,"byte_end":103200,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103201,"byte_end":103223,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103224,"byte_end":103246,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103247,"byte_end":103250,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103251,"byte_end":103313,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103314,"byte_end":103398,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103399,"byte_end":103472,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103473,"byte_end":103557,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103558,"byte_end":103631,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103632,"byte_end":103638,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103639,"byte_end":103642,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103643,"byte_end":103667,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103668,"byte_end":103677,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103678,"byte_end":103685,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103686,"byte_end":103689,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103690,"byte_end":103716,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103717,"byte_end":103720,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103721,"byte_end":103728,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103729,"byte_end":103788,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103789,"byte_end":103792,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103793,"byte_end":103846,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103847,"byte_end":103850,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103851,"byte_end":103926,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103927,"byte_end":103959,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103960,"byte_end":103992,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103993,"byte_end":103998,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":103999,"byte_end":104043,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104044,"byte_end":104070,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104071,"byte_end":104148,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104149,"byte_end":104228,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104229,"byte_end":104242,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104243,"byte_end":104253,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104254,"byte_end":104259,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104260,"byte_end":104267,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104660,"byte_end":104664,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"poll","qualname":"<Select<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":105622,"byte_end":105635,"line_start":131,"line_end":131,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8788},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106049,"byte_end":106058,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":8790}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":105909,"byte_end":105952,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":105970,"byte_end":106037,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106838,"byte_end":106848,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106136,"byte_end":106202,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106203,"byte_end":106206,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106207,"byte_end":106287,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106288,"byte_end":106366,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106367,"byte_end":106435,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106436,"byte_end":106439,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106440,"byte_end":106520,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106521,"byte_end":106595,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106596,"byte_end":106599,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106600,"byte_end":106677,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106678,"byte_end":106735,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106736,"byte_end":106739,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106740,"byte_end":106752,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106753,"byte_end":106756,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106757,"byte_end":106830,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107229,"byte_end":107239,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107154,"byte_end":107217,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107400,"byte_end":107404,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectAll<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":108069,"byte_end":108078,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8864},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111041,"byte_end":111048,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8868}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8909},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111118,"byte_end":111126,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8915}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8966},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111202,"byte_end":111210,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8974}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9035},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111292,"byte_end":111300,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":9041},{"krate":0,"index":9042},{"krate":0,"index":9043},{"krate":0,"index":9044},{"krate":0,"index":9045}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112573,"byte_end":112581,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111338,"byte_end":111411,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111412,"byte_end":111444,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111445,"byte_end":111448,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111449,"byte_end":111520,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111521,"byte_end":111597,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111598,"byte_end":111670,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111671,"byte_end":111687,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111688,"byte_end":111691,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111692,"byte_end":111761,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111762,"byte_end":111788,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111789,"byte_end":111792,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111793,"byte_end":111807,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111808,"byte_end":111811,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111812,"byte_end":111888,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111889,"byte_end":111925,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111926,"byte_end":111929,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111930,"byte_end":111937,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111938,"byte_end":111979,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":111980,"byte_end":112004,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112005,"byte_end":112008,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112009,"byte_end":112054,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112055,"byte_end":112100,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112101,"byte_end":112139,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112140,"byte_end":112143,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112144,"byte_end":112183,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112184,"byte_end":112193,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112194,"byte_end":112201,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112202,"byte_end":112205,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112206,"byte_end":112276,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112277,"byte_end":112292,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112293,"byte_end":112296,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112297,"byte_end":112304,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112305,"byte_end":112346,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112347,"byte_end":112371,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112372,"byte_end":112375,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112376,"byte_end":112421,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112422,"byte_end":112468,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112469,"byte_end":112507,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112508,"byte_end":112511,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112512,"byte_end":112547,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112548,"byte_end":112557,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112558,"byte_end":112565,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113237,"byte_end":113246,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> TryJoin3<Fut1, Fut2, Fut3>\nwhere Fut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>,\nFut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112819,"byte_end":112879,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112880,"byte_end":112883,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112884,"byte_end":112898,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112899,"byte_end":112902,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112903,"byte_end":112910,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112911,"byte_end":112952,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112953,"byte_end":112977,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112978,"byte_end":112981,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":112982,"byte_end":113027,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113028,"byte_end":113073,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113074,"byte_end":113119,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113120,"byte_end":113163,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113164,"byte_end":113167,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113168,"byte_end":113211,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113212,"byte_end":113221,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113222,"byte_end":113229,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114074,"byte_end":114083,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113604,"byte_end":113664,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113665,"byte_end":113668,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113669,"byte_end":113683,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113684,"byte_end":113687,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113688,"byte_end":113695,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113696,"byte_end":113737,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113738,"byte_end":113762,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113763,"byte_end":113766,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113767,"byte_end":113812,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113813,"byte_end":113858,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113859,"byte_end":113904,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113905,"byte_end":113950,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113951,"byte_end":113997,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":113998,"byte_end":114001,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114002,"byte_end":114048,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114049,"byte_end":114058,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114059,"byte_end":114066,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":115055,"byte_end":115064,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114533,"byte_end":114593,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114594,"byte_end":114597,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114598,"byte_end":114612,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114613,"byte_end":114616,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114617,"byte_end":114624,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114625,"byte_end":114666,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114667,"byte_end":114691,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114692,"byte_end":114695,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114696,"byte_end":114741,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114742,"byte_end":114787,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114788,"byte_end":114833,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114834,"byte_end":114879,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114880,"byte_end":114925,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114926,"byte_end":114975,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114976,"byte_end":114979,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":114980,"byte_end":115029,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":115030,"byte_end":115039,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join.rs","byte_start":115040,"byte_end":115047,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":116313,"byte_end":116323,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1360}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":116188,"byte_end":116233,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":116234,"byte_end":116301,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":116795,"byte_end":116798,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryJoinAll<F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":119006,"byte_end":119018,"line_start":117,"line_end":117,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117162,"byte_end":117241,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117242,"byte_end":117272,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117273,"byte_end":117276,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117277,"byte_end":117356,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117357,"byte_end":117437,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117438,"byte_end":117456,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117457,"byte_end":117460,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117461,"byte_end":117539,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117540,"byte_end":117620,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117621,"byte_end":117695,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117696,"byte_end":117719,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117720,"byte_end":117723,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117724,"byte_end":117801,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117802,"byte_end":117859,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117860,"byte_end":117863,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117864,"byte_end":117878,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117879,"byte_end":117882,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ `try_join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117883,"byte_end":117969,"line_start":82,"line_end":82,"column_start":1,"column_end":87}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":117970,"byte_end":118054,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118055,"byte_end":118139,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118140,"byte_end":118143,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118144,"byte_end":118213,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118214,"byte_end":118217,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118218,"byte_end":118286,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118287,"byte_end":118290,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118291,"byte_end":118368,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118369,"byte_end":118450,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118451,"byte_end":118454,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118455,"byte_end":118458,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118459,"byte_end":118473,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118474,"byte_end":118477,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118478,"byte_end":118485,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118486,"byte_end":118527,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118528,"byte_end":118574,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118575,"byte_end":118578,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118579,"byte_end":118602,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118603,"byte_end":118637,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118638,"byte_end":118672,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118673,"byte_end":118707,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118708,"byte_end":118714,"line_start":104,"line_end":104,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118715,"byte_end":118718,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118719,"byte_end":118782,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118783,"byte_end":118786,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118787,"byte_end":118810,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118811,"byte_end":118845,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118846,"byte_end":118881,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118882,"byte_end":118916,"line_start":111,"line_end":111,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118917,"byte_end":118923,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118924,"byte_end":118927,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118928,"byte_end":118980,"line_start":114,"line_end":114,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118981,"byte_end":118990,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":118991,"byte_end":118998,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":120138,"byte_end":120142,"line_start":156,"line_end":156,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryJoinAll<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":121671,"byte_end":121680,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<TryJoinAll<F> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9116},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122057,"byte_end":122066,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":9119}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":121915,"byte_end":121960,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":121961,"byte_end":122028,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123827,"byte_end":123837,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122336,"byte_end":122406,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122407,"byte_end":122410,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122411,"byte_end":122489,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122490,"byte_end":122566,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122567,"byte_end":122639,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122640,"byte_end":122643,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122644,"byte_end":122716,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122717,"byte_end":122745,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122746,"byte_end":122749,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122750,"byte_end":122817,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122818,"byte_end":122889,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122890,"byte_end":122940,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122941,"byte_end":122944,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122945,"byte_end":122959,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122960,"byte_end":122963,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122964,"byte_end":122971,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122972,"byte_end":123056,"line_start":34,"line_end":34,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123057,"byte_end":123060,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123061,"byte_end":123118,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123119,"byte_end":123122,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123123,"byte_end":123205,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123206,"byte_end":123263,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123264,"byte_end":123321,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123322,"byte_end":123348,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123349,"byte_end":123354,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123355,"byte_end":123450,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123451,"byte_end":123474,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123475,"byte_end":123555,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123556,"byte_end":123637,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123638,"byte_end":123708,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123709,"byte_end":123780,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123781,"byte_end":123794,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123795,"byte_end":123805,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123806,"byte_end":123811,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":123812,"byte_end":123819,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":124244,"byte_end":124248,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"poll","qualname":"<TrySelect<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9124},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125346,"byte_end":125354,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":9126}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125207,"byte_end":125249,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125267,"byte_end":125334,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":126076,"byte_end":126085,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125431,"byte_end":125525,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125526,"byte_end":125529,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125530,"byte_end":125619,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125620,"byte_end":125704,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125705,"byte_end":125786,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125787,"byte_end":125832,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125833,"byte_end":125836,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125837,"byte_end":125915,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125916,"byte_end":125973,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125974,"byte_end":125977,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125978,"byte_end":125990,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125991,"byte_end":125994,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125995,"byte_end":126068,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":126582,"byte_end":126586,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectOk<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":127946,"byte_end":127955,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectOk<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9133},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128813,"byte_end":128817,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":9130},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128780,"byte_end":128808,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128831,"byte_end":128832,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"name":"0","qualname":"::future::either::Either::Left::0","value":"A","parent":{"krate":0,"index":9133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128873,"byte_end":128878,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":9130},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128839,"byte_end":128868,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":9138},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128892,"byte_end":128893,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"name":"0","qualname":"::future::either::Either::Right::0","value":"B","parent":{"krate":0,"index":9136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9130},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128761,"byte_end":128767,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":9133},{"krate":0,"index":9136}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128238,"byte_end":128344,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128345,"byte_end":128348,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128349,"byte_end":128430,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128431,"byte_end":128434,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128435,"byte_end":128446,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128447,"byte_end":128479,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128480,"byte_end":128483,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128484,"byte_end":128525,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128526,"byte_end":128546,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128547,"byte_end":128550,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128551,"byte_end":128574,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128575,"byte_end":128614,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128615,"byte_end":128627,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128628,"byte_end":128668,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128669,"byte_end":128675,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128676,"byte_end":128679,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128680,"byte_end":128710,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128711,"byte_end":128719,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128720,"byte_end":128727,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":129054,"byte_end":129064,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"as_pin_ref","qualname":"<Either<A, B>>::as_pin_ref","value":"fn as_pin_ref<'_>(Pin<&'_ Self>) -> Either<Pin<&'_ A>, Pin<&'_ B>>","parent":null,"children":[],"decl_id":null,"docs":" Convert `Pin<&Either<A, B>>` to `Either<Pin<&A>, Pin<&B>>`,\n pinned projections of the inner variants.\n","sig":null,"attributes":[{"value":"/ Convert `Pin<&Either<A, B>>` to `Either<Pin<&A>, Pin<&B>>`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128929,"byte_end":128992,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"/ pinned projections of the inner variants.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128997,"byte_end":129042,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":129666,"byte_end":129676,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"as_pin_mut","qualname":"<Either<A, B>>::as_pin_mut","value":"fn as_pin_mut<'_>(Pin<&'_ mut Self>) -> Either<Pin<&'_ mut A>, Pin<&'_ mut B>>","parent":null,"children":[],"decl_id":null,"docs":" Convert `Pin<&mut Either<A, B>>` to `Either<Pin<&mut A>, Pin<&mut B>>`,\n pinned projections of the inner variants.\n","sig":null,"attributes":[{"value":"/ Convert `Pin<&mut Either<A, B>>` to `Either<Pin<&mut A>, Pin<&mut B>>`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":129529,"byte_end":129604,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ pinned projections of the inner variants.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":129609,"byte_end":129654,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130599,"byte_end":130611,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130451,"byte_end":130509,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130514,"byte_end":130517,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130522,"byte_end":130587,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130991,"byte_end":131004,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130842,"byte_end":130900,"line_start":79,"line_end":79,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130905,"byte_end":130908,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130913,"byte_end":130979,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131292,"byte_end":131302,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131219,"byte_end":131280,"line_start":91,"line_end":91,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131555,"byte_end":131559,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131883,"byte_end":131896,"line_start":120,"line_end":120,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132177,"byte_end":132186,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132416,"byte_end":132425,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Either<A, B> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132705,"byte_end":132718,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137951,"byte_end":137960,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137581,"byte_end":137668,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137669,"byte_end":137672,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137673,"byte_end":137749,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137750,"byte_end":137803,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137804,"byte_end":137807,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137808,"byte_end":137885,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/abortable.rs","byte_start":137886,"byte_end":137943,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":3704},{"krate":0,"index":3707},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3801},{"krate":0,"index":3804},{"krate":0,"index":3807},{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5003},{"krate":0,"index":5006},{"krate":0,"index":5009},{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5021},{"krate":0,"index":5024},{"krate":0,"index":5027},{"krate":0,"index":5030},{"krate":0,"index":5033},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5042},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5058},{"krate":0,"index":5061},{"krate":0,"index":5064},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5074},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5188},{"krate":0,"index":5191},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5284},{"krate":0,"index":5287},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5330},{"krate":0,"index":5333},{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5373},{"krate":0,"index":5376},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5408},{"krate":0,"index":5411},{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":5566},{"krate":0,"index":5569},{"krate":0,"index":5628},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5744},{"krate":0,"index":5747},{"krate":0,"index":6153},{"krate":0,"index":6156},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6282},{"krate":0,"index":6285},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6308},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6314},{"krate":0,"index":6317}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138212,"byte_end":138237,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138238,"byte_end":138241,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138242,"byte_end":138267,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138268,"byte_end":138271,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138272,"byte_end":138345,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138346,"byte_end":138371,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138372,"byte_end":138451,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138452,"byte_end":138489,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138490,"byte_end":138563,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":138564,"byte_end":138594,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":9147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":200841,"byte_end":200846,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9150},{"krate":0,"index":9151}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201357,"byte_end":201370,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chain<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201594,"byte_end":201603,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201998,"byte_end":202007,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chain<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9196},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":202976,"byte_end":202983,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":9199},{"krate":0,"index":9200}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203424,"byte_end":203437,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Collect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203626,"byte_end":203630,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Collect<St, C> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<C>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":204394,"byte_end":204399,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":9249},{"krate":0,"index":9250},{"krate":0,"index":9251}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":205048,"byte_end":205061,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unzip<St, FromA, FromB> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":205333,"byte_end":205337,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"poll","qualname":"<Unzip<St, FromA, FromB> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<(FromA, FromB)>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9307},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":206187,"byte_end":206193,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":9309},{"krate":0,"index":9310}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":206672,"byte_end":206676,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<Concat<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":207362,"byte_end":207375,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Concat<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9347},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":207865,"byte_end":207870,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":9349},{"krate":0,"index":9350}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208011,"byte_end":208014,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Count<St> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208348,"byte_end":208361,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Count<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208497,"byte_end":208501,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<Count<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209180,"byte_end":209185,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":9386},{"krate":0,"index":9387}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209500,"byte_end":209509,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209876,"byte_end":209885,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Cycle<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":210227,"byte_end":210240,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Cycle<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9424},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":210832,"byte_end":210841,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":9426},{"krate":0,"index":9427}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211149,"byte_end":211162,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Enumerate<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211312,"byte_end":211321,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211721,"byte_end":211730,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Enumerate<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9468},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":212473,"byte_end":212479,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9472},{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9475}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":212813,"byte_end":212816,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filter<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213639,"byte_end":213652,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Filter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":214014,"byte_end":214023,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":214753,"byte_end":214762,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":215866,"byte_end":215875,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9537},{"krate":0,"index":9538},{"krate":0,"index":9539}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216103,"byte_end":216106,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterMap<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216750,"byte_end":216763,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":217032,"byte_end":217041,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":217829,"byte_end":217838,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9594},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":218874,"byte_end":218881,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9597},{"krate":0,"index":9598}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":219243,"byte_end":219256,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<St, St::Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":219482,"byte_end":219491,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<St, St::Item> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9649},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":144210,"byte_end":144217,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9651}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":220698,"byte_end":220702,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":9707},{"krate":0,"index":9708},{"krate":0,"index":9709},{"krate":0,"index":9710}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":220978,"byte_end":220981,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fold<St, Fut, T, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221622,"byte_end":221635,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221883,"byte_end":221887,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9771},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223159,"byte_end":223162,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":9775},{"krate":0,"index":9776},{"krate":0,"index":9777},{"krate":0,"index":9778}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223412,"byte_end":223415,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Any<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":224039,"byte_end":224052,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Any<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":224296,"byte_end":224300,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Any<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<bool>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":225735,"byte_end":225738,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":9836},{"krate":0,"index":9837},{"krate":0,"index":9838},{"krate":0,"index":9839}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":225988,"byte_end":225991,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<All<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226614,"byte_end":226627,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<All<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226871,"byte_end":226875,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<All<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<bool>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":228337,"byte_end":228344,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":9897},{"krate":0,"index":9898},{"krate":0,"index":9899}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":228569,"byte_end":228572,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEach<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":229148,"byte_end":229161,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEach<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":229412,"byte_end":229416,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230301,"byte_end":230305,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9952},{"krate":0,"index":9953}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230757,"byte_end":230764,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn is_done<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230488,"byte_end":230550,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230555,"byte_end":230558,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230563,"byte_end":230631,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230636,"byte_end":230702,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230707,"byte_end":230745,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230903,"byte_end":230916,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":231031,"byte_end":231040,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<S::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":231384,"byte_end":231393,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Fuse<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9994},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232123,"byte_end":232135,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":9996}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":231953,"byte_end":232026,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232044,"byte_end":232111,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232698,"byte_end":232705,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> Option<&'_ St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232306,"byte_end":232379,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232384,"byte_end":232401,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232406,"byte_end":232409,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232414,"byte_end":232495,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232500,"byte_end":232582,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232587,"byte_end":232666,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232671,"byte_end":232686,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233316,"byte_end":233323,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> Option<&'_ mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232770,"byte_end":232837,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232842,"byte_end":232873,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232878,"byte_end":232881,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232886,"byte_end":232959,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232964,"byte_end":233019,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233024,"byte_end":233027,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233032,"byte_end":233113,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233118,"byte_end":233200,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233205,"byte_end":233284,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233289,"byte_end":233304,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233949,"byte_end":233960,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Option<Pin<&'_ mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233396,"byte_end":233470,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233475,"byte_end":233506,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233511,"byte_end":233514,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233519,"byte_end":233592,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233597,"byte_end":233652,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233657,"byte_end":233660,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233665,"byte_end":233746,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233751,"byte_end":233833,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233838,"byte_end":233917,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":233922,"byte_end":233937,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234593,"byte_end":234603,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234073,"byte_end":234135,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234140,"byte_end":234143,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234148,"byte_end":234220,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234225,"byte_end":234296,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234301,"byte_end":234304,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234309,"byte_end":234390,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234395,"byte_end":234477,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234482,"byte_end":234561,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234566,"byte_end":234581,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234722,"byte_end":234735,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<StreamFuture<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234897,"byte_end":234901,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<StreamFuture<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":145557,"byte_end":145564,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":10006}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10069},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":235627,"byte_end":235630,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10072},{"krate":0,"index":10073}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":235771,"byte_end":235774,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<St, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236161,"byte_end":236174,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236355,"byte_end":236364,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<St, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236607,"byte_end":236616,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Map<St, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10122},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":145925,"byte_end":145932,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":10126}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237290,"byte_end":237294,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":10204}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237134,"byte_end":237193,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237211,"byte_end":237278,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237607,"byte_end":237620,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Next as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237787,"byte_end":237791,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Next as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238302,"byte_end":238316,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":10212}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238118,"byte_end":238193,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238194,"byte_end":238205,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238223,"byte_end":238290,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238580,"byte_end":238593,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectNextSome as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238767,"byte_end":238771,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectNextSome as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":239907,"byte_end":239915,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":10219},{"krate":0,"index":10220}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240348,"byte_end":240352,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn peek<'_>(Pin<&'_ mut Self>) -> Peek","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240200,"byte_end":240266,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240271,"byte_end":240336,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240677,"byte_end":240686,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn poll_peek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<&'_ St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240439,"byte_end":240501,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240506,"byte_end":240509,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240514,"byte_end":240587,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240592,"byte_end":240665,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242001,"byte_end":242009,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"fn peek_mut<'_>(Pin<&'_ mut Self>) -> PeekMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241122,"byte_end":241196,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241201,"byte_end":241266,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241271,"byte_end":241274,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241279,"byte_end":241293,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241298,"byte_end":241301,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241306,"byte_end":241313,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241318,"byte_end":241359,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241364,"byte_end":241407,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241412,"byte_end":241437,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241442,"byte_end":241445,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241450,"byte_end":241506,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241511,"byte_end":241532,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241537,"byte_end":241540,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241545,"byte_end":241608,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241613,"byte_end":241667,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241672,"byte_end":241675,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241680,"byte_end":241756,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241761,"byte_end":241816,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241821,"byte_end":241841,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241846,"byte_end":241865,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241870,"byte_end":241879,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241884,"byte_end":241889,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241894,"byte_end":241897,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241902,"byte_end":241963,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241968,"byte_end":241977,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":241982,"byte_end":241989,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242184,"byte_end":242197,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"fn poll_peek_mut<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<&'_ mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242102,"byte_end":242172,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244188,"byte_end":244195,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"fn next_if<F, '_>(Pin<&'_ mut Self>, F) -> NextIf where\nF: for<'_> FnOnce(&'_ St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242660,"byte_end":242733,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242738,"byte_end":242772,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242777,"byte_end":242780,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242785,"byte_end":242860,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242865,"byte_end":242905,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242910,"byte_end":242913,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242918,"byte_end":242932,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242937,"byte_end":242940,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242945,"byte_end":242985,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242990,"byte_end":242993,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":242998,"byte_end":243005,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243010,"byte_end":243051,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243056,"byte_end":243099,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243104,"byte_end":243129,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243134,"byte_end":243137,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243142,"byte_end":243189,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243194,"byte_end":243215,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243220,"byte_end":243273,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243278,"byte_end":243346,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243351,"byte_end":243424,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243429,"byte_end":243494,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243499,"byte_end":243583,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243588,"byte_end":243633,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243638,"byte_end":243647,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243652,"byte_end":243659,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243664,"byte_end":243667,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243672,"byte_end":243708,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243713,"byte_end":243716,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243721,"byte_end":243728,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243733,"byte_end":243774,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243779,"byte_end":243822,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243827,"byte_end":243852,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243857,"byte_end":243860,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243865,"byte_end":243913,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243918,"byte_end":243939,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243944,"byte_end":243983,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":243988,"byte_end":244053,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244058,"byte_end":244099,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244104,"byte_end":244150,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244155,"byte_end":244164,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244169,"byte_end":244176,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245219,"byte_end":245229,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where T: ?Sized,\nSt::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244361,"byte_end":244434,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244439,"byte_end":244463,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244468,"byte_end":244471,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244476,"byte_end":244489,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244494,"byte_end":244497,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244502,"byte_end":244542,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244547,"byte_end":244550,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244555,"byte_end":244562,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244567,"byte_end":244608,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244613,"byte_end":244656,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244661,"byte_end":244686,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244691,"byte_end":244694,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244699,"byte_end":244746,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244751,"byte_end":244772,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244777,"byte_end":244830,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244835,"byte_end":244897,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244902,"byte_end":244975,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":244980,"byte_end":245039,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245044,"byte_end":245131,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245136,"byte_end":245181,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245186,"byte_end":245195,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245200,"byte_end":245207,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245558,"byte_end":245571,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peekable<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245733,"byte_end":245742,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Peekable<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":246003,"byte_end":246012,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Peekable<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":246740,"byte_end":246744,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":10264}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":246929,"byte_end":246932,"line_start":242,"line_end":242,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Peek as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247117,"byte_end":247130,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peek as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247295,"byte_end":247299,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"poll","qualname":"<Peek as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247802,"byte_end":247809,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":10305}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247997,"byte_end":248000,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PeekMut as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248191,"byte_end":248204,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PeekMut as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248376,"byte_end":248380,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"poll","qualname":"<PeekMut as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10343},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248892,"byte_end":248898,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":10347}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249099,"byte_end":249102,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIf as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249471,"byte_end":249484,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIf as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249783,"byte_end":249787,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10392},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":250762,"byte_end":250770,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":10396}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251016,"byte_end":251019,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIfEq as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251333,"byte_end":251346,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIfEq as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251562,"byte_end":251566,"line_start":413,"line_end":413,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIfEq as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10441},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252387,"byte_end":252391,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10443},{"krate":0,"index":10444}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252698,"byte_end":252711,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Skip<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252847,"byte_end":252856,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":253249,"byte_end":253258,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Skip<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":254154,"byte_end":254163,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10491},{"krate":0,"index":10492},{"krate":0,"index":10493}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":254516,"byte_end":254519,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SkipWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":255321,"byte_end":255334,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":255600,"byte_end":255609,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":256470,"byte_end":256479,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":257660,"byte_end":257664,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10556},{"krate":0,"index":10557}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":258002,"byte_end":258011,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":258457,"byte_end":258466,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Take<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":258929,"byte_end":258942,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Take<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":259673,"byte_end":259682,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10602},{"krate":0,"index":10603},{"krate":0,"index":10604},{"krate":0,"index":10605},{"krate":0,"index":10606}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":260024,"byte_end":260027,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":260840,"byte_end":260849,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":261747,"byte_end":261756,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":262339,"byte_end":262352,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10667},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":263155,"byte_end":263164,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":10670},{"krate":0,"index":10671},{"krate":0,"index":10672},{"krate":0,"index":10673}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":263729,"byte_end":263732,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeUntil<St, Fut> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264448,"byte_end":264459,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn take_future<'_>(&'_ mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264148,"byte_end":264202,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264207,"byte_end":264301,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264306,"byte_end":264369,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264374,"byte_end":264436,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265743,"byte_end":265754,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn take_result<'_>(&'_ mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264596,"byte_end":264661,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264666,"byte_end":264723,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264728,"byte_end":264731,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264736,"byte_end":264801,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264806,"byte_end":264866,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264871,"byte_end":264874,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264879,"byte_end":264947,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":264952,"byte_end":264995,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265000,"byte_end":265003,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265008,"byte_end":265022,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265027,"byte_end":265030,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265035,"byte_end":265042,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265047,"byte_end":265088,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265093,"byte_end":265117,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265122,"byte_end":265165,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265170,"byte_end":265198,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265203,"byte_end":265206,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265211,"byte_end":265249,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265254,"byte_end":265257,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265262,"byte_end":265280,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265285,"byte_end":265327,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265332,"byte_end":265347,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265352,"byte_end":265371,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265376,"byte_end":265401,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265406,"byte_end":265422,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265427,"byte_end":265460,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265465,"byte_end":265474,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265479,"byte_end":265486,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265491,"byte_end":265494,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265499,"byte_end":265548,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265553,"byte_end":265607,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265612,"byte_end":265615,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265620,"byte_end":265667,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265672,"byte_end":265705,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265710,"byte_end":265719,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265724,"byte_end":265731,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265930,"byte_end":265940,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn is_stopped<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265833,"byte_end":265894,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":265899,"byte_end":265918,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":266127,"byte_end":266136,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":266883,"byte_end":266892,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":267141,"byte_end":267154,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeUntil<St, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":267872,"byte_end":267876,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10728},{"krate":0,"index":10729},{"krate":0,"index":10730}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268098,"byte_end":268101,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Then<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268631,"byte_end":268644,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Then<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268886,"byte_end":268895,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Then<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":269453,"byte_end":269462,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Then<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10785},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":270409,"byte_end":270412,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10788},{"krate":0,"index":10789},{"krate":0,"index":10790},{"krate":0,"index":10791}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":270930,"byte_end":270937,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":270822,"byte_end":270896,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":270901,"byte_end":270918,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271293,"byte_end":271300,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271031,"byte_end":271099,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271104,"byte_end":271135,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271140,"byte_end":271143,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271148,"byte_end":271221,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271226,"byte_end":271281,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271675,"byte_end":271686,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271406,"byte_end":271481,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271486,"byte_end":271517,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271522,"byte_end":271525,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271530,"byte_end":271603,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271608,"byte_end":271663,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272092,"byte_end":272102,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271856,"byte_end":271919,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271924,"byte_end":271927,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":271932,"byte_end":272004,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272009,"byte_end":272080,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272291,"byte_end":272304,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Zip<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272530,"byte_end":272539,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":273494,"byte_end":273503,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Zip<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10842},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":274917,"byte_end":274923,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":10844},{"krate":0,"index":10845},{"krate":0,"index":10846}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":275654,"byte_end":275663,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":276800,"byte_end":276809,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":277236,"byte_end":277249,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10890},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":277994,"byte_end":278005,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":10892},{"krate":0,"index":10893}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":278467,"byte_end":278476,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadyChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":279888,"byte_end":279897,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ReadyChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":280115,"byte_end":280128,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ReadyChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":280881,"byte_end":280885,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10939},{"krate":0,"index":10940},{"krate":0,"index":10941}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281204,"byte_end":281207,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scan<St, S, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":282245,"byte_end":282254,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<B>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":283063,"byte_end":283072,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":283461,"byte_end":283474,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Scan<St, S, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":284309,"byte_end":284324,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11005},{"krate":0,"index":11006},{"krate":0,"index":11007}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":284578,"byte_end":284581,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufferUnordered<St> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":285323,"byte_end":285332,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":286289,"byte_end":286298,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<BufferUnordered<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":286745,"byte_end":286758,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<BufferUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11048},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":287588,"byte_end":287596,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11050},{"krate":0,"index":11051},{"krate":0,"index":11052}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":287889,"byte_end":287892,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Buffered<St> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":288566,"byte_end":288575,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Buffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":289518,"byte_end":289527,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Buffered<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":289967,"byte_end":289980,"line_start":103,"line_end":103,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Buffered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":290897,"byte_end":290913,"line_start":28,"line_end":28,"column_start":10,"column_end":26},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnorderedWithFlowController<St, ()>","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":290798,"byte_end":290875,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":290876,"byte_end":290887,"line_start":27,"line_end":27,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11132},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":299591,"byte_end":299625,"line_start":286,"line_end":286,"column_start":16,"column_end":50},"name":"FlattenUnorderedWithFlowController","qualname":"::stream::stream::flatten_unordered::FlattenUnorderedWithFlowController","value":"FlattenUnorderedWithFlowController {  }","parent":null,"children":[{"krate":0,"index":11135},{"krate":0,"index":11136},{"krate":0,"index":11137},{"krate":0,"index":11138},{"krate":0,"index":11139},{"krate":0,"index":11140},{"krate":0,"index":11141},{"krate":0,"index":11142}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method with ability to specify flow controller.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":300162,"byte_end":300165,"line_start":305,"line_end":305,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FlattenUnorderedWithFlowController<St, Fc> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":301843,"byte_end":301857,"line_start":353,"line_end":353,"column_start":11,"column_end":25},"name":"FlowController","qualname":"::stream::stream::flatten_unordered::FlowController","value":"FlowController<I, O>","parent":null,"children":[{"krate":0,"index":3506}],"decl_id":null,"docs":" Returns the next flow step based on the received item.\n","sig":null,"attributes":[{"value":"/ Returns the next flow step based on the received item.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":301774,"byte_end":301832,"line_start":352,"line_end":352,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":301949,"byte_end":301958,"line_start":355,"line_end":355,"column_start":8,"column_end":17},"name":"next_step","qualname":"::stream::stream::flatten_unordered::FlowController::next_step","value":"fn next_step(I) -> FlowStep<I, O>","parent":{"krate":0,"index":3503},"children":[],"decl_id":null,"docs":" Handles an item producing `FlowStep` describing the next flow step.\n","sig":null,"attributes":[{"value":"/ Handles an item producing `FlowStep` describing the next flow step.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":301870,"byte_end":301941,"line_start":354,"line_end":354,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302038,"byte_end":302047,"line_start":359,"line_end":359,"column_start":8,"column_end":17},"name":"next_step","qualname":"<() as stream::stream::flatten_unordered::FlowController>::next_step","value":"fn next_step(I) -> FlowStep<I, O>","parent":{"krate":0,"index":3503},"children":[],"decl_id":{"krate":0,"index":3506},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302264,"byte_end":302272,"line_start":368,"line_end":368,"column_start":5,"column_end":13},"name":"Continue","qualname":"::stream::stream::flatten_unordered::FlowStep::Continue","value":"FlowStep::Continue(C)","parent":{"krate":0,"index":11205},"children":[],"decl_id":null,"docs":" Just yields an item and continues standard flow.\n","sig":null,"attributes":[{"value":"/ Just yields an item and continues standard flow.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302207,"byte_end":302259,"line_start":367,"line_end":367,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":11210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302273,"byte_end":302274,"line_start":368,"line_end":368,"column_start":14,"column_end":15},"name":"0","qualname":"::stream::stream::flatten_unordered::FlowStep::Continue::0","value":"C","parent":{"krate":0,"index":11208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11211},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302347,"byte_end":302353,"line_start":370,"line_end":370,"column_start":5,"column_end":11},"name":"Return","qualname":"::stream::stream::flatten_unordered::FlowStep::Return","value":"FlowStep::Return(R)","parent":{"krate":0,"index":11205},"children":[],"decl_id":null,"docs":" Immediately returns an underlying item from the function.\n","sig":null,"attributes":[{"value":"/ Immediately returns an underlying item from the function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302281,"byte_end":302342,"line_start":369,"line_end":369,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":11213},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302354,"byte_end":302355,"line_start":370,"line_end":370,"column_start":12,"column_end":13},"name":"0","qualname":"::stream::stream::flatten_unordered::FlowStep::Return::0","value":"R","parent":{"krate":0,"index":11211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11205},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302186,"byte_end":302194,"line_start":366,"line_end":366,"column_start":10,"column_end":18},"name":"FlowStep","qualname":"::stream::stream::flatten_unordered::FlowStep","value":"enum FlowStep<C, R> { Continue(C), Return(R), }","parent":null,"children":[{"krate":0,"index":11208},{"krate":0,"index":11211}],"decl_id":null,"docs":" Describes the next flow step.\n","sig":null,"attributes":[{"value":"/ Describes the next flow step.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302119,"byte_end":302152,"line_start":364,"line_end":364,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302868,"byte_end":302881,"line_start":389,"line_end":389,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FlattenUnorderedWithFlowController<St, Fc> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":303212,"byte_end":303221,"line_start":402,"line_end":402,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FlattenUnorderedWithFlowController<St, Fc> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":148755,"byte_end":148771,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":11230}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11305},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":309432,"byte_end":309449,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11309},{"krate":0,"index":11310},{"krate":0,"index":11311},{"krate":0,"index":11312}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":309725,"byte_end":309728,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEachConcurrent<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310574,"byte_end":310587,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310844,"byte_end":310848,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150089,"byte_end":150098,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3636},{"krate":0,"index":3640},{"krate":0,"index":3645},{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3679},{"krate":0,"index":3681},{"krate":0,"index":3683},{"krate":0,"index":3684}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":149978,"byte_end":150052,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150053,"byte_end":150078,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151008,"byte_end":151012,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next<'_>(&'_ mut Self) -> Next where Self: Unpin","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150113,"byte_end":150179,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150184,"byte_end":150187,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150192,"byte_end":150260,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150265,"byte_end":150340,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150345,"byte_end":150420,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150425,"byte_end":150479,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150484,"byte_end":150559,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150564,"byte_end":150574,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150579,"byte_end":150582,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150587,"byte_end":150601,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150606,"byte_end":150609,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150614,"byte_end":150621,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150626,"byte_end":150667,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150672,"byte_end":150715,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150720,"byte_end":150723,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150728,"byte_end":150769,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150774,"byte_end":150777,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150782,"byte_end":150827,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150832,"byte_end":150877,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150882,"byte_end":150927,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150932,"byte_end":150974,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150979,"byte_end":150988,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150993,"byte_end":151000,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152251,"byte_end":152262,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151154,"byte_end":151226,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151231,"byte_end":151292,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151297,"byte_end":151300,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151305,"byte_end":151380,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151385,"byte_end":151439,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151444,"byte_end":151447,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151452,"byte_end":151525,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151530,"byte_end":151592,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151597,"byte_end":151672,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151677,"byte_end":151731,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151736,"byte_end":151811,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151816,"byte_end":151826,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151831,"byte_end":151834,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151839,"byte_end":151853,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151858,"byte_end":151861,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151866,"byte_end":151873,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151878,"byte_end":151919,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151924,"byte_end":151967,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151972,"byte_end":151975,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":151980,"byte_end":152017,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152022,"byte_end":152025,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152030,"byte_end":152082,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152087,"byte_end":152117,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152122,"byte_end":152125,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152130,"byte_end":152182,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152187,"byte_end":152217,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152222,"byte_end":152231,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152236,"byte_end":152243,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153263,"byte_end":153266,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152427,"byte_end":152502,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152507,"byte_end":152530,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152535,"byte_end":152538,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152543,"byte_end":152615,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152620,"byte_end":152684,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152689,"byte_end":152726,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152731,"byte_end":152734,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152739,"byte_end":152815,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152820,"byte_end":152891,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152896,"byte_end":152917,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152922,"byte_end":152925,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152930,"byte_end":152944,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152949,"byte_end":152952,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152957,"byte_end":152964,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":152969,"byte_end":153010,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153015,"byte_end":153058,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153063,"byte_end":153066,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153071,"byte_end":153108,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153113,"byte_end":153152,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153157,"byte_end":153160,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153165,"byte_end":153229,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153234,"byte_end":153243,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153248,"byte_end":153255,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154826,"byte_end":154835,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153433,"byte_end":153504,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153509,"byte_end":153528,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153533,"byte_end":153536,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153541,"byte_end":153606,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153611,"byte_end":153680,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153685,"byte_end":153696,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153701,"byte_end":153704,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153709,"byte_end":153784,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153789,"byte_end":153871,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153876,"byte_end":153894,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153899,"byte_end":153902,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153907,"byte_end":153930,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153935,"byte_end":153938,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":153943,"byte_end":154018,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154023,"byte_end":154110,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154115,"byte_end":154171,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154176,"byte_end":154179,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154184,"byte_end":154196,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154201,"byte_end":154204,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154209,"byte_end":154278,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154283,"byte_end":154308,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154313,"byte_end":154316,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154321,"byte_end":154335,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154340,"byte_end":154343,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154348,"byte_end":154355,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154360,"byte_end":154401,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154406,"byte_end":154449,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154454,"byte_end":154457,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154462,"byte_end":154513,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154518,"byte_end":154521,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154526,"byte_end":154566,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154571,"byte_end":154574,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154579,"byte_end":154631,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154636,"byte_end":154688,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154693,"byte_end":154745,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154750,"byte_end":154792,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154797,"byte_end":154806,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154811,"byte_end":154818,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156066,"byte_end":156072,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":154979,"byte_end":155051,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155056,"byte_end":155083,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155088,"byte_end":155091,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155096,"byte_end":155171,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155176,"byte_end":155247,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155252,"byte_end":155324,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155329,"byte_end":155403,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155408,"byte_end":155466,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155471,"byte_end":155474,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155479,"byte_end":155555,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155560,"byte_end":155634,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155639,"byte_end":155660,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155665,"byte_end":155668,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155673,"byte_end":155687,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155692,"byte_end":155695,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155700,"byte_end":155707,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155712,"byte_end":155753,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155758,"byte_end":155782,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155787,"byte_end":155830,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155835,"byte_end":155838,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155843,"byte_end":155881,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155886,"byte_end":155948,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155953,"byte_end":155956,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":155961,"byte_end":156032,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156037,"byte_end":156046,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156051,"byte_end":156058,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157399,"byte_end":157409,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156300,"byte_end":156375,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156380,"byte_end":156456,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156461,"byte_end":156464,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156469,"byte_end":156544,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156549,"byte_end":156624,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156629,"byte_end":156705,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156710,"byte_end":156775,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156780,"byte_end":156783,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156788,"byte_end":156864,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156869,"byte_end":156943,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156948,"byte_end":156973,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156978,"byte_end":156981,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":156986,"byte_end":157000,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157005,"byte_end":157012,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157017,"byte_end":157058,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157063,"byte_end":157106,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157111,"byte_end":157114,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157119,"byte_end":157157,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157162,"byte_end":157213,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157218,"byte_end":157269,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157274,"byte_end":157281,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157286,"byte_end":157289,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157294,"byte_end":157365,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157370,"byte_end":157379,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157384,"byte_end":157391,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158438,"byte_end":158442,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157641,"byte_end":157714,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157719,"byte_end":157747,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157752,"byte_end":157755,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157760,"byte_end":157834,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157839,"byte_end":157906,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157911,"byte_end":157956,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157961,"byte_end":157964,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":157969,"byte_end":158045,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158050,"byte_end":158076,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158081,"byte_end":158084,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158089,"byte_end":158103,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158108,"byte_end":158111,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158116,"byte_end":158123,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158128,"byte_end":158169,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158174,"byte_end":158217,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158222,"byte_end":158225,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158230,"byte_end":158267,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158272,"byte_end":158327,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158332,"byte_end":158335,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158340,"byte_end":158404,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158409,"byte_end":158418,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158423,"byte_end":158430,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159376,"byte_end":159383,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn collect<C>(Self) -> Collect<Self, C> where C: Default + Extend<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158651,"byte_end":158705,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158710,"byte_end":158765,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158770,"byte_end":158773,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158778,"byte_end":158846,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158851,"byte_end":158854,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158859,"byte_end":158873,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158878,"byte_end":158881,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158886,"byte_end":158893,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158898,"byte_end":158939,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158944,"byte_end":158975,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":158980,"byte_end":159015,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159020,"byte_end":159040,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159045,"byte_end":159048,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159053,"byte_end":159090,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159095,"byte_end":159098,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159103,"byte_end":159130,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159135,"byte_end":159159,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159164,"byte_end":159206,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159211,"byte_end":159220,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159225,"byte_end":159232,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159237,"byte_end":159240,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159245,"byte_end":159293,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159298,"byte_end":159342,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159347,"byte_end":159356,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159361,"byte_end":159368,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160502,"byte_end":160507,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159541,"byte_end":159592,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159597,"byte_end":159632,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159637,"byte_end":159640,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159645,"byte_end":159699,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159704,"byte_end":159761,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159766,"byte_end":159802,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159807,"byte_end":159810,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159815,"byte_end":159883,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159888,"byte_end":159891,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159896,"byte_end":159910,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159915,"byte_end":159918,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159923,"byte_end":159930,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159935,"byte_end":159976,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":159981,"byte_end":160012,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160017,"byte_end":160052,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160057,"byte_end":160077,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160082,"byte_end":160085,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160090,"byte_end":160127,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160132,"byte_end":160135,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160140,"byte_end":160167,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160172,"byte_end":160215,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160220,"byte_end":160263,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160268,"byte_end":160311,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160316,"byte_end":160323,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160328,"byte_end":160331,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160336,"byte_end":160390,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160395,"byte_end":160429,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160434,"byte_end":160468,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160473,"byte_end":160482,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160487,"byte_end":160494,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161803,"byte_end":161809,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160768,"byte_end":160830,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160835,"byte_end":160899,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160904,"byte_end":160907,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160912,"byte_end":160976,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":160981,"byte_end":161046,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161051,"byte_end":161097,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161102,"byte_end":161105,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161110,"byte_end":161159,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161164,"byte_end":161204,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161209,"byte_end":161212,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161217,"byte_end":161231,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161236,"byte_end":161239,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161244,"byte_end":161251,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161256,"byte_end":161297,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161302,"byte_end":161333,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161338,"byte_end":161373,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161378,"byte_end":161398,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161403,"byte_end":161406,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161411,"byte_end":161448,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161453,"byte_end":161456,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161461,"byte_end":161488,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161493,"byte_end":161524,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161529,"byte_end":161555,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161560,"byte_end":161626,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161631,"byte_end":161640,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161645,"byte_end":161652,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161657,"byte_end":161660,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161665,"byte_end":161700,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161705,"byte_end":161708,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161713,"byte_end":161769,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161774,"byte_end":161783,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":161788,"byte_end":161795,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162829,"byte_end":162834,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162039,"byte_end":162105,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162110,"byte_end":162113,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162118,"byte_end":162141,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162146,"byte_end":162149,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162154,"byte_end":162230,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162235,"byte_end":162310,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162315,"byte_end":162392,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162397,"byte_end":162400,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162405,"byte_end":162417,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162422,"byte_end":162425,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162430,"byte_end":162504,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162509,"byte_end":162522,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162527,"byte_end":162530,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162535,"byte_end":162549,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162554,"byte_end":162557,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162562,"byte_end":162569,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162574,"byte_end":162615,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162620,"byte_end":162663,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162668,"byte_end":162671,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162676,"byte_end":162714,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162719,"byte_end":162756,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162761,"byte_end":162764,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162769,"byte_end":162795,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162800,"byte_end":162809,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162814,"byte_end":162821,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163790,"byte_end":163795,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162956,"byte_end":162987,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":162992,"byte_end":162995,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163000,"byte_end":163067,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163072,"byte_end":163144,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163149,"byte_end":163206,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163211,"byte_end":163214,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163219,"byte_end":163233,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163238,"byte_end":163241,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163246,"byte_end":163253,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163258,"byte_end":163299,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163304,"byte_end":163347,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163352,"byte_end":163374,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163379,"byte_end":163426,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163431,"byte_end":163434,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163439,"byte_end":163480,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163485,"byte_end":163526,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163531,"byte_end":163572,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163577,"byte_end":163618,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163623,"byte_end":163664,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163669,"byte_end":163710,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163715,"byte_end":163756,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163761,"byte_end":163770,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163775,"byte_end":163782,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164745,"byte_end":164749,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":163930,"byte_end":163997,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164002,"byte_end":164054,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164059,"byte_end":164062,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164067,"byte_end":164137,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164142,"byte_end":164218,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164223,"byte_end":164299,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164304,"byte_end":164374,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164379,"byte_end":164405,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164410,"byte_end":164413,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164418,"byte_end":164432,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164437,"byte_end":164440,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164445,"byte_end":164452,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164457,"byte_end":164498,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164503,"byte_end":164546,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164551,"byte_end":164554,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164559,"byte_end":164602,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164607,"byte_end":164676,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164681,"byte_end":164711,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164716,"byte_end":164725,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164730,"byte_end":164737,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165450,"byte_end":165453,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":164984,"byte_end":165097,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165102,"byte_end":165105,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165110,"byte_end":165124,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165129,"byte_end":165132,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165137,"byte_end":165144,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165149,"byte_end":165190,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165195,"byte_end":165238,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165243,"byte_end":165246,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165251,"byte_end":165295,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165300,"byte_end":165369,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165374,"byte_end":165416,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165421,"byte_end":165430,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165435,"byte_end":165442,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166140,"byte_end":166143,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165668,"byte_end":165781,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165786,"byte_end":165789,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165794,"byte_end":165808,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165813,"byte_end":165816,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165821,"byte_end":165828,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165833,"byte_end":165874,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165879,"byte_end":165922,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165927,"byte_end":165930,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165935,"byte_end":165979,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":165984,"byte_end":166056,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166061,"byte_end":166106,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166111,"byte_end":166120,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166125,"byte_end":166132,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167317,"byte_end":167324,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166358,"byte_end":166423,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166428,"byte_end":166431,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166436,"byte_end":166450,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166455,"byte_end":166458,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166463,"byte_end":166470,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166475,"byte_end":166516,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166521,"byte_end":166552,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166557,"byte_end":166592,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166597,"byte_end":166617,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166622,"byte_end":166625,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166630,"byte_end":166669,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166674,"byte_end":166713,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166718,"byte_end":166757,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166762,"byte_end":166765,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166770,"byte_end":166797,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166802,"byte_end":166841,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166846,"byte_end":166885,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166890,"byte_end":166897,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166902,"byte_end":166929,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166934,"byte_end":166973,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":166978,"byte_end":167017,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167022,"byte_end":167029,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167034,"byte_end":167061,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167066,"byte_end":167107,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167112,"byte_end":167153,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167158,"byte_end":167165,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167170,"byte_end":167173,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167178,"byte_end":167237,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167242,"byte_end":167283,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167288,"byte_end":167297,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167302,"byte_end":167309,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169111,"byte_end":169128,"line_start":819,"line_end":819,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"fn flatten_unordered<impl Into<Option<usize>>>(Self, impl Into<Option<usize>>)\n-> FlattenUnordered<Self> where Self::Item: Stream + Unpin, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams produced by the base stream concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167501,"byte_end":167572,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams produced by the base stream concurrently.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167577,"byte_end":167636,"line_start":777,"line_end":777,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167641,"byte_end":167644,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ The only argument is an optional limit on the number of concurrently","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167649,"byte_end":167721,"line_start":779,"line_end":779,"column_start":5,"column_end":77}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167726,"byte_end":167803,"line_start":780,"line_end":780,"column_start":5,"column_end":82}},{"value":"/ will be polled at the same time. The `limit` argument is of type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167808,"byte_end":167876,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167881,"byte_end":167948,"line_start":782,"line_end":782,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":167953,"byte_end":168022,"line_start":783,"line_end":783,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168027,"byte_end":168099,"line_start":784,"line_end":784,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168104,"byte_end":168107,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168112,"byte_end":168126,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168131,"byte_end":168134,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168139,"byte_end":168146,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168151,"byte_end":168192,"line_start":789,"line_end":789,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168197,"byte_end":168228,"line_start":790,"line_end":790,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168233,"byte_end":168268,"line_start":791,"line_end":791,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168273,"byte_end":168293,"line_start":792,"line_end":792,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168298,"byte_end":168301,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168306,"byte_end":168345,"line_start":794,"line_end":794,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168350,"byte_end":168389,"line_start":795,"line_end":795,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168394,"byte_end":168433,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168438,"byte_end":168441,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168446,"byte_end":168473,"line_start":798,"line_end":798,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168478,"byte_end":168517,"line_start":799,"line_end":799,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168522,"byte_end":168561,"line_start":800,"line_end":800,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168566,"byte_end":168573,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168578,"byte_end":168605,"line_start":802,"line_end":802,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168610,"byte_end":168649,"line_start":803,"line_end":803,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168654,"byte_end":168693,"line_start":804,"line_end":804,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168698,"byte_end":168705,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168710,"byte_end":168737,"line_start":806,"line_end":806,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168742,"byte_end":168783,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168788,"byte_end":168829,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168834,"byte_end":168841,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168846,"byte_end":168849,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168854,"byte_end":168931,"line_start":811,"line_end":811,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168936,"byte_end":168954,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168959,"byte_end":168962,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":168967,"byte_end":169008,"line_start":814,"line_end":814,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169013,"byte_end":169022,"line_start":815,"line_end":815,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169027,"byte_end":169034,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169039,"byte_end":169073,"line_start":817,"line_end":817,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169078,"byte_end":169103,"line_start":818,"line_end":818,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170464,"byte_end":170472,"line_start":852,"line_end":852,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where F: FnMut(Self::Item)\n-> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169378,"byte_end":169450,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169455,"byte_end":169458,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169463,"byte_end":169540,"line_start":829,"line_end":829,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169545,"byte_end":169620,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169625,"byte_end":169701,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169706,"byte_end":169709,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169714,"byte_end":169797,"line_start":833,"line_end":833,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169802,"byte_end":169885,"line_start":834,"line_end":834,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169890,"byte_end":169893,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169898,"byte_end":169974,"line_start":836,"line_end":836,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":169979,"byte_end":170055,"line_start":837,"line_end":837,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170060,"byte_end":170081,"line_start":838,"line_end":838,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170086,"byte_end":170089,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170094,"byte_end":170108,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170113,"byte_end":170116,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170121,"byte_end":170128,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170133,"byte_end":170174,"line_start":843,"line_end":843,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170179,"byte_end":170222,"line_start":844,"line_end":844,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170227,"byte_end":170230,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170235,"byte_end":170272,"line_start":846,"line_end":846,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170277,"byte_end":170344,"line_start":847,"line_end":847,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170349,"byte_end":170352,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170357,"byte_end":170430,"line_start":849,"line_end":849,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170435,"byte_end":170444,"line_start":850,"line_end":850,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170449,"byte_end":170456,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172534,"byte_end":172552,"line_start":901,"line_end":901,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> FlatMapUnordered<Self, U, F> where U: Stream + Unpin, F: FnMut(Self::Item)\n-> U, Self: Sized, impl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170675,"byte_end":170746,"line_start":861,"line_end":861,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170751,"byte_end":170825,"line_start":862,"line_end":862,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170830,"byte_end":170844,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170849,"byte_end":170852,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170857,"byte_end":170924,"line_start":865,"line_end":865,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":170929,"byte_end":170998,"line_start":866,"line_end":866,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171003,"byte_end":171072,"line_start":867,"line_end":867,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171077,"byte_end":171144,"line_start":868,"line_end":868,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171149,"byte_end":171202,"line_start":869,"line_end":869,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171207,"byte_end":171210,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171215,"byte_end":171288,"line_start":871,"line_end":871,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171293,"byte_end":171370,"line_start":872,"line_end":872,"column_start":5,"column_end":82}},{"value":"/ will be polled at the same time. The `limit` argument is of type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171375,"byte_end":171443,"line_start":873,"line_end":873,"column_start":5,"column_end":73}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171448,"byte_end":171515,"line_start":874,"line_end":874,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171520,"byte_end":171589,"line_start":875,"line_end":875,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171594,"byte_end":171666,"line_start":876,"line_end":876,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171671,"byte_end":171674,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171679,"byte_end":171749,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171754,"byte_end":171823,"line_start":879,"line_end":879,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171828,"byte_end":171881,"line_start":880,"line_end":880,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171886,"byte_end":171889,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171894,"byte_end":171960,"line_start":882,"line_end":882,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":171965,"byte_end":172001,"line_start":883,"line_end":883,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172006,"byte_end":172009,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172014,"byte_end":172028,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172033,"byte_end":172036,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172041,"byte_end":172048,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172053,"byte_end":172094,"line_start":888,"line_end":888,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172099,"byte_end":172142,"line_start":889,"line_end":889,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172147,"byte_end":172150,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172155,"byte_end":172191,"line_start":891,"line_end":891,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172196,"byte_end":172272,"line_start":892,"line_end":892,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172277,"byte_end":172331,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172336,"byte_end":172354,"line_start":894,"line_end":894,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172359,"byte_end":172362,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172367,"byte_end":172431,"line_start":896,"line_end":896,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172436,"byte_end":172445,"line_start":897,"line_end":897,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172450,"byte_end":172457,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172462,"byte_end":172496,"line_start":899,"line_end":899,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172501,"byte_end":172526,"line_start":900,"line_end":900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173668,"byte_end":173672,"line_start":938,"line_end":938,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: for<'_> FnMut(&'_ mut S, Self::Item) -> Fut, Fut: Future<Output =\nOption<B>>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172859,"byte_end":172930,"line_start":914,"line_end":914,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172935,"byte_end":172965,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172970,"byte_end":172973,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":172978,"byte_end":173053,"line_start":917,"line_end":917,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173058,"byte_end":173129,"line_start":918,"line_end":918,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173134,"byte_end":173174,"line_start":919,"line_end":919,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173179,"byte_end":173182,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173187,"byte_end":173201,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173206,"byte_end":173209,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173214,"byte_end":173221,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173226,"byte_end":173267,"line_start":924,"line_end":924,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173272,"byte_end":173296,"line_start":925,"line_end":925,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173301,"byte_end":173344,"line_start":926,"line_end":926,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173349,"byte_end":173352,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173357,"byte_end":173395,"line_start":928,"line_end":928,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173400,"byte_end":173403,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173408,"byte_end":173452,"line_start":930,"line_end":930,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173457,"byte_end":173477,"line_start":931,"line_end":931,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173482,"byte_end":173545,"line_start":932,"line_end":932,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173550,"byte_end":173557,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173562,"byte_end":173565,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173570,"byte_end":173634,"line_start":935,"line_end":935,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173639,"byte_end":173648,"line_start":936,"line_end":936,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173653,"byte_end":173660,"line_start":937,"line_end":937,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174719,"byte_end":174729,"line_start":969,"line_end":969,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":173941,"byte_end":174015,"line_start":947,"line_end":947,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174020,"byte_end":174043,"line_start":948,"line_end":948,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174048,"byte_end":174051,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174056,"byte_end":174129,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174134,"byte_end":174206,"line_start":951,"line_end":951,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174211,"byte_end":174288,"line_start":952,"line_end":952,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174293,"byte_end":174304,"line_start":953,"line_end":953,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174309,"byte_end":174312,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174317,"byte_end":174331,"line_start":955,"line_end":955,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174336,"byte_end":174339,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174344,"byte_end":174351,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174356,"byte_end":174397,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174402,"byte_end":174426,"line_start":959,"line_end":959,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174431,"byte_end":174474,"line_start":960,"line_end":960,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174479,"byte_end":174482,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174487,"byte_end":174525,"line_start":962,"line_end":962,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174530,"byte_end":174533,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174538,"byte_end":174601,"line_start":964,"line_end":964,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174606,"byte_end":174609,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174614,"byte_end":174685,"line_start":966,"line_end":966,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174690,"byte_end":174699,"line_start":967,"line_end":967,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174704,"byte_end":174711,"line_start":968,"line_end":968,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175718,"byte_end":175728,"line_start":999,"line_end":999,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":174963,"byte_end":175039,"line_start":978,"line_end":978,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175044,"byte_end":175067,"line_start":979,"line_end":979,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175072,"byte_end":175075,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175080,"byte_end":175155,"line_start":981,"line_end":981,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175160,"byte_end":175232,"line_start":982,"line_end":982,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175237,"byte_end":175304,"line_start":983,"line_end":983,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175309,"byte_end":175312,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175317,"byte_end":175331,"line_start":985,"line_end":985,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175336,"byte_end":175339,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175344,"byte_end":175351,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175356,"byte_end":175397,"line_start":988,"line_end":988,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175402,"byte_end":175426,"line_start":989,"line_end":989,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175431,"byte_end":175474,"line_start":990,"line_end":990,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175479,"byte_end":175482,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175487,"byte_end":175525,"line_start":992,"line_end":992,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175530,"byte_end":175533,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175538,"byte_end":175601,"line_start":994,"line_end":994,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175606,"byte_end":175609,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175614,"byte_end":175684,"line_start":996,"line_end":996,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175689,"byte_end":175698,"line_start":997,"line_end":997,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175703,"byte_end":175710,"line_start":998,"line_end":998,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177244,"byte_end":177254,"line_start":1044,"line_end":1044,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":175962,"byte_end":176032,"line_start":1008,"line_end":1008,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176037,"byte_end":176040,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176045,"byte_end":176116,"line_start":1010,"line_end":1010,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176121,"byte_end":176193,"line_start":1011,"line_end":1011,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176198,"byte_end":176268,"line_start":1012,"line_end":1012,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176273,"byte_end":176276,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176281,"byte_end":176352,"line_start":1014,"line_end":1014,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176357,"byte_end":176443,"line_start":1015,"line_end":1015,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176448,"byte_end":176515,"line_start":1016,"line_end":1016,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176520,"byte_end":176584,"line_start":1017,"line_end":1017,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176589,"byte_end":176592,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176597,"byte_end":176611,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176616,"byte_end":176619,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176624,"byte_end":176631,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176636,"byte_end":176677,"line_start":1022,"line_end":1022,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176682,"byte_end":176706,"line_start":1023,"line_end":1023,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176711,"byte_end":176754,"line_start":1024,"line_end":1024,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176759,"byte_end":176787,"line_start":1025,"line_end":1025,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176792,"byte_end":176795,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176800,"byte_end":176838,"line_start":1027,"line_end":1027,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176843,"byte_end":176846,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176851,"byte_end":176869,"line_start":1029,"line_end":1029,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176874,"byte_end":176916,"line_start":1030,"line_end":1030,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176921,"byte_end":176936,"line_start":1031,"line_end":1031,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176941,"byte_end":176960,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176965,"byte_end":176990,"line_start":1033,"line_end":1033,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":176995,"byte_end":177011,"line_start":1034,"line_end":1034,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177016,"byte_end":177043,"line_start":1035,"line_end":1035,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177048,"byte_end":177057,"line_start":1036,"line_end":1036,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177062,"byte_end":177069,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177074,"byte_end":177077,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177082,"byte_end":177127,"line_start":1039,"line_end":1039,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177132,"byte_end":177135,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177140,"byte_end":177210,"line_start":1041,"line_end":1041,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177215,"byte_end":177224,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177229,"byte_end":177236,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178493,"byte_end":178501,"line_start":1085,"line_end":1085,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177435,"byte_end":177506,"line_start":1052,"line_end":1052,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177511,"byte_end":177554,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177559,"byte_end":177562,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177567,"byte_end":177642,"line_start":1055,"line_end":1055,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177647,"byte_end":177717,"line_start":1056,"line_end":1056,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177722,"byte_end":177760,"line_start":1057,"line_end":1057,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177765,"byte_end":177768,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177773,"byte_end":177848,"line_start":1059,"line_end":1059,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177853,"byte_end":177896,"line_start":1060,"line_end":1060,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177901,"byte_end":177904,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177909,"byte_end":177982,"line_start":1062,"line_end":1062,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":177987,"byte_end":178030,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178035,"byte_end":178038,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178043,"byte_end":178057,"line_start":1065,"line_end":1065,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178062,"byte_end":178065,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178070,"byte_end":178077,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178082,"byte_end":178123,"line_start":1068,"line_end":1068,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178128,"byte_end":178152,"line_start":1069,"line_end":1069,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178157,"byte_end":178200,"line_start":1070,"line_end":1070,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178205,"byte_end":178208,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178213,"byte_end":178231,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178236,"byte_end":178239,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178244,"byte_end":178249,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178254,"byte_end":178315,"line_start":1075,"line_end":1075,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178320,"byte_end":178342,"line_start":1076,"line_end":1076,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178347,"byte_end":178376,"line_start":1077,"line_end":1077,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178381,"byte_end":178392,"line_start":1078,"line_end":1078,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178397,"byte_end":178415,"line_start":1079,"line_end":1079,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178420,"byte_end":178425,"line_start":1080,"line_end":1080,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178430,"byte_end":178433,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178438,"byte_end":178459,"line_start":1082,"line_end":1082,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178464,"byte_end":178473,"line_start":1083,"line_end":1083,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178478,"byte_end":178485,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180663,"byte_end":180682,"line_start":1141,"line_end":1141,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178720,"byte_end":178791,"line_start":1094,"line_end":1094,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178796,"byte_end":178870,"line_start":1095,"line_end":1095,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178875,"byte_end":178889,"line_start":1096,"line_end":1096,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178894,"byte_end":178897,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178902,"byte_end":178965,"line_start":1098,"line_end":1098,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":178970,"byte_end":179041,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179046,"byte_end":179098,"line_start":1100,"line_end":1100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179103,"byte_end":179106,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179111,"byte_end":179186,"line_start":1102,"line_end":1102,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179191,"byte_end":179261,"line_start":1103,"line_end":1103,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179266,"byte_end":179330,"line_start":1104,"line_end":1104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179335,"byte_end":179338,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179343,"byte_end":179414,"line_start":1106,"line_end":1106,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179419,"byte_end":179489,"line_start":1107,"line_end":1107,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179494,"byte_end":179555,"line_start":1108,"line_end":1108,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179560,"byte_end":179627,"line_start":1109,"line_end":1109,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179632,"byte_end":179701,"line_start":1110,"line_end":1110,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179706,"byte_end":179778,"line_start":1111,"line_end":1111,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179783,"byte_end":179786,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179791,"byte_end":179866,"line_start":1113,"line_end":1113,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179871,"byte_end":179928,"line_start":1114,"line_end":1114,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179933,"byte_end":179936,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179941,"byte_end":179955,"line_start":1116,"line_end":1116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179960,"byte_end":179963,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179968,"byte_end":179975,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":179980,"byte_end":180021,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180026,"byte_end":180060,"line_start":1120,"line_end":1120,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180065,"byte_end":180108,"line_start":1121,"line_end":1121,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180113,"byte_end":180116,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180121,"byte_end":180161,"line_start":1123,"line_end":1123,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180166,"byte_end":180206,"line_start":1124,"line_end":1124,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180211,"byte_end":180251,"line_start":1125,"line_end":1125,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180256,"byte_end":180259,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180264,"byte_end":180332,"line_start":1127,"line_end":1127,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180337,"byte_end":180359,"line_start":1128,"line_end":1128,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180364,"byte_end":180389,"line_start":1129,"line_end":1129,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180394,"byte_end":180424,"line_start":1130,"line_end":1130,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180429,"byte_end":180438,"line_start":1131,"line_end":1131,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180443,"byte_end":180449,"line_start":1132,"line_end":1132,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180454,"byte_end":180480,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180485,"byte_end":180511,"line_start":1134,"line_end":1134,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180516,"byte_end":180542,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180547,"byte_end":180561,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180566,"byte_end":180574,"line_start":1137,"line_end":1137,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180579,"byte_end":180586,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180591,"byte_end":180625,"line_start":1139,"line_end":1139,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180630,"byte_end":180655,"line_start":1140,"line_end":1140,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181507,"byte_end":181511,"line_start":1170,"line_end":1170,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":180999,"byte_end":181070,"line_start":1154,"line_end":1154,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181075,"byte_end":181078,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181083,"byte_end":181156,"line_start":1156,"line_end":1156,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181161,"byte_end":181196,"line_start":1157,"line_end":1157,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181201,"byte_end":181204,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181209,"byte_end":181223,"line_start":1159,"line_end":1159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181228,"byte_end":181231,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181236,"byte_end":181243,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181248,"byte_end":181289,"line_start":1162,"line_end":1162,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181294,"byte_end":181337,"line_start":1163,"line_end":1163,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181342,"byte_end":181345,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181350,"byte_end":181396,"line_start":1165,"line_end":1165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181401,"byte_end":181404,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181409,"byte_end":181473,"line_start":1167,"line_end":1167,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181478,"byte_end":181487,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181492,"byte_end":181499,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182176,"byte_end":182180,"line_start":1193,"line_end":1193,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181649,"byte_end":181721,"line_start":1177,"line_end":1177,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181726,"byte_end":181729,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181734,"byte_end":181807,"line_start":1179,"line_end":1179,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181812,"byte_end":181858,"line_start":1180,"line_end":1180,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181863,"byte_end":181866,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181871,"byte_end":181885,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181890,"byte_end":181893,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181898,"byte_end":181905,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181910,"byte_end":181951,"line_start":1185,"line_end":1185,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":181956,"byte_end":181999,"line_start":1186,"line_end":1186,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182004,"byte_end":182007,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182012,"byte_end":182058,"line_start":1188,"line_end":1188,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182063,"byte_end":182066,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182071,"byte_end":182142,"line_start":1190,"line_end":1190,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182147,"byte_end":182156,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182161,"byte_end":182168,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183801,"byte_end":183805,"line_start":1239,"line_end":1239,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182318,"byte_end":182389,"line_start":1200,"line_end":1200,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182394,"byte_end":182467,"line_start":1201,"line_end":1201,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182472,"byte_end":182510,"line_start":1202,"line_end":1202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182515,"byte_end":182518,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182523,"byte_end":182577,"line_start":1204,"line_end":1204,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182582,"byte_end":182654,"line_start":1205,"line_end":1205,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182659,"byte_end":182735,"line_start":1206,"line_end":1206,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182740,"byte_end":182808,"line_start":1207,"line_end":1207,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182813,"byte_end":182889,"line_start":1208,"line_end":1208,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182894,"byte_end":182916,"line_start":1209,"line_end":1209,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182921,"byte_end":182924,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":182929,"byte_end":182996,"line_start":1211,"line_end":1211,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183001,"byte_end":183069,"line_start":1212,"line_end":1212,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183074,"byte_end":183087,"line_start":1213,"line_end":1213,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183092,"byte_end":183095,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183100,"byte_end":183114,"line_start":1215,"line_end":1215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183119,"byte_end":183122,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183127,"byte_end":183134,"line_start":1217,"line_end":1217,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183139,"byte_end":183182,"line_start":1218,"line_end":1218,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183187,"byte_end":183230,"line_start":1219,"line_end":1219,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183235,"byte_end":183263,"line_start":1220,"line_end":1220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183268,"byte_end":183271,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183276,"byte_end":183294,"line_start":1222,"line_end":1222,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183299,"byte_end":183337,"line_start":1223,"line_end":1223,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183342,"byte_end":183357,"line_start":1224,"line_end":1224,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183362,"byte_end":183379,"line_start":1225,"line_end":1225,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183384,"byte_end":183426,"line_start":1226,"line_end":1226,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183431,"byte_end":183466,"line_start":1227,"line_end":1227,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183471,"byte_end":183515,"line_start":1228,"line_end":1228,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183520,"byte_end":183529,"line_start":1229,"line_end":1229,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183534,"byte_end":183548,"line_start":1230,"line_end":1230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183553,"byte_end":183556,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183561,"byte_end":183604,"line_start":1232,"line_end":1232,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183609,"byte_end":183646,"line_start":1233,"line_end":1233,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183651,"byte_end":183688,"line_start":1234,"line_end":1234,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183693,"byte_end":183727,"line_start":1235,"line_end":1235,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183732,"byte_end":183766,"line_start":1236,"line_end":1236,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183771,"byte_end":183781,"line_start":1237,"line_end":1237,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183786,"byte_end":183793,"line_start":1238,"line_end":1238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184734,"byte_end":184740,"line_start":1272,"line_end":1272,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn by_ref<'_>(&'_ mut Self) -> &'_ mut Self","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183930,"byte_end":183977,"line_start":1246,"line_end":1246,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183982,"byte_end":183985,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":183990,"byte_end":184064,"line_start":1248,"line_end":1248,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184069,"byte_end":184106,"line_start":1249,"line_end":1249,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184111,"byte_end":184114,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184119,"byte_end":184133,"line_start":1251,"line_end":1251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184138,"byte_end":184141,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184146,"byte_end":184153,"line_start":1253,"line_end":1253,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184158,"byte_end":184199,"line_start":1254,"line_end":1254,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184204,"byte_end":184247,"line_start":1255,"line_end":1255,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184252,"byte_end":184255,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184260,"byte_end":184300,"line_start":1257,"line_end":1257,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184305,"byte_end":184308,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184313,"byte_end":184342,"line_start":1259,"line_end":1259,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184347,"byte_end":184375,"line_start":1260,"line_end":1260,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184380,"byte_end":184437,"line_start":1261,"line_end":1261,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184442,"byte_end":184469,"line_start":1262,"line_end":1262,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184474,"byte_end":184497,"line_start":1263,"line_end":1263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184502,"byte_end":184505,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184510,"byte_end":184545,"line_start":1265,"line_end":1265,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184550,"byte_end":184578,"line_start":1266,"line_end":1266,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184583,"byte_end":184640,"line_start":1267,"line_end":1267,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184645,"byte_end":184672,"line_start":1268,"line_end":1268,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184677,"byte_end":184700,"line_start":1269,"line_end":1269,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184705,"byte_end":184714,"line_start":1270,"line_end":1270,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":184719,"byte_end":184726,"line_start":1271,"line_end":1271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":186887,"byte_end":186892,"line_start":1329,"line_end":1329,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":186658,"byte_end":186699,"line_start":1324,"line_end":1324,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":186704,"byte_end":186707,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":186712,"byte_end":186787,"line_start":1326,"line_end":1326,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":186792,"byte_end":186849,"line_start":1327,"line_end":1327,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":186854,"byte_end":186879,"line_start":1328,"line_end":1328,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187348,"byte_end":187359,"line_start":1343,"line_end":1343,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187047,"byte_end":187088,"line_start":1336,"line_end":1336,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187093,"byte_end":187096,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187101,"byte_end":187160,"line_start":1338,"line_end":1338,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187165,"byte_end":187168,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187173,"byte_end":187248,"line_start":1340,"line_end":1340,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187253,"byte_end":187310,"line_start":1341,"line_end":1341,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187315,"byte_end":187340,"line_start":1342,"line_end":1342,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188252,"byte_end":188260,"line_start":1364,"line_end":1364,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187512,"byte_end":187575,"line_start":1350,"line_end":1350,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187580,"byte_end":187583,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187588,"byte_end":187663,"line_start":1352,"line_end":1352,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187668,"byte_end":187744,"line_start":1353,"line_end":1353,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187749,"byte_end":187822,"line_start":1354,"line_end":1354,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187827,"byte_end":187900,"line_start":1355,"line_end":1355,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187905,"byte_end":187947,"line_start":1356,"line_end":1356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187952,"byte_end":187955,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":187960,"byte_end":188025,"line_start":1358,"line_end":1358,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188030,"byte_end":188033,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188038,"byte_end":188113,"line_start":1360,"line_end":1360,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188118,"byte_end":188175,"line_start":1361,"line_end":1361,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188180,"byte_end":188214,"line_start":1362,"line_end":1362,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188219,"byte_end":188244,"line_start":1363,"line_end":1363,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189940,"byte_end":189956,"line_start":1409,"line_end":1409,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188454,"byte_end":188529,"line_start":1372,"line_end":1372,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188534,"byte_end":188537,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188542,"byte_end":188617,"line_start":1374,"line_end":1374,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188622,"byte_end":188696,"line_start":1375,"line_end":1375,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188701,"byte_end":188773,"line_start":1376,"line_end":1376,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188778,"byte_end":188852,"line_start":1377,"line_end":1377,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188857,"byte_end":188886,"line_start":1378,"line_end":1378,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188891,"byte_end":188894,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188899,"byte_end":188964,"line_start":1380,"line_end":1380,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188969,"byte_end":188972,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":188977,"byte_end":189052,"line_start":1382,"line_end":1382,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189057,"byte_end":189114,"line_start":1383,"line_end":1383,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189119,"byte_end":189122,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189127,"byte_end":189141,"line_start":1385,"line_end":1385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189146,"byte_end":189149,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189154,"byte_end":189161,"line_start":1387,"line_end":1387,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189166,"byte_end":189207,"line_start":1388,"line_end":1388,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189212,"byte_end":189246,"line_start":1389,"line_end":1389,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189251,"byte_end":189294,"line_start":1390,"line_end":1390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189299,"byte_end":189302,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189307,"byte_end":189357,"line_start":1392,"line_end":1392,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189362,"byte_end":189412,"line_start":1393,"line_end":1393,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189417,"byte_end":189420,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189425,"byte_end":189492,"line_start":1395,"line_end":1395,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189497,"byte_end":189559,"line_start":1396,"line_end":1396,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189564,"byte_end":189567,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189572,"byte_end":189597,"line_start":1398,"line_end":1398,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189602,"byte_end":189656,"line_start":1399,"line_end":1399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189661,"byte_end":189664,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189669,"byte_end":189694,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189699,"byte_end":189753,"line_start":1402,"line_end":1402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189758,"byte_end":189761,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189766,"byte_end":189810,"line_start":1404,"line_end":1404,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189815,"byte_end":189851,"line_start":1405,"line_end":1405,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189856,"byte_end":189863,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189868,"byte_end":189902,"line_start":1407,"line_end":1407,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":189907,"byte_end":189932,"line_start":1408,"line_end":1408,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190852,"byte_end":190855,"line_start":1439,"line_end":1439,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190164,"byte_end":190212,"line_start":1417,"line_end":1417,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190217,"byte_end":190220,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190225,"byte_end":190298,"line_start":1419,"line_end":1419,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190303,"byte_end":190375,"line_start":1420,"line_end":1420,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190380,"byte_end":190393,"line_start":1421,"line_end":1421,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190398,"byte_end":190401,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190406,"byte_end":190420,"line_start":1423,"line_end":1423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190425,"byte_end":190428,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190433,"byte_end":190440,"line_start":1425,"line_end":1425,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190445,"byte_end":190486,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190491,"byte_end":190534,"line_start":1427,"line_end":1427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190539,"byte_end":190542,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190547,"byte_end":190585,"line_start":1429,"line_end":1429,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190590,"byte_end":190629,"line_start":1430,"line_end":1430,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190634,"byte_end":190637,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190642,"byte_end":190676,"line_start":1432,"line_end":1432,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190681,"byte_end":190722,"line_start":1433,"line_end":1433,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190727,"byte_end":190755,"line_start":1434,"line_end":1434,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190760,"byte_end":190810,"line_start":1435,"line_end":1435,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190815,"byte_end":190824,"line_start":1436,"line_end":1436,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190829,"byte_end":190836,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":190841,"byte_end":190844,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191763,"byte_end":191768,"line_start":1470,"line_end":1470,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191036,"byte_end":191073,"line_start":1447,"line_end":1447,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191078,"byte_end":191081,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191086,"byte_end":191157,"line_start":1449,"line_end":1449,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191162,"byte_end":191238,"line_start":1450,"line_end":1450,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191243,"byte_end":191246,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191251,"byte_end":191258,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191263,"byte_end":191304,"line_start":1453,"line_end":1453,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191309,"byte_end":191352,"line_start":1454,"line_end":1454,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191357,"byte_end":191360,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191365,"byte_end":191422,"line_start":1456,"line_end":1456,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191427,"byte_end":191483,"line_start":1457,"line_end":1457,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191488,"byte_end":191491,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191496,"byte_end":191536,"line_start":1459,"line_end":1459,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191541,"byte_end":191544,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191549,"byte_end":191597,"line_start":1461,"line_end":1461,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191602,"byte_end":191630,"line_start":1462,"line_end":1462,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191635,"byte_end":191650,"line_start":1463,"line_end":1463,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191655,"byte_end":191674,"line_start":1464,"line_end":1464,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191679,"byte_end":191697,"line_start":1465,"line_end":1465,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191702,"byte_end":191717,"line_start":1466,"line_end":1466,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191722,"byte_end":191729,"line_start":1467,"line_end":1467,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191734,"byte_end":191743,"line_start":1468,"line_end":1468,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191748,"byte_end":191755,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192106,"byte_end":192114,"line_start":1481,"line_end":1481,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":191960,"byte_end":192015,"line_start":1478,"line_end":1478,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192020,"byte_end":192023,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192028,"byte_end":192098,"line_start":1480,"line_end":1480,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193149,"byte_end":193155,"line_start":1507,"line_end":1507,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192247,"byte_end":192314,"line_start":1488,"line_end":1488,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192319,"byte_end":192322,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192327,"byte_end":192401,"line_start":1490,"line_end":1490,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192406,"byte_end":192478,"line_start":1491,"line_end":1491,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192483,"byte_end":192535,"line_start":1492,"line_end":1492,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192540,"byte_end":192543,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192548,"byte_end":192621,"line_start":1494,"line_end":1494,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192626,"byte_end":192700,"line_start":1495,"line_end":1495,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192705,"byte_end":192780,"line_start":1496,"line_end":1496,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192785,"byte_end":192857,"line_start":1497,"line_end":1497,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192862,"byte_end":192874,"line_start":1498,"line_end":1498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192879,"byte_end":192882,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192887,"byte_end":192962,"line_start":1500,"line_end":1500,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":192967,"byte_end":193024,"line_start":1501,"line_end":1501,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193029,"byte_end":193032,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193037,"byte_end":193049,"line_start":1503,"line_end":1503,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193054,"byte_end":193057,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193062,"byte_end":193111,"line_start":1505,"line_end":1505,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193116,"byte_end":193141,"line_start":1506,"line_end":1506,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":194135,"byte_end":194147,"line_start":1532,"line_end":1532,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193316,"byte_end":193389,"line_start":1514,"line_end":1514,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193394,"byte_end":193397,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193402,"byte_end":193475,"line_start":1516,"line_end":1516,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193480,"byte_end":193550,"line_start":1517,"line_end":1517,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193555,"byte_end":193630,"line_start":1518,"line_end":1518,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193635,"byte_end":193712,"line_start":1519,"line_end":1519,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193717,"byte_end":193745,"line_start":1520,"line_end":1520,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193750,"byte_end":193753,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193758,"byte_end":193831,"line_start":1522,"line_end":1522,"column_start":5,"column_end":78}},{"value":"/ it will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193836,"byte_end":193860,"line_start":1523,"line_end":1523,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193865,"byte_end":193868,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193873,"byte_end":193948,"line_start":1525,"line_end":1525,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":193953,"byte_end":194010,"line_start":1526,"line_end":1526,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":194015,"byte_end":194018,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":194023,"byte_end":194035,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":194040,"byte_end":194043,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":194048,"byte_end":194097,"line_start":1530,"line_end":1530,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":194102,"byte_end":194127,"line_start":1531,"line_end":1531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":196944,"byte_end":196951,"line_start":1592,"line_end":1592,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":196641,"byte_end":196714,"line_start":1587,"line_end":1587,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":196719,"byte_end":196722,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":196727,"byte_end":196796,"line_start":1589,"line_end":1589,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":196801,"byte_end":196870,"line_start":1590,"line_end":1590,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":196875,"byte_end":196936,"line_start":1591,"line_end":1591,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197407,"byte_end":197418,"line_start":1605,"line_end":1605,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197128,"byte_end":197203,"line_start":1600,"line_end":1600,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197208,"byte_end":197229,"line_start":1601,"line_end":1601,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197234,"byte_end":197237,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197242,"byte_end":197322,"line_start":1603,"line_end":1603,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197327,"byte_end":197399,"line_start":1604,"line_end":1604,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197871,"byte_end":197883,"line_start":1618,"line_end":1618,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197592,"byte_end":197668,"line_start":1613,"line_end":1613,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197673,"byte_end":197694,"line_start":1614,"line_end":1614,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197699,"byte_end":197702,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197707,"byte_end":197786,"line_start":1616,"line_end":1616,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":197791,"byte_end":197863,"line_start":1617,"line_end":1617,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198159,"byte_end":198174,"line_start":1628,"line_end":1628,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn poll_next_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<Self::Item>> where Self: Unpin","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198058,"byte_end":198129,"line_start":1626,"line_end":1626,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198134,"byte_end":198151,"line_start":1627,"line_end":1627,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200318,"byte_end":200334,"line_start":1685,"line_end":1685,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn select_next_some<'_>(&'_ mut Self) -> SelectNextSome where Self: Unpin +\nFusedStream","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198321,"byte_end":198396,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198401,"byte_end":198411,"line_start":1636,"line_end":1636,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198416,"byte_end":198419,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198424,"byte_end":198497,"line_start":1638,"line_end":1638,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198502,"byte_end":198570,"line_start":1639,"line_end":1639,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198575,"byte_end":198623,"line_start":1640,"line_end":1640,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198628,"byte_end":198703,"line_start":1641,"line_end":1641,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198708,"byte_end":198784,"line_start":1642,"line_end":1642,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198789,"byte_end":198815,"line_start":1643,"line_end":1643,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198820,"byte_end":198823,"line_start":1644,"line_end":1644,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198828,"byte_end":198901,"line_start":1645,"line_end":1645,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198906,"byte_end":198976,"line_start":1646,"line_end":1646,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":198981,"byte_end":199021,"line_start":1647,"line_end":1647,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199026,"byte_end":199029,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199034,"byte_end":199088,"line_start":1649,"line_end":1649,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199093,"byte_end":199177,"line_start":1650,"line_end":1650,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199182,"byte_end":199185,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199190,"byte_end":199204,"line_start":1652,"line_end":1652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199209,"byte_end":199212,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199217,"byte_end":199224,"line_start":1654,"line_end":1654,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199229,"byte_end":199270,"line_start":1655,"line_end":1655,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199275,"byte_end":199309,"line_start":1656,"line_end":1656,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199314,"byte_end":199369,"line_start":1657,"line_end":1657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199374,"byte_end":199377,"line_start":1658,"line_end":1658,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199382,"byte_end":199417,"line_start":1659,"line_end":1659,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199422,"byte_end":199472,"line_start":1660,"line_end":1660,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199477,"byte_end":199499,"line_start":1661,"line_end":1661,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199504,"byte_end":199514,"line_start":1662,"line_end":1662,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199519,"byte_end":199536,"line_start":1663,"line_end":1663,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199541,"byte_end":199567,"line_start":1664,"line_end":1664,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199572,"byte_end":199627,"line_start":1665,"line_end":1665,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199632,"byte_end":199661,"line_start":1666,"line_end":1666,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199666,"byte_end":199729,"line_start":1667,"line_end":1667,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199734,"byte_end":199780,"line_start":1668,"line_end":1668,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199785,"byte_end":199799,"line_start":1669,"line_end":1669,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199804,"byte_end":199873,"line_start":1670,"line_end":1670,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199878,"byte_end":199903,"line_start":1671,"line_end":1671,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199908,"byte_end":199961,"line_start":1672,"line_end":1672,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":199966,"byte_end":199995,"line_start":1673,"line_end":1673,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200000,"byte_end":200013,"line_start":1674,"line_end":1674,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200018,"byte_end":200088,"line_start":1675,"line_end":1675,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200093,"byte_end":200152,"line_start":1676,"line_end":1676,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200157,"byte_end":200187,"line_start":1677,"line_end":1677,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200192,"byte_end":200201,"line_start":1678,"line_end":1678,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200206,"byte_end":200211,"line_start":1679,"line_end":1679,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200216,"byte_end":200241,"line_start":1680,"line_end":1680,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200246,"byte_end":200255,"line_start":1681,"line_end":1681,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200260,"byte_end":200267,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200272,"byte_end":200275,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":200280,"byte_end":200310,"line_start":1684,"line_end":1684,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11366},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":353853,"byte_end":353860,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":11370},{"krate":0,"index":11371},{"krate":0,"index":11372}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354085,"byte_end":354088,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AndThen<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354764,"byte_end":354773,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":355340,"byte_end":355349,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":355876,"byte_end":355889,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<AndThen<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11430},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":313404,"byte_end":313411,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11433}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11499},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":313659,"byte_end":313668,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11502}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11568},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":313969,"byte_end":313979,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11571}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11634},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356595,"byte_end":356605,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":11636}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356892,"byte_end":356905,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":357081,"byte_end":357090,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IntoStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":357064,"byte_end":357073,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":357227,"byte_end":357236,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoStream<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11677},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":314405,"byte_end":314410,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11680}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11746},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":314687,"byte_end":314693,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11749}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11812},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":357953,"byte_end":357959,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11818}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358183,"byte_end":358186,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrElse<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358853,"byte_end":358862,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":359566,"byte_end":359575,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":360098,"byte_end":360111,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OrElse<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360788,"byte_end":360795,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":11876}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360621,"byte_end":360691,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360709,"byte_end":360776,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":361132,"byte_end":361145,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryNext as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":361335,"byte_end":361339,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryNext as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11881},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":361880,"byte_end":361890,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":11885},{"krate":0,"index":11886},{"krate":0,"index":11887}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362118,"byte_end":362121,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEach<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362776,"byte_end":362780,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11938},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":363776,"byte_end":363785,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":11942},{"krate":0,"index":11943},{"krate":0,"index":11944},{"krate":0,"index":11945}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4166},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364123,"byte_end":364126,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilter<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364798,"byte_end":364811,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":365094,"byte_end":365103,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":365842,"byte_end":365851,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12003},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":366913,"byte_end":366925,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":12007},{"krate":0,"index":12008},{"krate":0,"index":12009}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367156,"byte_end":367159,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilterMap<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367753,"byte_end":367766,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":368068,"byte_end":368077,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":368917,"byte_end":368926,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12064},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":369923,"byte_end":369933,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":12066},{"krate":0,"index":12067}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370487,"byte_end":370500,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370811,"byte_end":370820,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":372254,"byte_end":372273,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"TryFlattenUnordered","qualname":"::stream::try_stream::try_flatten_unordered::TryFlattenUnordered","value":"TryFlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":12112}],"decl_id":null,"docs":" Stream for the [`try_flatten_unordered`](super::TryStreamExt::try_flatten_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12164},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373147,"byte_end":373181,"line_start":43,"line_end":43,"column_start":16,"column_end":50},"name":"NestedTryStreamIntoEitherTryStream","qualname":"::stream::try_stream::try_flatten_unordered::NestedTryStreamIntoEitherTryStream","value":"NestedTryStreamIntoEitherTryStream {  }","parent":null,"children":[{"krate":0,"index":12166}],"decl_id":null,"docs":" Emits either successful streams or single-item streams containing the underlying errors.\n This's a wrapper for `FlattenUnordered` to reuse its logic over `TryStream`.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12204},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373780,"byte_end":373786,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Single","qualname":"::stream::try_stream::try_flatten_unordered::Single","value":"","parent":null,"children":[],"decl_id":null,"docs":" Emits a single item immediately, then stream will be terminated.\n","sig":null,"attributes":[{"value":"/ Emits a single item immediately, then stream will be terminated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373676,"byte_end":373744,"line_start":68,"line_end":68,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374207,"byte_end":374216,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Single<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374343,"byte_end":374352,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Single<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12214},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374564,"byte_end":374588,"line_start":100,"line_end":100,"column_start":12,"column_end":36},"name":"PropagateBaseStreamError","qualname":"::stream::try_stream::try_flatten_unordered::PropagateBaseStreamError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immediately propagates errors occurred in the base stream.\n","sig":null,"attributes":[{"value":"/ Immediately propagates errors occurred in the base stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374460,"byte_end":374522,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374976,"byte_end":374985,"line_start":111,"line_end":111,"column_start":8,"column_end":17},"name":"next_step","qualname":"<PropagateBaseStreamError<St> as stream::stream::flatten_unordered::FlowController>::next_step","value":"fn next_step(BaseStreamItem<St>)\n-> FlowStep<BaseStreamItem<St>, InnerStreamItem<St>>","parent":{"krate":0,"index":3503},"children":[],"decl_id":{"krate":0,"index":3506},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":375882,"byte_end":375891,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<NestedTryStreamIntoEitherTryStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":376794,"byte_end":376807,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NestedTryStreamIntoEitherTryStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":377679,"byte_end":377689,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":12229},{"krate":0,"index":12230}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":378042,"byte_end":378055,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryCollect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4417},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":378267,"byte_end":378271,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryCollect<St, C> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_concat.rs","byte_start":379015,"byte_end":379024,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":12277},{"krate":0,"index":12278}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_concat.rs","byte_start":379525,"byte_end":379529,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryConcat<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12315},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":380535,"byte_end":380544,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":12317},{"krate":0,"index":12318},{"krate":0,"index":12319}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":381436,"byte_end":381445,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":382823,"byte_end":382832,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383274,"byte_end":383287,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12363},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383839,"byte_end":383853,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383616,"byte_end":383700,"line_start":113,"line_end":113,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383701,"byte_end":383704,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383705,"byte_end":383802,"line_start":115,"line_end":115,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":12367},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383860,"byte_end":383870,"line_start":117,"line_end":117,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"alloc::vec::Vec<T>","parent":{"krate":0,"index":12363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383872,"byte_end":383877,"line_start":117,"line_end":117,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":12363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383949,"byte_end":383952,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":384108,"byte_end":384111,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":384715,"byte_end":384722,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":12389},{"krate":0,"index":12390},{"krate":0,"index":12391},{"krate":0,"index":12392}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385001,"byte_end":385004,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFold<St, Fut, T, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385692,"byte_end":385705,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385994,"byte_end":385998,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389170,"byte_end":389180,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where F: FnMut(T)\n-> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387313,"byte_end":387389,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387390,"byte_end":387393,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387394,"byte_end":387470,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387471,"byte_end":387541,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387542,"byte_end":387601,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387602,"byte_end":387605,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387606,"byte_end":387684,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387685,"byte_end":387762,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387763,"byte_end":387827,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387828,"byte_end":387831,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387832,"byte_end":387904,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387905,"byte_end":387983,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":387984,"byte_end":388013,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388014,"byte_end":388017,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388018,"byte_end":388095,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388096,"byte_end":388160,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388161,"byte_end":388213,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388214,"byte_end":388217,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388218,"byte_end":388295,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388296,"byte_end":388368,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388369,"byte_end":388438,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388439,"byte_end":388517,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388518,"byte_end":388521,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388522,"byte_end":388535,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388536,"byte_end":388539,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388540,"byte_end":388547,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388548,"byte_end":388581,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388582,"byte_end":388605,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388606,"byte_end":388647,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388648,"byte_end":388694,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388695,"byte_end":388698,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388699,"byte_end":388758,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388759,"byte_end":388781,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388782,"byte_end":388816,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388817,"byte_end":388826,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388827,"byte_end":388830,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388831,"byte_end":388854,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388855,"byte_end":388894,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388895,"byte_end":388931,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388932,"byte_end":388975,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388976,"byte_end":388992,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":388993,"byte_end":389013,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389014,"byte_end":389023,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389024,"byte_end":389031,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389032,"byte_end":389035,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389036,"byte_end":389101,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389102,"byte_end":389144,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389145,"byte_end":389154,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389155,"byte_end":389162,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389543,"byte_end":389552,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":12457},{"krate":0,"index":12458},{"krate":0,"index":12459}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389763,"byte_end":389766,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryUnfold<T, F, Fut> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4636},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":390105,"byte_end":390114,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryUnfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":391460,"byte_end":391472,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":12514},{"krate":0,"index":12515},{"krate":0,"index":12516},{"krate":0,"index":12517},{"krate":0,"index":12518}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":391830,"byte_end":391833,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySkipWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":392716,"byte_end":392725,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":393641,"byte_end":393650,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":394190,"byte_end":394203,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":395009,"byte_end":395021,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":12583},{"krate":0,"index":12584},{"krate":0,"index":12585},{"krate":0,"index":12586},{"krate":0,"index":12587}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":395394,"byte_end":395397,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryTakeWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4750},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":396274,"byte_end":396283,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4751},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":397233,"byte_end":397242,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":397856,"byte_end":397869,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffer_unordered.rs","byte_start":398790,"byte_end":398808,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":12650},{"krate":0,"index":12651},{"krate":0,"index":12652}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffer_unordered.rs","byte_start":399522,"byte_end":399531,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12696},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffered.rs","byte_start":401348,"byte_end":401359,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":12698},{"krate":0,"index":12699},{"krate":0,"index":12700}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4864},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffered.rs","byte_start":402087,"byte_end":402096,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBuffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12744},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":403896,"byte_end":403916,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":12748},{"krate":0,"index":12749},{"krate":0,"index":12750},{"krate":0,"index":12751}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4912},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404195,"byte_end":404198,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEachConcurrent<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4917},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404636,"byte_end":404649,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405405,"byte_end":405409,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318186,"byte_end":318198,"line_start":166,"line_end":166,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":4936},{"krate":0,"index":4938},{"krate":0,"index":4941},{"krate":0,"index":4944},{"krate":0,"index":4947},{"krate":0,"index":4950},{"krate":0,"index":4952},{"krate":0,"index":4954},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4959},{"krate":0,"index":4962},{"krate":0,"index":4965},{"krate":0,"index":4969},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4975},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318124,"byte_end":318175,"line_start":165,"line_end":165,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318740,"byte_end":318748,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318216,"byte_end":318290,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318295,"byte_end":318321,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318326,"byte_end":318329,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318334,"byte_end":318348,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318353,"byte_end":318356,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318361,"byte_end":318368,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318373,"byte_end":318414,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318419,"byte_end":318465,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318470,"byte_end":318473,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318478,"byte_end":318498,"line_start":176,"line_end":176,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318503,"byte_end":318548,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318553,"byte_end":318584,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318589,"byte_end":318592,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318597,"byte_end":318651,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318656,"byte_end":318707,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318712,"byte_end":318720,"line_start":182,"line_end":182,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318725,"byte_end":318732,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4938},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319444,"byte_end":319450,"line_start":209,"line_end":209,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318924,"byte_end":318997,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319002,"byte_end":319033,"line_start":193,"line_end":193,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319038,"byte_end":319041,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319046,"byte_end":319060,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319065,"byte_end":319068,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319073,"byte_end":319080,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319085,"byte_end":319126,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319131,"byte_end":319177,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319182,"byte_end":319185,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319190,"byte_end":319210,"line_start":201,"line_end":201,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319215,"byte_end":319256,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319261,"byte_end":319292,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319297,"byte_end":319300,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319305,"byte_end":319358,"line_start":205,"line_end":205,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319363,"byte_end":319411,"line_start":206,"line_end":206,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319416,"byte_end":319424,"line_start":207,"line_end":207,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319429,"byte_end":319436,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4941},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320159,"byte_end":320166,"line_start":234,"line_end":234,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319640,"byte_end":319711,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319716,"byte_end":319747,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319752,"byte_end":319755,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319760,"byte_end":319774,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319779,"byte_end":319782,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319787,"byte_end":319794,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319799,"byte_end":319840,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319845,"byte_end":319891,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319896,"byte_end":319899,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319904,"byte_end":319924,"line_start":226,"line_end":226,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319929,"byte_end":319970,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":319975,"byte_end":320007,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320012,"byte_end":320015,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320020,"byte_end":320073,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320078,"byte_end":320126,"line_start":231,"line_end":231,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320131,"byte_end":320139,"line_start":232,"line_end":232,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320144,"byte_end":320151,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321771,"byte_end":321779,"line_start":280,"line_end":280,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where F: FnMut(Self::Ok)\n-> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320358,"byte_end":320434,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320439,"byte_end":320479,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320484,"byte_end":320487,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320492,"byte_end":320568,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320573,"byte_end":320649,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320654,"byte_end":320727,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320732,"byte_end":320774,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320779,"byte_end":320782,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320787,"byte_end":320860,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320865,"byte_end":320896,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320901,"byte_end":320904,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320909,"byte_end":320983,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":320988,"byte_end":321062,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321067,"byte_end":321083,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321088,"byte_end":321091,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321096,"byte_end":321167,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321172,"byte_end":321198,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321203,"byte_end":321206,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321211,"byte_end":321283,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321288,"byte_end":321337,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321342,"byte_end":321345,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321350,"byte_end":321364,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321369,"byte_end":321372,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321377,"byte_end":321384,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321389,"byte_end":321420,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321425,"byte_end":321449,"line_start":267,"line_end":267,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321454,"byte_end":321492,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321497,"byte_end":321500,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321505,"byte_end":321561,"line_start":270,"line_end":270,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321566,"byte_end":321569,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321574,"byte_end":321609,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321614,"byte_end":321653,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321658,"byte_end":321682,"line_start":274,"line_end":274,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321687,"byte_end":321703,"line_start":275,"line_end":275,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321708,"byte_end":321724,"line_start":276,"line_end":276,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321729,"byte_end":321739,"line_start":277,"line_end":277,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321744,"byte_end":321751,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":321756,"byte_end":321763,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322931,"byte_end":322938,"line_start":306,"line_end":306,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322032,"byte_end":322097,"line_start":289,"line_end":289,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322102,"byte_end":322151,"line_start":290,"line_end":290,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322156,"byte_end":322159,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322164,"byte_end":322243,"line_start":292,"line_end":292,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322248,"byte_end":322322,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322327,"byte_end":322403,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322408,"byte_end":322453,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322458,"byte_end":322461,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322466,"byte_end":322541,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322546,"byte_end":322586,"line_start":298,"line_end":298,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322591,"byte_end":322594,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322599,"byte_end":322708,"line_start":300,"line_end":300,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322713,"byte_end":322787,"line_start":301,"line_end":301,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322792,"byte_end":322808,"line_start":302,"line_end":302,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322813,"byte_end":322816,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322821,"byte_end":322892,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":322897,"byte_end":322923,"line_start":305,"line_end":305,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323490,"byte_end":323500,"line_start":321,"line_end":321,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323187,"byte_end":323261,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323266,"byte_end":323276,"line_start":316,"line_end":316,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323281,"byte_end":323284,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323289,"byte_end":323359,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323364,"byte_end":323440,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323445,"byte_end":323482,"line_start":320,"line_end":320,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323989,"byte_end":324000,"line_start":334,"line_end":334,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnMut(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323698,"byte_end":323777,"line_start":329,"line_end":329,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323782,"byte_end":323785,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323790,"byte_end":323860,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323865,"byte_end":323939,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":323944,"byte_end":323981,"line_start":333,"line_end":333,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324921,"byte_end":324932,"line_start":363,"line_end":363,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324203,"byte_end":324256,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324261,"byte_end":324305,"line_start":343,"line_end":343,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324310,"byte_end":324313,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324318,"byte_end":324367,"line_start":345,"line_end":345,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324372,"byte_end":324445,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324450,"byte_end":324470,"line_start":347,"line_end":347,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324475,"byte_end":324478,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324483,"byte_end":324497,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324502,"byte_end":324505,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324510,"byte_end":324517,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324522,"byte_end":324581,"line_start":352,"line_end":352,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324586,"byte_end":324589,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324594,"byte_end":324613,"line_start":354,"line_end":354,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324618,"byte_end":324636,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324641,"byte_end":324713,"line_start":356,"line_end":356,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324718,"byte_end":324748,"line_start":357,"line_end":357,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324753,"byte_end":324760,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324765,"byte_end":324839,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324844,"byte_end":324847,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324852,"byte_end":324901,"line_start":361,"line_end":361,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":324906,"byte_end":324913,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4955},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325827,"byte_end":325835,"line_start":390,"line_end":390,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn try_next<'_>(&'_ mut Self) -> TryNext where Self: Unpin","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325088,"byte_end":325162,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325167,"byte_end":325241,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325246,"byte_end":325258,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325263,"byte_end":325266,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325271,"byte_end":325338,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325343,"byte_end":325415,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325420,"byte_end":325459,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325464,"byte_end":325467,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325472,"byte_end":325486,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325491,"byte_end":325494,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325499,"byte_end":325506,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325511,"byte_end":325552,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325557,"byte_end":325603,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325608,"byte_end":325611,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325616,"byte_end":325673,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325678,"byte_end":325681,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325686,"byte_end":325740,"line_start":386,"line_end":386,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325745,"byte_end":325794,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325799,"byte_end":325807,"line_start":388,"line_end":388,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":325812,"byte_end":325819,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327187,"byte_end":327199,"line_start":430,"line_end":430,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326002,"byte_end":326071,"line_start":397,"line_end":397,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326076,"byte_end":326132,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326137,"byte_end":326140,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326145,"byte_end":326220,"line_start":400,"line_end":400,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326225,"byte_end":326295,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326300,"byte_end":326338,"line_start":402,"line_end":402,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326343,"byte_end":326346,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326351,"byte_end":326429,"line_start":404,"line_end":404,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326434,"byte_end":326494,"line_start":405,"line_end":405,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326499,"byte_end":326556,"line_start":406,"line_end":406,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326561,"byte_end":326628,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326633,"byte_end":326663,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326668,"byte_end":326671,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326676,"byte_end":326690,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326695,"byte_end":326698,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326703,"byte_end":326710,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326715,"byte_end":326756,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326761,"byte_end":326785,"line_start":414,"line_end":414,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326790,"byte_end":326836,"line_start":415,"line_end":415,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326841,"byte_end":326844,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326849,"byte_end":326870,"line_start":417,"line_end":417,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326875,"byte_end":326878,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326883,"byte_end":326888,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326893,"byte_end":326954,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326959,"byte_end":326981,"line_start":421,"line_end":421,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":326986,"byte_end":327050,"line_start":422,"line_end":422,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327055,"byte_end":327066,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327071,"byte_end":327110,"line_start":424,"line_end":424,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327115,"byte_end":327120,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327125,"byte_end":327128,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327133,"byte_end":327154,"line_start":427,"line_end":427,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327159,"byte_end":327167,"line_start":428,"line_end":428,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327172,"byte_end":327179,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4959},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328212,"byte_end":328226,"line_start":460,"line_end":460,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327463,"byte_end":327537,"line_start":439,"line_end":439,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327542,"byte_end":327565,"line_start":440,"line_end":440,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327570,"byte_end":327573,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327578,"byte_end":327609,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327614,"byte_end":327691,"line_start":443,"line_end":443,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327696,"byte_end":327725,"line_start":444,"line_end":444,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327730,"byte_end":327733,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327738,"byte_end":327752,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327757,"byte_end":327760,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327765,"byte_end":327772,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327777,"byte_end":327818,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327823,"byte_end":327847,"line_start":450,"line_end":450,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327852,"byte_end":327898,"line_start":451,"line_end":451,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327903,"byte_end":327906,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327911,"byte_end":327980,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":327985,"byte_end":328055,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328060,"byte_end":328063,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328068,"byte_end":328135,"line_start":456,"line_end":456,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328140,"byte_end":328179,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328184,"byte_end":328192,"line_start":458,"line_end":458,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328197,"byte_end":328204,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4962},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329259,"byte_end":329273,"line_start":490,"line_end":490,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328503,"byte_end":328577,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328582,"byte_end":328605,"line_start":470,"line_end":470,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328610,"byte_end":328613,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328618,"byte_end":328649,"line_start":472,"line_end":472,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328654,"byte_end":328731,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328736,"byte_end":328765,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328770,"byte_end":328773,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328778,"byte_end":328792,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328797,"byte_end":328800,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328805,"byte_end":328812,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328817,"byte_end":328858,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328863,"byte_end":328887,"line_start":480,"line_end":480,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328892,"byte_end":328938,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328943,"byte_end":328946,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":328951,"byte_end":329027,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329032,"byte_end":329102,"line_start":484,"line_end":484,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329107,"byte_end":329110,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329115,"byte_end":329182,"line_start":486,"line_end":486,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329187,"byte_end":329226,"line_start":487,"line_end":487,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329231,"byte_end":329239,"line_start":488,"line_end":488,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329244,"byte_end":329251,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331188,"byte_end":331211,"line_start":542,"line_end":542,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329550,"byte_end":329632,"line_start":499,"line_end":499,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329637,"byte_end":329711,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329716,"byte_end":329766,"line_start":501,"line_end":501,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329771,"byte_end":329774,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329779,"byte_end":329801,"line_start":503,"line_end":503,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329806,"byte_end":329892,"line_start":504,"line_end":504,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329897,"byte_end":329982,"line_start":505,"line_end":505,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":329987,"byte_end":330015,"line_start":506,"line_end":506,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330020,"byte_end":330023,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330028,"byte_end":330103,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330108,"byte_end":330165,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330170,"byte_end":330173,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330178,"byte_end":330192,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330197,"byte_end":330200,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330205,"byte_end":330212,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330217,"byte_end":330258,"line_start":514,"line_end":514,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330263,"byte_end":330297,"line_start":515,"line_end":515,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330302,"byte_end":330359,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330364,"byte_end":330367,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330372,"byte_end":330412,"line_start":518,"line_end":518,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330417,"byte_end":330457,"line_start":519,"line_end":519,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330462,"byte_end":330503,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330508,"byte_end":330511,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330516,"byte_end":330567,"line_start":522,"line_end":522,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330572,"byte_end":330625,"line_start":523,"line_end":523,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330630,"byte_end":330652,"line_start":524,"line_end":524,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330657,"byte_end":330682,"line_start":525,"line_end":525,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330687,"byte_end":330749,"line_start":526,"line_end":526,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330754,"byte_end":330769,"line_start":527,"line_end":527,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330774,"byte_end":330783,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330788,"byte_end":330794,"line_start":529,"line_end":529,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330799,"byte_end":330802,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330807,"byte_end":330833,"line_start":531,"line_end":531,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330838,"byte_end":330905,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330910,"byte_end":330924,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330929,"byte_end":330932,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":330937,"byte_end":330998,"line_start":535,"line_end":535,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331003,"byte_end":331031,"line_start":536,"line_end":536,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331036,"byte_end":331086,"line_start":537,"line_end":537,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331091,"byte_end":331099,"line_start":538,"line_end":538,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331104,"byte_end":331111,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331116,"byte_end":331150,"line_start":540,"line_end":540,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331155,"byte_end":331180,"line_start":541,"line_end":541,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332660,"byte_end":332671,"line_start":589,"line_end":589,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn try_collect<C>(Self) -> TryCollect<Self, C> where C: Default +\nExtend<Self::Ok>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331621,"byte_end":331673,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331678,"byte_end":331745,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331750,"byte_end":331753,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331758,"byte_end":331832,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331837,"byte_end":331918,"line_start":563,"line_end":563,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331923,"byte_end":331993,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":331998,"byte_end":332001,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332006,"byte_end":332074,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332079,"byte_end":332082,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332087,"byte_end":332101,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332106,"byte_end":332109,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332114,"byte_end":332121,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332126,"byte_end":332167,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332172,"byte_end":332203,"line_start":572,"line_end":572,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332208,"byte_end":332246,"line_start":573,"line_end":573,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332251,"byte_end":332271,"line_start":574,"line_end":574,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332276,"byte_end":332279,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332284,"byte_end":332321,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332326,"byte_end":332329,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332334,"byte_end":332361,"line_start":578,"line_end":578,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332366,"byte_end":332390,"line_start":579,"line_end":579,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332395,"byte_end":332441,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332446,"byte_end":332455,"line_start":581,"line_end":581,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332460,"byte_end":332503,"line_start":582,"line_end":582,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332508,"byte_end":332515,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332520,"byte_end":332523,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332528,"byte_end":332591,"line_start":585,"line_end":585,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332596,"byte_end":332627,"line_start":586,"line_end":586,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332632,"byte_end":332640,"line_start":587,"line_end":587,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332645,"byte_end":332652,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334486,"byte_end":334496,"line_start":634,"line_end":634,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332854,"byte_end":332932,"line_start":596,"line_end":596,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332937,"byte_end":332940,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":332945,"byte_end":333030,"line_start":598,"line_end":598,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333035,"byte_end":333107,"line_start":599,"line_end":599,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333112,"byte_end":333164,"line_start":600,"line_end":600,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333169,"byte_end":333172,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333177,"byte_end":333250,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333255,"byte_end":333329,"line_start":603,"line_end":603,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333334,"byte_end":333409,"line_start":604,"line_end":604,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333414,"byte_end":333486,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333491,"byte_end":333503,"line_start":606,"line_end":606,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333508,"byte_end":333511,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333516,"byte_end":333591,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333596,"byte_end":333653,"line_start":609,"line_end":609,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333658,"byte_end":333661,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333666,"byte_end":333697,"line_start":611,"line_end":611,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333702,"byte_end":333771,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333776,"byte_end":333805,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333810,"byte_end":333813,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333818,"byte_end":333832,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333837,"byte_end":333840,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333845,"byte_end":333852,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333857,"byte_end":333898,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333903,"byte_end":333965,"line_start":619,"line_end":619,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333970,"byte_end":333973,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":333978,"byte_end":334069,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334074,"byte_end":334116,"line_start":622,"line_end":622,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334121,"byte_end":334124,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334129,"byte_end":334191,"line_start":624,"line_end":624,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334196,"byte_end":334269,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334274,"byte_end":334336,"line_start":626,"line_end":626,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334341,"byte_end":334349,"line_start":627,"line_end":627,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334354,"byte_end":334361,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334366,"byte_end":334369,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334374,"byte_end":334386,"line_start":630,"line_end":630,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334391,"byte_end":334394,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334399,"byte_end":334448,"line_start":632,"line_end":632,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334453,"byte_end":334478,"line_start":633,"line_end":633,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336019,"byte_end":336029,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: for<'_> FnMut(&'_ Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334731,"byte_end":334804,"line_start":643,"line_end":643,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334809,"byte_end":334843,"line_start":644,"line_end":644,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334848,"byte_end":334851,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334856,"byte_end":334931,"line_start":646,"line_end":646,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":334936,"byte_end":335011,"line_start":647,"line_end":647,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335016,"byte_end":335089,"line_start":648,"line_end":648,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335094,"byte_end":335165,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335170,"byte_end":335220,"line_start":650,"line_end":650,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335225,"byte_end":335228,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335233,"byte_end":335304,"line_start":652,"line_end":652,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335309,"byte_end":335312,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335317,"byte_end":335393,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335398,"byte_end":335468,"line_start":655,"line_end":655,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335473,"byte_end":335498,"line_start":656,"line_end":656,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335503,"byte_end":335506,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335511,"byte_end":335525,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335530,"byte_end":335537,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335542,"byte_end":335583,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335588,"byte_end":335612,"line_start":661,"line_end":661,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335617,"byte_end":335674,"line_start":662,"line_end":662,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335679,"byte_end":335682,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335687,"byte_end":335767,"line_start":664,"line_end":664,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335772,"byte_end":335815,"line_start":665,"line_end":665,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335820,"byte_end":335853,"line_start":666,"line_end":666,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335858,"byte_end":335865,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335870,"byte_end":335873,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335878,"byte_end":335926,"line_start":669,"line_end":669,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335931,"byte_end":335986,"line_start":670,"line_end":670,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":335991,"byte_end":335999,"line_start":671,"line_end":671,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336004,"byte_end":336011,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337656,"byte_end":337670,"line_start":714,"line_end":714,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Self::Error>, F: FnMut(Self::Ok) ->\nFut, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336280,"byte_end":336342,"line_start":682,"line_end":682,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336347,"byte_end":336415,"line_start":683,"line_end":683,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336420,"byte_end":336454,"line_start":684,"line_end":684,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336459,"byte_end":336462,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336467,"byte_end":336542,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336547,"byte_end":336622,"line_start":687,"line_end":687,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336627,"byte_end":336703,"line_start":688,"line_end":688,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336708,"byte_end":336773,"line_start":689,"line_end":689,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336778,"byte_end":336781,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336786,"byte_end":336857,"line_start":691,"line_end":691,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336862,"byte_end":336865,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336870,"byte_end":336946,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":336951,"byte_end":337025,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337030,"byte_end":337055,"line_start":695,"line_end":695,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337060,"byte_end":337063,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337068,"byte_end":337082,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337087,"byte_end":337094,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337099,"byte_end":337140,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337145,"byte_end":337202,"line_start":700,"line_end":700,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337207,"byte_end":337232,"line_start":701,"line_end":701,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337237,"byte_end":337240,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337245,"byte_end":337315,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337320,"byte_end":337375,"line_start":704,"line_end":704,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337380,"byte_end":337442,"line_start":705,"line_end":705,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337447,"byte_end":337462,"line_start":706,"line_end":706,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337467,"byte_end":337474,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337479,"byte_end":337482,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337487,"byte_end":337508,"line_start":709,"line_end":709,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337513,"byte_end":337562,"line_start":710,"line_end":710,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337567,"byte_end":337623,"line_start":711,"line_end":711,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337628,"byte_end":337636,"line_start":712,"line_end":712,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337641,"byte_end":337648,"line_start":713,"line_end":713,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339842,"byte_end":339863,"line_start":769,"line_end":769,"column_start":8,"column_end":29},"name":"try_flatten_unordered","qualname":"::stream::try_stream::TryStreamExt::try_flatten_unordered","value":"fn try_flatten_unordered<impl Into<Option<usize>>>(Self,\nimpl Into<Option<usize>>) -> TryFlattenUnordered<Self> where\nSelf::Ok: TryStream + Unpin,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Produced streams\n will be polled concurrently and any errors will be passed through without looking at them.\n If the underlying base stream returns an error, it will be **immediately** propagated.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Produced streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":337947,"byte_end":338029,"line_start":723,"line_end":723,"column_start":5,"column_end":87}},{"value":"/ will be polled concurrently and any errors will be passed through without looking at them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338034,"byte_end":338128,"line_start":724,"line_end":724,"column_start":5,"column_end":99}},{"value":"/ If the underlying base stream returns an error, it will be **immediately** propagated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338133,"byte_end":338223,"line_start":725,"line_end":725,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338228,"byte_end":338231,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ The only argument is an optional limit on the number of concurrently","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338236,"byte_end":338308,"line_start":727,"line_end":727,"column_start":5,"column_end":77}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338313,"byte_end":338390,"line_start":728,"line_end":728,"column_start":5,"column_end":82}},{"value":"/ will be polled at the same time. The `limit` argument is of type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338395,"byte_end":338463,"line_start":729,"line_end":729,"column_start":5,"column_end":73}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338468,"byte_end":338535,"line_start":730,"line_end":730,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338540,"byte_end":338609,"line_start":731,"line_end":731,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338614,"byte_end":338686,"line_start":732,"line_end":732,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338691,"byte_end":338694,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338699,"byte_end":338713,"line_start":734,"line_end":734,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338718,"byte_end":338721,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338726,"byte_end":338733,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338738,"byte_end":338779,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338784,"byte_end":338815,"line_start":738,"line_end":738,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338820,"byte_end":338871,"line_start":739,"line_end":739,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338876,"byte_end":338896,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338901,"byte_end":338904,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338909,"byte_end":338948,"line_start":742,"line_end":742,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338953,"byte_end":338992,"line_start":743,"line_end":743,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":338997,"byte_end":339036,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339041,"byte_end":339044,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339049,"byte_end":339076,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339081,"byte_end":339124,"line_start":747,"line_end":747,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339129,"byte_end":339136,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339141,"byte_end":339168,"line_start":749,"line_end":749,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339173,"byte_end":339216,"line_start":750,"line_end":750,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339221,"byte_end":339265,"line_start":751,"line_end":751,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339270,"byte_end":339313,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339318,"byte_end":339325,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339330,"byte_end":339357,"line_start":754,"line_end":754,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339362,"byte_end":339407,"line_start":755,"line_end":755,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339412,"byte_end":339457,"line_start":756,"line_end":756,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339462,"byte_end":339506,"line_start":757,"line_end":757,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339511,"byte_end":339518,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339523,"byte_end":339526,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let stream = rx3.try_flatten_unordered(None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339531,"byte_end":339580,"line_start":760,"line_end":760,"column_start":5,"column_end":54}},{"value":"/ let mut values: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339585,"byte_end":339637,"line_start":761,"line_end":761,"column_start":5,"column_end":57}},{"value":"/ values.sort();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339642,"byte_end":339660,"line_start":762,"line_end":762,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339665,"byte_end":339668,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, vec![Ok(1), Ok(2), Ok(4), Err(3), Err(5)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339673,"byte_end":339739,"line_start":764,"line_end":764,"column_start":5,"column_end":71}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339744,"byte_end":339753,"line_start":765,"line_end":765,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339758,"byte_end":339765,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339770,"byte_end":339804,"line_start":767,"line_end":767,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":339809,"byte_end":339834,"line_start":768,"line_end":768,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4981},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341853,"byte_end":341864,"line_start":822,"line_end":822,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340234,"byte_end":340299,"line_start":780,"line_end":780,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340304,"byte_end":340307,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340312,"byte_end":340385,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340390,"byte_end":340463,"line_start":783,"line_end":783,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340468,"byte_end":340541,"line_start":784,"line_end":784,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340546,"byte_end":340616,"line_start":785,"line_end":785,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340621,"byte_end":340624,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340629,"byte_end":340643,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340648,"byte_end":340651,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340656,"byte_end":340663,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340668,"byte_end":340709,"line_start":790,"line_end":790,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340714,"byte_end":340745,"line_start":791,"line_end":791,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340750,"byte_end":340801,"line_start":792,"line_end":792,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340806,"byte_end":340826,"line_start":793,"line_end":793,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340831,"byte_end":340834,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340839,"byte_end":340878,"line_start":795,"line_end":795,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340883,"byte_end":340922,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340927,"byte_end":340966,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340971,"byte_end":340974,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":340979,"byte_end":341006,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341011,"byte_end":341054,"line_start":800,"line_end":800,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341059,"byte_end":341066,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341071,"byte_end":341098,"line_start":802,"line_end":802,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341103,"byte_end":341146,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341151,"byte_end":341195,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341200,"byte_end":341243,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341248,"byte_end":341255,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341260,"byte_end":341287,"line_start":807,"line_end":807,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341292,"byte_end":341337,"line_start":808,"line_end":808,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341342,"byte_end":341387,"line_start":809,"line_end":809,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341392,"byte_end":341436,"line_start":810,"line_end":810,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341441,"byte_end":341448,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341453,"byte_end":341456,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341461,"byte_end":341500,"line_start":813,"line_end":813,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341505,"byte_end":341554,"line_start":814,"line_end":814,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341559,"byte_end":341608,"line_start":815,"line_end":815,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341613,"byte_end":341663,"line_start":816,"line_end":816,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341668,"byte_end":341717,"line_start":817,"line_end":817,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341722,"byte_end":341772,"line_start":818,"line_end":818,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341777,"byte_end":341819,"line_start":819,"line_end":819,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341824,"byte_end":341833,"line_start":820,"line_end":820,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":341838,"byte_end":341845,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4982},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343456,"byte_end":343464,"line_start":861,"line_end":861,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342169,"byte_end":342239,"line_start":833,"line_end":833,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342244,"byte_end":342304,"line_start":834,"line_end":834,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342309,"byte_end":342312,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342317,"byte_end":342387,"line_start":836,"line_end":836,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342392,"byte_end":342468,"line_start":837,"line_end":837,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342473,"byte_end":342549,"line_start":838,"line_end":838,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342554,"byte_end":342624,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342629,"byte_end":342655,"line_start":840,"line_end":840,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342660,"byte_end":342663,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342668,"byte_end":342748,"line_start":842,"line_end":842,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342753,"byte_end":342822,"line_start":843,"line_end":843,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342827,"byte_end":342848,"line_start":844,"line_end":844,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342853,"byte_end":342856,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342861,"byte_end":342875,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342880,"byte_end":342883,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342888,"byte_end":342895,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342900,"byte_end":342941,"line_start":849,"line_end":849,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342946,"byte_end":342992,"line_start":850,"line_end":850,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":342997,"byte_end":343000,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343005,"byte_end":343074,"line_start":852,"line_end":852,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343079,"byte_end":343156,"line_start":853,"line_end":853,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343161,"byte_end":343194,"line_start":854,"line_end":854,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343199,"byte_end":343202,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343207,"byte_end":343293,"line_start":856,"line_end":856,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343298,"byte_end":343384,"line_start":857,"line_end":857,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343389,"byte_end":343423,"line_start":858,"line_end":858,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343428,"byte_end":343436,"line_start":859,"line_end":859,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343441,"byte_end":343448,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4986},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344990,"byte_end":345000,"line_start":904,"line_end":904,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343744,"byte_end":343806,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343811,"byte_end":343886,"line_start":871,"line_end":871,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343891,"byte_end":343894,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343899,"byte_end":343970,"line_start":873,"line_end":873,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":343975,"byte_end":344051,"line_start":874,"line_end":874,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344056,"byte_end":344095,"line_start":875,"line_end":875,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344100,"byte_end":344103,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344108,"byte_end":344194,"line_start":877,"line_end":877,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344199,"byte_end":344202,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344207,"byte_end":344291,"line_start":879,"line_end":879,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344296,"byte_end":344352,"line_start":880,"line_end":880,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344357,"byte_end":344360,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344365,"byte_end":344379,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344384,"byte_end":344387,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344392,"byte_end":344399,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344404,"byte_end":344445,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344450,"byte_end":344481,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344486,"byte_end":344524,"line_start":887,"line_end":887,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344529,"byte_end":344549,"line_start":888,"line_end":888,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344554,"byte_end":344557,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344562,"byte_end":344623,"line_start":890,"line_end":890,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344628,"byte_end":344631,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344636,"byte_end":344663,"line_start":892,"line_end":892,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344668,"byte_end":344699,"line_start":893,"line_end":893,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344704,"byte_end":344730,"line_start":894,"line_end":894,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344735,"byte_end":344805,"line_start":895,"line_end":895,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344810,"byte_end":344819,"line_start":896,"line_end":896,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344824,"byte_end":344831,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344836,"byte_end":344839,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344844,"byte_end":344883,"line_start":899,"line_end":899,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344888,"byte_end":344891,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344896,"byte_end":344956,"line_start":901,"line_end":901,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344961,"byte_end":344970,"line_start":902,"line_end":902,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":344975,"byte_end":344982,"line_start":903,"line_end":903,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4987},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347722,"byte_end":347742,"line_start":971,"line_end":971,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345254,"byte_end":345332,"line_start":912,"line_end":912,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345337,"byte_end":345340,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345345,"byte_end":345450,"line_start":914,"line_end":914,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345455,"byte_end":345498,"line_start":915,"line_end":915,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345503,"byte_end":345506,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345511,"byte_end":345579,"line_start":917,"line_end":917,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345584,"byte_end":345657,"line_start":918,"line_end":918,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345662,"byte_end":345718,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345723,"byte_end":345726,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345731,"byte_end":345806,"line_start":921,"line_end":921,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345811,"byte_end":345884,"line_start":922,"line_end":922,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345889,"byte_end":345954,"line_start":923,"line_end":923,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345959,"byte_end":345962,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":345967,"byte_end":346042,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346047,"byte_end":346104,"line_start":926,"line_end":926,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346109,"byte_end":346112,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346117,"byte_end":346131,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346136,"byte_end":346139,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346144,"byte_end":346196,"line_start":930,"line_end":930,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346201,"byte_end":346208,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346213,"byte_end":346254,"line_start":932,"line_end":932,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346259,"byte_end":346293,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346298,"byte_end":346355,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346360,"byte_end":346363,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346368,"byte_end":346418,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346423,"byte_end":346473,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346478,"byte_end":346481,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346486,"byte_end":346561,"line_start":939,"line_end":939,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346566,"byte_end":346569,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346574,"byte_end":346640,"line_start":941,"line_end":941,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346645,"byte_end":346648,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346653,"byte_end":346678,"line_start":943,"line_end":943,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346683,"byte_end":346737,"line_start":944,"line_end":944,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346742,"byte_end":346745,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346750,"byte_end":346775,"line_start":946,"line_end":946,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346780,"byte_end":346834,"line_start":947,"line_end":947,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346839,"byte_end":346842,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346847,"byte_end":346891,"line_start":949,"line_end":949,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346896,"byte_end":346932,"line_start":950,"line_end":950,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346937,"byte_end":346944,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346949,"byte_end":346952,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":346957,"byte_end":347017,"line_start":953,"line_end":953,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347022,"byte_end":347029,"line_start":954,"line_end":954,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347034,"byte_end":347075,"line_start":955,"line_end":955,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347080,"byte_end":347111,"line_start":956,"line_end":956,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347116,"byte_end":347167,"line_start":957,"line_end":957,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347172,"byte_end":347175,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347180,"byte_end":347234,"line_start":959,"line_end":959,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347239,"byte_end":347305,"line_start":960,"line_end":960,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347310,"byte_end":347313,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347318,"byte_end":347367,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347372,"byte_end":347426,"line_start":963,"line_end":963,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347431,"byte_end":347434,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347439,"byte_end":347492,"line_start":965,"line_end":965,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347497,"byte_end":347569,"line_start":966,"line_end":966,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347574,"byte_end":347633,"line_start":967,"line_end":967,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347638,"byte_end":347645,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347650,"byte_end":347684,"line_start":969,"line_end":969,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":347689,"byte_end":347714,"line_start":970,"line_end":970,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350753,"byte_end":350765,"line_start":1047,"line_end":1047,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348019,"byte_end":348085,"line_start":981,"line_end":981,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348090,"byte_end":348093,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348098,"byte_end":348203,"line_start":983,"line_end":983,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348208,"byte_end":348251,"line_start":984,"line_end":984,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348256,"byte_end":348259,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348264,"byte_end":348332,"line_start":986,"line_end":986,"column_start":5,"column_end":73}},{"value":"/ outputs in the same order as the underlying stream. If the underlying stream returns an error, it will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348337,"byte_end":348443,"line_start":987,"line_end":987,"column_start":5,"column_end":111}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348448,"byte_end":348478,"line_start":988,"line_end":988,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348483,"byte_end":348486,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348491,"byte_end":348566,"line_start":990,"line_end":990,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348571,"byte_end":348644,"line_start":991,"line_end":991,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348649,"byte_end":348714,"line_start":992,"line_end":992,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348719,"byte_end":348722,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348727,"byte_end":348802,"line_start":994,"line_end":994,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348807,"byte_end":348864,"line_start":995,"line_end":995,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348869,"byte_end":348872,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348877,"byte_end":348891,"line_start":997,"line_end":997,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348896,"byte_end":348899,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348904,"byte_end":348954,"line_start":999,"line_end":999,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348959,"byte_end":348966,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":348971,"byte_end":349012,"line_start":1001,"line_end":1001,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349017,"byte_end":349051,"line_start":1002,"line_end":1002,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349056,"byte_end":349086,"line_start":1003,"line_end":1003,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349091,"byte_end":349148,"line_start":1004,"line_end":1004,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349153,"byte_end":349156,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349161,"byte_end":349211,"line_start":1006,"line_end":1006,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349216,"byte_end":349266,"line_start":1007,"line_end":1007,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349271,"byte_end":349274,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349279,"byte_end":349318,"line_start":1009,"line_end":1009,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349323,"byte_end":349402,"line_start":1010,"line_end":1010,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349407,"byte_end":349410,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349415,"byte_end":349477,"line_start":1012,"line_end":1012,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349482,"byte_end":349485,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349490,"byte_end":349553,"line_start":1014,"line_end":1014,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349558,"byte_end":349561,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349566,"byte_end":349595,"line_start":1016,"line_end":1016,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349600,"byte_end":349663,"line_start":1017,"line_end":1017,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349668,"byte_end":349698,"line_start":1018,"line_end":1018,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349703,"byte_end":349717,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349722,"byte_end":349725,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349730,"byte_end":349755,"line_start":1021,"line_end":1021,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349760,"byte_end":349814,"line_start":1022,"line_end":1022,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349819,"byte_end":349873,"line_start":1023,"line_end":1023,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349878,"byte_end":349881,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349886,"byte_end":349930,"line_start":1025,"line_end":1025,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349935,"byte_end":349971,"line_start":1026,"line_end":1026,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349976,"byte_end":349983,"line_start":1027,"line_end":1027,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349988,"byte_end":349991,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":349996,"byte_end":350056,"line_start":1029,"line_end":1029,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350061,"byte_end":350068,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350073,"byte_end":350114,"line_start":1031,"line_end":1031,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350119,"byte_end":350150,"line_start":1032,"line_end":1032,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350155,"byte_end":350206,"line_start":1033,"line_end":1033,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350211,"byte_end":350214,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350219,"byte_end":350273,"line_start":1035,"line_end":1035,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350278,"byte_end":350336,"line_start":1036,"line_end":1036,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350341,"byte_end":350344,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350349,"byte_end":350398,"line_start":1038,"line_end":1038,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350403,"byte_end":350457,"line_start":1039,"line_end":1039,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350462,"byte_end":350465,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350470,"byte_end":350523,"line_start":1041,"line_end":1041,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350528,"byte_end":350600,"line_start":1042,"line_end":1042,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350605,"byte_end":350664,"line_start":1043,"line_end":1043,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350669,"byte_end":350676,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350681,"byte_end":350715,"line_start":1045,"line_end":1045,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":350720,"byte_end":350745,"line_start":1046,"line_end":1046,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4989},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":351220,"byte_end":351239,"line_start":1061,"line_end":1061,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn try_poll_next_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":4935},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":351112,"byte_end":351190,"line_start":1059,"line_end":1059,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":351195,"byte_end":351212,"line_start":1060,"line_end":1060,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":12805},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":407958,"byte_end":407962,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":12807}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":407836,"byte_end":407873,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":407898,"byte_end":407946,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5093},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408480,"byte_end":408484,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408014,"byte_end":408078,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408079,"byte_end":408107,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408108,"byte_end":408111,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408112,"byte_end":408185,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408186,"byte_end":408241,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408242,"byte_end":408245,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408246,"byte_end":408253,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408254,"byte_end":408295,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408296,"byte_end":408339,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408340,"byte_end":408343,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408344,"byte_end":408388,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408389,"byte_end":408454,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408455,"byte_end":408464,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408465,"byte_end":408472,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408694,"byte_end":408703,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Iter<I> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<I::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408830,"byte_end":408839,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter<I> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12814},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409175,"byte_end":409181,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":12816}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409051,"byte_end":409090,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409115,"byte_end":409163,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409705,"byte_end":409711,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409203,"byte_end":409263,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409264,"byte_end":409267,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409268,"byte_end":409335,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409336,"byte_end":409408,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409409,"byte_end":409466,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409467,"byte_end":409470,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409471,"byte_end":409478,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409479,"byte_end":409520,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409521,"byte_end":409564,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409565,"byte_end":409568,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409569,"byte_end":409604,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409605,"byte_end":409679,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409680,"byte_end":409689,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409690,"byte_end":409697,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409915,"byte_end":409924,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":410057,"byte_end":410066,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Repeat<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5139},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":410209,"byte_end":410222,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Repeat<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12823},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410702,"byte_end":410712,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":12825}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410400,"byte_end":410460,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410461,"byte_end":410513,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410514,"byte_end":410517,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410518,"byte_end":410581,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410582,"byte_end":410617,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410642,"byte_end":410690,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5175},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410870,"byte_end":410879,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411021,"byte_end":411030,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RepeatWith<F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411174,"byte_end":411187,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<RepeatWith<F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":413000,"byte_end":413011,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<A, F>(F) -> RepeatWith<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411228,"byte_end":411299,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411300,"byte_end":411367,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411368,"byte_end":411371,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411372,"byte_end":411444,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411445,"byte_end":411448,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411449,"byte_end":411523,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411524,"byte_end":411576,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411577,"byte_end":411580,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411581,"byte_end":411653,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411654,"byte_end":411727,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411728,"byte_end":411765,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411766,"byte_end":411769,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411770,"byte_end":411784,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411785,"byte_end":411788,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411789,"byte_end":411805,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411806,"byte_end":411809,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411810,"byte_end":411817,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411818,"byte_end":411859,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411860,"byte_end":411903,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411904,"byte_end":411907,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411908,"byte_end":411976,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411977,"byte_end":412055,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412056,"byte_end":412087,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412088,"byte_end":412109,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412110,"byte_end":412113,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412114,"byte_end":412148,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412149,"byte_end":412204,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412205,"byte_end":412208,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412209,"byte_end":412262,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412263,"byte_end":412316,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412317,"byte_end":412370,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412371,"byte_end":412380,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412381,"byte_end":412388,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412389,"byte_end":412392,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412393,"byte_end":412429,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412430,"byte_end":412433,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412434,"byte_end":412445,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412446,"byte_end":412487,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412488,"byte_end":412531,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412532,"byte_end":412535,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412536,"byte_end":412585,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412586,"byte_end":412607,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412608,"byte_end":412685,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412686,"byte_end":412719,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412720,"byte_end":412723,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412724,"byte_end":412767,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412768,"byte_end":412811,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412812,"byte_end":412855,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412856,"byte_end":412899,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412900,"byte_end":412903,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412904,"byte_end":412933,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412934,"byte_end":412974,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412975,"byte_end":412984,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":412985,"byte_end":412992,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413402,"byte_end":413407,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":12834}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413286,"byte_end":413324,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413342,"byte_end":413390,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5215},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413576,"byte_end":413581,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413446,"byte_end":413494,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413495,"byte_end":413498,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413499,"byte_end":413568,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413736,"byte_end":413749,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Empty<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413846,"byte_end":413855,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413969,"byte_end":413978,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Empty<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":414080,"byte_end":414085,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Empty<T> as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414666,"byte_end":414670,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<Fut>(Fut) -> Once<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414359,"byte_end":414400,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414401,"byte_end":414404,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414405,"byte_end":414412,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414413,"byte_end":414454,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414455,"byte_end":414498,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414499,"byte_end":414502,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414503,"byte_end":414547,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414548,"byte_end":414603,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414604,"byte_end":414640,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414641,"byte_end":414650,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414651,"byte_end":414658,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12838},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":414932,"byte_end":414936,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":12840}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415188,"byte_end":415197,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415548,"byte_end":415557,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Once<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415767,"byte_end":415780,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Once<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416112,"byte_end":416119,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":12876}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":415992,"byte_end":416034,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416052,"byte_end":416100,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5311},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416295,"byte_end":416302,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416163,"byte_end":416217,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416218,"byte_end":416221,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416222,"byte_end":416287,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5317},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416470,"byte_end":416483,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416582,"byte_end":416591,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Pending<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416701,"byte_end":416710,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pending<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416814,"byte_end":416819,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5353},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417145,"byte_end":417151,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5355}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417044,"byte_end":417084,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417085,"byte_end":417133,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417244,"byte_end":417247,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5361},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417839,"byte_end":417846,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417351,"byte_end":417424,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417425,"byte_end":417428,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417429,"byte_end":417488,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417489,"byte_end":417492,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417493,"byte_end":417507,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417508,"byte_end":417511,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417512,"byte_end":417519,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417520,"byte_end":417553,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417554,"byte_end":417582,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417583,"byte_end":417586,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417587,"byte_end":417616,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417617,"byte_end":417620,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417621,"byte_end":417685,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417686,"byte_end":417739,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417740,"byte_end":417761,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417762,"byte_end":417815,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417816,"byte_end":417823,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417824,"byte_end":417831,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5368},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":418092,"byte_end":418101,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12880},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":418607,"byte_end":418620,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":12882}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":418781,"byte_end":418790,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5398},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419462,"byte_end":419471,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PollImmediate<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5401},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419650,"byte_end":419663,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420601,"byte_end":420615,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"fn poll_immediate<S>(S) -> PollImmediate<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419720,"byte_end":419833,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419834,"byte_end":419837,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419838,"byte_end":419933,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419934,"byte_end":419937,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419938,"byte_end":419952,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419953,"byte_end":419956,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419957,"byte_end":419964,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419965,"byte_end":420006,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420007,"byte_end":420050,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420051,"byte_end":420079,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420080,"byte_end":420083,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420084,"byte_end":420157,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420158,"byte_end":420211,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420212,"byte_end":420265,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420266,"byte_end":420303,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420304,"byte_end":420307,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420308,"byte_end":420376,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420377,"byte_end":420405,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420406,"byte_end":420419,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420420,"byte_end":420429,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420430,"byte_end":420482,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420483,"byte_end":420537,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420538,"byte_end":420575,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420576,"byte_end":420585,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":420586,"byte_end":420593,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421148,"byte_end":421154,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12922}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5445},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422180,"byte_end":422186,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421276,"byte_end":421344,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421345,"byte_end":421421,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421422,"byte_end":421470,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421471,"byte_end":421474,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421475,"byte_end":421550,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421551,"byte_end":421620,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421621,"byte_end":421648,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421649,"byte_end":421652,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421653,"byte_end":421724,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421725,"byte_end":421745,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421746,"byte_end":421749,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421750,"byte_end":421765,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421766,"byte_end":421769,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421770,"byte_end":421781,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421782,"byte_end":421823,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421824,"byte_end":421879,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421880,"byte_end":421883,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421884,"byte_end":421909,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421910,"byte_end":421936,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421937,"byte_end":421940,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421941,"byte_end":421979,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421980,"byte_end":421983,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":421984,"byte_end":422005,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422006,"byte_end":422042,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422043,"byte_end":422095,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422096,"byte_end":422148,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422149,"byte_end":422154,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422155,"byte_end":422164,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422165,"byte_end":422172,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5452},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422655,"byte_end":422662,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422547,"byte_end":422621,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422626,"byte_end":422643,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422990,"byte_end":422997,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422728,"byte_end":422796,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422801,"byte_end":422832,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422837,"byte_end":422840,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422845,"byte_end":422918,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422923,"byte_end":422978,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423344,"byte_end":423355,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423075,"byte_end":423150,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423155,"byte_end":423186,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423191,"byte_end":423194,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423199,"byte_end":423272,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423277,"byte_end":423332,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423729,"byte_end":423739,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423493,"byte_end":423556,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423561,"byte_end":423564,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423569,"byte_end":423641,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423646,"byte_end":423717,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423918,"byte_end":423931,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":424131,"byte_end":424140,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Select<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St1::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12965},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424643,"byte_end":424647,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":12964},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424612,"byte_end":424638,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12967},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424685,"byte_end":424690,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":12964},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424653,"byte_end":424680,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":12964},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424597,"byte_end":424605,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":12965},{"krate":0,"index":12967}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424470,"byte_end":424536,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5501},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424771,"byte_end":424777,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"fn toggle<'_>(&'_ mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424715,"byte_end":424759,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5504},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":425076,"byte_end":425083,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<PollNext as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12983},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426001,"byte_end":426019,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":12988},{"krate":0,"index":12989},{"krate":0,"index":12990},{"krate":0,"index":12991},{"krate":0,"index":12992}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5516},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428338,"byte_end":428358,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: for<'_> FnMut(&'_ mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426209,"byte_end":426286,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426287,"byte_end":426367,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426368,"byte_end":426450,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426451,"byte_end":426516,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426517,"byte_end":426520,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426521,"byte_end":426596,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426597,"byte_end":426666,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426667,"byte_end":426694,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426695,"byte_end":426698,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426699,"byte_end":426770,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426771,"byte_end":426791,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426792,"byte_end":426795,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426796,"byte_end":426811,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426812,"byte_end":426815,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426816,"byte_end":426832,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426833,"byte_end":426897,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426898,"byte_end":426901,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426902,"byte_end":426913,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426914,"byte_end":426955,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":426956,"byte_end":427035,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427036,"byte_end":427039,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427040,"byte_end":427065,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427066,"byte_end":427092,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427093,"byte_end":427096,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427097,"byte_end":427161,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427162,"byte_end":427236,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427237,"byte_end":427307,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427308,"byte_end":427359,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427360,"byte_end":427419,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427420,"byte_end":427423,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427424,"byte_end":427487,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427488,"byte_end":427491,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427492,"byte_end":427513,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427514,"byte_end":427569,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427570,"byte_end":427622,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427623,"byte_end":427628,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427629,"byte_end":427638,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427639,"byte_end":427646,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427647,"byte_end":427650,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427651,"byte_end":427670,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427671,"byte_end":427738,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427739,"byte_end":427815,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427816,"byte_end":427819,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427820,"byte_end":427831,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427832,"byte_end":427873,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427874,"byte_end":427953,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427954,"byte_end":427957,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427958,"byte_end":427983,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":427984,"byte_end":428010,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428011,"byte_end":428014,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428015,"byte_end":428068,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428069,"byte_end":428072,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428073,"byte_end":428133,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428134,"byte_end":428137,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428138,"byte_end":428159,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428160,"byte_end":428200,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428201,"byte_end":428253,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428254,"byte_end":428306,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428307,"byte_end":428312,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428313,"byte_end":428322,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428323,"byte_end":428330,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428989,"byte_end":428996,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428881,"byte_end":428955,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428960,"byte_end":428977,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5527},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429334,"byte_end":429341,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429072,"byte_end":429140,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429145,"byte_end":429176,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429181,"byte_end":429184,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429189,"byte_end":429262,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429267,"byte_end":429322,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5528},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429706,"byte_end":429717,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429437,"byte_end":429512,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429517,"byte_end":429548,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429553,"byte_end":429556,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429561,"byte_end":429634,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429639,"byte_end":429694,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":430095,"byte_end":430105,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429859,"byte_end":429922,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429927,"byte_end":429930,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":429935,"byte_end":430007,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":430012,"byte_end":430083,"line_start":188,"line_end":188,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":430368,"byte_end":430381,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":431984,"byte_end":431993,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St1::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5558},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":433120,"byte_end":433123,"line_start":297,"line_end":297,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5605},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435109,"byte_end":435115,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433667,"byte_end":433737,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433738,"byte_end":433741,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433742,"byte_end":433811,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433812,"byte_end":433893,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433894,"byte_end":433925,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433926,"byte_end":433929,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":433930,"byte_end":434009,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434010,"byte_end":434089,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434090,"byte_end":434144,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434145,"byte_end":434148,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434149,"byte_end":434229,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434230,"byte_end":434300,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434301,"byte_end":434323,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434324,"byte_end":434327,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434328,"byte_end":434405,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434406,"byte_end":434478,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434479,"byte_end":434556,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434557,"byte_end":434617,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434618,"byte_end":434621,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434622,"byte_end":434635,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434636,"byte_end":434639,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434640,"byte_end":434647,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434648,"byte_end":434689,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434690,"byte_end":434733,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434734,"byte_end":434737,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434738,"byte_end":434793,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434794,"byte_end":434817,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434818,"byte_end":434857,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434858,"byte_end":434895,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434896,"byte_end":434935,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434936,"byte_end":434952,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434953,"byte_end":434969,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434970,"byte_end":434979,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434980,"byte_end":434987,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434988,"byte_end":434991,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":434992,"byte_end":435044,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435045,"byte_end":435083,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435084,"byte_end":435093,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435094,"byte_end":435101,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435462,"byte_end":435468,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":13060},{"krate":0,"index":13061}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435660,"byte_end":435663,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unfold<T, F, Fut> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435935,"byte_end":435948,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unfold<T, F, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5627},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":436244,"byte_end":436253,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Unfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5705},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440525,"byte_end":440539,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5710}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438453,"byte_end":438487,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438488,"byte_end":438491,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to [`FuturesUnordered`], but it imposes a FIFO order","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438492,"byte_end":438577,"line_start":61,"line_end":61,"column_start":1,"column_end":86}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438578,"byte_end":438649,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438650,"byte_end":438726,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438727,"byte_end":438775,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438776,"byte_end":438779,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438780,"byte_end":438859,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438860,"byte_end":438935,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438936,"byte_end":439014,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439015,"byte_end":439095,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439096,"byte_end":439125,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439126,"byte_end":439129,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439130,"byte_end":439208,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439209,"byte_end":439283,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439284,"byte_end":439359,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439360,"byte_end":439435,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439436,"byte_end":439511,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439512,"byte_end":439570,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439571,"byte_end":439574,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439575,"byte_end":439648,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439649,"byte_end":439727,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439728,"byte_end":439786,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439787,"byte_end":439860,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439861,"byte_end":439929,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":439930,"byte_end":440006,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440007,"byte_end":440075,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440076,"byte_end":440129,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440130,"byte_end":440133,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440134,"byte_end":440200,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440201,"byte_end":440280,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440281,"byte_end":440328,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440329,"byte_end":440332,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440333,"byte_end":440406,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440407,"byte_end":440464,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440465,"byte_end":440513,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5715},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441047,"byte_end":441050,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440827,"byte_end":440871,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440876,"byte_end":440879,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440884,"byte_end":440959,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440964,"byte_end":441035,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5716},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441547,"byte_end":441550,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441274,"byte_end":441331,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441336,"byte_end":441339,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441344,"byte_end":441407,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441412,"byte_end":441476,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441481,"byte_end":441535,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441708,"byte_end":441716,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441645,"byte_end":441696,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5718},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442192,"byte_end":442196,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn push<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441821,"byte_end":441854,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441859,"byte_end":441862,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441867,"byte_end":441943,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":441948,"byte_end":442022,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442027,"byte_end":442100,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442105,"byte_end":442128,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"deprecated(note = \"use `push_back` instead\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442133,"byte_end":442180,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442597,"byte_end":442606,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"push_back","qualname":"<FuturesOrdered<Fut>>::push_back","value":"fn push_back<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the back of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the back of the queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442266,"byte_end":442311,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442316,"byte_end":442319,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442324,"byte_end":442400,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442405,"byte_end":442479,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442484,"byte_end":442557,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442562,"byte_end":442585,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5720},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443216,"byte_end":443226,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"push_front","qualname":"<FuturesOrdered<Fut>>::push_front","value":"fn push_front<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the front of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the front of the queue.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442815,"byte_end":442861,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442866,"byte_end":442869,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442874,"byte_end":442950,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":442955,"byte_end":443029,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443034,"byte_end":443107,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ task notifications. This future will be the next future to be returned","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443112,"byte_end":443186,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ complete.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443191,"byte_end":443204,"line_start":161,"line_end":161,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5723},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443496,"byte_end":443503,"line_start":170,"line_end":170,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesOrdered<Fut> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5727},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443633,"byte_end":443642,"line_start":178,"line_end":178,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444613,"byte_end":444622,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5731},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444779,"byte_end":444782,"line_start":211,"line_end":211,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesOrdered<Fut> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444959,"byte_end":444968,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesOrdered<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":445258,"byte_end":445271,"line_start":230,"line_end":230,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesOrdered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":445442,"byte_end":445448,"line_start":236,"line_end":236,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesOrdered<Fut> as core::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5747},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":5748},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5755},{"krate":0,"index":5758},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5806},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5813},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5820},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5827},{"krate":0,"index":5830},{"krate":0,"index":5833},{"krate":0,"index":5836},{"krate":0,"index":5839},{"krate":0,"index":5845},{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5925},{"krate":0,"index":5928},{"krate":0,"index":5931},{"krate":0,"index":5999},{"krate":0,"index":6002},{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6065},{"krate":0,"index":6068},{"krate":0,"index":6073},{"krate":0,"index":6075},{"krate":0,"index":6077},{"krate":0,"index":6079},{"krate":0,"index":6081},{"krate":0,"index":6083},{"krate":0,"index":6086},{"krate":0,"index":6101},{"krate":0,"index":6114},{"krate":0,"index":6117},{"krate":0,"index":6121},{"krate":0,"index":6124},{"krate":0,"index":6130},{"krate":0,"index":6136},{"krate":0,"index":6141},{"krate":0,"index":6146},{"krate":0,"index":6149}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141398,"byte_end":141432,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141433,"byte_end":141458,"line_start":116,"line_end":116,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":445605,"byte_end":445637,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":445638,"byte_end":445641,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":445642,"byte_end":445717,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":445718,"byte_end":445775,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473019,"byte_end":473029,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":13152},{"krate":0,"index":13153},{"krate":0,"index":13154}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":472931,"byte_end":472990,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13159},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473266,"byte_end":473273,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473178,"byte_end":473237,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473414,"byte_end":473424,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":13171},{"krate":0,"index":13172},{"krate":0,"index":13173},{"krate":0,"index":13174}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473324,"byte_end":473385,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":13179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473712,"byte_end":473716,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473618,"byte_end":473683,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":13188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473853,"byte_end":473861,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":13190},{"krate":0,"index":13191}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473767,"byte_end":473824,"line_start":33,"line_end":33,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5867},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":474026,"byte_end":474030,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<Fut> as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5868},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475042,"byte_end":475051,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<Fut> as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475279,"byte_end":475283,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinMut as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5876},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475956,"byte_end":475965,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinMut as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5883},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476191,"byte_end":476195,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5884},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476285,"byte_end":476294,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5891},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476513,"byte_end":476517,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinRef as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5892},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477211,"byte_end":477220,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinRef as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5899},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477439,"byte_end":477443,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5900},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477533,"byte_end":477542,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447841,"byte_end":447857,"line_start":58,"line_end":58,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446624,"byte_end":446677,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446678,"byte_end":446681,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See [`FuturesOrdered`](crate::stream::FuturesOrdered) for a version of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446682,"byte_end":446761,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ type that preserves a FIFO order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446762,"byte_end":446799,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446800,"byte_end":446803,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446804,"byte_end":446872,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446873,"byte_end":446946,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":446947,"byte_end":447023,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447024,"byte_end":447068,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447069,"byte_end":447072,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447073,"byte_end":447151,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447152,"byte_end":447210,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447211,"byte_end":447275,"line_start":46,"line_end":46,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447276,"byte_end":447329,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447330,"byte_end":447409,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447410,"byte_end":447439,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447440,"byte_end":447443,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447444,"byte_end":447514,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447515,"byte_end":447592,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447593,"byte_end":447644,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447645,"byte_end":447648,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447649,"byte_end":447722,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447723,"byte_end":447780,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":447781,"byte_end":447829,"line_start":57,"line_end":57,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6080},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448206,"byte_end":448215,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<FuturesUnordered<FutureObj> as futures_task::Spawn>::spawn_obj","value":"fn spawn_obj<'_>(&'_ Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":22,"index":16},"children":[],"decl_id":{"krate":22,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6082},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448412,"byte_end":448427,"line_start":76,"line_end":76,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<FuturesUnordered<LocalFutureObj> as futures_task::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj<'_>(&'_ Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":22,"index":19},"children":[],"decl_id":{"krate":22,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6085},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450116,"byte_end":450123,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesUnordered<Fut> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6088},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450474,"byte_end":450477,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450203,"byte_end":450252,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450257,"byte_end":450260,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450265,"byte_end":450332,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450337,"byte_end":450411,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450416,"byte_end":450462,"line_start":118,"line_end":118,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6089},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451507,"byte_end":451510,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451369,"byte_end":451424,"line_start":145,"line_end":145,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451429,"byte_end":451432,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451437,"byte_end":451495,"line_start":147,"line_end":147,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6090},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451674,"byte_end":451682,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451612,"byte_end":451662,"line_start":153,"line_end":153,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":452265,"byte_end":452269,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn push<'_>(&'_ Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451895,"byte_end":451926,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451931,"byte_end":451934,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":451939,"byte_end":452009,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":452014,"byte_end":452100,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":452105,"byte_end":452181,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":452186,"byte_end":452253,"line_start":165,"line_end":165,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6092},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":453587,"byte_end":453591,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":453505,"byte_end":453575,"line_start":194,"line_end":194,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6093},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":453789,"byte_end":453801,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"fn iter_pin_ref<'_>(Pin<&'_ Self>) -> IterPinRef","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":453707,"byte_end":453777,"line_start":202,"line_end":202,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6094},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":454130,"byte_end":454138,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":454049,"byte_end":454118,"line_start":210,"line_end":210,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6095},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":454345,"byte_end":454357,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn iter_pin_mut<'_>(Pin<&'_ mut Self>) -> IterPinMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":454264,"byte_end":454333,"line_start":218,"line_end":218,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6104},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":461861,"byte_end":461870,"line_start":391,"line_end":391,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6113},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":468876,"byte_end":468885,"line_start":546,"line_end":546,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469036,"byte_end":469039,"line_start":553,"line_end":553,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesUnordered<Fut> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6119},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469240,"byte_end":469245,"line_start":560,"line_end":560,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469187,"byte_end":469228,"line_start":559,"line_end":559,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6123},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469777,"byte_end":469781,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"drop","qualname":"<FuturesUnordered<Fut> as core::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":1,"index":3510},"children":[],"decl_id":{"krate":1,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6129},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471099,"byte_end":471108,"line_start":605,"line_end":605,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a FuturesUnordered<Fut> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471309,"byte_end":471318,"line_start":614,"line_end":614,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut FuturesUnordered<Fut> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471500,"byte_end":471509,"line_start":623,"line_end":623,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<FuturesUnordered<Fut> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6143},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471929,"byte_end":471938,"line_start":634,"line_end":634,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesUnordered<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6148},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":472221,"byte_end":472234,"line_start":647,"line_end":647,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesUnordered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6151},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":472359,"byte_end":472365,"line_start":653,"line_end":653,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesUnordered<Fut> as core::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6156},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":6167},{"krate":0,"index":6170},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6187},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":6209},{"krate":0,"index":6218},{"krate":0,"index":6221},{"krate":0,"index":6225},{"krate":0,"index":6228},{"krate":0,"index":6230},{"krate":0,"index":6234},{"krate":0,"index":6238},{"krate":0,"index":6243},{"krate":0,"index":6249},{"krate":0,"index":13195},{"krate":0,"index":13200},{"krate":0,"index":13204},{"krate":0,"index":13209},{"krate":0,"index":13213},{"krate":0,"index":13217},{"krate":0,"index":6255},{"krate":0,"index":6261},{"krate":0,"index":6263},{"krate":0,"index":6269},{"krate":0,"index":6271},{"krate":0,"index":6276}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141614,"byte_end":141648,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141649,"byte_end":141674,"line_start":124,"line_end":124,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":486581,"byte_end":486612,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487545,"byte_end":487554,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6205}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":486921,"byte_end":486952,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":486953,"byte_end":486956,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":486957,"byte_end":487028,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487029,"byte_end":487066,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487067,"byte_end":487070,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487071,"byte_end":487137,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487138,"byte_end":487209,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487210,"byte_end":487290,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487291,"byte_end":487294,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487295,"byte_end":487356,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487357,"byte_end":487431,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487432,"byte_end":487484,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487485,"byte_end":487533,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487660,"byte_end":487663,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectAll<St> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6211},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488011,"byte_end":488014,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487811,"byte_end":487850,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487855,"byte_end":487858,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487863,"byte_end":487933,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487938,"byte_end":487999,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6212},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488224,"byte_end":488227,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488086,"byte_end":488141,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488146,"byte_end":488149,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488154,"byte_end":488212,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488343,"byte_end":488351,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488282,"byte_end":488331,"line_start":53,"line_end":53,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6214},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488713,"byte_end":488717,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn push<'_>(&'_ mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488410,"byte_end":488441,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488446,"byte_end":488449,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488454,"byte_end":488526,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488531,"byte_end":488605,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488610,"byte_end":488678,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488683,"byte_end":488701,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6215},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488883,"byte_end":488887,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488801,"byte_end":488871,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6216},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489037,"byte_end":489045,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":488956,"byte_end":489025,"line_start":73,"line_end":73,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489181,"byte_end":489186,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489128,"byte_end":489169,"line_start":78,"line_end":78,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489296,"byte_end":489303,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"default","qualname":"<SelectAll<St> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489431,"byte_end":489440,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectAll<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490197,"byte_end":490210,"line_start":113,"line_end":113,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectAll<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490893,"byte_end":490903,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490272,"byte_end":490346,"line_start":118,"line_end":118,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490347,"byte_end":490350,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490351,"byte_end":490430,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490431,"byte_end":490482,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490483,"byte_end":490557,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490558,"byte_end":490617,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490618,"byte_end":490621,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490622,"byte_end":490694,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490695,"byte_end":490745,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490746,"byte_end":490749,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490750,"byte_end":490827,"line_start":128,"line_end":128,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490828,"byte_end":490885,"line_start":129,"line_end":129,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6232},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491224,"byte_end":491233,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<St> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = St>","parent":{"krate":1,"index":8401},"children":[],"decl_id":{"krate":1,"index":8403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6236},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491378,"byte_end":491384,"line_start":151,"line_end":151,"column_start":8,"column_end":14},"name":"extend","qualname":"<SelectAll<St> as core::iter::Extend>::extend","value":"fn extend<T, '_>(&'_ mut Self, T) where T: IntoIterator<Item = St>","parent":{"krate":1,"index":8414},"children":[],"decl_id":{"krate":1,"index":8416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6242},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491625,"byte_end":491634,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<SelectAll<St> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491843,"byte_end":491852,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a SelectAll<St> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492051,"byte_end":492060,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut SelectAll<St> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":8405},"children":[],"decl_id":{"krate":1,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13195},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492210,"byte_end":492214,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492120,"byte_end":492181,"line_start":185,"line_end":185,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":13204},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492367,"byte_end":492374,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492279,"byte_end":492338,"line_start":189,"line_end":189,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13213},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492528,"byte_end":492536,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492442,"byte_end":492499,"line_start":193,"line_end":193,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6259},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492686,"byte_end":492690,"line_start":200,"line_end":200,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492948,"byte_end":492957,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493189,"byte_end":493193,"line_start":218,"line_end":218,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493451,"byte_end":493460,"line_start":226,"line_end":226,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6274},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493680,"byte_end":493684,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<St> as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493945,"byte_end":493954,"line_start":244,"line_end":244,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<St> as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8603},"children":[],"decl_id":{"krate":1,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6299},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494551,"byte_end":494560,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494181,"byte_end":494268,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494269,"byte_end":494272,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494273,"byte_end":494349,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494350,"byte_end":494403,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494404,"byte_end":494407,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494408,"byte_end":494485,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/abortable.rs","byte_start":494486,"byte_end":494543,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6333},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6354},{"krate":0,"index":6357},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":6366},{"krate":0,"index":6369},{"krate":0,"index":6372},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6385},{"krate":0,"index":6388},{"krate":0,"index":6391},{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6429}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494788,"byte_end":494821,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494822,"byte_end":494825,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494826,"byte_end":494851,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494852,"byte_end":494855,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494856,"byte_end":494904,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494905,"byte_end":494958,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":494959,"byte_end":495007,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495008,"byte_end":495055,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495056,"byte_end":495059,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495060,"byte_end":495134,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/mod.rs","byte_start":495135,"byte_end":495207,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496457,"byte_end":496465,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6420}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496414,"byte_end":496446,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6420},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497640,"byte_end":497645,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn spawn<Fut, '_>(&'_ Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6419},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496479,"byte_end":496544,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496549,"byte_end":496564,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496569,"byte_end":496572,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496577,"byte_end":496647,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496652,"byte_end":496671,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496676,"byte_end":496679,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496684,"byte_end":496753,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496758,"byte_end":496831,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496836,"byte_end":496875,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496880,"byte_end":496883,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496888,"byte_end":496954,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496959,"byte_end":497025,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497030,"byte_end":497101,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497106,"byte_end":497162,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497167,"byte_end":497170,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497175,"byte_end":497182,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497187,"byte_end":497194,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497199,"byte_end":497237,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497242,"byte_end":497274,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497279,"byte_end":497282,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497287,"byte_end":497333,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497338,"byte_end":497341,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497346,"byte_end":497383,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497388,"byte_end":497424,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497429,"byte_end":497436,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497441,"byte_end":497590,"line_start":46,"line_end":46,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497595,"byte_end":497602,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":497607,"byte_end":497632,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499577,"byte_end":499590,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6423}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499529,"byte_end":499566,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6423},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500633,"byte_end":500644,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn spawn_local<Fut, '_>(&'_ Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6422},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499609,"byte_end":499674,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499679,"byte_end":499694,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499699,"byte_end":499702,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499707,"byte_end":499777,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499782,"byte_end":499801,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499806,"byte_end":499809,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499814,"byte_end":499883,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499888,"byte_end":499961,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499966,"byte_end":500005,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500010,"byte_end":500013,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500018,"byte_end":500084,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500089,"byte_end":500155,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500160,"byte_end":500231,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500236,"byte_end":500292,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500297,"byte_end":500300,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500305,"byte_end":500312,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500317,"byte_end":500354,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500359,"byte_end":500396,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500401,"byte_end":500404,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500409,"byte_end":500445,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500450,"byte_end":500487,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500492,"byte_end":500495,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500500,"byte_end":500537,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500542,"byte_end":500583,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500588,"byte_end":500595,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":500600,"byte_end":500625,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6432},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","parent":null,"children":[{"krate":0,"index":6433}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502049,"byte_end":502091,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502092,"byte_end":502095,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502096,"byte_end":502162,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6433},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502799,"byte_end":502804,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502164,"byte_end":502199,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502200,"byte_end":502203,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502204,"byte_end":502279,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502280,"byte_end":502317,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502318,"byte_end":502321,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502322,"byte_end":502386,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502387,"byte_end":502390,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502391,"byte_end":502462,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502463,"byte_end":502514,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502515,"byte_end":502607,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502608,"byte_end":502611,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502612,"byte_end":502683,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/never.rs","byte_start":502684,"byte_end":502789,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6434},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lock/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lock/mod.rs","byte_start":502835,"byte_end":502882,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lock/mod.rs","byte_start":502883,"byte_end":502886,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lock/mod.rs","byte_start":502887,"byte_end":502962,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lock/mod.rs","byte_start":502963,"byte_end":503020,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504320,"byte_end":504329,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":13222},{"krate":0,"index":13223}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":12044521,"byte_end":12044530,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6473},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505739,"byte_end":505742,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504435,"byte_end":504517,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504522,"byte_end":504590,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504595,"byte_end":504598,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504603,"byte_end":504675,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504680,"byte_end":504763,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504768,"byte_end":504793,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504798,"byte_end":504801,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504806,"byte_end":504821,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504826,"byte_end":504829,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504834,"byte_end":504857,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504862,"byte_end":504865,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504870,"byte_end":504877,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504882,"byte_end":504923,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504928,"byte_end":504987,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504992,"byte_end":504995,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505000,"byte_end":505069,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505074,"byte_end":505139,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505144,"byte_end":505169,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505174,"byte_end":505217,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505222,"byte_end":505231,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505236,"byte_end":505243,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505248,"byte_end":505251,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505256,"byte_end":505279,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505284,"byte_end":505287,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505292,"byte_end":505299,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505304,"byte_end":505345,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505350,"byte_end":505402,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505407,"byte_end":505452,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505457,"byte_end":505460,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505465,"byte_end":505534,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505539,"byte_end":505624,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505629,"byte_end":505654,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505659,"byte_end":505701,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505706,"byte_end":505715,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505720,"byte_end":505727,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6474},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506247,"byte_end":506257,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"fn is_aborted<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505837,"byte_end":505901,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505906,"byte_end":505974,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":505979,"byte_end":506029,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506034,"byte_end":506088,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506093,"byte_end":506185,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506190,"byte_end":506235,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":13263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506525,"byte_end":506542,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":13264}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506335,"byte_end":506385,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506386,"byte_end":506462,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506463,"byte_end":506496,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6476},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506921,"byte_end":506927,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"handle","qualname":"<AbortRegistration>::handle","value":"fn handle<'_>(&'_ Self) -> AbortHandle","parent":null,"children":[],"decl_id":null,"docs":" Create an [`AbortHandle`] from the given [`AbortRegistration`].","sig":null,"attributes":[{"value":"/ Create an [`AbortHandle`] from the given [`AbortRegistration`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506616,"byte_end":506683,"line_start":82,"line_end":82,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506688,"byte_end":506691,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The created [`AbortHandle`] is functionally the same as any other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506696,"byte_end":506765,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ [`AbortHandle`]s that are associated with the same [`AbortRegistration`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506770,"byte_end":506847,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/ such as the one created by [`AbortHandle::new_pair`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506852,"byte_end":506909,"line_start":86,"line_end":86,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":13267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507083,"byte_end":507094,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":13268}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507011,"byte_end":507047,"line_start":92,"line_end":92,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":6478},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507365,"byte_end":507373,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507151,"byte_end":507225,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507230,"byte_end":507270,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507275,"byte_end":507278,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507283,"byte_end":507353,"line_start":102,"line_end":102,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":13278},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507928,"byte_end":507935,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507819,"byte_end":507871,"line_start":119,"line_end":119,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6480},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507977,"byte_end":507980,"line_start":124,"line_end":124,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Aborted as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6489},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509264,"byte_end":509268,"line_start":169,"line_end":169,"column_start":8,"column_end":12},"name":"poll","qualname":"<Abortable<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13770},"children":[],"decl_id":{"krate":1,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509488,"byte_end":509497,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Abortable<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6497},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510069,"byte_end":510074,"line_start":192,"line_end":192,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn abort<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509702,"byte_end":509770,"line_start":186,"line_end":186,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509775,"byte_end":509778,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509783,"byte_end":509850,"line_start":188,"line_end":188,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509855,"byte_end":509923,"line_start":189,"line_end":189,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509928,"byte_end":510002,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510007,"byte_end":510057,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510705,"byte_end":510715,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<AbortHandle>::is_aborted","value":"fn is_aborted<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether [`AbortHandle::abort`] was *called* on any associated\n [`AbortHandle`]s, which includes all the [`AbortHandle`]s linked with\n the same [`AbortRegistration`]. This means that it will return `true`\n even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.","sig":null,"attributes":[{"value":"/ Checks whether [`AbortHandle::abort`] was *called* on any associated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510187,"byte_end":510259,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ [`AbortHandle`]s, which includes all the [`AbortHandle`]s linked with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510264,"byte_end":510337,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ the same [`AbortRegistration`]. This means that it will return `true`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510342,"byte_end":510415,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ even if:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510420,"byte_end":510432,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510437,"byte_end":510491,"line_start":201,"line_end":201,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510496,"byte_end":510588,"line_start":202,"line_end":202,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510593,"byte_end":510638,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510643,"byte_end":510646,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This operation has a Relaxed ordering.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":510651,"byte_end":510693,"line_start":205,"line_end":205,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":6510},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":510865,"byte_end":510872,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6512},{"krate":0,"index":6513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6512},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":510887,"byte_end":510893,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":6510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":510902,"byte_end":510911,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6519},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511036,"byte_end":511045,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"call_once","qualname":"<T as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> R","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6520},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511104,"byte_end":511110,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6522}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511135,"byte_end":511143,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6527},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511250,"byte_end":511258,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<T as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> R","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6537},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512449,"byte_end":512453,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6543},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512516,"byte_end":512523,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OkFn<E> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6548},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512646,"byte_end":512655,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"call_once","qualname":"<OkFn<E> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13309},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512809,"byte_end":512816,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512964,"byte_end":512973,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"call_once","qualname":"<ChainFn<F, G> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6559},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513163,"byte_end":513171,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<ChainFn<F, G> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13330},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513550,"byte_end":513563,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513644,"byte_end":513653,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MergeResultFn as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, T>) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13346},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513905,"byte_end":513914,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6577},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514123,"byte_end":514132,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6582},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514394,"byte_end":514402,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13361},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514869,"byte_end":514876,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515010,"byte_end":515019,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6601},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515195,"byte_end":515203,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13376},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515587,"byte_end":515595,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6616},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515730,"byte_end":515739,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515920,"byte_end":515928,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13391},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516315,"byte_end":516326,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6638},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516471,"byte_end":516480,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6644},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516719,"byte_end":516727,"line_start":260,"line_end":260,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13403},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517211,"byte_end":517223,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517369,"byte_end":517378,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517619,"byte_end":517627,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13415},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518371,"byte_end":518385,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6685},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518519,"byte_end":518528,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"call_once","qualname":"<UnwrapOrElseFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6691},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518734,"byte_end":518742,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<UnwrapOrElseFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6520},"children":[],"decl_id":{"krate":0,"index":6522},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6701},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519150,"byte_end":519156,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519225,"byte_end":519232,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"default","qualname":"<IntoFn<T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6712},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519367,"byte_end":519376,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"call_once","qualname":"<IntoFn<T> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6510},"children":[],"decl_id":{"krate":0,"index":6513},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":39861,"byte_end":39865,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":39972,"byte_end":39976,"line_start":22,"line_end":22,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41705,"byte_end":41709,"line_start":73,"line_end":73,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41822,"byte_end":41826,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42761,"byte_end":42764,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42933,"byte_end":42936,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":43198,"byte_end":43201,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66156,"byte_end":66166,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66317,"byte_end":66327,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66450,"byte_end":66460,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67169,"byte_end":67179,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67309,"byte_end":67319,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67562,"byte_end":67572,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":68525,"byte_end":68535,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":68778,"byte_end":68788,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72112,"byte_end":72125,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72255,"byte_end":72268,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72511,"byte_end":72524,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48554,"byte_end":48557,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73833,"byte_end":73837,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74433,"byte_end":74437,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74581,"byte_end":74585,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75188,"byte_end":75195,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75798,"byte_end":75805,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75950,"byte_end":75957,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75983,"byte_end":75990,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76744,"byte_end":76753,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77356,"byte_end":77365,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78463,"byte_end":78472,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78673,"byte_end":78682,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80002,"byte_end":80014,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80240,"byte_end":80252,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":81365,"byte_end":81377,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":81581,"byte_end":81593,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83243,"byte_end":83255,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83353,"byte_end":83365,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83679,"byte_end":83691,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83878,"byte_end":83890,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84328,"byte_end":84334,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":85028,"byte_end":85034,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":85176,"byte_end":85182,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":85910,"byte_end":85923,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":86489,"byte_end":86502,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":87522,"byte_end":87535,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89707,"byte_end":89712,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89891,"byte_end":89896,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89928,"byte_end":89933,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90030,"byte_end":90035,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98033,"byte_end":98040,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":100587,"byte_end":100594,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":101582,"byte_end":101589,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102085,"byte_end":102091,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104527,"byte_end":104533,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":105548,"byte_end":105554,"line_start":126,"line_end":126,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106117,"byte_end":106126,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107133,"byte_end":107142,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107325,"byte_end":107334,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":108045,"byte_end":108054,"line_start":71,"line_end":71,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":116659,"byte_end":116669,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":120042,"byte_end":120052,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":121624,"byte_end":121634,"line_start":193,"line_end":193,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122140,"byte_end":122149,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":124117,"byte_end":124126,"line_start":63,"line_end":63,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125413,"byte_end":125421,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":126499,"byte_end":126507,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":127923,"byte_end":127931,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128910,"byte_end":128916,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130422,"byte_end":130428,"line_start":66,"line_end":66,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130813,"byte_end":130819,"line_start":78,"line_end":78,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131200,"byte_end":131206,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131447,"byte_end":131453,"line_start":100,"line_end":100,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131795,"byte_end":131801,"line_start":115,"line_end":115,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132077,"byte_end":132083,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132621,"byte_end":132627,"line_start":150,"line_end":150,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201038,"byte_end":201043,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201269,"byte_end":201274,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201483,"byte_end":201488,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203089,"byte_end":203096,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203338,"byte_end":203345,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203523,"byte_end":203530,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":204556,"byte_end":204561,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":204909,"byte_end":204914,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":205164,"byte_end":205169,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":206294,"byte_end":206300,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":206520,"byte_end":206526,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":207234,"byte_end":207240,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":207966,"byte_end":207971,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208192,"byte_end":208197,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208329,"byte_end":208334,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208452,"byte_end":208457,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1915},{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209263,"byte_end":209268,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209424,"byte_end":209429,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":210178,"byte_end":210183,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":210931,"byte_end":210940,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":9464},{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211126,"byte_end":211135,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211253,"byte_end":211262,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":212703,"byte_end":212709,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213182,"byte_end":213188,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":9529},{"krate":0,"index":9530},{"krate":0,"index":9531},{"krate":0,"index":9532}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213511,"byte_end":213517,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213854,"byte_end":213860,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216025,"byte_end":216034,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216331,"byte_end":216340,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":9590},{"krate":0,"index":9591},{"krate":0,"index":9592},{"krate":0,"index":9593}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216607,"byte_end":216616,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216883,"byte_end":216892,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":218987,"byte_end":218994,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":9643},{"krate":0,"index":9644},{"krate":0,"index":9645},{"krate":0,"index":9646}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":219163,"byte_end":219170,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":219362,"byte_end":219369,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":220883,"byte_end":220887,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221243,"byte_end":221247,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221508,"byte_end":221512,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221747,"byte_end":221751,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223340,"byte_end":223343,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223673,"byte_end":223676,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223929,"byte_end":223932,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":224161,"byte_end":224164,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":225916,"byte_end":225919,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226249,"byte_end":226252,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226504,"byte_end":226507,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226736,"byte_end":226739,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":228493,"byte_end":228500,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":228793,"byte_end":228800,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":229031,"byte_end":229038,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":229277,"byte_end":229284,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230385,"byte_end":230389,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":9990},{"krate":0,"index":9991},{"krate":0,"index":9992},{"krate":0,"index":9993}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230886,"byte_end":230890,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230988,"byte_end":230992,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232194,"byte_end":232206,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234696,"byte_end":234708,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234828,"byte_end":234840,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":235725,"byte_end":235728,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":235917,"byte_end":235920,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":10114},{"krate":0,"index":10115},{"krate":0,"index":10116},{"krate":0,"index":10117}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236089,"byte_end":236092,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236260,"byte_end":236263,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237375,"byte_end":237379,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237430,"byte_end":237434,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237585,"byte_end":237589,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237728,"byte_end":237732,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238383,"byte_end":238397,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238548,"byte_end":238562,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238706,"byte_end":238720,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240031,"byte_end":240039,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":10257},{"krate":0,"index":10258},{"krate":0,"index":10259},{"krate":0,"index":10260},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245536,"byte_end":245544,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245686,"byte_end":245694,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":246846,"byte_end":246850,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247095,"byte_end":247099,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247210,"byte_end":247214,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247911,"byte_end":247918,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248166,"byte_end":248173,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248284,"byte_end":248291,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249011,"byte_end":249017,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249369,"byte_end":249375,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249644,"byte_end":249650,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":250911,"byte_end":250919,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251239,"byte_end":251247,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251431,"byte_end":251439,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251810,"byte_end":251820,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252485,"byte_end":252489,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2770},{"krate":0,"index":10481},{"krate":0,"index":10482},{"krate":0,"index":10483},{"krate":0,"index":10484}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252680,"byte_end":252684,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252802,"byte_end":252806,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":254403,"byte_end":254412,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":254864,"byte_end":254873,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":10550},{"krate":0,"index":10551},{"krate":0,"index":10552},{"krate":0,"index":10553}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":255199,"byte_end":255208,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":255456,"byte_end":255465,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":257758,"byte_end":257762,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":10594},{"krate":0,"index":10595},{"krate":0,"index":10596},{"krate":0,"index":10597}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":257935,"byte_end":257939,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":258884,"byte_end":258888,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":259911,"byte_end":259920,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":260368,"byte_end":260377,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":10663},{"krate":0,"index":10664},{"krate":0,"index":10665},{"krate":0,"index":10666}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":260696,"byte_end":260705,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":262217,"byte_end":262226,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":263610,"byte_end":263619,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":263907,"byte_end":263916,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":10720},{"krate":0,"index":10721},{"krate":0,"index":10722},{"krate":0,"index":10723},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":266033,"byte_end":266042,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":267074,"byte_end":267083,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268025,"byte_end":268029,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3022}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268280,"byte_end":268284,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":10781},{"krate":0,"index":10782},{"krate":0,"index":10783},{"krate":0,"index":10784}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268530,"byte_end":268534,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268760,"byte_end":268764,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":270639,"byte_end":270642,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272228,"byte_end":272231,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272426,"byte_end":272429,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":275110,"byte_end":275116,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":10886},{"krate":0,"index":10887},{"krate":0,"index":10888},{"krate":0,"index":10889}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":275602,"byte_end":275608,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":277216,"byte_end":277222,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":278162,"byte_end":278173,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3176},{"krate":0,"index":10930},{"krate":0,"index":10931},{"krate":0,"index":10932},{"krate":0,"index":10933}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":278410,"byte_end":278421,"line_start":31,"line_end":31,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":280090,"byte_end":280101,"line_start":78,"line_end":78,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281074,"byte_end":281078,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281564,"byte_end":281568,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281732,"byte_end":281736,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":10999},{"krate":0,"index":11000},{"krate":0,"index":11001},{"krate":0,"index":11002}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":282098,"byte_end":282102,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":283329,"byte_end":283333,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":284514,"byte_end":284529,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":284861,"byte_end":284876,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3304},{"krate":0,"index":11044},{"krate":0,"index":11045},{"krate":0,"index":11046},{"krate":0,"index":11047}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":285203,"byte_end":285218,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":286672,"byte_end":286687,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":287810,"byte_end":287818,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":288165,"byte_end":288173,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":11089},{"krate":0,"index":11090},{"krate":0,"index":11091},{"krate":0,"index":11092}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":288453,"byte_end":288461,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":289901,"byte_end":289909,"line_start":98,"line_end":98,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":291719,"byte_end":291734,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3453},{"krate":0,"index":3456},{"krate":0,"index":3458},{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":295736,"byte_end":295749,"line_start":172,"line_end":172,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296109,"byte_end":296122,"line_start":184,"line_end":184,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296522,"byte_end":296534,"line_start":200,"line_end":200,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296559,"byte_end":296571,"line_start":201,"line_end":201,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296581,"byte_end":296593,"line_start":203,"line_end":203,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":297465,"byte_end":297477,"line_start":223,"line_end":223,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":298566,"byte_end":298579,"line_start":256,"line_end":256,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":298783,"byte_end":298796,"line_start":263,"line_end":263,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3492},{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":300040,"byte_end":300074,"line_start":300,"line_end":300,"column_start":29,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":300635,"byte_end":300669,"line_start":317,"line_end":317,"column_start":14,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3502},{"krate":0,"index":11201},{"krate":0,"index":11202},{"krate":0,"index":11203},{"krate":0,"index":11204}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302374,"byte_end":302412,"line_start":373,"line_end":373,"column_start":14,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302697,"byte_end":302731,"line_start":383,"line_end":383,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":303001,"byte_end":303035,"line_start":394,"line_end":394,"column_start":25,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":309639,"byte_end":309656,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310002,"byte_end":310019,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310452,"byte_end":310469,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310699,"byte_end":310716,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":149956,"byte_end":149957,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354009,"byte_end":354016,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3919}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354309,"byte_end":354316,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":11423},{"krate":0,"index":11424},{"krate":0,"index":11425},{"krate":0,"index":11426}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354597,"byte_end":354604,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":355740,"byte_end":355747,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356665,"byte_end":356675,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":11670},{"krate":0,"index":11671},{"krate":0,"index":11672},{"krate":0,"index":11673}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356868,"byte_end":356878,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3969}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356999,"byte_end":357009,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358108,"byte_end":358114,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358406,"byte_end":358412,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4020},{"krate":0,"index":11869},{"krate":0,"index":11870},{"krate":0,"index":11871},{"krate":0,"index":11872}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358690,"byte_end":358696,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":359966,"byte_end":359972,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4032}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360876,"byte_end":360883,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360937,"byte_end":360944,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":361107,"byte_end":361114,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":361256,"byte_end":361263,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4075},{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362039,"byte_end":362049,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362345,"byte_end":362355,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362600,"byte_end":362610,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4124},{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364009,"byte_end":364018,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364414,"byte_end":364423,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4171},{"krate":0,"index":11999},{"krate":0,"index":12000},{"krate":0,"index":12001},{"krate":0,"index":12002}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364666,"byte_end":364675,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364932,"byte_end":364941,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367075,"byte_end":367087,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367387,"byte_end":367399,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4229},{"krate":0,"index":12060},{"krate":0,"index":12061},{"krate":0,"index":12062},{"krate":0,"index":12063}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367596,"byte_end":367608,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367886,"byte_end":367898,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370075,"byte_end":370085,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":12104},{"krate":0,"index":12105},{"krate":0,"index":12106},{"krate":0,"index":12107}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370350,"byte_end":370360,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370606,"byte_end":370616,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373417,"byte_end":373451,"line_start":55,"line_end":55,"column_start":10,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4338},{"krate":0,"index":12200},{"krate":0,"index":12201},{"krate":0,"index":12202},{"krate":0,"index":12203}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373811,"byte_end":373817,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4341},{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374135,"byte_end":374141,"line_start":84,"line_end":84,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374168,"byte_end":374174,"line_start":86,"line_end":86,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374831,"byte_end":374855,"line_start":105,"line_end":105,"column_start":70,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":375460,"byte_end":375494,"line_start":123,"line_end":123,"column_start":21,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4362},{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":376625,"byte_end":376659,"line_start":154,"line_end":154,"column_start":26,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":377793,"byte_end":377803,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4408}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":377943,"byte_end":377953,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4412}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":378141,"byte_end":378151,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4416},{"krate":0,"index":4417}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_concat.rs","byte_start":379126,"byte_end":379135,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_concat.rs","byte_start":379354,"byte_end":379363,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":380747,"byte_end":380756,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":12359},{"krate":0,"index":12360},{"krate":0,"index":12361},{"krate":0,"index":12362}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":381349,"byte_end":381358,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383251,"byte_end":383260,"line_start":96,"line_end":96,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383919,"byte_end":383933,"line_start":119,"line_end":119,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":384078,"byte_end":384092,"line_start":125,"line_end":125,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":384903,"byte_end":384910,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4568}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385269,"byte_end":385276,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385556,"byte_end":385563,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385817,"byte_end":385824,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4586},{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389687,"byte_end":389696,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4629}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389958,"byte_end":389967,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":391713,"byte_end":391725,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":392181,"byte_end":392193,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4686},{"krate":0,"index":12575},{"krate":0,"index":12576},{"krate":0,"index":12577},{"krate":0,"index":12578}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":392533,"byte_end":392545,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":394037,"byte_end":394049,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":395277,"byte_end":395289,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4739}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":395741,"byte_end":395753,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":12644},{"krate":0,"index":12645},{"krate":0,"index":12646},{"krate":0,"index":12647}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":396091,"byte_end":396103,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":397703,"byte_end":397715,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4756}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffer_unordered.rs","byte_start":399003,"byte_end":399021,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":12692},{"krate":0,"index":12693},{"krate":0,"index":12694},{"krate":0,"index":12695}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffer_unordered.rs","byte_start":399360,"byte_end":399378,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4809},{"krate":0,"index":4810}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffered.rs","byte_start":401584,"byte_end":401595,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4860},{"krate":0,"index":12740},{"krate":0,"index":12741},{"krate":0,"index":12742},{"krate":0,"index":12743}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffered.rs","byte_start":401932,"byte_end":401943,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404106,"byte_end":404126,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4912}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404491,"byte_end":404511,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404750,"byte_end":404770,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4922}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405218,"byte_end":405238,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4927},{"krate":0,"index":4928}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318118,"byte_end":318119,"line_start":163,"line_end":163,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408002,"byte_end":408006,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408628,"byte_end":408632,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409823,"byte_end":409829,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409856,"byte_end":409862,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":410170,"byte_end":410176,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5139}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410773,"byte_end":410783,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410827,"byte_end":410837,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5176}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411151,"byte_end":411161,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5180}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413681,"byte_end":413686,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413718,"byte_end":413723,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413808,"byte_end":413813,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":414062,"byte_end":414067,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415006,"byte_end":415010,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5271}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415139,"byte_end":415143,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415748,"byte_end":415752,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5279}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416411,"byte_end":416418,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416450,"byte_end":416457,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5317}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416542,"byte_end":416549,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416794,"byte_end":416801,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5325}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417188,"byte_end":417194,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417225,"byte_end":417231,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5360}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417996,"byte_end":418002,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":418698,"byte_end":418711,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419624,"byte_end":419637,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422524,"byte_end":422530,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423834,"byte_end":423840,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":424019,"byte_end":424025,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5463},{"krate":0,"index":5464}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424700,"byte_end":424708,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":425058,"byte_end":425066,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5504}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":425223,"byte_end":425236,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5515}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428833,"byte_end":428851,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5529}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":430218,"byte_end":430236,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5535}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":431806,"byte_end":431824,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":432998,"byte_end":433016,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5558}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435587,"byte_end":435593,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435833,"byte_end":435839,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":436119,"byte_end":436125,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5626},{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437673,"byte_end":437685,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5691}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437790,"byte_end":437802,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437833,"byte_end":437845,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437968,"byte_end":437980,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438161,"byte_end":438173,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5702},{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440761,"byte_end":440775,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440801,"byte_end":440815,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5719},{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443467,"byte_end":443481,"line_start":169,"line_end":169,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443574,"byte_end":443588,"line_start":175,"line_end":175,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444750,"byte_end":444764,"line_start":210,"line_end":210,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5731}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444930,"byte_end":444944,"line_start":216,"line_end":216,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":445229,"byte_end":445243,"line_start":229,"line_end":229,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5739}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":445413,"byte_end":445427,"line_start":235,"line_end":235,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5742}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/abort.rs","byte_start":472596,"byte_end":472607,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5844}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473981,"byte_end":473989,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475170,"byte_end":475178,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475215,"byte_end":475225,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476077,"byte_end":476087,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476135,"byte_end":476142,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476405,"byte_end":476412,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476453,"byte_end":476463,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477332,"byte_end":477342,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477390,"byte_end":477394,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477653,"byte_end":477657,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477826,"byte_end":477836,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477881,"byte_end":477891,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477937,"byte_end":477947,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477992,"byte_end":478002,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":478056,"byte_end":478064,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":478113,"byte_end":478121,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":479806,"byte_end":479810,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":479845,"byte_end":479849,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":479881,"byte_end":479885,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5991}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":481018,"byte_end":481022,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5994},{"krate":0,"index":5995}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":482022,"byte_end":482026,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":483476,"byte_end":483491,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6057}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":486159,"byte_end":486174,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6060}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448018,"byte_end":448034,"line_start":64,"line_end":64,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448075,"byte_end":448091,"line_start":65,"line_end":65,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448120,"byte_end":448136,"line_start":66,"line_end":66,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448161,"byte_end":448177,"line_start":68,"line_end":68,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6080}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448362,"byte_end":448378,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450085,"byte_end":450101,"line_start":107,"line_end":107,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450175,"byte_end":450191,"line_start":113,"line_end":113,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6088},{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6092},{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":461800,"byte_end":461816,"line_start":388,"line_end":388,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6113}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":466192,"byte_end":466196,"line_start":486,"line_end":486,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6112}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469005,"byte_end":469021,"line_start":552,"line_end":552,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469159,"byte_end":469175,"line_start":558,"line_end":558,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6119},{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469746,"byte_end":469762,"line_start":578,"line_end":578,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471412,"byte_end":471428,"line_start":619,"line_end":619,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6138},{"krate":0,"index":6139},{"krate":0,"index":6140}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471898,"byte_end":471914,"line_start":633,"line_end":633,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":472190,"byte_end":472206,"line_start":646,"line_end":646,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6148}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":472328,"byte_end":472344,"line_start":652,"line_end":652,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6151}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487637,"byte_end":487646,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487791,"byte_end":487800,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489273,"byte_end":489282,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489381,"byte_end":489390,"line_start":90,"line_end":90,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6223},{"krate":0,"index":6224}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490174,"byte_end":490183,"line_start":112,"line_end":112,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491201,"byte_end":491210,"line_start":144,"line_end":144,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6232}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491355,"byte_end":491364,"line_start":150,"line_end":150,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491547,"byte_end":491556,"line_start":158,"line_end":158,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6242}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492639,"byte_end":492643,"line_start":197,"line_end":197,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6258},{"krate":0,"index":6259},{"krate":0,"index":6260}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493076,"byte_end":493080,"line_start":213,"line_end":213,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493135,"byte_end":493142,"line_start":215,"line_end":215,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6266},{"krate":0,"index":6267},{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493579,"byte_end":493586,"line_start":231,"line_end":231,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493637,"byte_end":493645,"line_start":233,"line_end":233,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6275}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":494073,"byte_end":494081,"line_start":249,"line_end":249,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496329,"byte_end":496331,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496386,"byte_end":496388,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504416,"byte_end":504425,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6473},{"krate":0,"index":6474}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506592,"byte_end":506609,"line_start":81,"line_end":81,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6476}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507133,"byte_end":507144,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6478}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507960,"byte_end":507967,"line_start":123,"line_end":123,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6480}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":508170,"byte_end":508179,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6483}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509168,"byte_end":509177,"line_start":163,"line_end":163,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6488},{"krate":0,"index":6489}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509416,"byte_end":509425,"line_start":174,"line_end":174,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6493},{"krate":0,"index":6494}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509684,"byte_end":509695,"line_start":185,"line_end":185,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6497},{"krate":0,"index":6498}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":510975,"byte_end":510976,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6518},{"krate":0,"index":6519}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511211,"byte_end":511212,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6527}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511482,"byte_end":511483,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512499,"byte_end":512503,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6543}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512597,"byte_end":512601,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6547},{"krate":0,"index":6548}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512860,"byte_end":512867,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6553},{"krate":0,"index":6554}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513090,"byte_end":513097,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6559}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513288,"byte_end":513295,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6564}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513600,"byte_end":513613,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6570},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514030,"byte_end":514039,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6576},{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514323,"byte_end":514332,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6582}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514594,"byte_end":514603,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514925,"byte_end":514932,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6594},{"krate":0,"index":6595}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515151,"byte_end":515158,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6601}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515336,"byte_end":515343,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6607}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515644,"byte_end":515652,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6615},{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515875,"byte_end":515883,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6622}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516065,"byte_end":516073,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516383,"byte_end":516394,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6637},{"krate":0,"index":6638}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516654,"byte_end":516665,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6644}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516902,"byte_end":516913,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517280,"byte_end":517292,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6659}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517553,"byte_end":517565,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6665}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517803,"byte_end":517815,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6671}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518434,"byte_end":518448,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6684},{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518671,"byte_end":518685,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518886,"byte_end":518900,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519206,"byte_end":519212,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519305,"byte_end":519311,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6711},{"krate":0,"index":6712}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/unfold_state.rs","byte_start":519916,"byte_end":519927,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6723},{"krate":0,"index":6724}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1606}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141467,"byte_end":141484,"line_start":117,"line_end":117,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":5747}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/mod.rs","byte_start":141683,"byte_end":141693,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6156}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6333}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6432}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6434}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6725},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6725},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6725},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6725},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":39861,"byte_end":39865,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":39972,"byte_end":39976,"line_start":22,"line_end":22,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41705,"byte_end":41709,"line_start":73,"line_end":73,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6772},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/fuse.rs","byte_start":41822,"byte_end":41826,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6772},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42761,"byte_end":42764,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":42933,"byte_end":42936,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6808},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/map.rs","byte_start":43198,"byte_end":43201,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6808},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":236},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":13770},"to":{"krate":0,"index":237}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66156,"byte_end":66166,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":7360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66317,"byte_end":66327,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":7360},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/into_future.rs","byte_start":66450,"byte_end":66460,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":7360},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67169,"byte_end":67179,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":7396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67309,"byte_end":67319,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":7396},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":67562,"byte_end":67572,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":7396},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":68525,"byte_end":68535,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":7396},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten.rs","byte_start":68778,"byte_end":68788,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":7396},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72112,"byte_end":72125,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":7443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72255,"byte_end":72268,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":7443},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/try_flatten_err.rs","byte_start":72511,"byte_end":72524,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":7443},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48554,"byte_end":48557,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":504}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_future/mod.rs","byte_start":48640,"byte_end":48649,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":44},"to":{"krate":0,"index":504}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":73833,"byte_end":73837,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":8310},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74433,"byte_end":74437,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":8310},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/lazy.rs","byte_start":74581,"byte_end":74585,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":8310},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75188,"byte_end":75195,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":8316},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75798,"byte_end":75805,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":8316},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75950,"byte_end":75957,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":8316},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/pending.rs","byte_start":75983,"byte_end":75990,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":8316},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":76744,"byte_end":76753,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":8322},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":77356,"byte_end":77365,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":8322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78463,"byte_end":78472,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":8322},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/maybe_done.rs","byte_start":78673,"byte_end":78682,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":8322},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80002,"byte_end":80014,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":8335},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":80240,"byte_end":80252,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":8335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":81365,"byte_end":81377,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":8335},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_maybe_done.rs","byte_start":81581,"byte_end":81593,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":8335},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83243,"byte_end":83255,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":8348},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83353,"byte_end":83365,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":8348},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83679,"byte_end":83691,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":8348},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/option.rs","byte_start":83878,"byte_end":83890,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":8348},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":84328,"byte_end":84334,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":823},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":85028,"byte_end":85034,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":823},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_fn.rs","byte_start":85176,"byte_end":85182,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":823},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":85910,"byte_end":85923,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":8387},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":86489,"byte_end":86502,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":8387},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/poll_immediate.rs","byte_start":87522,"byte_end":87535,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":8387},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89707,"byte_end":89712,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":8426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89891,"byte_end":89896,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":8426},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":89928,"byte_end":89933,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":8426},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/ready.rs","byte_start":90030,"byte_end":90035,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":8426},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":98033,"byte_end":98040,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1078},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":100587,"byte_end":100594,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1078},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/join_all.rs","byte_start":101582,"byte_end":101589,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1078},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":102085,"byte_end":102091,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":8780},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":104527,"byte_end":104533,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":8780},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select.rs","byte_start":105548,"byte_end":105554,"line_start":126,"line_end":126,"column_start":28,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":8780},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":106117,"byte_end":106126,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":8788},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107133,"byte_end":107142,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":8788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":107325,"byte_end":107334,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":8788},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_all.rs","byte_start":108045,"byte_end":108054,"line_start":71,"line_end":71,"column_start":49,"column_end":58},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":8788},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":116659,"byte_end":116669,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":120042,"byte_end":120052,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_join_all.rs","byte_start":121624,"byte_end":121634,"line_start":193,"line_end":193,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":122140,"byte_end":122149,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":9116},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/try_select.rs","byte_start":124117,"byte_end":124126,"line_start":63,"line_end":63,"column_start":37,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":9116},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":125413,"byte_end":125421,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":9124},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":126499,"byte_end":126507,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":9124},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/select_ok.rs","byte_start":127923,"byte_end":127931,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":9124},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":128910,"byte_end":128916,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":9130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130422,"byte_end":130428,"line_start":66,"line_end":66,"column_start":15,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":9130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":130813,"byte_end":130819,"line_start":78,"line_end":78,"column_start":15,"column_end":21},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":9130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131200,"byte_end":131206,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131447,"byte_end":131453,"line_start":100,"line_end":100,"column_start":23,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":9130},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":131795,"byte_end":131801,"line_start":115,"line_end":115,"column_start":28,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":9130},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132077,"byte_end":132083,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9130},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/future/either.rs","byte_start":132621,"byte_end":132627,"line_start":150,"line_end":150,"column_start":28,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":9130},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201038,"byte_end":201043,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201269,"byte_end":201274,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9147},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chain.rs","byte_start":201483,"byte_end":201488,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9147},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203089,"byte_end":203096,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203338,"byte_end":203345,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9196},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/collect.rs","byte_start":203523,"byte_end":203530,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9196},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":204556,"byte_end":204561,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":204909,"byte_end":204914,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9245},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/unzip.rs","byte_start":205164,"byte_end":205169,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9245},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":206294,"byte_end":206300,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":206520,"byte_end":206526,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9307},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/concat.rs","byte_start":207234,"byte_end":207240,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9307},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":207966,"byte_end":207971,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9347},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208192,"byte_end":208197,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208329,"byte_end":208334,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9347},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/count.rs","byte_start":208452,"byte_end":208457,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9347},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209263,"byte_end":209268,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":209424,"byte_end":209429,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9384},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/cycle.rs","byte_start":210178,"byte_end":210183,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9384},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":210931,"byte_end":210940,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211126,"byte_end":211135,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9424},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/enumerate.rs","byte_start":211253,"byte_end":211262,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9424},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":212703,"byte_end":212709,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9468},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213182,"byte_end":213188,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":9468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213511,"byte_end":213517,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":9468},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter.rs","byte_start":213854,"byte_end":213860,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9468},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216025,"byte_end":216034,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":9533},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216331,"byte_end":216340,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":9533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216607,"byte_end":216616,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":9533},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/filter_map.rs","byte_start":216883,"byte_end":216892,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":9533},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":218987,"byte_end":218994,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":9594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":219163,"byte_end":219170,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9594},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten.rs","byte_start":219362,"byte_end":219369,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9594},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":220883,"byte_end":220887,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9702},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221243,"byte_end":221247,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221508,"byte_end":221512,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9702},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fold.rs","byte_start":221747,"byte_end":221751,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9702},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223340,"byte_end":223343,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9771},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223673,"byte_end":223676,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":223929,"byte_end":223932,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9771},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/any.rs","byte_start":224161,"byte_end":224164,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9771},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":225916,"byte_end":225919,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9832},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226249,"byte_end":226252,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226504,"byte_end":226507,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9832},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/all.rs","byte_start":226736,"byte_end":226739,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9832},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":228493,"byte_end":228500,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":9893},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":228793,"byte_end":228800,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":9893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":229031,"byte_end":229038,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":9893},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each.rs","byte_start":229277,"byte_end":229284,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":9893},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230385,"byte_end":230389,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":9950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230886,"byte_end":230890,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":9950},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/fuse.rs","byte_start":230988,"byte_end":230992,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":9950},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":232194,"byte_end":232206,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":9994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234696,"byte_end":234708,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":9994},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/into_future.rs","byte_start":234828,"byte_end":234840,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":9994},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":235725,"byte_end":235728,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10069},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":235917,"byte_end":235920,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236089,"byte_end":236092,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10069},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/map.rs","byte_start":236260,"byte_end":236263,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10069},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237375,"byte_end":237379,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10201},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237430,"byte_end":237434,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237585,"byte_end":237589,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":10201},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/next.rs","byte_start":237728,"byte_end":237732,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10201},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238383,"byte_end":238397,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":10209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238548,"byte_end":238562,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10209},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/select_next_some.rs","byte_start":238706,"byte_end":238720,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10209},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":240031,"byte_end":240039,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245536,"byte_end":245544,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10217},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":245686,"byte_end":245694,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":10217},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":246846,"byte_end":246850,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10261},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247095,"byte_end":247099,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10261},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247210,"byte_end":247214,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10261},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":247911,"byte_end":247918,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10302},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248166,"byte_end":248173,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10302},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":248284,"byte_end":248291,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10302},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249011,"byte_end":249017,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10343},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249369,"byte_end":249375,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10343},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":249644,"byte_end":249650,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10343},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":250911,"byte_end":250919,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":10392},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251239,"byte_end":251247,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":10392},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251431,"byte_end":251439,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":10392},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/peek.rs","byte_start":251810,"byte_end":251820,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2717},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252485,"byte_end":252489,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":10441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252680,"byte_end":252684,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":10441},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip.rs","byte_start":252802,"byte_end":252806,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":10441},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":254403,"byte_end":254412,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":10485},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":254864,"byte_end":254873,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":10485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":255199,"byte_end":255208,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":10485},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/skip_while.rs","byte_start":255456,"byte_end":255465,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":10485},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":257758,"byte_end":257762,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":10554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":257935,"byte_end":257939,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":10554},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take.rs","byte_start":258884,"byte_end":258888,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":10554},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":259911,"byte_end":259920,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":10598},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":260368,"byte_end":260377,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":10598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":260696,"byte_end":260705,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":10598},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_while.rs","byte_start":262217,"byte_end":262226,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":10598},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":263610,"byte_end":263619,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":10667},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":263907,"byte_end":263916,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":10667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":266033,"byte_end":266042,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":10667},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/take_until.rs","byte_start":267074,"byte_end":267083,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":10667},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268025,"byte_end":268029,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":10724},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268280,"byte_end":268284,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":10724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268530,"byte_end":268534,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":10724},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/then.rs","byte_start":268760,"byte_end":268764,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":10724},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":270639,"byte_end":270642,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":10785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272228,"byte_end":272231,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":10785},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/zip.rs","byte_start":272426,"byte_end":272429,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":10785},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":275110,"byte_end":275116,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":10842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":275602,"byte_end":275608,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":10842},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/chunks.rs","byte_start":277216,"byte_end":277222,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":10842},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":278162,"byte_end":278173,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":10890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":278410,"byte_end":278421,"line_start":31,"line_end":31,"column_start":29,"column_end":40},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":10890},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/ready_chunks.rs","byte_start":280090,"byte_end":280101,"line_start":78,"line_end":78,"column_start":34,"column_end":45},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":10890},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281074,"byte_end":281078,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":10934},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281564,"byte_end":281568,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":10934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":281732,"byte_end":281736,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":10934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":282098,"byte_end":282102,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":10934},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/scan.rs","byte_start":283329,"byte_end":283333,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":10934},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":284514,"byte_end":284529,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":11003},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":284861,"byte_end":284876,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":11003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":285203,"byte_end":285218,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":11003},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffer_unordered.rs","byte_start":286672,"byte_end":286687,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":11003},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":287810,"byte_end":287818,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":11048},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":288165,"byte_end":288173,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":11048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":288453,"byte_end":288461,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":11048},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/buffered.rs","byte_start":289901,"byte_end":289909,"line_start":98,"line_end":98,"column_start":26,"column_end":34},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":11048},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":291719,"byte_end":291734,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":11093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":295736,"byte_end":295749,"line_start":172,"line_end":172,"column_start":45,"column_end":58},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296109,"byte_end":296122,"line_start":184,"line_end":184,"column_start":50,"column_end":63},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3461},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296522,"byte_end":296534,"line_start":200,"line_end":200,"column_start":22,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3474},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296559,"byte_end":296571,"line_start":201,"line_end":201,"column_start":22,"column_end":34},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3474},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":296581,"byte_end":296593,"line_start":203,"line_end":203,"column_start":6,"column_end":18},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":297465,"byte_end":297477,"line_start":223,"line_end":223,"column_start":18,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3474},"to":{"krate":22,"index":94}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":298566,"byte_end":298579,"line_start":256,"line_end":256,"column_start":10,"column_end":23},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":11099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":298783,"byte_end":298796,"line_start":263,"line_end":263,"column_start":37,"column_end":50},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":11099},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":300040,"byte_end":300074,"line_start":300,"line_end":300,"column_start":29,"column_end":63},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":11132},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":300635,"byte_end":300669,"line_start":317,"line_end":317,"column_start":14,"column_end":48},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":11132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302374,"byte_end":302412,"line_start":373,"line_end":373,"column_start":14,"column_end":52},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":11143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":302697,"byte_end":302731,"line_start":383,"line_end":383,"column_start":30,"column_end":64},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":11132},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/flatten_unordered.rs","byte_start":303001,"byte_end":303035,"line_start":394,"line_end":394,"column_start":25,"column_end":59},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":11132},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":309639,"byte_end":309656,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":11305},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310002,"byte_end":310019,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":11305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310452,"byte_end":310469,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":11305},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/for_each_concurrent.rs","byte_start":310699,"byte_end":310716,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":11305},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":149956,"byte_end":149957,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3592},"to":{"krate":0,"index":3593}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/stream/mod.rs","byte_start":150100,"byte_end":150106,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":5,"index":96},"to":{"krate":0,"index":3593}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354009,"byte_end":354016,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":11366},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354309,"byte_end":354316,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":11366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":354597,"byte_end":354604,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":11366},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/and_then.rs","byte_start":355740,"byte_end":355747,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":11366},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356665,"byte_end":356675,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":11634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356868,"byte_end":356878,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":11634},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/into_stream.rs","byte_start":356999,"byte_end":357009,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":11634},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358108,"byte_end":358114,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":11812},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358406,"byte_end":358412,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":11812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":358690,"byte_end":358696,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":11812},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/or_else.rs","byte_start":359966,"byte_end":359972,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":11812},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360876,"byte_end":360883,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":11873},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":360937,"byte_end":360944,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":11873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":361107,"byte_end":361114,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":11873},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_next.rs","byte_start":361256,"byte_end":361263,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":11873},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362039,"byte_end":362049,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":11881},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362345,"byte_end":362355,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":11881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each.rs","byte_start":362600,"byte_end":362610,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":11881},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364009,"byte_end":364018,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":11938},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364414,"byte_end":364423,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":11938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364666,"byte_end":364675,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":11938},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter.rs","byte_start":364932,"byte_end":364941,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":11938},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367075,"byte_end":367087,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":12003},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367387,"byte_end":367399,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":12003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367596,"byte_end":367608,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":12003},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_filter_map.rs","byte_start":367886,"byte_end":367898,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":12003},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370075,"byte_end":370085,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":12064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370350,"byte_end":370360,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":12064},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten.rs","byte_start":370606,"byte_end":370616,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":12064},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373417,"byte_end":373451,"line_start":55,"line_end":55,"column_start":10,"column_end":44},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":12164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":373811,"byte_end":373817,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":12204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374135,"byte_end":374141,"line_start":84,"line_end":84,"column_start":19,"column_end":25},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":12204},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374168,"byte_end":374174,"line_start":86,"line_end":86,"column_start":20,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":12204},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":374831,"byte_end":374855,"line_start":105,"line_end":105,"column_start":70,"column_end":94},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":12214},"to":{"krate":0,"index":3503}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":375460,"byte_end":375494,"line_start":123,"line_end":123,"column_start":21,"column_end":55},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":12164},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_flatten_unordered.rs","byte_start":376625,"byte_end":376659,"line_start":154,"line_end":154,"column_start":26,"column_end":60},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":12164},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":377793,"byte_end":377803,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":12226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":377943,"byte_end":377953,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":12226},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_collect.rs","byte_start":378141,"byte_end":378151,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":12226},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_concat.rs","byte_start":379126,"byte_end":379135,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":12275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_concat.rs","byte_start":379354,"byte_end":379363,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":12275},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":380747,"byte_end":380756,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":12315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":381349,"byte_end":381358,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":12315},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383251,"byte_end":383260,"line_start":96,"line_end":96,"column_start":51,"column_end":60},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":12315},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":383919,"byte_end":383933,"line_start":119,"line_end":119,"column_start":39,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":12363},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_chunks.rs","byte_start":384078,"byte_end":384092,"line_start":125,"line_end":125,"column_start":43,"column_end":57},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":12363},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":384903,"byte_end":384910,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":12384},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385269,"byte_end":385276,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":12384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385556,"byte_end":385563,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":12384},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_fold.rs","byte_start":385817,"byte_end":385824,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":12384},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389687,"byte_end":389696,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":12453},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_unfold.rs","byte_start":389958,"byte_end":389967,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":12453},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":391713,"byte_end":391725,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":12510},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":392181,"byte_end":392193,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":12510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":392533,"byte_end":392545,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":12510},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_skip_while.rs","byte_start":394037,"byte_end":394049,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":12510},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":395277,"byte_end":395289,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":12579},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":395741,"byte_end":395753,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":12579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":396091,"byte_end":396103,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":12579},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_take_while.rs","byte_start":397703,"byte_end":397715,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":12579},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffer_unordered.rs","byte_start":399003,"byte_end":399021,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":12648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffer_unordered.rs","byte_start":399360,"byte_end":399378,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":12648},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffered.rs","byte_start":401584,"byte_end":401595,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":12696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_buffered.rs","byte_start":401932,"byte_end":401943,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":12696},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404106,"byte_end":404126,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":12744},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404491,"byte_end":404511,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":12744},"to":{"krate":5,"index":27}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":404750,"byte_end":404770,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":12744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405218,"byte_end":405238,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":12744},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318118,"byte_end":318119,"line_start":163,"line_end":163,"column_start":46,"column_end":47},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4934},"to":{"krate":0,"index":4935}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/try_stream/mod.rs","byte_start":318200,"byte_end":318209,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":127},"to":{"krate":0,"index":4935}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408002,"byte_end":408006,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":12805},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/iter.rs","byte_start":408628,"byte_end":408632,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":12805},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409823,"byte_end":409829,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":12814},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":409856,"byte_end":409862,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":12814},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat.rs","byte_start":410170,"byte_end":410176,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":12814},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410773,"byte_end":410783,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":12823},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":410827,"byte_end":410837,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":12823},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/repeat_with.rs","byte_start":411151,"byte_end":411161,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":12823},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413681,"byte_end":413686,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":12832},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413718,"byte_end":413723,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":12832},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":413808,"byte_end":413813,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":12832},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/empty.rs","byte_start":414062,"byte_end":414067,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":12832},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415006,"byte_end":415010,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":12838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415139,"byte_end":415143,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":12838},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/once.rs","byte_start":415748,"byte_end":415752,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":12838},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416411,"byte_end":416418,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":12874},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416450,"byte_end":416457,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":12874},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416542,"byte_end":416549,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":12874},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/pending.rs","byte_start":416794,"byte_end":416801,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":12874},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417188,"byte_end":417194,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5353},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417225,"byte_end":417231,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5353},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_fn.rs","byte_start":417996,"byte_end":418002,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5353},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":418698,"byte_end":418711,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":12880},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/poll_immediate.rs","byte_start":419624,"byte_end":419637,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":12880},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":422524,"byte_end":422530,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":12919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":423834,"byte_end":423840,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":12919},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select.rs","byte_start":424019,"byte_end":424025,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":12919},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":424700,"byte_end":424708,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":12964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":425058,"byte_end":425066,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":12964},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":425223,"byte_end":425236,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":428833,"byte_end":428851,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":12983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":430218,"byte_end":430236,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":12983},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":431806,"byte_end":431824,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":12983},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_with_strategy.rs","byte_start":432998,"byte_end":433016,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":12983},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435587,"byte_end":435593,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":13056},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":435833,"byte_end":435839,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":13056},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/unfold.rs","byte_start":436119,"byte_end":436125,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":13056},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437673,"byte_end":437685,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":13109},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437790,"byte_end":437802,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":13109},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437833,"byte_end":437845,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":13109},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":437968,"byte_end":437980,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":13109},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":438161,"byte_end":438173,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":13109},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440761,"byte_end":440775,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5705},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":440801,"byte_end":440815,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443467,"byte_end":443481,"line_start":169,"line_end":169,"column_start":31,"column_end":45},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5705},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":443574,"byte_end":443588,"line_start":175,"line_end":175,"column_start":30,"column_end":44},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5705},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444750,"byte_end":444764,"line_start":210,"line_end":210,"column_start":29,"column_end":43},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5705},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":444930,"byte_end":444944,"line_start":216,"line_end":216,"column_start":41,"column_end":55},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5705},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":445229,"byte_end":445243,"line_start":229,"line_end":229,"column_start":35,"column_end":49},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":5705},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_ordered.rs","byte_start":445413,"byte_end":445427,"line_start":235,"line_end":235,"column_start":35,"column_end":49},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5705},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/abort.rs","byte_start":472596,"byte_end":472607,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5841},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":473981,"byte_end":473989,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":13188},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475170,"byte_end":475178,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":13188},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":475215,"byte_end":475225,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":13149},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476077,"byte_end":476087,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":13149},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476135,"byte_end":476142,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":13159},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476405,"byte_end":476412,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":13159},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":476453,"byte_end":476463,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":13168},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477332,"byte_end":477342,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":13168},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477390,"byte_end":477394,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":13179},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477653,"byte_end":477657,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":13179},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477826,"byte_end":477836,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":13168},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477881,"byte_end":477891,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":13168},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477937,"byte_end":477947,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":13149},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":477992,"byte_end":478002,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":13149},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":478056,"byte_end":478064,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":13188},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/iter.rs","byte_start":478113,"byte_end":478121,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":13188},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":479806,"byte_end":479810,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5975},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":479845,"byte_end":479849,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5975},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":479881,"byte_end":479885,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5975},"to":{"krate":22,"index":94}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":481018,"byte_end":481022,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/task.rs","byte_start":482022,"byte_end":482026,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5975},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":483476,"byte_end":483491,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":486159,"byte_end":486174,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6046},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448018,"byte_end":448034,"line_start":64,"line_end":64,"column_start":33,"column_end":49},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448075,"byte_end":448091,"line_start":65,"line_end":65,"column_start":33,"column_end":49},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448120,"byte_end":448136,"line_start":66,"line_end":66,"column_start":21,"column_end":37},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448161,"byte_end":448177,"line_start":68,"line_end":68,"column_start":16,"column_end":32},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6068},"to":{"krate":22,"index":16}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":448362,"byte_end":448378,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6068},"to":{"krate":22,"index":19}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450085,"byte_end":450101,"line_start":107,"line_end":107,"column_start":23,"column_end":39},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":450175,"byte_end":450191,"line_start":113,"line_end":113,"column_start":11,"column_end":27},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":461800,"byte_end":461816,"line_start":388,"line_end":388,"column_start":30,"column_end":46},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6068},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":466192,"byte_end":466196,"line_start":486,"line_end":486,"column_start":32,"column_end":36},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6105},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469005,"byte_end":469021,"line_start":552,"line_end":552,"column_start":21,"column_end":37},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469159,"byte_end":469175,"line_start":558,"line_end":558,"column_start":11,"column_end":27},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":469746,"byte_end":469762,"line_start":578,"line_end":578,"column_start":20,"column_end":36},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471412,"byte_end":471428,"line_start":619,"line_end":619,"column_start":35,"column_end":51},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":471898,"byte_end":471914,"line_start":633,"line_end":633,"column_start":33,"column_end":49},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":472190,"byte_end":472206,"line_start":646,"line_end":646,"column_start":35,"column_end":51},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6068},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/futures_unordered/mod.rs","byte_start":472328,"byte_end":472344,"line_start":652,"line_end":652,"column_start":27,"column_end":43},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6068},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487637,"byte_end":487646,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6203},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":487791,"byte_end":487800,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489273,"byte_end":489282,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6203},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":489381,"byte_end":489390,"line_start":90,"line_end":90,"column_start":37,"column_end":46},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6203},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":490174,"byte_end":490183,"line_start":112,"line_end":112,"column_start":42,"column_end":51},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6203},"to":{"krate":5,"index":110}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491201,"byte_end":491210,"line_start":144,"line_end":144,"column_start":47,"column_end":56},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6203},"to":{"krate":1,"index":8401}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491355,"byte_end":491364,"line_start":150,"line_end":150,"column_start":41,"column_end":50},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6203},"to":{"krate":1,"index":8414}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":491547,"byte_end":491556,"line_start":158,"line_end":158,"column_start":43,"column_end":52},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6203},"to":{"krate":1,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":492639,"byte_end":492643,"line_start":197,"line_end":197,"column_start":43,"column_end":47},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":13195},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493076,"byte_end":493080,"line_start":213,"line_end":213,"column_start":48,"column_end":52},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":13195},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493135,"byte_end":493142,"line_start":215,"line_end":215,"column_start":43,"column_end":50},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":13204},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493579,"byte_end":493586,"line_start":231,"line_end":231,"column_start":48,"column_end":55},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":13204},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":493637,"byte_end":493645,"line_start":233,"line_end":233,"column_start":39,"column_end":47},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":13213},"to":{"krate":1,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/stream/select_all.rs","byte_start":494073,"byte_end":494081,"line_start":249,"line_end":249,"column_start":48,"column_end":56},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":13213},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496329,"byte_end":496331,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6416},"to":{"krate":0,"index":6419}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496386,"byte_end":496388,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6418},"to":{"krate":0,"index":6422}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":496467,"byte_end":496472,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":16},"to":{"krate":0,"index":6419}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/task/spawn.rs","byte_start":499592,"byte_end":499602,"line_start":103,"line_end":103,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":19},"to":{"krate":0,"index":6422}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":504416,"byte_end":504425,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":13220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":506592,"byte_end":506609,"line_start":81,"line_end":81,"column_start":6,"column_end":23},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":13263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507133,"byte_end":507144,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":13267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":507960,"byte_end":507967,"line_start":123,"line_end":123,"column_start":23,"column_end":30},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":13278},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":508170,"byte_end":508179,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":13220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509168,"byte_end":509177,"line_start":163,"line_end":163,"column_start":22,"column_end":31},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":13220},"to":{"krate":1,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509416,"byte_end":509425,"line_start":174,"line_end":174,"column_start":21,"column_end":30},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":13220},"to":{"krate":5,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/abortable.rs","byte_start":509684,"byte_end":509695,"line_start":185,"line_end":185,"column_start":6,"column_end":17},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":13267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":510975,"byte_end":510976,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6515},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511115,"byte_end":511122,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":6510},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511211,"byte_end":511212,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511398,"byte_end":511404,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":6520},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":511482,"byte_end":511483,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6532},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512499,"byte_end":512503,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6537},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512597,"byte_end":512601,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6537},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":512860,"byte_end":512867,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":13309},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513090,"byte_end":513097,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":13309},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513288,"byte_end":513295,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":13309},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":513600,"byte_end":513613,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":13330},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514030,"byte_end":514039,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":13346},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514323,"byte_end":514332,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":13346},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514594,"byte_end":514603,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":13346},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":514925,"byte_end":514932,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":13361},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515151,"byte_end":515158,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":13361},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515336,"byte_end":515343,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":13361},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515644,"byte_end":515652,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":13376},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":515875,"byte_end":515883,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":13376},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516065,"byte_end":516073,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":13376},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516383,"byte_end":516394,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":13391},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516654,"byte_end":516665,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":13391},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":516902,"byte_end":516913,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":13391},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517280,"byte_end":517292,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":13403},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517553,"byte_end":517565,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":13403},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":517803,"byte_end":517815,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":13403},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518434,"byte_end":518448,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":13415},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518671,"byte_end":518685,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":13415},"to":{"krate":0,"index":6520}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":518886,"byte_end":518900,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":13415},"to":{"krate":0,"index":6528}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519206,"byte_end":519212,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6701},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/fns.rs","byte_start":519305,"byte_end":519311,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6701},"to":{"krate":0,"index":6510}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.28/src/unfold_state.rs","byte_start":519916,"byte_end":519927,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":13448},"to":{"krate":4294967295,"index":4294967295}}]}