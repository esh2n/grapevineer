{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","prost_types","--edition=2021","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=bf40f1057c3d5a08","-C","extra-filename=-bf40f1057c3d5a08","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","prost=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprost-1f3cf5eeb9f35abb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprost_types-bf40f1057c3d5a08.rmeta"},"prelude":{"crate_id":{"name":"prost_types","disambiguator":[10990449130273745888,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":4,"id":{"name":"prost","disambiguator":[15285855434092549117,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":5,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":6,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":7,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":8,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":12,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":13,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":14,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":16,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":17,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":18,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":19,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":21,"id":{"name":"prost_derive","disambiguator":[13805543166489788830,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","num":22,"id":{"name":"bytes","disambiguator":[5441976563651757446,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":0,"byte_end":30760,"line_start":1,"line_end":746,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":691,"byte_end":692,"line_start":27,"line_end":27,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Timestamp, FileDescriptorProto, Duration, GeneratedCodeInfo","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":0,"byte_end":30760,"line_start":1,"line_end":746,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":101},{"krate":0,"index":4},{"krate":0,"index":395},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":3248},{"krate":0,"index":3256},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":3262},{"krate":0,"index":3270},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":99}],"decl_id":null,"docs":" Protocol Buffers well-known types.","sig":null,"attributes":[{"value":"/ Protocol Buffers well-known types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":63,"byte_end":101,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":102,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Note that the documentation for the types defined in this crate are generated from the Protobuf","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":106,"byte_end":205,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ definitions, so code examples are not in Rust.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":206,"byte_end":256,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":257,"byte_end":260,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [Protobuf reference][1] for more information about well-known types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":261,"byte_end":341,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":342,"byte_end":345,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [1]: https://developers.google.com/protocol-buffers/docs/reference/google.protobuf","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":346,"byte_end":432,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"no_std","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":468,"byte_end":474,"line_start":12,"line_end":12,"column_start":35,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":101},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compiler","qualname":"::compiler","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":169},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":269},{"krate":0,"index":102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":478,"byte_end":494,"line_start":14,"line_end":14,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748415,"byte_end":7748422,"line_start":4,"line_end":4,"column_start":12,"column_end":19},"name":"Version","qualname":"::compiler::Version","value":"Version { major, minor, patch, suffix }","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748266,"byte_end":7748310,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748311,"byte_end":7748357,"line_start":2,"line_end":2,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":174},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748474,"byte_end":7748479,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"name":"major","qualname":"::compiler::Version::major","value":"core::option::Option<i32>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748429,"byte_end":7748465,"line_start":5,"line_end":5,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":175},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748559,"byte_end":7748564,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"minor","qualname":"::compiler::Version::minor","value":"core::option::Option<i32>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748514,"byte_end":7748550,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":176},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748644,"byte_end":7748649,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"patch","qualname":"::compiler::Version::patch","value":"core::option::Option<i32>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748599,"byte_end":7748635,"line_start":9,"line_end":9,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":177},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748859,"byte_end":7748865,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"suffix","qualname":"::compiler::Version::suffix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should\n be empty for mainline stable releases.\n","sig":null,"attributes":[{"value":"/ A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748684,"byte_end":7748761,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ be empty for mainline stable releases.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748766,"byte_end":7748808,"line_start":12,"line_end":12,"column_start":5,"column_end":47}},{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748813,"byte_end":7748850,"line_start":13,"line_end":13,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748474,"byte_end":7748479,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"name":"major","qualname":"<Version>::major","value":"fn major<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `major`, or the default value if `major` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748559,"byte_end":7748564,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"minor","qualname":"<Version>::minor","value":"fn minor<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `minor`, or the default value if `minor` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748644,"byte_end":7748649,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"patch","qualname":"<Version>::patch","value":"fn patch<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `patch`, or the default value if `patch` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748859,"byte_end":7748865,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"suffix","qualname":"<Version>::suffix","value":"fn suffix<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `suffix`, or the default value if `suffix` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749099,"byte_end":7749119,"line_start":19,"line_end":19,"column_start":12,"column_end":32},"name":"CodeGeneratorRequest","qualname":"::compiler::CodeGeneratorRequest","value":"CodeGeneratorRequest { file_to_generate, parameter, proto_file, compiler_version }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" An encoded CodeGeneratorRequest is written to the plugin's stdin.\n","sig":null,"attributes":[{"value":"/ An encoded CodeGeneratorRequest is written to the plugin's stdin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748925,"byte_end":7748994,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7748995,"byte_end":7749041,"line_start":17,"line_end":17,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749388,"byte_end":7749404,"line_start":24,"line_end":24,"column_start":9,"column_end":25},"name":"file_to_generate","qualname":"::compiler::CodeGeneratorRequest::file_to_generate","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The .proto files that were explicitly listed on the command-line.  The\n code generator should generate code only for these files.  Each file's\n descriptor will be included in proto_file, below.\n","sig":null,"attributes":[{"value":"/ The .proto files that were explicitly listed on the command-line.  The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749126,"byte_end":7749200,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ code generator should generate code only for these files.  Each file's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749205,"byte_end":7749279,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/ descriptor will be included in proto_file, below.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749284,"byte_end":7749337,"line_start":22,"line_end":22,"column_start":5,"column_end":58}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749342,"byte_end":7749379,"line_start":23,"line_end":23,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749574,"byte_end":7749583,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"parameter","qualname":"::compiler::CodeGeneratorRequest::parameter","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The generator parameter passed on the command-line.\n","sig":null,"attributes":[{"value":"/ The generator parameter passed on the command-line.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749468,"byte_end":7749523,"line_start":25,"line_end":25,"column_start":5,"column_end":60}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749528,"byte_end":7749565,"line_start":26,"line_end":26,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750552,"byte_end":7750562,"line_start":43,"line_end":43,"column_start":9,"column_end":19},"name":"proto_file","qualname":"::compiler::CodeGeneratorRequest::proto_file","value":"prost::alloc::vec::Vec<protobuf::FileDescriptorProto>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" FileDescriptorProtos for all files in files_to_generate and everything\n they import.  The files will appear in topological order, so each file\n appears before any file that imports it.","sig":null,"attributes":[{"value":"/ FileDescriptorProtos for all files in files_to_generate and everything","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749645,"byte_end":7749719,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ they import.  The files will appear in topological order, so each file","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749724,"byte_end":7749798,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ appears before any file that imports it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749803,"byte_end":7749847,"line_start":30,"line_end":30,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749852,"byte_end":7749855,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ protoc guarantees that all proto_files will be written after","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749860,"byte_end":7749924,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/ the fields above, even though this is not technically guaranteed by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749929,"byte_end":7750004,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ protobuf wire format.  This theoretically could allow a plugin to stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750009,"byte_end":7750085,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ in the FileDescriptorProtos and handle them one by one rather than read","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750090,"byte_end":7750165,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ the entire set into memory at once.  However, as of this writing, this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750170,"byte_end":7750244,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ is not similarly optimized on protoc's end -- it will store all fields in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750249,"byte_end":7750326,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/ memory at once before sending them to the plugin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750331,"byte_end":7750384,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750389,"byte_end":7750392,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Type names of fields and extensions in the FileDescriptorProto are always","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750397,"byte_end":7750474,"line_start":40,"line_end":40,"column_start":5,"column_end":82}},{"value":"/ fully qualified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750479,"byte_end":7750499,"line_start":41,"line_end":41,"column_start":5,"column_end":25}},{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750504,"byte_end":7750543,"line_start":42,"line_end":42,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750718,"byte_end":7750734,"line_start":46,"line_end":46,"column_start":9,"column_end":25},"name":"compiler_version","qualname":"::compiler::CodeGeneratorRequest::compiler_version","value":"core::option::Option<compiler::Version>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750622,"byte_end":7750666,"line_start":44,"line_end":44,"column_start":5,"column_end":49}},{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750671,"byte_end":7750709,"line_start":45,"line_end":45,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7749574,"byte_end":7749583,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"parameter","qualname":"<CodeGeneratorRequest>::parameter","value":"fn parameter<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `parameter`, or the default value if `parameter` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750941,"byte_end":7750962,"line_start":51,"line_end":51,"column_start":12,"column_end":33},"name":"CodeGeneratorResponse","qualname":"::compiler::CodeGeneratorResponse","value":"CodeGeneratorResponse { error, supported_features, file }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":" The plugin writes an encoded CodeGeneratorResponse to stdout.\n","sig":null,"attributes":[{"value":"/ The plugin writes an encoded CodeGeneratorResponse to stdout.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750771,"byte_end":7750836,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750837,"byte_end":7750883,"line_start":49,"line_end":49,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751550,"byte_end":7751555,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"error","qualname":"::compiler::CodeGeneratorResponse::error","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Error message.  If non-empty, code generation failed.  The plugin process\n should exit with status code zero even if it reports an error in this way.","sig":null,"attributes":[{"value":"/ Error message.  If non-empty, code generation failed.  The plugin process","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7750969,"byte_end":7751046,"line_start":52,"line_end":52,"column_start":5,"column_end":82}},{"value":"/ should exit with status code zero even if it reports an error in this way.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751051,"byte_end":7751129,"line_start":53,"line_end":53,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751134,"byte_end":7751137,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This should be used to indicate errors in .proto files which prevent the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751142,"byte_end":7751218,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ code generator from generating correct code.  Errors which indicate a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751223,"byte_end":7751296,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ problem in protoc itself -- such as the input CodeGeneratorRequest being","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751301,"byte_end":7751377,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ unparseable -- should be reported by writing a message to stderr and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751382,"byte_end":7751454,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ exiting with a non-zero status code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751459,"byte_end":7751499,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751504,"byte_end":7751541,"line_start":60,"line_end":60,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751801,"byte_end":7751819,"line_start":65,"line_end":65,"column_start":9,"column_end":27},"name":"supported_features","qualname":"::compiler::CodeGeneratorResponse::supported_features","value":"core::option::Option<u64>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" A bitmask of supported features that the code generator supports.\n This is a bitwise \"or\" of values from the Feature enum.\n","sig":null,"attributes":[{"value":"/ A bitmask of supported features that the code generator supports.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751617,"byte_end":7751686,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ This is a bitwise \"or\" of values from the Feature enum.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751691,"byte_end":7751750,"line_start":63,"line_end":63,"column_start":5,"column_end":64}},{"value":"prost(uint64, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751755,"byte_end":7751792,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751902,"byte_end":7751906,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"file","qualname":"::compiler::CodeGeneratorResponse::file","value":"prost::alloc::vec::Vec<compiler::code_generator_response::File>","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751854,"byte_end":7751893,"line_start":66,"line_end":66,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751550,"byte_end":7751555,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"error","qualname":"<CodeGeneratorResponse>::error","value":"fn error<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `error`, or the default value if `error` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751801,"byte_end":7751819,"line_start":65,"line_end":65,"column_start":9,"column_end":27},"name":"supported_features","qualname":"<CodeGeneratorResponse>::supported_features","value":"fn supported_features<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `supported_features`, or the default value if `supported_features` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752037,"byte_end":7752060,"line_start":70,"line_end":70,"column_start":9,"column_end":32},"name":"code_generator_response","qualname":"::compiler::code_generator_response","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":329},{"krate":0,"index":337},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":103}],"decl_id":null,"docs":" Nested message and enum types in `CodeGeneratorResponse`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `CodeGeneratorResponse`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7751967,"byte_end":7752028,"line_start":69,"line_end":69,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752223,"byte_end":7752227,"line_start":74,"line_end":74,"column_start":16,"column_end":20},"name":"File","qualname":"::compiler::code_generator_response::File","value":"File { name, insertion_point, content, generated_code_info }","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"decl_id":null,"docs":" Represents a single generated file.\n","sig":null,"attributes":[{"value":"/ Represents a single generated file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752067,"byte_end":7752106,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752111,"byte_end":7752157,"line_start":72,"line_end":72,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753077,"byte_end":7753081,"line_start":87,"line_end":87,"column_start":13,"column_end":17},"name":"name","qualname":"::compiler::code_generator_response::File::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The file name, relative to the output directory.  The name must not\n contain \".\" or \"..\" components and must be relative, not be absolute (so,\n the file cannot lie outside the output directory).  \"/\" must be used as\n the path separator, not \"\".","sig":null,"attributes":[{"value":"/ The file name, relative to the output directory.  The name must not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752238,"byte_end":7752309,"line_start":75,"line_end":75,"column_start":9,"column_end":80}},{"value":"/ contain \".\" or \"..\" components and must be relative, not be absolute (so,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752318,"byte_end":7752395,"line_start":76,"line_end":76,"column_start":9,"column_end":86}},{"value":"/ the file cannot lie outside the output directory).  \"/\" must be used as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752404,"byte_end":7752479,"line_start":77,"line_end":77,"column_start":9,"column_end":84}},{"value":"/ the path separator, not \"\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752488,"byte_end":7752519,"line_start":78,"line_end":78,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752528,"byte_end":7752531,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ If the name is omitted, the content will be appended to the previous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752540,"byte_end":7752612,"line_start":80,"line_end":80,"column_start":9,"column_end":81}},{"value":"/ file.  This allows the generator to break large files into small chunks,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752621,"byte_end":7752697,"line_start":81,"line_end":81,"column_start":9,"column_end":85}},{"value":"/ and allows the generated text to be streamed back to protoc so that large","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752706,"byte_end":7752783,"line_start":82,"line_end":82,"column_start":9,"column_end":86}},{"value":"/ files need not reside completely in memory at one time.  Note that as of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752792,"byte_end":7752868,"line_start":83,"line_end":83,"column_start":9,"column_end":85}},{"value":"/ this writing protoc does not optimize for this -- it will read the entire","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752877,"byte_end":7752954,"line_start":84,"line_end":84,"column_start":9,"column_end":86}},{"value":"/ CodeGeneratorResponse before writing files to disk.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7752963,"byte_end":7753018,"line_start":85,"line_end":85,"column_start":9,"column_end":64}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753027,"byte_end":7753064,"line_start":86,"line_end":86,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755677,"byte_end":7755692,"line_start":126,"line_end":126,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"::compiler::code_generator_response::File::insertion_point","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" If non-empty, indicates that the named file should already exist, and the\n content here is to be inserted into that file at a defined insertion\n point.  This feature allows a code generator to extend the output\n produced by another code generator.  The original generator may provide\n insertion points by placing special annotations in the file that look\n like:\n @@protoc_insertion_point(NAME)\n The annotation can have arbitrary text before and after it on the line,\n which allows it to be placed in a comment.  NAME should be replaced with\n an identifier naming the point -- this is what other generators will use\n as the insertion_point.  Code inserted at this point will be placed\n immediately above the line containing the insertion point (thus multiple\n insertions to the same point will come out in the order they were added).\n The double-@ is intended to make it unlikely that the generated code\n could contain things that look like insertion points by accident.","sig":null,"attributes":[{"value":"/ If non-empty, indicates that the named file should already exist, and the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753147,"byte_end":7753224,"line_start":88,"line_end":88,"column_start":9,"column_end":86}},{"value":"/ content here is to be inserted into that file at a defined insertion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753233,"byte_end":7753305,"line_start":89,"line_end":89,"column_start":9,"column_end":81}},{"value":"/ point.  This feature allows a code generator to extend the output","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753314,"byte_end":7753383,"line_start":90,"line_end":90,"column_start":9,"column_end":78}},{"value":"/ produced by another code generator.  The original generator may provide","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753392,"byte_end":7753467,"line_start":91,"line_end":91,"column_start":9,"column_end":84}},{"value":"/ insertion points by placing special annotations in the file that look","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753476,"byte_end":7753549,"line_start":92,"line_end":92,"column_start":9,"column_end":82}},{"value":"/ like:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753558,"byte_end":7753567,"line_start":93,"line_end":93,"column_start":9,"column_end":18}},{"value":"/ @@protoc_insertion_point(NAME)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753576,"byte_end":7753610,"line_start":94,"line_end":94,"column_start":9,"column_end":43}},{"value":"/ The annotation can have arbitrary text before and after it on the line,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753619,"byte_end":7753694,"line_start":95,"line_end":95,"column_start":9,"column_end":84}},{"value":"/ which allows it to be placed in a comment.  NAME should be replaced with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753703,"byte_end":7753779,"line_start":96,"line_end":96,"column_start":9,"column_end":85}},{"value":"/ an identifier naming the point -- this is what other generators will use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753788,"byte_end":7753864,"line_start":97,"line_end":97,"column_start":9,"column_end":85}},{"value":"/ as the insertion_point.  Code inserted at this point will be placed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753873,"byte_end":7753944,"line_start":98,"line_end":98,"column_start":9,"column_end":80}},{"value":"/ immediately above the line containing the insertion point (thus multiple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753953,"byte_end":7754029,"line_start":99,"line_end":99,"column_start":9,"column_end":85}},{"value":"/ insertions to the same point will come out in the order they were added).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754038,"byte_end":7754115,"line_start":100,"line_end":100,"column_start":9,"column_end":86}},{"value":"/ The double-@ is intended to make it unlikely that the generated code","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754124,"byte_end":7754196,"line_start":101,"line_end":101,"column_start":9,"column_end":81}},{"value":"/ could contain things that look like insertion points by accident.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754205,"byte_end":7754274,"line_start":102,"line_end":102,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754283,"byte_end":7754286,"line_start":103,"line_end":103,"column_start":9,"column_end":12}},{"value":"/ For example, the C++ code generator places the following line in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754295,"byte_end":7754367,"line_start":104,"line_end":104,"column_start":9,"column_end":81}},{"value":"/ .pb.h files that it generates:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754376,"byte_end":7754410,"line_start":105,"line_end":105,"column_start":9,"column_end":43}},{"value":"/ // @@protoc_insertion_point(namespace_scope)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754419,"byte_end":7754467,"line_start":106,"line_end":106,"column_start":9,"column_end":57}},{"value":"/ This line appears within the scope of the file's package namespace, but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754476,"byte_end":7754551,"line_start":107,"line_end":107,"column_start":9,"column_end":84}},{"value":"/ outside of any particular class.  Another plugin can then specify the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754560,"byte_end":7754633,"line_start":108,"line_end":108,"column_start":9,"column_end":82}},{"value":"/ insertion_point \"namespace_scope\" to generate additional classes or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754642,"byte_end":7754713,"line_start":109,"line_end":109,"column_start":9,"column_end":80}},{"value":"/ other declarations that should be placed in this scope.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754722,"byte_end":7754781,"line_start":110,"line_end":110,"column_start":9,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754790,"byte_end":7754793,"line_start":111,"line_end":111,"column_start":9,"column_end":12}},{"value":"/ Note that if the line containing the insertion point begins with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754802,"byte_end":7754870,"line_start":112,"line_end":112,"column_start":9,"column_end":77}},{"value":"/ whitespace, the same whitespace will be added to every line of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754879,"byte_end":7754949,"line_start":113,"line_end":113,"column_start":9,"column_end":79}},{"value":"/ inserted text.  This is useful for languages like Python, where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7754958,"byte_end":7755025,"line_start":114,"line_end":114,"column_start":9,"column_end":76}},{"value":"/ indentation matters.  In these languages, the insertion point comment","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755034,"byte_end":7755107,"line_start":115,"line_end":115,"column_start":9,"column_end":82}},{"value":"/ should be indented the same amount as any inserted code will need to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755116,"byte_end":7755191,"line_start":116,"line_end":116,"column_start":9,"column_end":84}},{"value":"/ in order to work correctly in that context.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755200,"byte_end":7755247,"line_start":117,"line_end":117,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755256,"byte_end":7755259,"line_start":118,"line_end":118,"column_start":9,"column_end":12}},{"value":"/ The code generator that generates the initial file and the one which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755268,"byte_end":7755340,"line_start":119,"line_end":119,"column_start":9,"column_end":81}},{"value":"/ inserts into it must both run as part of a single invocation of protoc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755349,"byte_end":7755424,"line_start":120,"line_end":120,"column_start":9,"column_end":84}},{"value":"/ Code generators are executed in the order in which they appear on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755433,"byte_end":7755506,"line_start":121,"line_end":121,"column_start":9,"column_end":82}},{"value":"/ command line.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755515,"byte_end":7755532,"line_start":122,"line_end":122,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755541,"byte_end":7755544,"line_start":123,"line_end":123,"column_start":9,"column_end":12}},{"value":"/ If |insertion_point| is present, |name| must also be present.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755553,"byte_end":7755618,"line_start":124,"line_end":124,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755627,"byte_end":7755664,"line_start":125,"line_end":125,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755840,"byte_end":7755847,"line_start":129,"line_end":129,"column_start":13,"column_end":20},"name":"content","qualname":"::compiler::code_generator_response::File::content","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The file contents.\n","sig":null,"attributes":[{"value":"/ The file contents.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755758,"byte_end":7755780,"line_start":127,"line_end":127,"column_start":9,"column_end":31}},{"value":"prost(string, optional, tag = \"15\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755789,"byte_end":7755827,"line_start":128,"line_end":128,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":336},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756206,"byte_end":7756225,"line_start":134,"line_end":134,"column_start":13,"column_end":32},"name":"generated_code_info","qualname":"::compiler::code_generator_response::File::generated_code_info","value":"core::option::Option<protobuf::GeneratedCodeInfo>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Information describing the file content being inserted. If an insertion\n point is used, this information will be appropriately offset and inserted\n into the code generation metadata for the generated files.\n","sig":null,"attributes":[{"value":"/ Information describing the file content being inserted. If an insertion","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755913,"byte_end":7755988,"line_start":130,"line_end":130,"column_start":9,"column_end":84}},{"value":"/ point is used, this information will be appropriately offset and inserted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755997,"byte_end":7756074,"line_start":131,"line_end":131,"column_start":9,"column_end":86}},{"value":"/ into the code generation metadata for the generated files.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756083,"byte_end":7756145,"line_start":132,"line_end":132,"column_start":9,"column_end":71}},{"value":"prost(message, optional, tag = \"16\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756154,"byte_end":7756193,"line_start":133,"line_end":133,"column_start":9,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7753077,"byte_end":7753081,"line_start":87,"line_end":87,"column_start":13,"column_end":17},"name":"name","qualname":"<File>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755677,"byte_end":7755692,"line_start":126,"line_end":126,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"<File>::insertion_point","value":"fn insertion_point<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `insertion_point`, or the default value if `insertion_point` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7755840,"byte_end":7755847,"line_start":129,"line_end":129,"column_start":13,"column_end":20},"name":"content","qualname":"<File>::content","value":"fn content<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `content`, or the default value if `content` is unset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756546,"byte_end":7756550,"line_start":150,"line_end":150,"column_start":9,"column_end":13},"name":"None","qualname":"::compiler::code_generator_response::Feature::None","value":"Feature::None","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756564,"byte_end":7756578,"line_start":151,"line_end":151,"column_start":9,"column_end":23},"name":"Proto3Optional","qualname":"::compiler::code_generator_response::Feature::Proto3Optional","value":"Feature::Proto3Optional","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":337},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756528,"byte_end":7756535,"line_start":149,"line_end":149,"column_start":14,"column_end":21},"name":"Feature","qualname":"::compiler::code_generator_response::Feature","value":"enum Feature { None = , Proto3Optional = , }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":341}],"decl_id":null,"docs":" Sync with code_generator.h.\n","sig":null,"attributes":[{"value":"/ Sync with code_generator.h.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756294,"byte_end":7756325,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756502,"byte_end":7756514,"line_start":148,"line_end":148,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756891,"byte_end":7756902,"line_start":158,"line_end":158,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<Feature>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756617,"byte_end":7756690,"line_start":154,"line_end":154,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756699,"byte_end":7756702,"line_start":155,"line_end":155,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756711,"byte_end":7756787,"line_start":156,"line_end":156,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756796,"byte_end":7756875,"line_start":157,"line_end":157,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7757189,"byte_end":7757202,"line_start":165,"line_end":165,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<Feature>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7757104,"byte_end":7757173,"line_start":164,"line_end":164,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":48177,"byte_end":48181,"line_start":577,"line_end":577,"column_start":8,"column_end":12},"name":"from","qualname":"<Timestamp as core::convert::From>::from","value":"fn from(DateTime) -> Timestamp","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802304,"byte_end":11802321,"line_start":5,"line_end":5,"column_start":12,"column_end":29},"name":"FileDescriptorSet","qualname":"::protobuf::FileDescriptorSet","value":"FileDescriptorSet { file }","parent":null,"children":[{"krate":0,"index":457}],"decl_id":null,"docs":" The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n","sig":null,"attributes":[{"value":"/ The protocol compiler can output a FileDescriptorSet containing the .proto","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802100,"byte_end":11802178,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ files it parses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802179,"byte_end":11802199,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802200,"byte_end":11802246,"line_start":3,"line_end":3,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":457},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802375,"byte_end":11802379,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"name":"file","qualname":"::protobuf::FileDescriptorSet::file","value":"prost::alloc::vec::Vec<protobuf::FileDescriptorProto>","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802328,"byte_end":11802366,"line_start":6,"line_end":6,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802572,"byte_end":11802591,"line_start":12,"line_end":12,"column_start":12,"column_end":31},"name":"FileDescriptorProto","qualname":"::protobuf::FileDescriptorProto","value":"FileDescriptorProto { name, package, dependency, public_dependency, weak_dependency, message_type, enum_type, service, extension, options, source_code_info, syntax }","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563}],"decl_id":null,"docs":" Describes a complete .proto file.\n","sig":null,"attributes":[{"value":"/ Describes a complete .proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802430,"byte_end":11802467,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802468,"byte_end":11802514,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802695,"byte_end":11802699,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::FileDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" file name, relative to root of source tree\n","sig":null,"attributes":[{"value":"/ file name, relative to root of source tree","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802598,"byte_end":11802644,"line_start":13,"line_end":13,"column_start":5,"column_end":51}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802649,"byte_end":11802686,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802843,"byte_end":11802850,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"package","qualname":"::protobuf::FileDescriptorProto::package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" e.g. \"foo\", \"foo.bar\", etc.\n","sig":null,"attributes":[{"value":"/ e.g. \"foo\", \"foo.bar\", etc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802761,"byte_end":11802792,"line_start":16,"line_end":16,"column_start":5,"column_end":36}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802797,"byte_end":11802834,"line_start":17,"line_end":17,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803004,"byte_end":11803014,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"dependency","qualname":"::protobuf::FileDescriptorProto::dependency","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Names of files imported by this file.\n","sig":null,"attributes":[{"value":"/ Names of files imported by this file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802912,"byte_end":11802953,"line_start":19,"line_end":19,"column_start":5,"column_end":46}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802958,"byte_end":11802995,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803217,"byte_end":11803234,"line_start":24,"line_end":24,"column_start":9,"column_end":26},"name":"public_dependency","qualname":"::protobuf::FileDescriptorProto::public_dependency","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Indexes of the public imported files in the dependency list above.\n","sig":null,"attributes":[{"value":"/ Indexes of the public imported files in the dependency list above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803078,"byte_end":11803148,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"10\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803153,"byte_end":11803208,"line_start":23,"line_end":23,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803458,"byte_end":11803473,"line_start":28,"line_end":28,"column_start":9,"column_end":24},"name":"weak_dependency","qualname":"::protobuf::FileDescriptorProto::weak_dependency","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ Indexes of the weak imported files in the dependency list.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803271,"byte_end":11803333,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803338,"byte_end":11803389,"line_start":26,"line_end":26,"column_start":5,"column_end":56}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"11\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803394,"byte_end":11803449,"line_start":27,"line_end":27,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803605,"byte_end":11803617,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"name":"message_type","qualname":"::protobuf::FileDescriptorProto::message_type","value":"prost::alloc::vec::Vec<protobuf::DescriptorProto>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" All top-level definitions in this file.\n","sig":null,"attributes":[{"value":"/ All top-level definitions in this file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803510,"byte_end":11803553,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803558,"byte_end":11803596,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":558},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803713,"byte_end":11803722,"line_start":33,"line_end":33,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::protobuf::FileDescriptorProto::enum_type","value":"prost::alloc::vec::Vec<protobuf::EnumDescriptorProto>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803666,"byte_end":11803704,"line_start":32,"line_end":32,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":559},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803822,"byte_end":11803829,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"service","qualname":"::protobuf::FileDescriptorProto::service","value":"prost::alloc::vec::Vec<protobuf::ServiceDescriptorProto>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803775,"byte_end":11803813,"line_start":34,"line_end":34,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":560},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803932,"byte_end":11803941,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"extension","qualname":"::protobuf::FileDescriptorProto::extension","value":"prost::alloc::vec::Vec<protobuf::FieldDescriptorProto>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803885,"byte_end":11803923,"line_start":36,"line_end":36,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":561},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804042,"byte_end":11804049,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::FileDescriptorProto::options","value":"core::option::Option<protobuf::FileOptions>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11803995,"byte_end":11804033,"line_start":38,"line_end":38,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":562},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804397,"byte_end":11804413,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::protobuf::FileDescriptorProto::source_code_info","value":"core::option::Option<protobuf::SourceCodeInfo>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n","sig":null,"attributes":[{"value":"/ This field contains optional information about the original source code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804092,"byte_end":11804168,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ You may safely remove this entire field without harming runtime","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804173,"byte_end":11804240,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ functionality of the descriptors -- the information is needed only by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804245,"byte_end":11804318,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ development tools.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804323,"byte_end":11804345,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"prost(message, optional, tag = \"9\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804350,"byte_end":11804388,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":563},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804600,"byte_end":11804606,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"syntax","qualname":"::protobuf::FileDescriptorProto::syntax","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n","sig":null,"attributes":[{"value":"/ The syntax of the proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804459,"byte_end":11804492,"line_start":46,"line_end":46,"column_start":5,"column_end":38}},{"value":"/ The supported values are \"proto2\" and \"proto3\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804497,"byte_end":11804548,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"prost(string, optional, tag = \"12\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804553,"byte_end":11804591,"line_start":48,"line_end":48,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802695,"byte_end":11802699,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"<FileDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11802843,"byte_end":11802850,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"package","qualname":"<FileDescriptorProto>::package","value":"fn package<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `package`, or the default value if `package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804600,"byte_end":11804606,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"syntax","qualname":"<FileDescriptorProto>::syntax","value":"fn syntax<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `syntax`, or the default value if `syntax` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804800,"byte_end":11804815,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"DescriptorProto","qualname":"::protobuf::DescriptorProto","value":"DescriptorProto { name, field, extension, nested_type, enum_type, extension_range, oneof_decl, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"decl_id":null,"docs":" Describes a message type.\n","sig":null,"attributes":[{"value":"/ Describes a message type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804666,"byte_end":11804695,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804696,"byte_end":11804742,"line_start":52,"line_end":52,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":615},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804868,"byte_end":11804872,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::DescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804822,"byte_end":11804859,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":616},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804981,"byte_end":11804986,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"field","qualname":"::protobuf::DescriptorProto::field","value":"prost::alloc::vec::Vec<protobuf::FieldDescriptorProto>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804934,"byte_end":11804972,"line_start":57,"line_end":57,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":617},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805087,"byte_end":11805096,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"name":"extension","qualname":"::protobuf::DescriptorProto::extension","value":"prost::alloc::vec::Vec<protobuf::FieldDescriptorProto>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805040,"byte_end":11805078,"line_start":59,"line_end":59,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":618},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805197,"byte_end":11805208,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"name":"nested_type","qualname":"::protobuf::DescriptorProto::nested_type","value":"prost::alloc::vec::Vec<protobuf::DescriptorProto>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805150,"byte_end":11805188,"line_start":61,"line_end":61,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":619},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805304,"byte_end":11805313,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::protobuf::DescriptorProto::enum_type","value":"prost::alloc::vec::Vec<protobuf::EnumDescriptorProto>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805257,"byte_end":11805295,"line_start":63,"line_end":63,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805413,"byte_end":11805428,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"extension_range","qualname":"::protobuf::DescriptorProto::extension_range","value":"prost::alloc::vec::Vec<protobuf::descriptor_proto::ExtensionRange>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805366,"byte_end":11805404,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":621},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805541,"byte_end":11805551,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"oneof_decl","qualname":"::protobuf::DescriptorProto::oneof_decl","value":"prost::alloc::vec::Vec<protobuf::OneofDescriptorProto>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"8\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805494,"byte_end":11805532,"line_start":67,"line_end":67,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":622},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805652,"byte_end":11805659,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::DescriptorProto::options","value":"core::option::Option<protobuf::MessageOptions>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805605,"byte_end":11805643,"line_start":69,"line_end":69,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":623},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805752,"byte_end":11805766,"line_start":72,"line_end":72,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::protobuf::DescriptorProto::reserved_range","value":"prost::alloc::vec::Vec<protobuf::descriptor_proto::ReservedRange>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805705,"byte_end":11805743,"line_start":71,"line_end":71,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806009,"byte_end":11806022,"line_start":76,"line_end":76,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::protobuf::DescriptorProto::reserved_name","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved field names, which may not be used by fields in the same message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805831,"byte_end":11805909,"line_start":73,"line_end":73,"column_start":5,"column_end":83}},{"value":"/ A given name may only be reserved once.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805914,"byte_end":11805957,"line_start":74,"line_end":74,"column_start":5,"column_end":48}},{"value":"prost(string, repeated, tag = \"10\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11805962,"byte_end":11806000,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11804868,"byte_end":11804872,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"name","qualname":"<DescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806148,"byte_end":11806164,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"name":"descriptor_proto","qualname":"::protobuf::descriptor_proto","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":668},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":715}],"decl_id":null,"docs":" Nested message and enum types in `DescriptorProto`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `DescriptorProto`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806084,"byte_end":11806139,"line_start":78,"line_end":78,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806283,"byte_end":11806297,"line_start":82,"line_end":82,"column_start":16,"column_end":30},"name":"ExtensionRange","qualname":"::protobuf::descriptor_proto::ExtensionRange","value":"ExtensionRange { start, end, options }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806171,"byte_end":11806217,"line_start":80,"line_end":80,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":671},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806380,"byte_end":11806385,"line_start":85,"line_end":85,"column_start":13,"column_end":18},"name":"start","qualname":"::protobuf::descriptor_proto::ExtensionRange::start","value":"core::option::Option<i32>","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806308,"byte_end":11806322,"line_start":83,"line_end":83,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806331,"byte_end":11806367,"line_start":84,"line_end":84,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":672},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806496,"byte_end":11806499,"line_start":88,"line_end":88,"column_start":13,"column_end":16},"name":"end","qualname":"::protobuf::descriptor_proto::ExtensionRange::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806424,"byte_end":11806438,"line_start":86,"line_end":86,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806447,"byte_end":11806483,"line_start":87,"line_end":87,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806589,"byte_end":11806596,"line_start":90,"line_end":90,"column_start":13,"column_end":20},"name":"options","qualname":"::protobuf::descriptor_proto::ExtensionRange::options","value":"core::option::Option<protobuf::ExtensionRangeOptions>","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806538,"byte_end":11806576,"line_start":89,"line_end":89,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806380,"byte_end":11806385,"line_start":85,"line_end":85,"column_start":13,"column_end":18},"name":"start","qualname":"<ExtensionRange>::start","value":"fn start<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806496,"byte_end":11806499,"line_start":88,"line_end":88,"column_start":13,"column_end":16},"name":"end","qualname":"<ExtensionRange>::end","value":"fn end<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":674},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806950,"byte_end":11806963,"line_start":97,"line_end":97,"column_start":16,"column_end":29},"name":"ReservedRange","qualname":"::protobuf::descriptor_proto::ReservedRange","value":"ReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"decl_id":null,"docs":" Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved tag numbers. Reserved tag numbers may not be used by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806662,"byte_end":11806736,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ fields or extension ranges in the same message. Reserved ranges may","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806741,"byte_end":11806812,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ not overlap.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806817,"byte_end":11806833,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806838,"byte_end":11806884,"line_start":95,"line_end":95,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807046,"byte_end":11807051,"line_start":100,"line_end":100,"column_start":13,"column_end":18},"name":"start","qualname":"::protobuf::descriptor_proto::ReservedRange::start","value":"core::option::Option<i32>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806974,"byte_end":11806988,"line_start":98,"line_end":98,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11806997,"byte_end":11807033,"line_start":99,"line_end":99,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":719},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807162,"byte_end":11807165,"line_start":103,"line_end":103,"column_start":13,"column_end":16},"name":"end","qualname":"::protobuf::descriptor_proto::ReservedRange::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807090,"byte_end":11807104,"line_start":101,"line_end":101,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807113,"byte_end":11807149,"line_start":102,"line_end":102,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807046,"byte_end":11807051,"line_start":100,"line_end":100,"column_start":13,"column_end":18},"name":"start","qualname":"<ReservedRange>::start","value":"fn start<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807162,"byte_end":11807165,"line_start":103,"line_end":103,"column_start":13,"column_end":16},"name":"end","qualname":"<ReservedRange>::end","value":"fn end<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":720},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807308,"byte_end":11807329,"line_start":108,"line_end":108,"column_start":12,"column_end":33},"name":"ExtensionRangeOptions","qualname":"::protobuf::ExtensionRangeOptions","value":"ExtensionRangeOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":740}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807204,"byte_end":11807250,"line_start":106,"line_end":106,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":740},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807457,"byte_end":11807477,"line_start":111,"line_end":111,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::ExtensionRangeOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807336,"byte_end":11807403,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807408,"byte_end":11807448,"line_start":110,"line_end":110,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807672,"byte_end":11807692,"line_start":116,"line_end":116,"column_start":12,"column_end":32},"name":"FieldDescriptorProto","qualname":"::protobuf::FieldDescriptorProto","value":"FieldDescriptorProto { name, number, label, r#type, type_name, extendee, default_value, oneof_index, json_name, options, proto3_optional }","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"decl_id":null,"docs":" Describes a field within a message.\n","sig":null,"attributes":[{"value":"/ Describes a field within a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807528,"byte_end":11807567,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807568,"byte_end":11807614,"line_start":114,"line_end":114,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":895},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807745,"byte_end":11807749,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::FieldDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807699,"byte_end":11807736,"line_start":117,"line_end":117,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":896},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807856,"byte_end":11807862,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"number","qualname":"::protobuf::FieldDescriptorProto::number","value":"core::option::Option<i32>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807811,"byte_end":11807847,"line_start":119,"line_end":119,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":897},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807982,"byte_end":11807987,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"label","qualname":"::protobuf::FieldDescriptorProto::label","value":"core::option::Option<i32>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"field_descriptor_proto::Label\", optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807897,"byte_end":11807973,"line_start":121,"line_end":121,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":898},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808261,"byte_end":11808267,"line_start":126,"line_end":126,"column_start":9,"column_end":15},"name":"r#type","qualname":"::protobuf::FieldDescriptorProto::r#type","value":"core::option::Option<i32>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n","sig":null,"attributes":[{"value":"/ If type_name is set, this need not be set.  If both this and type_name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808022,"byte_end":11808096,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808101,"byte_end":11808172,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"prost(enumeration = \"field_descriptor_proto::Type\", optional, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808177,"byte_end":11808252,"line_start":125,"line_end":125,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":899},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808679,"byte_end":11808688,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"type_name","qualname":"::protobuf::FieldDescriptorProto::type_name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n","sig":null,"attributes":[{"value":"/ For message and enum types, this is the name of the type.  If the name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808302,"byte_end":11808376,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808381,"byte_end":11808455,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ rules are used to find the type (i.e. first the nested types within this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808460,"byte_end":11808536,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ message are searched, then within the parent, on up to the root","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808541,"byte_end":11808608,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ namespace).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808613,"byte_end":11808628,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"prost(string, optional, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808633,"byte_end":11808670,"line_start":132,"line_end":132,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":900},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808922,"byte_end":11808930,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"name":"extendee","qualname":"::protobuf::FieldDescriptorProto::extendee","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n","sig":null,"attributes":[{"value":"/ For extensions, this is the name of the type being extended.  It is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808750,"byte_end":11808821,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ resolved in the same manner as type_name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808826,"byte_end":11808871,"line_start":135,"line_end":135,"column_start":5,"column_end":50}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808876,"byte_end":11808913,"line_start":136,"line_end":136,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":901},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809363,"byte_end":11809376,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"name":"default_value","qualname":"::protobuf::FieldDescriptorProto::default_value","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n","sig":null,"attributes":[{"value":"/ For numeric types, contains the original text representation of the value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808992,"byte_end":11809070,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/ For booleans, \"true\" or \"false\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809075,"byte_end":11809111,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ For strings, contains the default text contents (not escaped in any way).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809116,"byte_end":11809193,"line_start":140,"line_end":140,"column_start":5,"column_end":82}},{"value":"/ For bytes, contains the C escaped value.  All bytes >= 128 are escaped.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809198,"byte_end":11809273,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ TODO(kenton):  Base-64 encode?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809278,"byte_end":11809312,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"prost(string, optional, tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809317,"byte_end":11809354,"line_start":143,"line_end":143,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":902},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809615,"byte_end":11809626,"line_start":148,"line_end":148,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::protobuf::FieldDescriptorProto::oneof_index","value":"core::option::Option<i32>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n","sig":null,"attributes":[{"value":"/ If set, gives the index of a oneof in the containing type's oneof_decl","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809438,"byte_end":11809512,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ list.  This field is a member of that oneof.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809517,"byte_end":11809565,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"prost(int32, optional, tag = \"9\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809570,"byte_end":11809606,"line_start":147,"line_end":147,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":903},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809971,"byte_end":11809980,"line_start":154,"line_end":154,"column_start":9,"column_end":18},"name":"json_name","qualname":"::protobuf::FieldDescriptorProto::json_name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n","sig":null,"attributes":[{"value":"/ JSON name of this field. The value is set by protocol compiler. If the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809661,"byte_end":11809735,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ user has set a \"json_name\" option on this field, that option's value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809740,"byte_end":11809812,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ will be used. Otherwise, it's deduced from the field's name by converting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809817,"byte_end":11809894,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/ it to camelCase.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809899,"byte_end":11809919,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"prost(string, optional, tag = \"10\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809924,"byte_end":11809962,"line_start":153,"line_end":153,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":904},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810089,"byte_end":11810096,"line_start":156,"line_end":156,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::FieldDescriptorProto::options","value":"core::option::Option<protobuf::FieldOptions>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810042,"byte_end":11810080,"line_start":155,"line_end":155,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":905},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811520,"byte_end":11811535,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"name":"proto3_optional","qualname":"::protobuf::FieldDescriptorProto::proto3_optional","value":"core::option::Option<bool>","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n tracks presence regardless of field type.","sig":null,"attributes":[{"value":"/ If true, this is a proto3 \"optional\". When a proto3 field is optional, it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810140,"byte_end":11810217,"line_start":157,"line_end":157,"column_start":5,"column_end":82}},{"value":"/ tracks presence regardless of field type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810222,"byte_end":11810267,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810272,"byte_end":11810275,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When proto3_optional is true, this field must be belong to a oneof to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810280,"byte_end":11810353,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ signal to old proto3 clients that presence is tracked for this field. This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810358,"byte_end":11810436,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/ oneof is known as a \"synthetic\" oneof, and this field must be its sole","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810441,"byte_end":11810515,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ member (each proto3 optional field gets its own synthetic oneof). Synthetic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810520,"byte_end":11810599,"line_start":163,"line_end":163,"column_start":5,"column_end":84}},{"value":"/ oneofs exist in the descriptor only, and do not generate any API. Synthetic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810604,"byte_end":11810683,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/ oneofs must be ordered after all \"real\" oneofs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810688,"byte_end":11810739,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810744,"byte_end":11810747,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ For message fields, proto3_optional doesn't create any semantic change,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810752,"byte_end":11810827,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ since non-repeated message fields always track presence. However it still","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810832,"byte_end":11810909,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ indicates the semantic detail of whether the user wrote \"optional\" or not.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810914,"byte_end":11810992,"line_start":169,"line_end":169,"column_start":5,"column_end":83}},{"value":"/ This can be useful for round-tripping the .proto file. For consistency we","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11810997,"byte_end":11811074,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/ give message fields a synthetic oneof also, even though it is not required","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811079,"byte_end":11811157,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ to track presence. This is especially important because the parser can't","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811162,"byte_end":11811238,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ tell if a field is a message or an enum, so it must always create a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811243,"byte_end":11811314,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ synthetic oneof.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811319,"byte_end":11811339,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811344,"byte_end":11811347,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Proto2 optional fields do not set this flag, because they already indicate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811352,"byte_end":11811430,"line_start":176,"line_end":176,"column_start":5,"column_end":83}},{"value":"/ optional with `LABEL_OPTIONAL`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811435,"byte_end":11811470,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"prost(bool, optional, tag = \"17\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811475,"byte_end":11811511,"line_start":178,"line_end":178,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807745,"byte_end":11807749,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"name","qualname":"<FieldDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808922,"byte_end":11808930,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"name":"extendee","qualname":"<FieldDescriptorProto>::extendee","value":"fn extendee<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `extendee`, or the default value if `extendee` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807856,"byte_end":11807862,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"number","qualname":"<FieldDescriptorProto>::number","value":"fn number<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `number`, or the default value if `number` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11807982,"byte_end":11807987,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"label","qualname":"<FieldDescriptorProto>::label","value":"fn label<'_>(&'_ Self) -> field_descriptor_proto::Label","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `label`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808261,"byte_end":11808267,"line_start":126,"line_end":126,"column_start":9,"column_end":15},"name":"type","qualname":"<FieldDescriptorProto>::type","value":"fn r#type<'_>(&'_ Self) -> field_descriptor_proto::Type","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `type`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11808679,"byte_end":11808688,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"type_name","qualname":"<FieldDescriptorProto>::type_name","value":"fn type_name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `type_name`, or the default value if `type_name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809363,"byte_end":11809376,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"name":"default_value","qualname":"<FieldDescriptorProto>::default_value","value":"fn default_value<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `default_value`, or the default value if `default_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809615,"byte_end":11809626,"line_start":148,"line_end":148,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"<FieldDescriptorProto>::oneof_index","value":"fn oneof_index<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `oneof_index`, or the default value if `oneof_index` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11809971,"byte_end":11809980,"line_start":154,"line_end":154,"column_start":9,"column_end":18},"name":"json_name","qualname":"<FieldDescriptorProto>::json_name","value":"fn json_name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `json_name`, or the default value if `json_name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811520,"byte_end":11811535,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"name":"proto3_optional","qualname":"<FieldDescriptorProto>::proto3_optional","value":"fn proto3_optional<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `proto3_optional`, or the default value if `proto3_optional` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811638,"byte_end":11811660,"line_start":182,"line_end":182,"column_start":9,"column_end":31},"name":"field_descriptor_proto","qualname":"::protobuf::field_descriptor_proto","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":398},{"krate":0,"index":986},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":401}],"decl_id":null,"docs":" Nested message and enum types in `FieldDescriptorProto`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `FieldDescriptorProto`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811569,"byte_end":11811629,"line_start":181,"line_end":181,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811969,"byte_end":11811975,"line_start":198,"line_end":198,"column_start":9,"column_end":15},"name":"Double","qualname":"::protobuf::field_descriptor_proto::Type::Double","value":"Type::Double","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" 0 is reserved for errors.\n Order is weird for historical reasons.\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811880,"byte_end":11811909,"line_start":196,"line_end":196,"column_start":9,"column_end":38}},{"value":"/ Order is weird for historical reasons.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811918,"byte_end":11811960,"line_start":197,"line_end":197,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":910},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811989,"byte_end":11811994,"line_start":199,"line_end":199,"column_start":9,"column_end":14},"name":"Float","qualname":"::protobuf::field_descriptor_proto::Type::Float","value":"Type::Float","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812133,"byte_end":11812138,"line_start":202,"line_end":202,"column_start":9,"column_end":14},"name":"Int64","qualname":"::protobuf::field_descriptor_proto::Type::Int64","value":"Type::Int64","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812008,"byte_end":11812084,"line_start":200,"line_end":200,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812093,"byte_end":11812124,"line_start":201,"line_end":201,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812152,"byte_end":11812158,"line_start":203,"line_end":203,"column_start":9,"column_end":15},"name":"Uint64","qualname":"::protobuf::field_descriptor_proto::Type::Uint64","value":"Type::Uint64","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812297,"byte_end":11812302,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"name":"Int32","qualname":"::protobuf::field_descriptor_proto::Type::Int32","value":"Type::Int32","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812172,"byte_end":11812248,"line_start":204,"line_end":204,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812257,"byte_end":11812288,"line_start":205,"line_end":205,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812316,"byte_end":11812323,"line_start":207,"line_end":207,"column_start":9,"column_end":16},"name":"Fixed64","qualname":"::protobuf::field_descriptor_proto::Type::Fixed64","value":"Type::Fixed64","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812337,"byte_end":11812344,"line_start":208,"line_end":208,"column_start":9,"column_end":16},"name":"Fixed32","qualname":"::protobuf::field_descriptor_proto::Type::Fixed32","value":"Type::Fixed32","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812358,"byte_end":11812362,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"name":"Bool","qualname":"::protobuf::field_descriptor_proto::Type::Bool","value":"Type::Bool","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812376,"byte_end":11812382,"line_start":210,"line_end":210,"column_start":9,"column_end":15},"name":"String","qualname":"::protobuf::field_descriptor_proto::Type::String","value":"Type::String","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":934},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812649,"byte_end":11812654,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"name":"Group","qualname":"::protobuf::field_descriptor_proto::Type::Group","value":"Type::Group","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n","sig":null,"attributes":[{"value":"/ Tag-delimited aggregate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812396,"byte_end":11812424,"line_start":211,"line_end":211,"column_start":9,"column_end":37}},{"value":"/ Group type is deprecated and not supported in proto3. However, Proto3","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812433,"byte_end":11812506,"line_start":212,"line_end":212,"column_start":9,"column_end":82}},{"value":"/ implementations should still be able to parse the group wire format and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812515,"byte_end":11812590,"line_start":213,"line_end":213,"column_start":9,"column_end":84}},{"value":"/ treat group fields as unknown fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812599,"byte_end":11812640,"line_start":214,"line_end":214,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812709,"byte_end":11812716,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"name":"Message","qualname":"::protobuf::field_descriptor_proto::Type::Message","value":"Type::Message","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Length-delimited aggregate.\n","sig":null,"attributes":[{"value":"/ Length-delimited aggregate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812669,"byte_end":11812700,"line_start":216,"line_end":216,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812761,"byte_end":11812766,"line_start":219,"line_end":219,"column_start":9,"column_end":14},"name":"Bytes","qualname":"::protobuf::field_descriptor_proto::Type::Bytes","value":"Type::Bytes","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" New in version 2.\n","sig":null,"attributes":[{"value":"/ New in version 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812731,"byte_end":11812752,"line_start":218,"line_end":218,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812781,"byte_end":11812787,"line_start":220,"line_end":220,"column_start":9,"column_end":15},"name":"Uint32","qualname":"::protobuf::field_descriptor_proto::Type::Uint32","value":"Type::Uint32","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812802,"byte_end":11812806,"line_start":221,"line_end":221,"column_start":9,"column_end":13},"name":"Enum","qualname":"::protobuf::field_descriptor_proto::Type::Enum","value":"Type::Enum","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812821,"byte_end":11812829,"line_start":222,"line_end":222,"column_start":9,"column_end":17},"name":"Sfixed32","qualname":"::protobuf::field_descriptor_proto::Type::Sfixed32","value":"Type::Sfixed32","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812844,"byte_end":11812852,"line_start":223,"line_end":223,"column_start":9,"column_end":17},"name":"Sfixed64","qualname":"::protobuf::field_descriptor_proto::Type::Sfixed64","value":"Type::Sfixed64","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812901,"byte_end":11812907,"line_start":225,"line_end":225,"column_start":9,"column_end":15},"name":"Sint32","qualname":"::protobuf::field_descriptor_proto::Type::Sint32","value":"Type::Sint32","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812867,"byte_end":11812892,"line_start":224,"line_end":224,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812956,"byte_end":11812962,"line_start":227,"line_end":227,"column_start":9,"column_end":15},"name":"Sint64","qualname":"::protobuf::field_descriptor_proto::Type::Sint64","value":"Type::Sint64","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812922,"byte_end":11812947,"line_start":226,"line_end":226,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811865,"byte_end":11811869,"line_start":195,"line_end":195,"column_start":14,"column_end":18},"name":"Type","qualname":"::protobuf::field_descriptor_proto::Type","value":"enum Type {\n    Double = ,\n    Float = ,\n    Int64 = ,\n    Uint64 = ,\n    Int32 = ,\n    Fixed64 = ,\n    Fixed32 = ,\n    Bool = ,\n    String = ,\n    Group = ,\n    Message = ,\n    Bytes = ,\n    Uint32 = ,\n    Enum = ,\n    Sfixed32 = ,\n    Sfixed64 = ,\n    Sint32 = ,\n    Sint64 = ,\n}","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11811839,"byte_end":11811851,"line_start":194,"line_end":194,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11813273,"byte_end":11813284,"line_start":234,"line_end":234,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<Type>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812999,"byte_end":11813072,"line_start":230,"line_end":230,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11813081,"byte_end":11813084,"line_start":231,"line_end":231,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11813093,"byte_end":11813169,"line_start":232,"line_end":232,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11813178,"byte_end":11813257,"line_start":233,"line_end":233,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11814294,"byte_end":11814307,"line_start":257,"line_end":257,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<Type>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11814209,"byte_end":11814278,"line_start":256,"line_end":256,"column_start":9,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815643,"byte_end":11815651,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"name":"Optional","qualname":"::protobuf::field_descriptor_proto::Label::Optional","value":"Label::Optional","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" 0 is reserved for errors\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815606,"byte_end":11815634,"line_start":294,"line_end":294,"column_start":9,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":990},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815665,"byte_end":11815673,"line_start":296,"line_end":296,"column_start":9,"column_end":17},"name":"Required","qualname":"::protobuf::field_descriptor_proto::Label::Required","value":"Label::Required","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":993},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815687,"byte_end":11815695,"line_start":297,"line_end":297,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::protobuf::field_descriptor_proto::Label::Repeated","value":"Label::Repeated","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":986},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815590,"byte_end":11815595,"line_start":293,"line_end":293,"column_start":14,"column_end":19},"name":"Label","qualname":"::protobuf::field_descriptor_proto::Label","value":"enum Label { Optional = , Required = , Repeated = , }","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815564,"byte_end":11815576,"line_start":292,"line_end":292,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816006,"byte_end":11816017,"line_start":304,"line_end":304,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<Label>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815732,"byte_end":11815805,"line_start":300,"line_end":300,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815814,"byte_end":11815817,"line_start":301,"line_end":301,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815826,"byte_end":11815902,"line_start":302,"line_end":302,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815911,"byte_end":11815990,"line_start":303,"line_end":303,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816344,"byte_end":11816357,"line_start":312,"line_end":312,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<Label>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816259,"byte_end":11816328,"line_start":311,"line_end":311,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816791,"byte_end":11816811,"line_start":325,"line_end":325,"column_start":12,"column_end":32},"name":"OneofDescriptorProto","qualname":"::protobuf::OneofDescriptorProto","value":"OneofDescriptorProto { name, options }","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"decl_id":null,"docs":" Describes a oneof.\n","sig":null,"attributes":[{"value":"/ Describes a oneof.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816664,"byte_end":11816686,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816687,"byte_end":11816733,"line_start":323,"line_end":323,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816864,"byte_end":11816868,"line_start":327,"line_end":327,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::OneofDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816818,"byte_end":11816855,"line_start":326,"line_end":326,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816977,"byte_end":11816984,"line_start":329,"line_end":329,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::OneofDescriptorProto::options","value":"core::option::Option<protobuf::OneofOptions>","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816930,"byte_end":11816968,"line_start":328,"line_end":328,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11816864,"byte_end":11816868,"line_start":327,"line_end":327,"column_start":9,"column_end":13},"name":"name","qualname":"<OneofDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817158,"byte_end":11817177,"line_start":334,"line_end":334,"column_start":12,"column_end":31},"name":"EnumDescriptorProto","qualname":"::protobuf::EnumDescriptorProto","value":"EnumDescriptorProto { name, value, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"decl_id":null,"docs":" Describes an enum type.\n","sig":null,"attributes":[{"value":"/ Describes an enum type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817026,"byte_end":11817053,"line_start":331,"line_end":331,"column_start":1,"column_end":28}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817054,"byte_end":11817100,"line_start":332,"line_end":332,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817230,"byte_end":11817234,"line_start":336,"line_end":336,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::EnumDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817184,"byte_end":11817221,"line_start":335,"line_end":335,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817343,"byte_end":11817348,"line_start":338,"line_end":338,"column_start":9,"column_end":14},"name":"value","qualname":"::protobuf::EnumDescriptorProto::value","value":"prost::alloc::vec::Vec<protobuf::EnumValueDescriptorProto>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817296,"byte_end":11817334,"line_start":337,"line_end":337,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817453,"byte_end":11817460,"line_start":340,"line_end":340,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::EnumDescriptorProto::options","value":"core::option::Option<protobuf::EnumOptions>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817406,"byte_end":11817444,"line_start":339,"line_end":339,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817726,"byte_end":11817740,"line_start":345,"line_end":345,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::protobuf::EnumDescriptorProto::reserved_range","value":"prost::alloc::vec::Vec<protobuf::enum_descriptor_proto::EnumReservedRange>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":" Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved numeric values may not be used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817503,"byte_end":11817580,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"/ by enum values in the same enum declaration. Reserved ranges may not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817585,"byte_end":11817657,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ overlap.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817662,"byte_end":11817674,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817679,"byte_end":11817717,"line_start":344,"line_end":344,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817983,"byte_end":11817996,"line_start":351,"line_end":351,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::protobuf::EnumDescriptorProto::reserved_name","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":" Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved enum value names, which may not be reused. A given name may only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817829,"byte_end":11817906,"line_start":348,"line_end":348,"column_start":5,"column_end":82}},{"value":"/ be reserved once.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817911,"byte_end":11817932,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"prost(string, repeated, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817937,"byte_end":11817974,"line_start":350,"line_end":350,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11817230,"byte_end":11817234,"line_start":336,"line_end":336,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":404},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818126,"byte_end":11818147,"line_start":354,"line_end":354,"column_start":9,"column_end":30},"name":"enum_descriptor_proto","qualname":"::protobuf::enum_descriptor_proto","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1149}],"decl_id":null,"docs":" Nested message and enum types in `EnumDescriptorProto`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `EnumDescriptorProto`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818058,"byte_end":11818117,"line_start":353,"line_end":353,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818594,"byte_end":11818611,"line_start":363,"line_end":363,"column_start":16,"column_end":33},"name":"EnumReservedRange","qualname":"::protobuf::enum_descriptor_proto::EnumReservedRange","value":"EnumReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"decl_id":null,"docs":" Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved values may not be used by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818154,"byte_end":11818226,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ entries in the same enum. Reserved ranges may not overlap.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818231,"byte_end":11818293,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818298,"byte_end":11818301,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Note that this is distinct from DescriptorProto.ReservedRange in that it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818306,"byte_end":11818382,"line_start":358,"line_end":358,"column_start":5,"column_end":81}},{"value":"/ is inclusive such that it can appropriately represent the entire int32","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818387,"byte_end":11818461,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ domain.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818466,"byte_end":11818477,"line_start":360,"line_end":360,"column_start":5,"column_end":16}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818482,"byte_end":11818528,"line_start":361,"line_end":361,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818694,"byte_end":11818699,"line_start":366,"line_end":366,"column_start":13,"column_end":18},"name":"start","qualname":"::protobuf::enum_descriptor_proto::EnumReservedRange::start","value":"core::option::Option<i32>","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818622,"byte_end":11818636,"line_start":364,"line_end":364,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818645,"byte_end":11818681,"line_start":365,"line_end":365,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818810,"byte_end":11818813,"line_start":369,"line_end":369,"column_start":13,"column_end":16},"name":"end","qualname":"::protobuf::enum_descriptor_proto::EnumReservedRange::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818738,"byte_end":11818752,"line_start":367,"line_end":367,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818761,"byte_end":11818797,"line_start":368,"line_end":368,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818694,"byte_end":11818699,"line_start":366,"line_end":366,"column_start":13,"column_end":18},"name":"start","qualname":"<EnumReservedRange>::start","value":"fn start<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818810,"byte_end":11818813,"line_start":369,"line_end":369,"column_start":13,"column_end":16},"name":"end","qualname":"<EnumReservedRange>::end","value":"fn end<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818994,"byte_end":11819018,"line_start":375,"line_end":375,"column_start":12,"column_end":36},"name":"EnumValueDescriptorProto","qualname":"::protobuf::EnumValueDescriptorProto","value":"EnumValueDescriptorProto { name, number, options }","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202}],"decl_id":null,"docs":" Describes a value within an enum.\n","sig":null,"attributes":[{"value":"/ Describes a value within an enum.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818852,"byte_end":11818889,"line_start":372,"line_end":372,"column_start":1,"column_end":38}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11818890,"byte_end":11818936,"line_start":373,"line_end":373,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819071,"byte_end":11819075,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::EnumValueDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819025,"byte_end":11819062,"line_start":376,"line_end":376,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819182,"byte_end":11819188,"line_start":379,"line_end":379,"column_start":9,"column_end":15},"name":"number","qualname":"::protobuf::EnumValueDescriptorProto::number","value":"core::option::Option<i32>","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819137,"byte_end":11819173,"line_start":378,"line_end":378,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819270,"byte_end":11819277,"line_start":381,"line_end":381,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::EnumValueDescriptorProto::options","value":"core::option::Option<protobuf::EnumValueOptions>","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819223,"byte_end":11819261,"line_start":380,"line_end":380,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819071,"byte_end":11819075,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumValueDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819182,"byte_end":11819188,"line_start":379,"line_end":379,"column_start":9,"column_end":15},"name":"number","qualname":"<EnumValueDescriptorProto>::number","value":"fn number<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `number`, or the default value if `number` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819452,"byte_end":11819474,"line_start":386,"line_end":386,"column_start":12,"column_end":34},"name":"ServiceDescriptorProto","qualname":"::protobuf::ServiceDescriptorProto","value":"ServiceDescriptorProto { name, method, options }","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240}],"decl_id":null,"docs":" Describes a service.\n","sig":null,"attributes":[{"value":"/ Describes a service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819323,"byte_end":11819347,"line_start":383,"line_end":383,"column_start":1,"column_end":25}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819348,"byte_end":11819394,"line_start":384,"line_end":384,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819527,"byte_end":11819531,"line_start":388,"line_end":388,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::ServiceDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819481,"byte_end":11819518,"line_start":387,"line_end":387,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819640,"byte_end":11819646,"line_start":390,"line_end":390,"column_start":9,"column_end":15},"name":"method","qualname":"::protobuf::ServiceDescriptorProto::method","value":"prost::alloc::vec::Vec<protobuf::MethodDescriptorProto>","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819593,"byte_end":11819631,"line_start":389,"line_end":389,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819748,"byte_end":11819755,"line_start":392,"line_end":392,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::ServiceDescriptorProto::options","value":"core::option::Option<protobuf::ServiceOptions>","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819701,"byte_end":11819739,"line_start":391,"line_end":391,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819527,"byte_end":11819531,"line_start":388,"line_end":388,"column_start":9,"column_end":13},"name":"name","qualname":"<ServiceDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819940,"byte_end":11819961,"line_start":397,"line_end":397,"column_start":12,"column_end":33},"name":"MethodDescriptorProto","qualname":"::protobuf::MethodDescriptorProto","value":"MethodDescriptorProto { name, input_type, output_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328}],"decl_id":null,"docs":" Describes a method of a service.\n","sig":null,"attributes":[{"value":"/ Describes a method of a service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819799,"byte_end":11819835,"line_start":394,"line_end":394,"column_start":1,"column_end":37}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819836,"byte_end":11819882,"line_start":395,"line_end":395,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820014,"byte_end":11820018,"line_start":399,"line_end":399,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::MethodDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11819968,"byte_end":11820005,"line_start":398,"line_end":398,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820276,"byte_end":11820286,"line_start":403,"line_end":403,"column_start":9,"column_end":19},"name":"input_type","qualname":"::protobuf::MethodDescriptorProto::input_type","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n","sig":null,"attributes":[{"value":"/ Input and output type names.  These are resolved in the same way as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820080,"byte_end":11820151,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ FieldDescriptorProto.type_name, but must refer to a message type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820156,"byte_end":11820225,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820230,"byte_end":11820267,"line_start":402,"line_end":402,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820394,"byte_end":11820405,"line_start":405,"line_end":405,"column_start":9,"column_end":20},"name":"output_type","qualname":"::protobuf::MethodDescriptorProto::output_type","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820348,"byte_end":11820385,"line_start":404,"line_end":404,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820514,"byte_end":11820521,"line_start":407,"line_end":407,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::MethodDescriptorProto::options","value":"core::option::Option<protobuf::MethodOptions>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820467,"byte_end":11820505,"line_start":406,"line_end":406,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820691,"byte_end":11820707,"line_start":410,"line_end":410,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::protobuf::MethodDescriptorProto::client_streaming","value":"core::option::Option<bool>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820566,"byte_end":11820623,"line_start":408,"line_end":408,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820628,"byte_end":11820682,"line_start":409,"line_end":409,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820868,"byte_end":11820884,"line_start":413,"line_end":413,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::protobuf::MethodDescriptorProto::server_streaming","value":"core::option::Option<bool>","parent":{"krate":0,"index":1241},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820743,"byte_end":11820800,"line_start":411,"line_end":411,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"6\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820805,"byte_end":11820859,"line_start":412,"line_end":412,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820014,"byte_end":11820018,"line_start":399,"line_end":399,"column_start":9,"column_end":13},"name":"name","qualname":"<MethodDescriptorProto>::name","value":"fn name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820276,"byte_end":11820286,"line_start":403,"line_end":403,"column_start":9,"column_end":19},"name":"input_type","qualname":"<MethodDescriptorProto>::input_type","value":"fn input_type<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `input_type`, or the default value if `input_type` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820394,"byte_end":11820405,"line_start":405,"line_end":405,"column_start":9,"column_end":20},"name":"output_type","qualname":"<MethodDescriptorProto>::output_type","value":"fn output_type<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `output_type`, or the default value if `output_type` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820691,"byte_end":11820707,"line_start":410,"line_end":410,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"<MethodDescriptorProto>::client_streaming","value":"fn client_streaming<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `client_streaming`, or the default value if `client_streaming` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820868,"byte_end":11820884,"line_start":413,"line_end":413,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"<MethodDescriptorProto>::server_streaming","value":"fn server_streaming<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `server_streaming`, or the default value if `server_streaming` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822859,"byte_end":11822870,"line_start":446,"line_end":446,"column_start":12,"column_end":23},"name":"FileOptions","qualname":"::protobuf::FileOptions","value":"FileOptions { java_package, java_outer_classname, java_multiple_files, java_generate_equals_and_hash, java_string_check_utf8, optimize_for, go_package, cc_generic_services, java_generic_services, py_generic_services, php_generic_services, deprecated, cc_enable_arenas, objc_class_prefix, csharp_namespace, swift_prefix, php_class_prefix, php_namespace, php_metadata_namespace, ruby_package, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616}],"decl_id":null,"docs":" Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.","sig":null,"attributes":[{"value":"/ Each of the definitions above may have \"options\" attached.  These are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820918,"byte_end":11820991,"line_start":415,"line_end":415,"column_start":1,"column_end":74}},{"value":"/ just annotations which may cause code to be generated slightly differently","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11820992,"byte_end":11821070,"line_start":416,"line_end":416,"column_start":1,"column_end":79}},{"value":"/ or may contain hints for code that manipulates protocol messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821071,"byte_end":11821140,"line_start":417,"line_end":417,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821141,"byte_end":11821144,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ Clients may define custom options as extensions of the \\*Options messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821145,"byte_end":11821223,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/ These extensions may not yet be known at parsing time, so the parser cannot","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821224,"byte_end":11821303,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ store the values in them.  Instead it stores them in a field in the \\*Options","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821304,"byte_end":11821385,"line_start":421,"line_end":421,"column_start":1,"column_end":82}},{"value":"/ message called uninterpreted_option. This field must have the same name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821386,"byte_end":11821461,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/ across all \\*Options messages. We then use this field to populate the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821462,"byte_end":11821535,"line_start":423,"line_end":423,"column_start":1,"column_end":74}},{"value":"/ extensions when we build a descriptor, at which point all protos have been","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821536,"byte_end":11821614,"line_start":424,"line_end":424,"column_start":1,"column_end":79}},{"value":"/ parsed and so all extensions are known.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821615,"byte_end":11821658,"line_start":425,"line_end":425,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821659,"byte_end":11821662,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ Extension numbers for custom options may be chosen as follows:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821663,"byte_end":11821729,"line_start":427,"line_end":427,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821730,"byte_end":11821733,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ * For options which will only be used within a single application or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821734,"byte_end":11821806,"line_start":429,"line_end":429,"column_start":1,"column_end":73}},{"value":"/   organization, or for experimental options, use field numbers 50000","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821807,"byte_end":11821879,"line_start":430,"line_end":430,"column_start":1,"column_end":73}},{"value":"/   through 99999.  It is up to you to ensure that you do not use the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821880,"byte_end":11821951,"line_start":431,"line_end":431,"column_start":1,"column_end":72}},{"value":"/   same number for multiple options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821952,"byte_end":11821991,"line_start":432,"line_end":432,"column_start":1,"column_end":40}},{"value":"/ * For options which will be published and used publicly by multiple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11821992,"byte_end":11822063,"line_start":433,"line_end":433,"column_start":1,"column_end":72}},{"value":"/   independent entities, e-mail protobuf-global-extension-registry@google.com","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822064,"byte_end":11822144,"line_start":434,"line_end":434,"column_start":1,"column_end":81}},{"value":"/   to reserve extension numbers. Simply provide your project name (e.g.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822145,"byte_end":11822219,"line_start":435,"line_end":435,"column_start":1,"column_end":75}},{"value":"/   Objective-C plugin) and your project website (if available) -- there's no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822220,"byte_end":11822299,"line_start":436,"line_end":436,"column_start":1,"column_end":80}},{"value":"/   need to explain how you intend to use them. Usually you only need one","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822300,"byte_end":11822375,"line_start":437,"line_end":437,"column_start":1,"column_end":76}},{"value":"/   extension number. You can declare multiple options with only one extension","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822376,"byte_end":11822456,"line_start":438,"line_end":438,"column_start":1,"column_end":81}},{"value":"/   number by putting them in a sub-message. See the Custom Options section of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822457,"byte_end":11822537,"line_start":439,"line_end":439,"column_start":1,"column_end":81}},{"value":"/   the docs for examples:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822538,"byte_end":11822566,"line_start":440,"line_end":440,"column_start":1,"column_end":29}},{"value":"/   <https://developers.google.com/protocol-buffers/docs/proto#options>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822567,"byte_end":11822640,"line_start":441,"line_end":441,"column_start":1,"column_end":74}},{"value":"/   If this turns out to be popular, a web service will be set up","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822641,"byte_end":11822708,"line_start":442,"line_end":442,"column_start":1,"column_end":68}},{"value":"/   to automatically assign option numbers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822709,"byte_end":11822754,"line_start":443,"line_end":443,"column_start":1,"column_end":46}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822755,"byte_end":11822801,"line_start":444,"line_end":444,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823180,"byte_end":11823192,"line_start":452,"line_end":452,"column_start":9,"column_end":21},"name":"java_package","qualname":"::protobuf::FileOptions::java_package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n","sig":null,"attributes":[{"value":"/ Sets the Java package where classes generated from this .proto will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822877,"byte_end":11822951,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ placed.  By default, the proto package is used, but this is often","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11822956,"byte_end":11823025,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ inappropriate because proto packages do not normally start with backwards","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823030,"byte_end":11823107,"line_start":449,"line_end":449,"column_start":5,"column_end":82}},{"value":"/ domain names.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823112,"byte_end":11823129,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823134,"byte_end":11823171,"line_start":451,"line_end":451,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823689,"byte_end":11823709,"line_start":459,"line_end":459,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"::protobuf::FileOptions::java_outer_classname","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Controls the name of the wrapper Java class generated for the .proto file.\n That class will always contain the .proto file's getDescriptor() method as\n well as any top-level extensions defined in the .proto file.\n If java_multiple_files is disabled, then all the other classes from the\n .proto file will be nested inside the single wrapper outer class.\n","sig":null,"attributes":[{"value":"/ Controls the name of the wrapper Java class generated for the .proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823254,"byte_end":11823332,"line_start":453,"line_end":453,"column_start":5,"column_end":83}},{"value":"/ That class will always contain the .proto file's getDescriptor() method as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823337,"byte_end":11823415,"line_start":454,"line_end":454,"column_start":5,"column_end":83}},{"value":"/ well as any top-level extensions defined in the .proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823420,"byte_end":11823484,"line_start":455,"line_end":455,"column_start":5,"column_end":69}},{"value":"/ If java_multiple_files is disabled, then all the other classes from the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823489,"byte_end":11823564,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ .proto file will be nested inside the single wrapper outer class.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823569,"byte_end":11823638,"line_start":457,"line_end":457,"column_start":5,"column_end":74}},{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823643,"byte_end":11823680,"line_start":458,"line_end":458,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824284,"byte_end":11824303,"line_start":467,"line_end":467,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"::protobuf::FileOptions::java_multiple_files","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" If enabled, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the wrapper class\n named by java_outer_classname.  However, the wrapper class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n","sig":null,"attributes":[{"value":"/ If enabled, then the Java code generator will generate a separate .java","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823771,"byte_end":11823846,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ file for each top-level message, enum, and service defined in the .proto","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823851,"byte_end":11823927,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ file.  Thus, these types will *not* be nested inside the wrapper class","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823932,"byte_end":11824006,"line_start":462,"line_end":462,"column_start":5,"column_end":79}},{"value":"/ named by java_outer_classname.  However, the wrapper class will still be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824011,"byte_end":11824087,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/ generated to contain the file's getDescriptor() method as well as any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824092,"byte_end":11824165,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ top-level extensions defined in the file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824170,"byte_end":11824215,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824220,"byte_end":11824275,"line_start":466,"line_end":466,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824436,"byte_end":11824465,"line_start":471,"line_end":471,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"::protobuf::FileOptions::java_generate_equals_and_hash","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" This option does nothing.\n","sig":null,"attributes":[{"value":"/ This option does nothing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824339,"byte_end":11824368,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"deprecated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824373,"byte_end":11824386,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"prost(bool, optional, tag = \"20\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824391,"byte_end":11824427,"line_start":470,"line_end":470,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824950,"byte_end":11824972,"line_start":479,"line_end":479,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"::protobuf::FileOptions::java_string_check_utf8","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java2 code generator will generate code that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824501,"byte_end":11824571,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/ throws an exception whenever an attempt is made to assign a non-UTF-8","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824576,"byte_end":11824649,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ byte sequence to a string field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824654,"byte_end":11824690,"line_start":474,"line_end":474,"column_start":5,"column_end":41}},{"value":"/ Message reflection will do the same.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824695,"byte_end":11824735,"line_start":475,"line_end":475,"column_start":5,"column_end":45}},{"value":"/ However, an extension field still accepts non-UTF-8 byte sequences.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824740,"byte_end":11824811,"line_start":476,"line_end":476,"column_start":5,"column_end":76}},{"value":"/ This option has no effect on when used with the lite runtime.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824816,"byte_end":11824881,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"prost(bool, optional, tag = \"27\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824886,"byte_end":11824941,"line_start":478,"line_end":478,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825147,"byte_end":11825159,"line_start":486,"line_end":486,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"::protobuf::FileOptions::optimize_for","value":"core::option::Option<i32>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"file_options::OptimizeMode\", optional, tag = \"9\",\ndefault = \"Speed\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825008,"byte_end":11825138,"line_start":480,"line_end":485,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825617,"byte_end":11825627,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"name":"go_package","qualname":"::protobuf::FileOptions::go_package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:","sig":null,"attributes":[{"value":"/ Sets the Go package where structs generated from this .proto will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825194,"byte_end":11825266,"line_start":487,"line_end":487,"column_start":5,"column_end":77}},{"value":"/ placed. If omitted, the Go package will be derived from the following:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825271,"byte_end":11825345,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825350,"byte_end":11825353,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * The basename of the package import path, if provided.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825358,"byte_end":11825417,"line_start":490,"line_end":490,"column_start":5,"column_end":64}},{"value":"/ * Otherwise, the package statement in the .proto file, if present.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825422,"byte_end":11825492,"line_start":491,"line_end":491,"column_start":5,"column_end":75}},{"value":"/ * Otherwise, the basename of the .proto file, without extension.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825497,"byte_end":11825565,"line_start":492,"line_end":492,"column_start":5,"column_end":73}},{"value":"prost(string, optional, tag = \"11\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825570,"byte_end":11825608,"line_start":493,"line_end":493,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826404,"byte_end":11826423,"line_start":506,"line_end":506,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"::protobuf::FileOptions::cc_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.","sig":null,"attributes":[{"value":"/ Should generic services be generated in each language?  \"Generic\" services","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825689,"byte_end":11825767,"line_start":495,"line_end":495,"column_start":5,"column_end":83}},{"value":"/ are not specific to any particular RPC system.  They are generated by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825772,"byte_end":11825849,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ main code generators in each language (without additional plugins).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825854,"byte_end":11825925,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/ Generic services were the only kind of service generation supported by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825930,"byte_end":11826004,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ early versions of google.protobuf.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826009,"byte_end":11826047,"line_start":499,"line_end":499,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826052,"byte_end":11826055,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Generic services are now considered deprecated in favor of using plugins","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826060,"byte_end":11826136,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ that generate code specific to your particular RPC system.  Therefore,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826141,"byte_end":11826215,"line_start":502,"line_end":502,"column_start":5,"column_end":79}},{"value":"/ these default to false.  Old code which depends on generic services should","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826220,"byte_end":11826298,"line_start":503,"line_end":503,"column_start":5,"column_end":83}},{"value":"/ explicitly set them to true.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826303,"byte_end":11826335,"line_start":504,"line_end":504,"column_start":5,"column_end":37}},{"value":"prost(bool, optional, tag = \"16\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826340,"byte_end":11826395,"line_start":505,"line_end":505,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826523,"byte_end":11826544,"line_start":508,"line_end":508,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"::protobuf::FileOptions::java_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"17\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826459,"byte_end":11826514,"line_start":507,"line_end":507,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826644,"byte_end":11826663,"line_start":510,"line_end":510,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"::protobuf::FileOptions::py_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"18\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826580,"byte_end":11826635,"line_start":509,"line_end":509,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826763,"byte_end":11826783,"line_start":512,"line_end":512,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"::protobuf::FileOptions::php_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"42\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826699,"byte_end":11826754,"line_start":511,"line_end":511,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827139,"byte_end":11827149,"line_start":518,"line_end":518,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::FileOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n","sig":null,"attributes":[{"value":"/ Is this file deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826819,"byte_end":11826847,"line_start":513,"line_end":513,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826852,"byte_end":11826926,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ for everything in the file, or it will be completely ignored; in the very","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826931,"byte_end":11827008,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ least, this is a formalization for deprecating files.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827013,"byte_end":11827070,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"23\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827075,"byte_end":11827130,"line_start":517,"line_end":517,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827375,"byte_end":11827391,"line_start":522,"line_end":522,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"::protobuf::FileOptions::cc_enable_arenas","value":"core::option::Option<bool>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n","sig":null,"attributes":[{"value":"/ Enables the use of arenas for the proto messages in this file. This applies","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827185,"byte_end":11827264,"line_start":519,"line_end":519,"column_start":5,"column_end":84}},{"value":"/ only to generated classes for C++.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827269,"byte_end":11827307,"line_start":520,"line_end":520,"column_start":5,"column_end":43}},{"value":"prost(bool, optional, tag = \"31\", default = \"true\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827312,"byte_end":11827366,"line_start":521,"line_end":521,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827619,"byte_end":11827636,"line_start":526,"line_end":526,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"::protobuf::FileOptions::objc_class_prefix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n","sig":null,"attributes":[{"value":"/ Sets the objective c class prefix which is prepended to all objective c","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827427,"byte_end":11827502,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ generated classes from this .proto. There is no default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827507,"byte_end":11827567,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"prost(string, optional, tag = \"36\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827572,"byte_end":11827610,"line_start":525,"line_end":525,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827811,"byte_end":11827827,"line_start":529,"line_end":529,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"::protobuf::FileOptions::csharp_namespace","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Namespace for generated classes; defaults to the package.\n","sig":null,"attributes":[{"value":"/ Namespace for generated classes; defaults to the package.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827698,"byte_end":11827759,"line_start":527,"line_end":527,"column_start":5,"column_end":66}},{"value":"prost(string, optional, tag = \"37\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827764,"byte_end":11827802,"line_start":528,"line_end":528,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828222,"byte_end":11828234,"line_start":535,"line_end":535,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"::protobuf::FileOptions::swift_prefix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n","sig":null,"attributes":[{"value":"/ By default Swift generators will take the proto package and CamelCase it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827889,"byte_end":11827965,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/ replacing '.' with underscore and use that to prefix the types/symbols","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827970,"byte_end":11828044,"line_start":531,"line_end":531,"column_start":5,"column_end":79}},{"value":"/ defined. When this options is provided, they will use this value instead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828049,"byte_end":11828125,"line_start":532,"line_end":532,"column_start":5,"column_end":81}},{"value":"/ to prefix the types/symbols defined.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828130,"byte_end":11828170,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"39\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828175,"byte_end":11828213,"line_start":534,"line_end":534,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828469,"byte_end":11828485,"line_start":539,"line_end":539,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"::protobuf::FileOptions::php_class_prefix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n","sig":null,"attributes":[{"value":"/ Sets the php class prefix which is prepended to all php generated classes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828296,"byte_end":11828373,"line_start":536,"line_end":536,"column_start":5,"column_end":82}},{"value":"/ from this .proto. Default is empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828378,"byte_end":11828417,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"40\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828422,"byte_end":11828460,"line_start":538,"line_end":538,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828790,"byte_end":11828803,"line_start":544,"line_end":544,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"::protobuf::FileOptions::php_namespace","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated classes. Default","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828547,"byte_end":11828624,"line_start":540,"line_end":540,"column_start":5,"column_end":82}},{"value":"/ is empty. When this option is empty, the package name will be used for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828629,"byte_end":11828703,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ determining the namespace.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828708,"byte_end":11828738,"line_start":542,"line_end":542,"column_start":5,"column_end":35}},{"value":"prost(string, optional, tag = \"41\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828743,"byte_end":11828781,"line_start":543,"line_end":543,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829120,"byte_end":11829142,"line_start":549,"line_end":549,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"::protobuf::FileOptions::php_metadata_namespace","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated metadata classes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828865,"byte_end":11828943,"line_start":545,"line_end":545,"column_start":5,"column_end":83}},{"value":"/ Default is empty. When this option is empty, the proto file name will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828948,"byte_end":11829024,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/ used for determining the namespace.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829029,"byte_end":11829068,"line_start":547,"line_end":547,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"44\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829073,"byte_end":11829111,"line_start":548,"line_end":548,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829451,"byte_end":11829463,"line_start":554,"line_end":554,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"::protobuf::FileOptions::ruby_package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n","sig":null,"attributes":[{"value":"/ Use this option to change the package of ruby generated classes. Default","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829204,"byte_end":11829280,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ is empty. When this option is not set, the package name will be used for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829285,"byte_end":11829361,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ determining the ruby package.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829366,"byte_end":11829399,"line_start":552,"line_end":552,"column_start":5,"column_end":38}},{"value":"prost(string, optional, tag = \"45\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829404,"byte_end":11829442,"line_start":553,"line_end":553,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829698,"byte_end":11829718,"line_start":558,"line_end":558,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::FileOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829525,"byte_end":11829581,"line_start":555,"line_end":555,"column_start":5,"column_end":61}},{"value":"/ See the documentation for the \"Options\" section above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829586,"byte_end":11829644,"line_start":556,"line_end":556,"column_start":5,"column_end":63}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829649,"byte_end":11829689,"line_start":557,"line_end":557,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823180,"byte_end":11823192,"line_start":452,"line_end":452,"column_start":9,"column_end":21},"name":"java_package","qualname":"<FileOptions>::java_package","value":"fn java_package<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_package`, or the default value if `java_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11823689,"byte_end":11823709,"line_start":459,"line_end":459,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"<FileOptions>::java_outer_classname","value":"fn java_outer_classname<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_outer_classname`, or the default value if `java_outer_classname` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825147,"byte_end":11825159,"line_start":486,"line_end":486,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"<FileOptions>::optimize_for","value":"fn optimize_for<'_>(&'_ Self) -> file_options::OptimizeMode","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `optimize_for`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824284,"byte_end":11824303,"line_start":467,"line_end":467,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"<FileOptions>::java_multiple_files","value":"fn java_multiple_files<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_multiple_files`, or the default value if `java_multiple_files` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11825617,"byte_end":11825627,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"name":"go_package","qualname":"<FileOptions>::go_package","value":"fn go_package<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `go_package`, or the default value if `go_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826404,"byte_end":11826423,"line_start":506,"line_end":506,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"<FileOptions>::cc_generic_services","value":"fn cc_generic_services<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `cc_generic_services`, or the default value if `cc_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826523,"byte_end":11826544,"line_start":508,"line_end":508,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"<FileOptions>::java_generic_services","value":"fn java_generic_services<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_generic_services`, or the default value if `java_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826644,"byte_end":11826663,"line_start":510,"line_end":510,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"<FileOptions>::py_generic_services","value":"fn py_generic_services<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `py_generic_services`, or the default value if `py_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824436,"byte_end":11824465,"line_start":471,"line_end":471,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"<FileOptions>::java_generate_equals_and_hash","value":"fn java_generate_equals_and_hash<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_generate_equals_and_hash`, or the default value if `java_generate_equals_and_hash` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827139,"byte_end":11827149,"line_start":518,"line_end":518,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FileOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11824950,"byte_end":11824972,"line_start":479,"line_end":479,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"<FileOptions>::java_string_check_utf8","value":"fn java_string_check_utf8<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_string_check_utf8`, or the default value if `java_string_check_utf8` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827375,"byte_end":11827391,"line_start":522,"line_end":522,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"<FileOptions>::cc_enable_arenas","value":"fn cc_enable_arenas<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `cc_enable_arenas`, or the default value if `cc_enable_arenas` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827619,"byte_end":11827636,"line_start":526,"line_end":526,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"<FileOptions>::objc_class_prefix","value":"fn objc_class_prefix<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `objc_class_prefix`, or the default value if `objc_class_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11827811,"byte_end":11827827,"line_start":529,"line_end":529,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"<FileOptions>::csharp_namespace","value":"fn csharp_namespace<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `csharp_namespace`, or the default value if `csharp_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828222,"byte_end":11828234,"line_start":535,"line_end":535,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"<FileOptions>::swift_prefix","value":"fn swift_prefix<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `swift_prefix`, or the default value if `swift_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828469,"byte_end":11828485,"line_start":539,"line_end":539,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"<FileOptions>::php_class_prefix","value":"fn php_class_prefix<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_class_prefix`, or the default value if `php_class_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11828790,"byte_end":11828803,"line_start":544,"line_end":544,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"<FileOptions>::php_namespace","value":"fn php_namespace<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_namespace`, or the default value if `php_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11826763,"byte_end":11826783,"line_start":512,"line_end":512,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"<FileOptions>::php_generic_services","value":"fn php_generic_services<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_generic_services`, or the default value if `php_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829120,"byte_end":11829142,"line_start":549,"line_end":549,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"<FileOptions>::php_metadata_namespace","value":"fn php_metadata_namespace<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_metadata_namespace`, or the default value if `php_metadata_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829451,"byte_end":11829463,"line_start":554,"line_end":554,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"<FileOptions>::ruby_package","value":"fn ruby_package<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `ruby_package`, or the default value if `ruby_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829829,"byte_end":11829841,"line_start":561,"line_end":561,"column_start":9,"column_end":21},"name":"file_options","qualname":"::protobuf::file_options","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":406}],"decl_id":null,"docs":" Nested message and enum types in `FileOptions`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `FileOptions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829769,"byte_end":11829820,"line_start":560,"line_end":560,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830199,"byte_end":11830204,"line_start":577,"line_end":577,"column_start":9,"column_end":14},"name":"Speed","qualname":"::protobuf::file_options::OptimizeMode::Speed","value":"OptimizeMode::Speed","parent":{"krate":0,"index":1617},"children":[],"decl_id":null,"docs":" Generate complete code for parsing, serialization,\n","sig":null,"attributes":[{"value":"/ Generate complete code for parsing, serialization,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830136,"byte_end":11830190,"line_start":576,"line_end":576,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830305,"byte_end":11830313,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"name":"CodeSize","qualname":"::protobuf::file_options::OptimizeMode::CodeSize","value":"OptimizeMode::CodeSize","parent":{"krate":0,"index":1617},"children":[],"decl_id":null,"docs":" etc.","sig":null,"attributes":[{"value":"/ etc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830218,"byte_end":11830226,"line_start":578,"line_end":578,"column_start":9,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830235,"byte_end":11830238,"line_start":579,"line_end":579,"column_start":9,"column_end":12}},{"value":"/ Use ReflectionOps to implement these methods.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830247,"byte_end":11830296,"line_start":580,"line_end":580,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830393,"byte_end":11830404,"line_start":583,"line_end":583,"column_start":9,"column_end":20},"name":"LiteRuntime","qualname":"::protobuf::file_options::OptimizeMode::LiteRuntime","value":"OptimizeMode::LiteRuntime","parent":{"krate":0,"index":1617},"children":[],"decl_id":null,"docs":" Generate code using MessageLite and the lite runtime.\n","sig":null,"attributes":[{"value":"/ Generate code using MessageLite and the lite runtime.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830327,"byte_end":11830384,"line_start":582,"line_end":582,"column_start":9,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830113,"byte_end":11830125,"line_start":575,"line_end":575,"column_start":14,"column_end":26},"name":"OptimizeMode","qualname":"::protobuf::file_options::OptimizeMode","value":"enum OptimizeMode { Speed = , CodeSize = , LiteRuntime = , }","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624}],"decl_id":null,"docs":" Generated classes can be optimized for speed or code size.\n","sig":null,"attributes":[{"value":"/ Generated classes can be optimized for speed or code size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11829848,"byte_end":11829910,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830087,"byte_end":11830099,"line_start":574,"line_end":574,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830722,"byte_end":11830733,"line_start":590,"line_end":590,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<OptimizeMode>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830448,"byte_end":11830521,"line_start":586,"line_end":586,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830530,"byte_end":11830533,"line_start":587,"line_end":587,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830542,"byte_end":11830618,"line_start":588,"line_end":588,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830627,"byte_end":11830706,"line_start":589,"line_end":589,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831065,"byte_end":11831078,"line_start":598,"line_end":598,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<OptimizeMode>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830980,"byte_end":11831049,"line_start":597,"line_end":597,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831473,"byte_end":11831487,"line_start":610,"line_end":610,"column_start":12,"column_end":26},"name":"MessageOptions","qualname":"::protobuf::MessageOptions","value":"MessageOptions { message_set_wire_format, no_standard_descriptor_accessor, deprecated, map_entry, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831369,"byte_end":11831415,"line_start":608,"line_end":608,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832384,"byte_end":11832407,"line_start":630,"line_end":630,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"::protobuf::MessageOptions::message_set_wire_format","value":"core::option::Option<bool>","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.","sig":null,"attributes":[{"value":"/ Set true to use the old proto1 MessageSet wire format for extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831494,"byte_end":11831567,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ This is provided for backwards-compatibility with the MessageSet wire","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831572,"byte_end":11831645,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ format.  You should not use this for any other reason:  It's less","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831650,"byte_end":11831719,"line_start":613,"line_end":613,"column_start":5,"column_end":74}},{"value":"/ efficient, has fewer features, and is more complicated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831724,"byte_end":11831783,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831788,"byte_end":11831791,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The message must be defined exactly as follows:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831796,"byte_end":11831847,"line_start":616,"line_end":616,"column_start":5,"column_end":56}},{"value":"/ message Foo {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831852,"byte_end":11831869,"line_start":617,"line_end":617,"column_start":5,"column_end":22}},{"value":"/ option message_set_wire_format = true;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831874,"byte_end":11831916,"line_start":618,"line_end":618,"column_start":5,"column_end":47}},{"value":"/ extensions 4 to max;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831921,"byte_end":11831945,"line_start":619,"line_end":619,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831950,"byte_end":11831955,"line_start":620,"line_end":620,"column_start":5,"column_end":10}},{"value":"/ Note that the message cannot have any defined fields; MessageSets only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11831960,"byte_end":11832034,"line_start":621,"line_end":621,"column_start":5,"column_end":79}},{"value":"/ have extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832039,"byte_end":11832059,"line_start":622,"line_end":622,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832064,"byte_end":11832067,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ All extensions of your type must be singular messages; e.g. they cannot","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832072,"byte_end":11832147,"line_start":624,"line_end":624,"column_start":5,"column_end":80}},{"value":"/ be int32s, enums, or repeated messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832152,"byte_end":11832195,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832200,"byte_end":11832203,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Because this is an option, the above two restrictions are not enforced by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832208,"byte_end":11832285,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/ the protocol compiler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832290,"byte_end":11832316,"line_start":628,"line_end":628,"column_start":5,"column_end":31}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832321,"byte_end":11832375,"line_start":629,"line_end":629,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832747,"byte_end":11832778,"line_start":635,"line_end":635,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"::protobuf::MessageOptions::no_standard_descriptor_accessor","value":"core::option::Option<bool>","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n","sig":null,"attributes":[{"value":"/ Disables the generation of the standard \"descriptor()\" accessor, which can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832443,"byte_end":11832521,"line_start":631,"line_end":631,"column_start":5,"column_end":83}},{"value":"/ conflict with a field of the same name.  This is meant to make migration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832526,"byte_end":11832602,"line_start":632,"line_end":632,"column_start":5,"column_end":81}},{"value":"/ from proto1 easier; new code should avoid fields named \"descriptor\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832607,"byte_end":11832679,"line_start":633,"line_end":633,"column_start":5,"column_end":77}},{"value":"prost(bool, optional, tag = \"2\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832684,"byte_end":11832738,"line_start":634,"line_end":634,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833128,"byte_end":11833138,"line_start":641,"line_end":641,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::MessageOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n","sig":null,"attributes":[{"value":"/ Is this message deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832814,"byte_end":11832845,"line_start":636,"line_end":636,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832850,"byte_end":11832924,"line_start":637,"line_end":637,"column_start":5,"column_end":79}},{"value":"/ for the message, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832929,"byte_end":11833002,"line_start":638,"line_end":638,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833007,"byte_end":11833060,"line_start":639,"line_end":639,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833065,"byte_end":11833119,"line_start":640,"line_end":640,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834111,"byte_end":11834120,"line_start":664,"line_end":664,"column_start":9,"column_end":18},"name":"map_entry","qualname":"::protobuf::MessageOptions::map_entry","value":"core::option::Option<bool>","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Whether the message is an automatically generated map entry type for the\n maps field.","sig":null,"attributes":[{"value":"/ Whether the message is an automatically generated map entry type for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833174,"byte_end":11833250,"line_start":642,"line_end":642,"column_start":5,"column_end":81}},{"value":"/ maps field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833255,"byte_end":11833270,"line_start":643,"line_end":643,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833275,"byte_end":11833278,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ For maps fields:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833283,"byte_end":11833303,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/ map\\<KeyType, ValueType> map_field = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833308,"byte_end":11833351,"line_start":646,"line_end":646,"column_start":5,"column_end":48}},{"value":"/ The parsed descriptor looks like:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833356,"byte_end":11833393,"line_start":647,"line_end":647,"column_start":5,"column_end":42}},{"value":"/ message MapFieldEntry {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833398,"byte_end":11833425,"line_start":648,"line_end":648,"column_start":5,"column_end":32}},{"value":"/ option map_entry = true;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833430,"byte_end":11833458,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/ optional KeyType key = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833463,"byte_end":11833492,"line_start":650,"line_end":650,"column_start":5,"column_end":34}},{"value":"/ optional ValueType value = 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833497,"byte_end":11833530,"line_start":651,"line_end":651,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833535,"byte_end":11833540,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ repeated MapFieldEntry map_field = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833545,"byte_end":11833586,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833591,"byte_end":11833594,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Implementations may choose not to generate the map_entry=true message, but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833599,"byte_end":11833677,"line_start":655,"line_end":655,"column_start":5,"column_end":83}},{"value":"/ use a native map in the target language to hold the keys and values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833682,"byte_end":11833754,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ The reflection APIs in such implementations still need to work as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833759,"byte_end":11833828,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/ if the field is a repeated message field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833833,"byte_end":11833878,"line_start":658,"line_end":658,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833883,"byte_end":11833886,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ NOTE: Do not set the option in .proto files. Always use the maps syntax","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833891,"byte_end":11833966,"line_start":660,"line_end":660,"column_start":5,"column_end":80}},{"value":"/ instead. The option should only be implicitly set by the proto compiler","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833971,"byte_end":11834046,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/ parser.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834051,"byte_end":11834062,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"prost(bool, optional, tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834067,"byte_end":11834102,"line_start":663,"line_end":663,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834277,"byte_end":11834297,"line_start":667,"line_end":667,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::MessageOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834156,"byte_end":11834223,"line_start":665,"line_end":665,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834228,"byte_end":11834268,"line_start":666,"line_end":666,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832384,"byte_end":11832407,"line_start":630,"line_end":630,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"<MessageOptions>::message_set_wire_format","value":"fn message_set_wire_format<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `message_set_wire_format`, or the default value if `message_set_wire_format` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11832747,"byte_end":11832778,"line_start":635,"line_end":635,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"<MessageOptions>::no_standard_descriptor_accessor","value":"fn no_standard_descriptor_accessor<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `no_standard_descriptor_accessor`, or the default value if `no_standard_descriptor_accessor` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11833128,"byte_end":11833138,"line_start":641,"line_end":641,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MessageOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834111,"byte_end":11834120,"line_start":664,"line_end":664,"column_start":9,"column_end":18},"name":"map_entry","qualname":"<MessageOptions>::map_entry","value":"fn map_entry<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `map_entry`, or the default value if `map_entry` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834452,"byte_end":11834464,"line_start":671,"line_end":671,"column_start":12,"column_end":24},"name":"FieldOptions","qualname":"::protobuf::FieldOptions","value":"FieldOptions { ctype, packed, jstype, lazy, deprecated, weak, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834348,"byte_end":11834394,"line_start":669,"line_end":669,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834909,"byte_end":11834914,"line_start":682,"line_end":682,"column_start":9,"column_end":14},"name":"ctype","qualname":"::protobuf::FieldOptions::ctype","value":"core::option::Option<i32>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n","sig":null,"attributes":[{"value":"/ The ctype option instructs the C++ code generator to use a different","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834471,"byte_end":11834543,"line_start":672,"line_end":672,"column_start":5,"column_end":77}},{"value":"/ representation of the field than it normally would.  See the specific","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834548,"byte_end":11834621,"line_start":673,"line_end":673,"column_start":5,"column_end":78}},{"value":"/ options below.  This option is not yet implemented in the open source","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834626,"byte_end":11834699,"line_start":674,"line_end":674,"column_start":5,"column_end":78}},{"value":"/ release -- sorry, we'll try to include it in a future version!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834704,"byte_end":11834770,"line_start":675,"line_end":675,"column_start":5,"column_end":71}},{"value":"prost(enumeration = \"field_options::CType\", optional, tag = \"1\", default =\n\"String\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834775,"byte_end":11834900,"line_start":676,"line_end":681,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835359,"byte_end":11835365,"line_start":689,"line_end":689,"column_start":9,"column_end":15},"name":"packed","qualname":"::protobuf::FieldOptions::packed","value":"core::option::Option<bool>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n","sig":null,"attributes":[{"value":"/ The packed option can be enabled for repeated primitive fields to enable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834949,"byte_end":11835025,"line_start":683,"line_end":683,"column_start":5,"column_end":81}},{"value":"/ a more efficient representation on the wire. Rather than repeatedly","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835030,"byte_end":11835101,"line_start":684,"line_end":684,"column_start":5,"column_end":76}},{"value":"/ writing the tag and type for each element, the entire array is encoded as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835106,"byte_end":11835183,"line_start":685,"line_end":685,"column_start":5,"column_end":82}},{"value":"/ a single length-delimited blob. In proto3, only explicit setting it to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835188,"byte_end":11835262,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ false will avoid using packed encoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835267,"byte_end":11835310,"line_start":687,"line_end":687,"column_start":5,"column_end":48}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835315,"byte_end":11835350,"line_start":688,"line_end":688,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836266,"byte_end":11836272,"line_start":707,"line_end":707,"column_start":9,"column_end":15},"name":"jstype","qualname":"::protobuf::FieldOptions::jstype","value":"core::option::Option<i32>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.","sig":null,"attributes":[{"value":"/ The jstype option determines the JavaScript type used for values of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835401,"byte_end":11835476,"line_start":690,"line_end":690,"column_start":5,"column_end":80}},{"value":"/ field.  The option is permitted only for 64 bit integral and fixed types","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835481,"byte_end":11835557,"line_start":691,"line_end":691,"column_start":5,"column_end":81}},{"value":"/ (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835562,"byte_end":11835640,"line_start":692,"line_end":692,"column_start":5,"column_end":83}},{"value":"/ is represented as JavaScript string, which avoids loss of precision that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835645,"byte_end":11835721,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ can happen when a large value is converted to a floating point JavaScript.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835726,"byte_end":11835804,"line_start":694,"line_end":694,"column_start":5,"column_end":83}},{"value":"/ Specifying JS_NUMBER for the jstype causes the generated JavaScript code to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835809,"byte_end":11835888,"line_start":695,"line_end":695,"column_start":5,"column_end":84}},{"value":"/ use the JavaScript \"number\" type.  The behavior of the default option","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835893,"byte_end":11835966,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ JS_NORMAL is implementation dependent.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835971,"byte_end":11836013,"line_start":697,"line_end":697,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836018,"byte_end":11836021,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ This option is an enum to permit additional types to be added, e.g.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836026,"byte_end":11836097,"line_start":699,"line_end":699,"column_start":5,"column_end":76}},{"value":"/ goog.math.Integer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836102,"byte_end":11836124,"line_start":700,"line_end":700,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"field_options::JsType\", optional, tag = \"6\", default =\n\"JsNormal\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836129,"byte_end":11836257,"line_start":701,"line_end":706,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838190,"byte_end":11838194,"line_start":736,"line_end":736,"column_start":9,"column_end":13},"name":"lazy","qualname":"::protobuf::FieldOptions::lazy","value":"core::option::Option<bool>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.","sig":null,"attributes":[{"value":"/ Should this field be parsed lazily?  Lazy applies only to message-type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836307,"byte_end":11836381,"line_start":708,"line_end":708,"column_start":5,"column_end":79}},{"value":"/ fields.  It means that when the outer message is initially parsed, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836386,"byte_end":11836460,"line_start":709,"line_end":709,"column_start":5,"column_end":79}},{"value":"/ inner message's contents will not be parsed but instead stored in encoded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836465,"byte_end":11836542,"line_start":710,"line_end":710,"column_start":5,"column_end":82}},{"value":"/ form.  The inner message will actually be parsed when it is first accessed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836547,"byte_end":11836626,"line_start":711,"line_end":711,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836631,"byte_end":11836634,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This is only a hint.  Implementations are free to choose whether to use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836639,"byte_end":11836714,"line_start":713,"line_end":713,"column_start":5,"column_end":80}},{"value":"/ eager or lazy parsing regardless of the value of this option.  However,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836719,"byte_end":11836794,"line_start":714,"line_end":714,"column_start":5,"column_end":80}},{"value":"/ setting this option true suggests that the protocol author believes that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836799,"byte_end":11836875,"line_start":715,"line_end":715,"column_start":5,"column_end":81}},{"value":"/ using lazy parsing on this field is worth the additional bookkeeping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836880,"byte_end":11836952,"line_start":716,"line_end":716,"column_start":5,"column_end":77}},{"value":"/ overhead typically needed to implement it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836957,"byte_end":11837003,"line_start":717,"line_end":717,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837008,"byte_end":11837011,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ This option does not affect the public interface of any generated code;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837016,"byte_end":11837091,"line_start":719,"line_end":719,"column_start":5,"column_end":80}},{"value":"/ all method signatures remain the same.  Furthermore, thread-safety of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837096,"byte_end":11837173,"line_start":720,"line_end":720,"column_start":5,"column_end":82}},{"value":"/ interface is not affected by this option; const methods remain safe to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837178,"byte_end":11837252,"line_start":721,"line_end":721,"column_start":5,"column_end":79}},{"value":"/ call from multiple threads concurrently, while non-const methods continue","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837257,"byte_end":11837334,"line_start":722,"line_end":722,"column_start":5,"column_end":82}},{"value":"/ to require exclusive access.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837339,"byte_end":11837371,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837376,"byte_end":11837379,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Note that implementations may choose not to check required fields within","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837384,"byte_end":11837460,"line_start":725,"line_end":725,"column_start":5,"column_end":81}},{"value":"/ a lazy sub-message.  That is, calling IsInitialized() on the outer message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837465,"byte_end":11837543,"line_start":726,"line_end":726,"column_start":5,"column_end":83}},{"value":"/ may return true even if the inner message has missing required fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837548,"byte_end":11837622,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/ This is necessary because otherwise the inner message would have to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837627,"byte_end":11837701,"line_start":728,"line_end":728,"column_start":5,"column_end":79}},{"value":"/ parsed in order to perform the check, defeating the purpose of lazy","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837706,"byte_end":11837777,"line_start":729,"line_end":729,"column_start":5,"column_end":76}},{"value":"/ parsing.  An implementation which chooses not to check required fields","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837782,"byte_end":11837856,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ must be consistent about it.  That is, for any particular sub-message, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837861,"byte_end":11837939,"line_start":731,"line_end":731,"column_start":5,"column_end":83}},{"value":"/ implementation must either *always* check its required fields, or *never*","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11837944,"byte_end":11838021,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ check its required fields, regardless of whether or not the message has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838026,"byte_end":11838101,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/ been parsed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838106,"byte_end":11838122,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838127,"byte_end":11838181,"line_start":735,"line_end":735,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838538,"byte_end":11838548,"line_start":742,"line_end":742,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::FieldOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n","sig":null,"attributes":[{"value":"/ Is this field deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838230,"byte_end":11838259,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838264,"byte_end":11838338,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/ for accessors, or it will be completely ignored; in the very least, this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838343,"byte_end":11838419,"line_start":739,"line_end":739,"column_start":5,"column_end":81}},{"value":"/ is a formalization for deprecating fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838424,"byte_end":11838470,"line_start":740,"line_end":740,"column_start":5,"column_end":51}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838475,"byte_end":11838529,"line_start":741,"line_end":741,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838704,"byte_end":11838708,"line_start":745,"line_end":745,"column_start":9,"column_end":13},"name":"weak","qualname":"::protobuf::FieldOptions::weak","value":"core::option::Option<bool>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838584,"byte_end":11838635,"line_start":743,"line_end":743,"column_start":5,"column_end":56}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838640,"byte_end":11838695,"line_start":744,"line_end":744,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838865,"byte_end":11838885,"line_start":748,"line_end":748,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::FieldOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838744,"byte_end":11838811,"line_start":746,"line_end":746,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838816,"byte_end":11838856,"line_start":747,"line_end":747,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11834909,"byte_end":11834914,"line_start":682,"line_end":682,"column_start":9,"column_end":14},"name":"ctype","qualname":"<FieldOptions>::ctype","value":"fn ctype<'_>(&'_ Self) -> field_options::CType","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `ctype`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11835359,"byte_end":11835365,"line_start":689,"line_end":689,"column_start":9,"column_end":15},"name":"packed","qualname":"<FieldOptions>::packed","value":"fn packed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `packed`, or the default value if `packed` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838538,"byte_end":11838548,"line_start":742,"line_end":742,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FieldOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838190,"byte_end":11838194,"line_start":736,"line_end":736,"column_start":9,"column_end":13},"name":"lazy","qualname":"<FieldOptions>::lazy","value":"fn lazy<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `lazy`, or the default value if `lazy` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11836266,"byte_end":11836272,"line_start":707,"line_end":707,"column_start":9,"column_end":15},"name":"jstype","qualname":"<FieldOptions>::jstype","value":"fn jstype<'_>(&'_ Self) -> field_options::JsType","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `jstype`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838704,"byte_end":11838708,"line_start":745,"line_end":745,"column_start":9,"column_end":13},"name":"weak","qualname":"<FieldOptions>::weak","value":"fn weak<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `weak`, or the default value if `weak` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":409},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838997,"byte_end":11839010,"line_start":751,"line_end":751,"column_start":9,"column_end":22},"name":"field_options","qualname":"::protobuf::field_options","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":410},{"krate":0,"index":1873},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":413}],"decl_id":null,"docs":" Nested message and enum types in `FieldOptions`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `FieldOptions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11838936,"byte_end":11838988,"line_start":750,"line_end":750,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839257,"byte_end":11839263,"line_start":766,"line_end":766,"column_start":9,"column_end":15},"name":"String","qualname":"::protobuf::field_options::CType::String","value":"CType::String","parent":{"krate":0,"index":1838},"children":[],"decl_id":null,"docs":" Default mode.\n","sig":null,"attributes":[{"value":"/ Default mode.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839231,"byte_end":11839248,"line_start":765,"line_end":765,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839277,"byte_end":11839281,"line_start":767,"line_end":767,"column_start":9,"column_end":13},"name":"Cord","qualname":"::protobuf::field_options::CType::Cord","value":"CType::Cord","parent":{"krate":0,"index":1838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839295,"byte_end":11839306,"line_start":768,"line_end":768,"column_start":9,"column_end":20},"name":"StringPiece","qualname":"::protobuf::field_options::CType::StringPiece","value":"CType::StringPiece","parent":{"krate":0,"index":1838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839215,"byte_end":11839220,"line_start":764,"line_end":764,"column_start":14,"column_end":19},"name":"CType","qualname":"::protobuf::field_options::CType","value":"enum CType { String = , Cord = , StringPiece = , }","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839189,"byte_end":11839201,"line_start":763,"line_end":763,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839617,"byte_end":11839628,"line_start":775,"line_end":775,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<CType>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839343,"byte_end":11839416,"line_start":771,"line_end":771,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839425,"byte_end":11839428,"line_start":772,"line_end":772,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839437,"byte_end":11839513,"line_start":773,"line_end":773,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839522,"byte_end":11839601,"line_start":774,"line_end":774,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839932,"byte_end":11839945,"line_start":783,"line_end":783,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<CType>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839847,"byte_end":11839916,"line_start":782,"line_end":782,"column_start":9,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840480,"byte_end":11840488,"line_start":806,"line_end":806,"column_start":9,"column_end":17},"name":"JsNormal","qualname":"::protobuf::field_options::JsType::JsNormal","value":"JsType::JsNormal","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" Use the default type.\n","sig":null,"attributes":[{"value":"/ Use the default type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840446,"byte_end":11840471,"line_start":805,"line_end":805,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840538,"byte_end":11840546,"line_start":808,"line_end":808,"column_start":9,"column_end":17},"name":"JsString","qualname":"::protobuf::field_options::JsType::JsString","value":"JsType::JsString","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" Use JavaScript strings.\n","sig":null,"attributes":[{"value":"/ Use JavaScript strings.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840502,"byte_end":11840529,"line_start":807,"line_end":807,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840596,"byte_end":11840604,"line_start":810,"line_end":810,"column_start":9,"column_end":17},"name":"JsNumber","qualname":"::protobuf::field_options::JsType::JsNumber","value":"JsType::JsNumber","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" Use JavaScript numbers.\n","sig":null,"attributes":[{"value":"/ Use JavaScript numbers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840560,"byte_end":11840587,"line_start":809,"line_end":809,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840429,"byte_end":11840435,"line_start":804,"line_end":804,"column_start":14,"column_end":20},"name":"JsType","qualname":"::protobuf::field_options::JsType","value":"enum JsType { JsNormal = , JsString = , JsNumber = , }","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840403,"byte_end":11840415,"line_start":803,"line_end":803,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840916,"byte_end":11840927,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<JsType>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840642,"byte_end":11840715,"line_start":813,"line_end":813,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840724,"byte_end":11840727,"line_start":814,"line_end":814,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840736,"byte_end":11840812,"line_start":815,"line_end":815,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840821,"byte_end":11840900,"line_start":816,"line_end":816,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841242,"byte_end":11841255,"line_start":825,"line_end":825,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<JsType>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841157,"byte_end":11841226,"line_start":824,"line_end":824,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841651,"byte_end":11841663,"line_start":837,"line_end":837,"column_start":12,"column_end":24},"name":"OneofOptions","qualname":"::protobuf::OneofOptions","value":"OneofOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1928}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841547,"byte_end":11841593,"line_start":835,"line_end":835,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841791,"byte_end":11841811,"line_start":840,"line_end":840,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::OneofOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841670,"byte_end":11841737,"line_start":838,"line_end":838,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841742,"byte_end":11841782,"line_start":839,"line_end":839,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841966,"byte_end":11841977,"line_start":844,"line_end":844,"column_start":12,"column_end":23},"name":"EnumOptions","qualname":"::protobuf::EnumOptions","value":"EnumOptions { allow_alias, deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841862,"byte_end":11841908,"line_start":842,"line_end":842,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842124,"byte_end":11842135,"line_start":848,"line_end":848,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"::protobuf::EnumOptions::allow_alias","value":"core::option::Option<bool>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Set this option to true to allow mapping different tag names to the same\n value.\n","sig":null,"attributes":[{"value":"/ Set this option to true to allow mapping different tag names to the same","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11841984,"byte_end":11842060,"line_start":845,"line_end":845,"column_start":5,"column_end":81}},{"value":"/ value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842065,"byte_end":11842075,"line_start":846,"line_end":846,"column_start":5,"column_end":15}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842080,"byte_end":11842115,"line_start":847,"line_end":847,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842476,"byte_end":11842486,"line_start":854,"line_end":854,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::EnumOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n","sig":null,"attributes":[{"value":"/ Is this enum deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842171,"byte_end":11842199,"line_start":849,"line_end":849,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842204,"byte_end":11842278,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/ for the enum, or it will be completely ignored; in the very least, this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842283,"byte_end":11842358,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ is a formalization for deprecating enums.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842363,"byte_end":11842408,"line_start":852,"line_end":852,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842413,"byte_end":11842467,"line_start":853,"line_end":853,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842643,"byte_end":11842663,"line_start":857,"line_end":857,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::EnumOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842522,"byte_end":11842589,"line_start":855,"line_end":855,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842594,"byte_end":11842634,"line_start":856,"line_end":856,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842124,"byte_end":11842135,"line_start":848,"line_end":848,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"<EnumOptions>::allow_alias","value":"fn allow_alias<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `allow_alias`, or the default value if `allow_alias` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842476,"byte_end":11842486,"line_start":854,"line_end":854,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842818,"byte_end":11842834,"line_start":861,"line_end":861,"column_start":12,"column_end":28},"name":"EnumValueOptions","qualname":"::protobuf::EnumValueOptions","value":"EnumValueOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842714,"byte_end":11842760,"line_start":859,"line_end":859,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843164,"byte_end":11843174,"line_start":867,"line_end":867,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::EnumValueOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1977},"children":[],"decl_id":null,"docs":" Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n","sig":null,"attributes":[{"value":"/ Is this enum value deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842841,"byte_end":11842875,"line_start":862,"line_end":862,"column_start":5,"column_end":39}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842880,"byte_end":11842954,"line_start":863,"line_end":863,"column_start":5,"column_end":79}},{"value":"/ for the enum value, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11842959,"byte_end":11843035,"line_start":864,"line_end":864,"column_start":5,"column_end":81}},{"value":"/ this is a formalization for deprecating enum values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843040,"byte_end":11843096,"line_start":865,"line_end":865,"column_start":5,"column_end":61}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843101,"byte_end":11843155,"line_start":866,"line_end":866,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843331,"byte_end":11843351,"line_start":870,"line_end":870,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::EnumValueOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":1977},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843210,"byte_end":11843277,"line_start":868,"line_end":868,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843282,"byte_end":11843322,"line_start":869,"line_end":869,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843164,"byte_end":11843174,"line_start":867,"line_end":867,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumValueOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843506,"byte_end":11843520,"line_start":874,"line_end":874,"column_start":12,"column_end":26},"name":"ServiceOptions","qualname":"::protobuf::ServiceOptions","value":"ServiceOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843402,"byte_end":11843448,"line_start":872,"line_end":872,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843842,"byte_end":11843852,"line_start":880,"line_end":880,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::ServiceOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n","sig":null,"attributes":[{"value":"/ Is this service deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843527,"byte_end":11843558,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843563,"byte_end":11843637,"line_start":876,"line_end":876,"column_start":5,"column_end":79}},{"value":"/ for the service, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843642,"byte_end":11843715,"line_start":877,"line_end":877,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843720,"byte_end":11843773,"line_start":878,"line_end":878,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843778,"byte_end":11843833,"line_start":879,"line_end":879,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844009,"byte_end":11844029,"line_start":883,"line_end":883,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::ServiceOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843888,"byte_end":11843955,"line_start":881,"line_end":881,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843960,"byte_end":11844000,"line_start":882,"line_end":882,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11843842,"byte_end":11843852,"line_start":880,"line_end":880,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<ServiceOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844184,"byte_end":11844197,"line_start":887,"line_end":887,"column_start":12,"column_end":25},"name":"MethodOptions","qualname":"::protobuf::MethodOptions","value":"MethodOptions { deprecated, idempotency_level, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844080,"byte_end":11844126,"line_start":885,"line_end":885,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844516,"byte_end":11844526,"line_start":893,"line_end":893,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::protobuf::MethodOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":" Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n","sig":null,"attributes":[{"value":"/ Is this method deprecated?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844204,"byte_end":11844234,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844239,"byte_end":11844313,"line_start":889,"line_end":889,"column_start":5,"column_end":79}},{"value":"/ for the method, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844318,"byte_end":11844390,"line_start":890,"line_end":890,"column_start":5,"column_end":77}},{"value":"/ this is a formalization for deprecating methods.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844395,"byte_end":11844447,"line_start":891,"line_end":891,"column_start":5,"column_end":57}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844452,"byte_end":11844507,"line_start":892,"line_end":892,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844721,"byte_end":11844738,"line_start":900,"line_end":900,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"::protobuf::MethodOptions::idempotency_level","value":"core::option::Option<i32>","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"method_options::IdempotencyLevel\", optional, tag =\n\"34\", default = \"IdempotencyUnknown\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844562,"byte_end":11844712,"line_start":894,"line_end":899,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844894,"byte_end":11844914,"line_start":903,"line_end":903,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::MethodOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<protobuf::UninterpretedOption>","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844773,"byte_end":11844840,"line_start":901,"line_end":901,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844845,"byte_end":11844885,"line_start":902,"line_end":902,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844516,"byte_end":11844526,"line_start":893,"line_end":893,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MethodOptions>::deprecated","value":"fn deprecated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844721,"byte_end":11844738,"line_start":900,"line_end":900,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"<MethodOptions>::idempotency_level","value":"fn idempotency_level<'_>(&'_ Self) -> method_options::IdempotencyLevel","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `idempotency_level`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845027,"byte_end":11845041,"line_start":906,"line_end":906,"column_start":9,"column_end":23},"name":"method_options","qualname":"::protobuf::method_options","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":417}],"decl_id":null,"docs":" Nested message and enum types in `MethodOptions`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `MethodOptions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11844965,"byte_end":11845018,"line_start":905,"line_end":905,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845517,"byte_end":11845535,"line_start":923,"line_end":923,"column_start":9,"column_end":27},"name":"IdempotencyUnknown","qualname":"::protobuf::method_options::IdempotencyLevel::IdempotencyUnknown","value":"IdempotencyLevel::IdempotencyUnknown","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845580,"byte_end":11845593,"line_start":925,"line_end":925,"column_start":9,"column_end":22},"name":"NoSideEffects","qualname":"::protobuf::method_options::IdempotencyLevel::NoSideEffects","value":"IdempotencyLevel::NoSideEffects","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" implies idempotent\n","sig":null,"attributes":[{"value":"/ implies idempotent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845549,"byte_end":11845571,"line_start":924,"line_end":924,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845657,"byte_end":11845667,"line_start":927,"line_end":927,"column_start":9,"column_end":19},"name":"Idempotent","qualname":"::protobuf::method_options::IdempotencyLevel::Idempotent","value":"IdempotencyLevel::Idempotent","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" idempotent, but may have side effects\n","sig":null,"attributes":[{"value":"/ idempotent, but may have side effects","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845607,"byte_end":11845648,"line_start":926,"line_end":926,"column_start":9,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845490,"byte_end":11845506,"line_start":922,"line_end":922,"column_start":14,"column_end":30},"name":"IdempotencyLevel","qualname":"::protobuf::method_options::IdempotencyLevel","value":"enum IdempotencyLevel {\n    IdempotencyUnknown = ,\n    NoSideEffects = ,\n    Idempotent = ,\n}","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108}],"decl_id":null,"docs":" Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n","sig":null,"attributes":[{"value":"/ Is this method side-effect-free (or safe in HTTP parlance), or idempotent,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845048,"byte_end":11845126,"line_start":907,"line_end":907,"column_start":5,"column_end":83}},{"value":"/ or neither? HTTP based RPC implementation may choose GET verb for safe","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845131,"byte_end":11845205,"line_start":908,"line_end":908,"column_start":5,"column_end":79}},{"value":"/ methods, and PUT verb for idempotent methods instead of the default POST.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845210,"byte_end":11845287,"line_start":909,"line_end":909,"column_start":5,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845464,"byte_end":11845476,"line_start":921,"line_end":921,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845989,"byte_end":11846000,"line_start":934,"line_end":934,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<IdempotencyLevel>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845715,"byte_end":11845788,"line_start":930,"line_end":930,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845797,"byte_end":11845800,"line_start":931,"line_end":931,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845809,"byte_end":11845885,"line_start":932,"line_end":932,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845894,"byte_end":11845973,"line_start":933,"line_end":933,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11846379,"byte_end":11846392,"line_start":942,"line_end":942,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<IdempotencyLevel>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11846294,"byte_end":11846363,"line_start":941,"line_end":941,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847220,"byte_end":11847239,"line_start":960,"line_end":960,"column_start":12,"column_end":31},"name":"UninterpretedOption","qualname":"::protobuf::UninterpretedOption","value":"UninterpretedOption { name, identifier_value, positive_int_value, negative_int_value, double_value, string_value, aggregate_value }","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235}],"decl_id":null,"docs":" A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n","sig":null,"attributes":[{"value":"/ A message representing a option the parser does not recognize. This only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11846718,"byte_end":11846794,"line_start":952,"line_end":952,"column_start":1,"column_end":77}},{"value":"/ appears in options protos created by the compiler::Parser class.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11846795,"byte_end":11846863,"line_start":953,"line_end":953,"column_start":1,"column_end":69}},{"value":"/ DescriptorPool resolves these when building Descriptor objects. Therefore,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11846864,"byte_end":11846942,"line_start":954,"line_end":954,"column_start":1,"column_end":79}},{"value":"/ options protos in descriptor objects (e.g. returned by Descriptor::options(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11846943,"byte_end":11847024,"line_start":955,"line_end":955,"column_start":1,"column_end":82}},{"value":"/ or produced by Descriptor::CopyTo()) will never have UninterpretedOptions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847025,"byte_end":11847102,"line_start":956,"line_end":956,"column_start":1,"column_end":78}},{"value":"/ in them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847103,"byte_end":11847115,"line_start":957,"line_end":957,"column_start":1,"column_end":13}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847116,"byte_end":11847162,"line_start":958,"line_end":958,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847293,"byte_end":11847297,"line_start":962,"line_end":962,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::UninterpretedOption::name","value":"prost::alloc::vec::Vec<protobuf::uninterpreted_option::NamePart>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847246,"byte_end":11847284,"line_start":961,"line_end":961,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847562,"byte_end":11847578,"line_start":966,"line_end":966,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"::protobuf::UninterpretedOption::identifier_value","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n","sig":null,"attributes":[{"value":"/ The value of the uninterpreted option, in whatever type the tokenizer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847361,"byte_end":11847434,"line_start":963,"line_end":963,"column_start":5,"column_end":78}},{"value":"/ identified it as during parsing. Exactly one of these should be set.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847439,"byte_end":11847511,"line_start":964,"line_end":964,"column_start":5,"column_end":77}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847516,"byte_end":11847553,"line_start":965,"line_end":965,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847686,"byte_end":11847704,"line_start":968,"line_end":968,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"::protobuf::UninterpretedOption::positive_int_value","value":"core::option::Option<u64>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(uint64, optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847640,"byte_end":11847677,"line_start":967,"line_end":967,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847784,"byte_end":11847802,"line_start":970,"line_end":970,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"::protobuf::UninterpretedOption::negative_int_value","value":"core::option::Option<i64>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int64, optional, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847739,"byte_end":11847775,"line_start":969,"line_end":969,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847883,"byte_end":11847895,"line_start":972,"line_end":972,"column_start":9,"column_end":21},"name":"double_value","qualname":"::protobuf::UninterpretedOption::double_value","value":"core::option::Option<f64>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(double, optional, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847837,"byte_end":11847874,"line_start":971,"line_end":971,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847983,"byte_end":11847995,"line_start":974,"line_end":974,"column_start":9,"column_end":21},"name":"string_value","qualname":"::protobuf::UninterpretedOption::string_value","value":"core::option::Option<prost::alloc::vec::Vec<u8>>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bytes = \"vec\", optional, tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847930,"byte_end":11847974,"line_start":973,"line_end":973,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848101,"byte_end":11848116,"line_start":976,"line_end":976,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"::protobuf::UninterpretedOption::aggregate_value","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848055,"byte_end":11848092,"line_start":975,"line_end":975,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847562,"byte_end":11847578,"line_start":966,"line_end":966,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"<UninterpretedOption>::identifier_value","value":"fn identifier_value<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `identifier_value`, or the default value if `identifier_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847686,"byte_end":11847704,"line_start":968,"line_end":968,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"<UninterpretedOption>::positive_int_value","value":"fn positive_int_value<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `positive_int_value`, or the default value if `positive_int_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847784,"byte_end":11847802,"line_start":970,"line_end":970,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"<UninterpretedOption>::negative_int_value","value":"fn negative_int_value<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `negative_int_value`, or the default value if `negative_int_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847883,"byte_end":11847895,"line_start":972,"line_end":972,"column_start":9,"column_end":21},"name":"double_value","qualname":"<UninterpretedOption>::double_value","value":"fn double_value<'_>(&'_ Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `double_value`, or the default value if `double_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11847983,"byte_end":11847995,"line_start":974,"line_end":974,"column_start":9,"column_end":21},"name":"string_value","qualname":"<UninterpretedOption>::string_value","value":"fn string_value<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `string_value`, or the default value if `string_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848101,"byte_end":11848116,"line_start":976,"line_end":976,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"<UninterpretedOption>::aggregate_value","value":"fn aggregate_value<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `aggregate_value`, or the default value if `aggregate_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":420},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848244,"byte_end":11848264,"line_start":979,"line_end":979,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::protobuf::uninterpreted_option","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2243},{"krate":0,"index":2253},{"krate":0,"index":2255}],"decl_id":null,"docs":" Nested message and enum types in `UninterpretedOption`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `UninterpretedOption`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848176,"byte_end":11848235,"line_start":978,"line_end":978,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848738,"byte_end":11848746,"line_start":987,"line_end":987,"column_start":16,"column_end":24},"name":"NamePart","qualname":"::protobuf::uninterpreted_option::NamePart","value":"NamePart { name_part, is_extension }","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262}],"decl_id":null,"docs":" The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ \\[\"foo\", false\\], \\[\"bar.baz\", true\\], \\[\"qux\", false\\] } represents\n \"foo.(bar.baz).qux\".\n","sig":null,"attributes":[{"value":"/ The name of the uninterpreted option.  Each string represents a segment in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848271,"byte_end":11848349,"line_start":980,"line_end":980,"column_start":5,"column_end":83}},{"value":"/ a dot-separated name.  is_extension is true iff a segment represents an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848354,"byte_end":11848429,"line_start":981,"line_end":981,"column_start":5,"column_end":80}},{"value":"/ extension (denoted with parentheses in options specs in .proto files).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848434,"byte_end":11848508,"line_start":982,"line_end":982,"column_start":5,"column_end":79}},{"value":"/ E.g.,{ \\[\"foo\", false\\], \\[\"bar.baz\", true\\], \\[\"qux\", false\\] } represents","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848513,"byte_end":11848592,"line_start":983,"line_end":983,"column_start":5,"column_end":84}},{"value":"/ \"foo.(bar.baz).qux\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848597,"byte_end":11848621,"line_start":984,"line_end":984,"column_start":5,"column_end":29}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848626,"byte_end":11848672,"line_start":985,"line_end":985,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848807,"byte_end":11848816,"line_start":989,"line_end":989,"column_start":13,"column_end":22},"name":"name_part","qualname":"::protobuf::uninterpreted_option::NamePart::name_part","value":"prost::alloc::string::String","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, required, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848757,"byte_end":11848794,"line_start":988,"line_end":988,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848906,"byte_end":11848918,"line_start":991,"line_end":991,"column_start":13,"column_end":25},"name":"is_extension","qualname":"::protobuf::uninterpreted_option::NamePart::is_extension","value":"bool","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, required, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848858,"byte_end":11848893,"line_start":990,"line_end":990,"column_start":9,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849150,"byte_end":11849164,"line_start":998,"line_end":998,"column_start":12,"column_end":26},"name":"SourceCodeInfo","qualname":"::protobuf::SourceCodeInfo","value":"SourceCodeInfo { location }","parent":null,"children":[{"krate":0,"index":2283}],"decl_id":null,"docs":" Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n","sig":null,"attributes":[{"value":"/ Encapsulates information about the original source file from which a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11848934,"byte_end":11849006,"line_start":994,"line_end":994,"column_start":1,"column_end":73}},{"value":"/ FileDescriptorProto was generated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849007,"byte_end":11849045,"line_start":995,"line_end":995,"column_start":1,"column_end":39}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849046,"byte_end":11849092,"line_start":996,"line_end":996,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851679,"byte_end":11851687,"line_start":1044,"line_end":1044,"column_start":9,"column_end":17},"name":"location","qualname":"::protobuf::SourceCodeInfo::location","value":"prost::alloc::vec::Vec<protobuf::source_code_info::Location>","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.","sig":null,"attributes":[{"value":"/ A Location identifies a piece of source code in a .proto file which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849171,"byte_end":11849242,"line_start":999,"line_end":999,"column_start":5,"column_end":76}},{"value":"/ corresponds to a particular definition.  This information is intended","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849247,"byte_end":11849320,"line_start":1000,"line_end":1000,"column_start":5,"column_end":78}},{"value":"/ to be useful to IDEs, code indexers, documentation generators, and similar","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849325,"byte_end":11849403,"line_start":1001,"line_end":1001,"column_start":5,"column_end":83}},{"value":"/ tools.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849408,"byte_end":11849418,"line_start":1002,"line_end":1002,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849423,"byte_end":11849426,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ For example, say we have a file like:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849431,"byte_end":11849472,"line_start":1004,"line_end":1004,"column_start":5,"column_end":46}},{"value":"/ message Foo {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849477,"byte_end":11849494,"line_start":1005,"line_end":1005,"column_start":5,"column_end":22}},{"value":"/ optional string foo = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849499,"byte_end":11849527,"line_start":1006,"line_end":1006,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849532,"byte_end":11849537,"line_start":1007,"line_end":1007,"column_start":5,"column_end":10}},{"value":"/ Let's look at just the field definition:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849542,"byte_end":11849586,"line_start":1008,"line_end":1008,"column_start":5,"column_end":49}},{"value":"/ optional string foo = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849591,"byte_end":11849619,"line_start":1009,"line_end":1009,"column_start":5,"column_end":33}},{"value":"/ ^       ^^     ^^  ^  ^^^","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849624,"byte_end":11849653,"line_start":1010,"line_end":1010,"column_start":5,"column_end":34}},{"value":"/ a       bc     de  f  ghi","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849658,"byte_end":11849687,"line_start":1011,"line_end":1011,"column_start":5,"column_end":34}},{"value":"/ We have the following locations:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849692,"byte_end":11849728,"line_start":1012,"line_end":1012,"column_start":5,"column_end":41}},{"value":"/ span   path               represents","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849733,"byte_end":11849773,"line_start":1013,"line_end":1013,"column_start":5,"column_end":45}},{"value":"/ \\[a,i)  \\[ 4, 0, 2, 0 \\]     The whole field definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849778,"byte_end":11849838,"line_start":1014,"line_end":1014,"column_start":5,"column_end":65}},{"value":"/ \\[a,b)  \\[ 4, 0, 2, 0, 4 \\]  The label (optional).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849843,"byte_end":11849897,"line_start":1015,"line_end":1015,"column_start":5,"column_end":59}},{"value":"/ \\[c,d)  \\[ 4, 0, 2, 0, 5 \\]  The type (string).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849902,"byte_end":11849953,"line_start":1016,"line_end":1016,"column_start":5,"column_end":56}},{"value":"/ \\[e,f)  \\[ 4, 0, 2, 0, 1 \\]  The name (foo).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11849958,"byte_end":11850006,"line_start":1017,"line_end":1017,"column_start":5,"column_end":53}},{"value":"/ \\[g,h)  \\[ 4, 0, 2, 0, 3 \\]  The number (1).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850011,"byte_end":11850059,"line_start":1018,"line_end":1018,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850064,"byte_end":11850067,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Notes:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850072,"byte_end":11850082,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850087,"byte_end":11850090,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ * A location may refer to a repeated field itself (i.e. not to any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850095,"byte_end":11850165,"line_start":1022,"line_end":1022,"column_start":5,"column_end":75}},{"value":"/   particular index within it).  This is used whenever a set of elements are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850170,"byte_end":11850249,"line_start":1023,"line_end":1023,"column_start":5,"column_end":84}},{"value":"/   logically enclosed in a single code segment.  For example, an entire","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850254,"byte_end":11850328,"line_start":1024,"line_end":1024,"column_start":5,"column_end":79}},{"value":"/   extend block (possibly containing multiple extension definitions) will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850333,"byte_end":11850409,"line_start":1025,"line_end":1025,"column_start":5,"column_end":81}},{"value":"/   have an outer location whose path refers to the \"extensions\" repeated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850414,"byte_end":11850489,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/   field without an index.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850494,"byte_end":11850523,"line_start":1027,"line_end":1027,"column_start":5,"column_end":34}},{"value":"/ * Multiple locations may have the same path.  This happens when a single","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850528,"byte_end":11850604,"line_start":1028,"line_end":1028,"column_start":5,"column_end":81}},{"value":"/   logical declaration is spread out across multiple places.  The most","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850609,"byte_end":11850682,"line_start":1029,"line_end":1029,"column_start":5,"column_end":78}},{"value":"/   obvious example is the \"extend\" block again -- there may be multiple","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850687,"byte_end":11850761,"line_start":1030,"line_end":1030,"column_start":5,"column_end":79}},{"value":"/   extend blocks in the same scope, each of which will have the same path.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850766,"byte_end":11850843,"line_start":1031,"line_end":1031,"column_start":5,"column_end":82}},{"value":"/ * A location's span is not always a subset of its parent's span.  For","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850848,"byte_end":11850921,"line_start":1032,"line_end":1032,"column_start":5,"column_end":78}},{"value":"/   example, the \"extendee\" of an extension declaration appears at the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11850926,"byte_end":11850998,"line_start":1033,"line_end":1033,"column_start":5,"column_end":77}},{"value":"/   beginning of the \"extend\" block and is shared by all extensions within","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851003,"byte_end":11851079,"line_start":1034,"line_end":1034,"column_start":5,"column_end":81}},{"value":"/   the block.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851084,"byte_end":11851100,"line_start":1035,"line_end":1035,"column_start":5,"column_end":21}},{"value":"/ * Just because a location's span is a subset of some other location's span","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851105,"byte_end":11851183,"line_start":1036,"line_end":1036,"column_start":5,"column_end":83}},{"value":"/   does not mean that it is a descendant.  For example, a \"group\" defines","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851188,"byte_end":11851264,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}},{"value":"/   both a type and a field in a single declaration.  Thus, the locations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851269,"byte_end":11851344,"line_start":1038,"line_end":1038,"column_start":5,"column_end":80}},{"value":"/   corresponding to the type and field and their components will overlap.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851349,"byte_end":11851425,"line_start":1039,"line_end":1039,"column_start":5,"column_end":81}},{"value":"/ * Code which tries to interpret locations should probably be designed to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851430,"byte_end":11851506,"line_start":1040,"line_end":1040,"column_start":5,"column_end":81}},{"value":"/   ignore those that it doesn't understand, as more types of locations could","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851511,"byte_end":11851590,"line_start":1041,"line_end":1041,"column_start":5,"column_end":84}},{"value":"/   be recorded in the future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851595,"byte_end":11851627,"line_start":1042,"line_end":1042,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851632,"byte_end":11851670,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":421},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851808,"byte_end":11851824,"line_start":1047,"line_end":1047,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::protobuf::source_code_info","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2355}],"decl_id":null,"docs":" Nested message and enum types in `SourceCodeInfo`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `SourceCodeInfo`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851745,"byte_end":11851799,"line_start":1046,"line_end":1046,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851943,"byte_end":11851951,"line_start":1050,"line_end":1050,"column_start":16,"column_end":24},"name":"Location","qualname":"::protobuf::source_code_info::Location","value":"Location { path, span, leading_comments, trailing_comments, leading_detached_comments }","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851831,"byte_end":11851877,"line_start":1048,"line_end":1048,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853126,"byte_end":11853130,"line_start":1075,"line_end":1075,"column_start":13,"column_end":17},"name":"path","qualname":"::protobuf::source_code_info::Location::path","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" Identifies which part of the FileDescriptorProto was defined at this\n location.","sig":null,"attributes":[{"value":"/ Identifies which part of the FileDescriptorProto was defined at this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11851962,"byte_end":11852034,"line_start":1051,"line_end":1051,"column_start":9,"column_end":81}},{"value":"/ location.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852043,"byte_end":11852056,"line_start":1052,"line_end":1052,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852065,"byte_end":11852068,"line_start":1053,"line_end":1053,"column_start":9,"column_end":12}},{"value":"/ Each element is a field number or an index.  They form a path from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852077,"byte_end":11852147,"line_start":1054,"line_end":1054,"column_start":9,"column_end":79}},{"value":"/ the root FileDescriptorProto to the place where the definition.  For","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852156,"byte_end":11852228,"line_start":1055,"line_end":1055,"column_start":9,"column_end":81}},{"value":"/ example, this path:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852237,"byte_end":11852260,"line_start":1056,"line_end":1056,"column_start":9,"column_end":32}},{"value":"/ \\[ 4, 3, 2, 7, 1 \\]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852269,"byte_end":11852292,"line_start":1057,"line_end":1057,"column_start":9,"column_end":32}},{"value":"/ refers to:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852301,"byte_end":11852315,"line_start":1058,"line_end":1058,"column_start":9,"column_end":23}},{"value":"/ file.message_type(3)  // 4, 3","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852324,"byte_end":11852357,"line_start":1059,"line_end":1059,"column_start":9,"column_end":42}},{"value":"/ .field(7)         // 2, 7","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852366,"byte_end":11852395,"line_start":1060,"line_end":1060,"column_start":9,"column_end":38}},{"value":"/ .name()           // 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852404,"byte_end":11852430,"line_start":1061,"line_end":1061,"column_start":9,"column_end":35}},{"value":"/ This is because FileDescriptorProto.message_type has field number 4:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852439,"byte_end":11852511,"line_start":1062,"line_end":1062,"column_start":9,"column_end":81}},{"value":"/ repeated DescriptorProto message_type = 4;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852520,"byte_end":11852566,"line_start":1063,"line_end":1063,"column_start":9,"column_end":55}},{"value":"/ and DescriptorProto.field has field number 2:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852575,"byte_end":11852624,"line_start":1064,"line_end":1064,"column_start":9,"column_end":58}},{"value":"/ repeated FieldDescriptorProto field = 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852633,"byte_end":11852677,"line_start":1065,"line_end":1065,"column_start":9,"column_end":53}},{"value":"/ and FieldDescriptorProto.name has field number 1:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852686,"byte_end":11852739,"line_start":1066,"line_end":1066,"column_start":9,"column_end":62}},{"value":"/ optional string name = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852748,"byte_end":11852777,"line_start":1067,"line_end":1067,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852786,"byte_end":11852789,"line_start":1068,"line_end":1068,"column_start":9,"column_end":12}},{"value":"/ Thus, the above path gives the location of a field name.  If we removed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852798,"byte_end":11852873,"line_start":1069,"line_end":1069,"column_start":9,"column_end":84}},{"value":"/ the last element:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852882,"byte_end":11852903,"line_start":1070,"line_end":1070,"column_start":9,"column_end":30}},{"value":"/ \\[ 4, 3, 2, 7 \\]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852912,"byte_end":11852932,"line_start":1071,"line_end":1071,"column_start":9,"column_end":29}},{"value":"/ this path refers to the whole field declaration (from the beginning","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11852941,"byte_end":11853012,"line_start":1072,"line_end":1072,"column_start":9,"column_end":80}},{"value":"/ of the label to the terminating semicolon).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853021,"byte_end":11853068,"line_start":1073,"line_end":1073,"column_start":9,"column_end":56}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853077,"byte_end":11853113,"line_start":1074,"line_end":1074,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853596,"byte_end":11853600,"line_start":1082,"line_end":1082,"column_start":13,"column_end":17},"name":"span","qualname":"::protobuf::source_code_info::Location::span","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n","sig":null,"attributes":[{"value":"/ Always has exactly three or four elements: start line, start column,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853171,"byte_end":11853243,"line_start":1076,"line_end":1076,"column_start":9,"column_end":81}},{"value":"/ end line (optional, otherwise assumed same as start line), end column.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853252,"byte_end":11853326,"line_start":1077,"line_end":1077,"column_start":9,"column_end":83}},{"value":"/ These are packed into a single field for efficiency.  Note that line","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853335,"byte_end":11853407,"line_start":1078,"line_end":1078,"column_start":9,"column_end":81}},{"value":"/ and column numbers are zero-based -- typically you will want to add","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853416,"byte_end":11853487,"line_start":1079,"line_end":1079,"column_start":9,"column_end":80}},{"value":"/ 1 to each before displaying to a user.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853496,"byte_end":11853538,"line_start":1080,"line_end":1080,"column_start":9,"column_end":51}},{"value":"prost(int32, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853547,"byte_end":11853583,"line_start":1081,"line_end":1081,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855722,"byte_end":11855738,"line_start":1131,"line_end":1131,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"::protobuf::source_code_info::Location::leading_comments","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.","sig":null,"attributes":[{"value":"/ If this SourceCodeInfo represents a complete declaration, these are any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853641,"byte_end":11853716,"line_start":1083,"line_end":1083,"column_start":9,"column_end":84}},{"value":"/ comments appearing before and after the declaration which appear to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853725,"byte_end":11853799,"line_start":1084,"line_end":1084,"column_start":9,"column_end":83}},{"value":"/ attached to the declaration.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853808,"byte_end":11853840,"line_start":1085,"line_end":1085,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853849,"byte_end":11853852,"line_start":1086,"line_end":1086,"column_start":9,"column_end":12}},{"value":"/ A series of line comments appearing on consecutive lines, with no other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853861,"byte_end":11853936,"line_start":1087,"line_end":1087,"column_start":9,"column_end":84}},{"value":"/ tokens appearing on those lines, will be treated as a single comment.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11853945,"byte_end":11854018,"line_start":1088,"line_end":1088,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854027,"byte_end":11854030,"line_start":1089,"line_end":1089,"column_start":9,"column_end":12}},{"value":"/ leading_detached_comments will keep paragraphs of comments that appear","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854039,"byte_end":11854113,"line_start":1090,"line_end":1090,"column_start":9,"column_end":83}},{"value":"/ before (but not connected to) the current element. Each paragraph,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854122,"byte_end":11854192,"line_start":1091,"line_end":1091,"column_start":9,"column_end":79}},{"value":"/ separated by empty lines, will be one comment element in the repeated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854201,"byte_end":11854274,"line_start":1092,"line_end":1092,"column_start":9,"column_end":82}},{"value":"/ field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854283,"byte_end":11854293,"line_start":1093,"line_end":1093,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854302,"byte_end":11854305,"line_start":1094,"line_end":1094,"column_start":9,"column_end":12}},{"value":"/ Only the comment content is provided; comment markers (e.g. //) are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854314,"byte_end":11854385,"line_start":1095,"line_end":1095,"column_start":9,"column_end":80}},{"value":"/ stripped out.  For block comments, leading whitespace and an asterisk","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854394,"byte_end":11854467,"line_start":1096,"line_end":1096,"column_start":9,"column_end":82}},{"value":"/ will be stripped from the beginning of each line other than the first.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854476,"byte_end":11854550,"line_start":1097,"line_end":1097,"column_start":9,"column_end":83}},{"value":"/ Newlines are included in the output.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854559,"byte_end":11854599,"line_start":1098,"line_end":1098,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854608,"byte_end":11854611,"line_start":1099,"line_end":1099,"column_start":9,"column_end":12}},{"value":"/ Examples:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854620,"byte_end":11854633,"line_start":1100,"line_end":1100,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854642,"byte_end":11854645,"line_start":1101,"line_end":1101,"column_start":9,"column_end":12}},{"value":"/ optional int32 foo = 1;  // Comment attached to foo.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854654,"byte_end":11854710,"line_start":1102,"line_end":1102,"column_start":9,"column_end":65}},{"value":"/ // Comment attached to bar.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854719,"byte_end":11854750,"line_start":1103,"line_end":1103,"column_start":9,"column_end":40}},{"value":"/ optional int32 bar = 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854759,"byte_end":11854786,"line_start":1104,"line_end":1104,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854795,"byte_end":11854798,"line_start":1105,"line_end":1105,"column_start":9,"column_end":12}},{"value":"/ optional string baz = 3;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854807,"byte_end":11854835,"line_start":1106,"line_end":1106,"column_start":9,"column_end":37}},{"value":"/ // Comment attached to baz.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854844,"byte_end":11854875,"line_start":1107,"line_end":1107,"column_start":9,"column_end":40}},{"value":"/ // Another line attached to baz.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854884,"byte_end":11854920,"line_start":1108,"line_end":1108,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854929,"byte_end":11854932,"line_start":1109,"line_end":1109,"column_start":9,"column_end":12}},{"value":"/ // Comment attached to qux.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854941,"byte_end":11854972,"line_start":1110,"line_end":1110,"column_start":9,"column_end":40}},{"value":"/ //","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854981,"byte_end":11854987,"line_start":1111,"line_end":1111,"column_start":9,"column_end":15}},{"value":"/ // Another line attached to qux.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11854996,"byte_end":11855032,"line_start":1112,"line_end":1112,"column_start":9,"column_end":45}},{"value":"/ optional double qux = 4;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855041,"byte_end":11855069,"line_start":1113,"line_end":1113,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855078,"byte_end":11855081,"line_start":1114,"line_end":1114,"column_start":9,"column_end":12}},{"value":"/ // Detached comment for corge. This is not leading or trailing comments","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855090,"byte_end":11855165,"line_start":1115,"line_end":1115,"column_start":9,"column_end":84}},{"value":"/ // to qux or corge because there are blank lines separating it from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855174,"byte_end":11855245,"line_start":1116,"line_end":1116,"column_start":9,"column_end":80}},{"value":"/ // both.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855254,"byte_end":11855266,"line_start":1117,"line_end":1117,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855275,"byte_end":11855278,"line_start":1118,"line_end":1118,"column_start":9,"column_end":12}},{"value":"/ // Detached comment for corge paragraph 2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855287,"byte_end":11855333,"line_start":1119,"line_end":1119,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855342,"byte_end":11855345,"line_start":1120,"line_end":1120,"column_start":9,"column_end":12}},{"value":"/ optional string corge = 5;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855354,"byte_end":11855384,"line_start":1121,"line_end":1121,"column_start":9,"column_end":39}},{"value":"/ /\\* Block comment attached","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855393,"byte_end":11855423,"line_start":1122,"line_end":1122,"column_start":9,"column_end":39}},{"value":"/ \\* to corge.  Leading asterisks","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855432,"byte_end":11855467,"line_start":1123,"line_end":1123,"column_start":9,"column_end":44}},{"value":"/ \\* will be removed. */","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855476,"byte_end":11855502,"line_start":1124,"line_end":1124,"column_start":9,"column_end":35}},{"value":"/ /* Block comment attached to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855511,"byte_end":11855543,"line_start":1125,"line_end":1125,"column_start":9,"column_end":41}},{"value":"/ \\* grault. \\*/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855552,"byte_end":11855570,"line_start":1126,"line_end":1126,"column_start":9,"column_end":27}},{"value":"/ optional int32 grault = 6;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855579,"byte_end":11855609,"line_start":1127,"line_end":1127,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855618,"byte_end":11855621,"line_start":1128,"line_end":1128,"column_start":9,"column_end":12}},{"value":"/ // ignored detached comments.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855630,"byte_end":11855663,"line_start":1129,"line_end":1129,"column_start":9,"column_end":42}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855672,"byte_end":11855709,"line_start":1130,"line_end":1130,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855854,"byte_end":11855871,"line_start":1133,"line_end":1133,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"::protobuf::source_code_info::Location::trailing_comments","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855804,"byte_end":11855841,"line_start":1132,"line_end":1132,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855987,"byte_end":11856012,"line_start":1135,"line_end":1135,"column_start":13,"column_end":38},"name":"leading_detached_comments","qualname":"::protobuf::source_code_info::Location::leading_detached_comments","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, repeated, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855937,"byte_end":11855974,"line_start":1134,"line_end":1134,"column_start":9,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855722,"byte_end":11855738,"line_start":1131,"line_end":1131,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"<Location>::leading_comments","value":"fn leading_comments<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `leading_comments`, or the default value if `leading_comments` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11855854,"byte_end":11855871,"line_start":1133,"line_end":1133,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"<Location>::trailing_comments","value":"fn trailing_comments<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `trailing_comments`, or the default value if `trailing_comments` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856439,"byte_end":11856456,"line_start":1145,"line_end":1145,"column_start":12,"column_end":29},"name":"GeneratedCodeInfo","qualname":"::protobuf::GeneratedCodeInfo","value":"GeneratedCodeInfo { annotation }","parent":null,"children":[{"krate":0,"index":2383}],"decl_id":null,"docs":" Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n","sig":null,"attributes":[{"value":"/ Describes the relationship between generated code and its original source","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856103,"byte_end":11856180,"line_start":1140,"line_end":1140,"column_start":1,"column_end":78}},{"value":"/ file. A GeneratedCodeInfo message is associated with only one generated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856181,"byte_end":11856256,"line_start":1141,"line_end":1141,"column_start":1,"column_end":76}},{"value":"/ source file, but may contain references to different source .proto files.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856257,"byte_end":11856334,"line_start":1142,"line_end":1142,"column_start":1,"column_end":78}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856335,"byte_end":11856381,"line_start":1143,"line_end":1143,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856630,"byte_end":11856640,"line_start":1149,"line_end":1149,"column_start":9,"column_end":19},"name":"annotation","qualname":"::protobuf::GeneratedCodeInfo::annotation","value":"prost::alloc::vec::Vec<protobuf::generated_code_info::Annotation>","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":" An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n","sig":null,"attributes":[{"value":"/ An Annotation connects some span of text in generated code to an element","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856463,"byte_end":11856539,"line_start":1146,"line_end":1146,"column_start":5,"column_end":81}},{"value":"/ of its generating .proto file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856544,"byte_end":11856578,"line_start":1147,"line_end":1147,"column_start":5,"column_end":39}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856583,"byte_end":11856621,"line_start":1148,"line_end":1148,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856769,"byte_end":11856788,"line_start":1152,"line_end":1152,"column_start":9,"column_end":28},"name":"generated_code_info","qualname":"::protobuf::generated_code_info","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2391},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2446}],"decl_id":null,"docs":" Nested message and enum types in `GeneratedCodeInfo`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `GeneratedCodeInfo`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856703,"byte_end":11856760,"line_start":1151,"line_end":1151,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856907,"byte_end":11856917,"line_start":1155,"line_end":1155,"column_start":16,"column_end":26},"name":"Annotation","qualname":"::protobuf::generated_code_info::Annotation","value":"Annotation { path, source_file, begin, end }","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856795,"byte_end":11856841,"line_start":1153,"line_end":1153,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857126,"byte_end":11857130,"line_start":1159,"line_end":1159,"column_start":13,"column_end":17},"name":"path","qualname":"::protobuf::generated_code_info::Annotation::path","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":" Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n","sig":null,"attributes":[{"value":"/ Identifies the element in the original source .proto file. This field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11856928,"byte_end":11857001,"line_start":1156,"line_end":1156,"column_start":9,"column_end":82}},{"value":"/ is formatted the same as SourceCodeInfo.Location.path.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857010,"byte_end":11857068,"line_start":1157,"line_end":1157,"column_start":9,"column_end":67}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857077,"byte_end":11857113,"line_start":1158,"line_end":1158,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857295,"byte_end":11857306,"line_start":1162,"line_end":1162,"column_start":13,"column_end":24},"name":"source_file","qualname":"::protobuf::generated_code_info::Annotation::source_file","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":" Identifies the filesystem path to the original source .proto.\n","sig":null,"attributes":[{"value":"/ Identifies the filesystem path to the original source .proto.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857171,"byte_end":11857236,"line_start":1160,"line_end":1160,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857245,"byte_end":11857282,"line_start":1161,"line_end":1161,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857546,"byte_end":11857551,"line_start":1166,"line_end":1166,"column_start":13,"column_end":18},"name":"begin","qualname":"::protobuf::generated_code_info::Annotation::begin","value":"core::option::Option<i32>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":" Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n","sig":null,"attributes":[{"value":"/ Identifies the starting offset in bytes in the generated code","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857372,"byte_end":11857437,"line_start":1163,"line_end":1163,"column_start":9,"column_end":74}},{"value":"/ that relates to the identified object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857446,"byte_end":11857488,"line_start":1164,"line_end":1164,"column_start":9,"column_end":51}},{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857497,"byte_end":11857533,"line_start":1165,"line_end":1165,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857874,"byte_end":11857877,"line_start":1171,"line_end":1171,"column_start":13,"column_end":16},"name":"end","qualname":"::protobuf::generated_code_info::Annotation::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":" Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n","sig":null,"attributes":[{"value":"/ Identifies the ending offset in bytes in the generated code that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857590,"byte_end":11857658,"line_start":1167,"line_end":1167,"column_start":9,"column_end":77}},{"value":"/ relates to the identified offset. The end offset should be one past","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857667,"byte_end":11857738,"line_start":1168,"line_end":1168,"column_start":9,"column_end":80}},{"value":"/ the last relevant byte (so the length of the text = end - begin).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857747,"byte_end":11857816,"line_start":1169,"line_end":1169,"column_start":9,"column_end":78}},{"value":"prost(int32, optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857825,"byte_end":11857861,"line_start":1170,"line_end":1170,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857295,"byte_end":11857306,"line_start":1162,"line_end":1162,"column_start":13,"column_end":24},"name":"source_file","qualname":"<Annotation>::source_file","value":"fn source_file<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `source_file`, or the default value if `source_file` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857546,"byte_end":11857551,"line_start":1166,"line_end":1166,"column_start":13,"column_end":18},"name":"begin","qualname":"<Annotation>::begin","value":"fn begin<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `begin`, or the default value if `begin` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857874,"byte_end":11857877,"line_start":1171,"line_end":1171,"column_start":13,"column_end":16},"name":"end","qualname":"<Annotation>::end","value":"fn end<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860386,"byte_end":11860389,"line_start":1269,"line_end":1269,"column_start":12,"column_end":15},"name":"Any","qualname":"::protobuf::Any","value":"Any { type_url, value }","parent":null,"children":[{"krate":0,"index":2479},{"krate":0,"index":2480}],"decl_id":null,"docs":" `Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.","sig":null,"attributes":[{"value":"/ `Any` contains an arbitrary serialized protocol buffer message along with a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857916,"byte_end":11857995,"line_start":1174,"line_end":1174,"column_start":1,"column_end":80}},{"value":"/ URL that describes the type of the serialized message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11857996,"byte_end":11858054,"line_start":1175,"line_end":1175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858055,"byte_end":11858058,"line_start":1176,"line_end":1176,"column_start":1,"column_end":4}},{"value":"/ Protobuf library provides support to pack/unpack Any values in the form","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858059,"byte_end":11858134,"line_start":1177,"line_end":1177,"column_start":1,"column_end":76}},{"value":"/ of utility functions or additional generated methods of the Any type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858135,"byte_end":11858208,"line_start":1178,"line_end":1178,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858209,"byte_end":11858212,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ Example 1: Pack and unpack a message in C++.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858213,"byte_end":11858261,"line_start":1180,"line_end":1180,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858262,"byte_end":11858265,"line_start":1181,"line_end":1181,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858266,"byte_end":11858277,"line_start":1182,"line_end":1182,"column_start":1,"column_end":12}},{"value":"/ Foo foo = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858278,"byte_end":11858296,"line_start":1183,"line_end":1183,"column_start":1,"column_end":19}},{"value":"/ Any any;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858297,"byte_end":11858309,"line_start":1184,"line_end":1184,"column_start":1,"column_end":13}},{"value":"/ any.PackFrom(foo);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858310,"byte_end":11858332,"line_start":1185,"line_end":1185,"column_start":1,"column_end":23}},{"value":"/ ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858333,"byte_end":11858340,"line_start":1186,"line_end":1186,"column_start":1,"column_end":8}},{"value":"/ if (any.UnpackTo(&foo)) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858341,"byte_end":11858370,"line_start":1187,"line_end":1187,"column_start":1,"column_end":30}},{"value":"/    ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858371,"byte_end":11858381,"line_start":1188,"line_end":1188,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858382,"byte_end":11858387,"line_start":1189,"line_end":1189,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858388,"byte_end":11858395,"line_start":1190,"line_end":1190,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858396,"byte_end":11858399,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ Example 2: Pack and unpack a message in Java.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858400,"byte_end":11858449,"line_start":1192,"line_end":1192,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858450,"byte_end":11858453,"line_start":1193,"line_end":1193,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858454,"byte_end":11858465,"line_start":1194,"line_end":1194,"column_start":1,"column_end":12}},{"value":"/ Foo foo = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858466,"byte_end":11858484,"line_start":1195,"line_end":1195,"column_start":1,"column_end":19}},{"value":"/ Any any = Any.pack(foo);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858485,"byte_end":11858513,"line_start":1196,"line_end":1196,"column_start":1,"column_end":29}},{"value":"/ ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858514,"byte_end":11858521,"line_start":1197,"line_end":1197,"column_start":1,"column_end":8}},{"value":"/ if (any.is(Foo.class)) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858522,"byte_end":11858550,"line_start":1198,"line_end":1198,"column_start":1,"column_end":29}},{"value":"/    foo = any.unpack(Foo.class);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858551,"byte_end":11858586,"line_start":1199,"line_end":1199,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858587,"byte_end":11858592,"line_start":1200,"line_end":1200,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858593,"byte_end":11858600,"line_start":1201,"line_end":1201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858601,"byte_end":11858604,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ Example 3: Pack and unpack a message in Python.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858605,"byte_end":11858656,"line_start":1203,"line_end":1203,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858657,"byte_end":11858660,"line_start":1204,"line_end":1204,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858661,"byte_end":11858672,"line_start":1205,"line_end":1205,"column_start":1,"column_end":12}},{"value":"/ foo = Foo(...)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858673,"byte_end":11858691,"line_start":1206,"line_end":1206,"column_start":1,"column_end":19}},{"value":"/ any = Any()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858692,"byte_end":11858707,"line_start":1207,"line_end":1207,"column_start":1,"column_end":16}},{"value":"/ any.Pack(foo)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858708,"byte_end":11858725,"line_start":1208,"line_end":1208,"column_start":1,"column_end":18}},{"value":"/ ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858726,"byte_end":11858733,"line_start":1209,"line_end":1209,"column_start":1,"column_end":8}},{"value":"/ if any.Is(Foo.DESCRIPTOR):","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858734,"byte_end":11858764,"line_start":1210,"line_end":1210,"column_start":1,"column_end":31}},{"value":"/    any.Unpack(foo)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858765,"byte_end":11858787,"line_start":1211,"line_end":1211,"column_start":1,"column_end":23}},{"value":"/    ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858788,"byte_end":11858798,"line_start":1212,"line_end":1212,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858799,"byte_end":11858806,"line_start":1213,"line_end":1213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858807,"byte_end":11858810,"line_start":1214,"line_end":1214,"column_start":1,"column_end":4}},{"value":"/ Example 4: Pack and unpack a message in Go","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858811,"byte_end":11858857,"line_start":1215,"line_end":1215,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858858,"byte_end":11858861,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858862,"byte_end":11858873,"line_start":1217,"line_end":1217,"column_start":1,"column_end":12}},{"value":"/   foo := &pb.Foo{...}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858874,"byte_end":11858899,"line_start":1218,"line_end":1218,"column_start":1,"column_end":26}},{"value":"/   any, err := anypb.New(foo)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858900,"byte_end":11858932,"line_start":1219,"line_end":1219,"column_start":1,"column_end":33}},{"value":"/   if err != nil {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858933,"byte_end":11858954,"line_start":1220,"line_end":1220,"column_start":1,"column_end":22}},{"value":"/     ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858955,"byte_end":11858966,"line_start":1221,"line_end":1221,"column_start":1,"column_end":12}},{"value":"/   }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858967,"byte_end":11858974,"line_start":1222,"line_end":1222,"column_start":1,"column_end":8}},{"value":"/   ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858975,"byte_end":11858984,"line_start":1223,"line_end":1223,"column_start":1,"column_end":10}},{"value":"/   foo := &pb.Foo{}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11858985,"byte_end":11859007,"line_start":1224,"line_end":1224,"column_start":1,"column_end":23}},{"value":"/   if err := any.UnmarshalTo(foo); err != nil {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859008,"byte_end":11859058,"line_start":1225,"line_end":1225,"column_start":1,"column_end":51}},{"value":"/     ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859059,"byte_end":11859070,"line_start":1226,"line_end":1226,"column_start":1,"column_end":12}},{"value":"/   }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859071,"byte_end":11859078,"line_start":1227,"line_end":1227,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859079,"byte_end":11859086,"line_start":1228,"line_end":1228,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859087,"byte_end":11859090,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ The pack methods provided by protobuf library will by default use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859091,"byte_end":11859160,"line_start":1230,"line_end":1230,"column_start":1,"column_end":70}},{"value":"/ 'type.googleapis.com/full.type.name' as the type URL and the unpack","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859161,"byte_end":11859232,"line_start":1231,"line_end":1231,"column_start":1,"column_end":72}},{"value":"/ methods only use the fully qualified type name after the last '/'","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859233,"byte_end":11859302,"line_start":1232,"line_end":1232,"column_start":1,"column_end":70}},{"value":"/ in the type URL, for example \"foo.bar.com/x/y.z\" will yield type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859303,"byte_end":11859371,"line_start":1233,"line_end":1233,"column_start":1,"column_end":69}},{"value":"/ name \"y.z\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859372,"byte_end":11859387,"line_start":1234,"line_end":1234,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859388,"byte_end":11859391,"line_start":1235,"line_end":1235,"column_start":1,"column_end":4}},{"value":"/ # JSON","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859392,"byte_end":11859402,"line_start":1236,"line_end":1236,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859403,"byte_end":11859406,"line_start":1237,"line_end":1237,"column_start":1,"column_end":4}},{"value":"/ The JSON representation of an `Any` value uses the regular","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859407,"byte_end":11859469,"line_start":1238,"line_end":1238,"column_start":1,"column_end":63}},{"value":"/ representation of the deserialized, embedded message, with an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859470,"byte_end":11859535,"line_start":1239,"line_end":1239,"column_start":1,"column_end":66}},{"value":"/ additional field `@type` which contains the type URL. Example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859536,"byte_end":11859602,"line_start":1240,"line_end":1240,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859603,"byte_end":11859606,"line_start":1241,"line_end":1241,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859607,"byte_end":11859618,"line_start":1242,"line_end":1242,"column_start":1,"column_end":12}},{"value":"/ package google.profile;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859619,"byte_end":11859646,"line_start":1243,"line_end":1243,"column_start":1,"column_end":28}},{"value":"/ message Person {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859647,"byte_end":11859667,"line_start":1244,"line_end":1244,"column_start":1,"column_end":21}},{"value":"/    string first_name = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859668,"byte_end":11859697,"line_start":1245,"line_end":1245,"column_start":1,"column_end":30}},{"value":"/    string last_name = 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859698,"byte_end":11859726,"line_start":1246,"line_end":1246,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859727,"byte_end":11859732,"line_start":1247,"line_end":1247,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859733,"byte_end":11859736,"line_start":1248,"line_end":1248,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859737,"byte_end":11859742,"line_start":1249,"line_end":1249,"column_start":1,"column_end":6}},{"value":"/    \"@type\": \"type.googleapis.com/google.profile.Person\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859743,"byte_end":11859803,"line_start":1250,"line_end":1250,"column_start":1,"column_end":61}},{"value":"/    \"firstName\": <string>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859804,"byte_end":11859833,"line_start":1251,"line_end":1251,"column_start":1,"column_end":30}},{"value":"/    \"lastName\": <string>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859834,"byte_end":11859861,"line_start":1252,"line_end":1252,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859862,"byte_end":11859867,"line_start":1253,"line_end":1253,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859868,"byte_end":11859875,"line_start":1254,"line_end":1254,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859876,"byte_end":11859879,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ If the embedded message type is well-known and has a custom JSON","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859880,"byte_end":11859948,"line_start":1256,"line_end":1256,"column_start":1,"column_end":69}},{"value":"/ representation, that representation will be embedded adding a field","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11859949,"byte_end":11860020,"line_start":1257,"line_end":1257,"column_start":1,"column_end":72}},{"value":"/ `value` which holds the custom JSON in addition to the `@type`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860021,"byte_end":11860087,"line_start":1258,"line_end":1258,"column_start":1,"column_end":67}},{"value":"/ field. Example (for message \\\\[google.protobuf.Duration\\]\\[\\\\]):","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860088,"byte_end":11860156,"line_start":1259,"line_end":1259,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860157,"byte_end":11860160,"line_start":1260,"line_end":1260,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860161,"byte_end":11860172,"line_start":1261,"line_end":1261,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860173,"byte_end":11860178,"line_start":1262,"line_end":1262,"column_start":1,"column_end":6}},{"value":"/    \"@type\": \"type.googleapis.com/google.protobuf.Duration\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860179,"byte_end":11860242,"line_start":1263,"line_end":1263,"column_start":1,"column_end":64}},{"value":"/    \"value\": \"1.212s\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860243,"byte_end":11860267,"line_start":1264,"line_end":1264,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860268,"byte_end":11860273,"line_start":1265,"line_end":1265,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860274,"byte_end":11860281,"line_start":1266,"line_end":1266,"column_start":1,"column_end":8}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860282,"byte_end":11860328,"line_start":1267,"line_end":1267,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861978,"byte_end":11861986,"line_start":1298,"line_end":1298,"column_start":9,"column_end":17},"name":"type_url","qualname":"::protobuf::Any::type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2454},"children":[],"decl_id":null,"docs":" A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).","sig":null,"attributes":[{"value":"/ A URL/resource name that uniquely identifies the type of the serialized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860396,"byte_end":11860471,"line_start":1270,"line_end":1270,"column_start":5,"column_end":80}},{"value":"/ protocol buffer message. This string must contain at least","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860476,"byte_end":11860538,"line_start":1271,"line_end":1271,"column_start":5,"column_end":67}},{"value":"/ one \"/\" character. The last segment of the URL's path must represent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860543,"byte_end":11860615,"line_start":1272,"line_end":1272,"column_start":5,"column_end":77}},{"value":"/ the fully qualified name of the type (as in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860620,"byte_end":11860667,"line_start":1273,"line_end":1273,"column_start":5,"column_end":52}},{"value":"/ `path/google.protobuf.Duration`). The name should be in a canonical form","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860672,"byte_end":11860748,"line_start":1274,"line_end":1274,"column_start":5,"column_end":81}},{"value":"/ (e.g., leading \".\" is not accepted).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860753,"byte_end":11860793,"line_start":1275,"line_end":1275,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860798,"byte_end":11860801,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ In practice, teams usually precompile into the binary all types that they","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860806,"byte_end":11860883,"line_start":1277,"line_end":1277,"column_start":5,"column_end":82}},{"value":"/ expect it to use in the context of Any. However, for URLs which use the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860888,"byte_end":11860963,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ scheme `http`, `https`, or no scheme, one can optionally set up a type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11860968,"byte_end":11861042,"line_start":1279,"line_end":1279,"column_start":5,"column_end":79}},{"value":"/ server that maps type URLs to message definitions as follows:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861047,"byte_end":11861112,"line_start":1280,"line_end":1280,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861117,"byte_end":11861120,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ * If no scheme is provided, `https` is assumed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861125,"byte_end":11861176,"line_start":1282,"line_end":1282,"column_start":5,"column_end":56}},{"value":"/ * An HTTP GET on the URL must yield a \\\\[google.protobuf.Type\\]\\[\\\\]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861181,"byte_end":11861253,"line_start":1283,"line_end":1283,"column_start":5,"column_end":77}},{"value":"/   value in binary format, or produce an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861258,"byte_end":11861308,"line_start":1284,"line_end":1284,"column_start":5,"column_end":55}},{"value":"/ * Applications are allowed to cache lookup results based on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861313,"byte_end":11861380,"line_start":1285,"line_end":1285,"column_start":5,"column_end":72}},{"value":"/   URL, or have them precompiled into a binary to avoid any","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861385,"byte_end":11861447,"line_start":1286,"line_end":1286,"column_start":5,"column_end":67}},{"value":"/   lookup. Therefore, binary compatibility needs to be preserved","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861452,"byte_end":11861519,"line_start":1287,"line_end":1287,"column_start":5,"column_end":72}},{"value":"/   on changes to types. (Use versioned type names to manage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861524,"byte_end":11861586,"line_start":1288,"line_end":1288,"column_start":5,"column_end":67}},{"value":"/   breaking changes.)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861591,"byte_end":11861615,"line_start":1289,"line_end":1289,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861620,"byte_end":11861623,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ Note: this functionality is not currently available in the official","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861628,"byte_end":11861699,"line_start":1291,"line_end":1291,"column_start":5,"column_end":76}},{"value":"/ protobuf release, and it is not used for type URLs beginning with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861704,"byte_end":11861773,"line_start":1292,"line_end":1292,"column_start":5,"column_end":74}},{"value":"/ type.googleapis.com.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861778,"byte_end":11861802,"line_start":1293,"line_end":1293,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861807,"byte_end":11861810,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ Schemes other than `http`, `https` (or the empty scheme) might be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861815,"byte_end":11861884,"line_start":1295,"line_end":1295,"column_start":5,"column_end":74}},{"value":"/ used with implementation specific semantics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861889,"byte_end":11861937,"line_start":1296,"line_end":1296,"column_start":5,"column_end":53}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11861942,"byte_end":11861969,"line_start":1297,"line_end":1297,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862147,"byte_end":11862152,"line_start":1301,"line_end":1301,"column_start":9,"column_end":14},"name":"value","qualname":"::protobuf::Any::value","value":"prost::alloc::vec::Vec<u8>","parent":{"krate":0,"index":2454},"children":[],"decl_id":null,"docs":" Must be a valid serialized protocol buffer of the above specified type.\n","sig":null,"attributes":[{"value":"/ Must be a valid serialized protocol buffer of the above specified type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862024,"byte_end":11862099,"line_start":1299,"line_end":1299,"column_start":5,"column_end":80}},{"value":"prost(bytes = \"vec\", tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862104,"byte_end":11862138,"line_start":1300,"line_end":1300,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862415,"byte_end":11862428,"line_start":1307,"line_end":1307,"column_start":12,"column_end":25},"name":"SourceContext","qualname":"::protobuf::SourceContext","value":"SourceContext { file_name }","parent":null,"children":[{"krate":0,"index":2503}],"decl_id":null,"docs":" `SourceContext` represents information about the source of a\n protobuf element, like the file in which it is defined.\n","sig":null,"attributes":[{"value":"/ `SourceContext` represents information about the source of a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862186,"byte_end":11862250,"line_start":1303,"line_end":1303,"column_start":1,"column_end":65}},{"value":"/ protobuf element, like the file in which it is defined.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862251,"byte_end":11862310,"line_start":1304,"line_end":1304,"column_start":1,"column_end":60}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862311,"byte_end":11862357,"line_start":1305,"line_end":1305,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862634,"byte_end":11862643,"line_start":1311,"line_end":1311,"column_start":9,"column_end":18},"name":"file_name","qualname":"::protobuf::SourceContext::file_name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":" The path-qualified name of the .proto file that contained the associated\n protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n","sig":null,"attributes":[{"value":"/ The path-qualified name of the .proto file that contained the associated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862435,"byte_end":11862511,"line_start":1308,"line_end":1308,"column_start":5,"column_end":81}},{"value":"/ protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862516,"byte_end":11862593,"line_start":1309,"line_end":1309,"column_start":5,"column_end":82}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862598,"byte_end":11862625,"line_start":1310,"line_end":1310,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862819,"byte_end":11862823,"line_start":1316,"line_end":1316,"column_start":12,"column_end":16},"name":"Type","qualname":"::protobuf::Type","value":"Type { name, fields, oneofs, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556}],"decl_id":null,"docs":" A protocol buffer message type.\n","sig":null,"attributes":[{"value":"/ A protocol buffer message type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862679,"byte_end":11862714,"line_start":1313,"line_end":1313,"column_start":1,"column_end":36}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862715,"byte_end":11862761,"line_start":1314,"line_end":1314,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862908,"byte_end":11862912,"line_start":1319,"line_end":1319,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Type::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":" The fully qualified message name.\n","sig":null,"attributes":[{"value":"/ The fully qualified message name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862830,"byte_end":11862867,"line_start":1317,"line_end":1317,"column_start":5,"column_end":42}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862872,"byte_end":11862899,"line_start":1318,"line_end":1318,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863025,"byte_end":11863031,"line_start":1322,"line_end":1322,"column_start":9,"column_end":15},"name":"fields","qualname":"::protobuf::Type::fields","value":"prost::alloc::vec::Vec<protobuf::Field>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":" The list of fields.\n","sig":null,"attributes":[{"value":"/ The list of fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862950,"byte_end":11862973,"line_start":1320,"line_end":1320,"column_start":5,"column_end":28}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11862978,"byte_end":11863016,"line_start":1321,"line_end":1321,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863189,"byte_end":11863195,"line_start":1325,"line_end":1325,"column_start":9,"column_end":15},"name":"oneofs","qualname":"::protobuf::Type::oneofs","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":" The list of types appearing in `oneof` definitions in this type.\n","sig":null,"attributes":[{"value":"/ The list of types appearing in `oneof` definitions in this type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863070,"byte_end":11863138,"line_start":1323,"line_end":1323,"column_start":5,"column_end":73}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863143,"byte_end":11863180,"line_start":1324,"line_end":1324,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863343,"byte_end":11863350,"line_start":1328,"line_end":1328,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::Type::options","value":"prost::alloc::vec::Vec<protobuf::Option>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863259,"byte_end":11863291,"line_start":1326,"line_end":1326,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863296,"byte_end":11863334,"line_start":1327,"line_end":1327,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863465,"byte_end":11863479,"line_start":1331,"line_end":1331,"column_start":9,"column_end":23},"name":"source_context","qualname":"::protobuf::Type::source_context","value":"core::option::Option<protobuf::SourceContext>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863390,"byte_end":11863413,"line_start":1329,"line_end":1329,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863418,"byte_end":11863456,"line_start":1330,"line_end":1330,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863603,"byte_end":11863609,"line_start":1334,"line_end":1334,"column_start":9,"column_end":15},"name":"syntax","qualname":"::protobuf::Type::syntax","value":"i32","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863524,"byte_end":11863546,"line_start":1332,"line_end":1332,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863551,"byte_end":11863594,"line_start":1333,"line_end":1333,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863603,"byte_end":11863609,"line_start":1334,"line_end":1334,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Type>::syntax","value":"fn syntax<'_>(&'_ Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863760,"byte_end":11863765,"line_start":1339,"line_end":1339,"column_start":12,"column_end":17},"name":"Field","qualname":"::protobuf::Field","value":"Field { kind, cardinality, number, name, type_url, oneof_index, packed, options, json_name, default_value }","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628}],"decl_id":null,"docs":" A single field of a message type.\n","sig":null,"attributes":[{"value":"/ A single field of a message type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863618,"byte_end":11863655,"line_start":1336,"line_end":1336,"column_start":1,"column_end":38}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863656,"byte_end":11863702,"line_start":1337,"line_end":1337,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863853,"byte_end":11863857,"line_start":1342,"line_end":1342,"column_start":9,"column_end":13},"name":"kind","qualname":"::protobuf::Field::kind","value":"i32","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The field type.\n","sig":null,"attributes":[{"value":"/ The field type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863772,"byte_end":11863791,"line_start":1340,"line_end":1340,"column_start":5,"column_end":24}},{"value":"prost(enumeration = \"field::Kind\", tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863796,"byte_end":11863844,"line_start":1341,"line_end":1341,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863963,"byte_end":11863974,"line_start":1345,"line_end":1345,"column_start":9,"column_end":20},"name":"cardinality","qualname":"::protobuf::Field::cardinality","value":"i32","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The field cardinality.\n","sig":null,"attributes":[{"value":"/ The field cardinality.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863868,"byte_end":11863894,"line_start":1343,"line_end":1343,"column_start":5,"column_end":31}},{"value":"prost(enumeration = \"field::Cardinality\", tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863899,"byte_end":11863954,"line_start":1344,"line_end":1344,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864046,"byte_end":11864052,"line_start":1348,"line_end":1348,"column_start":9,"column_end":15},"name":"number","qualname":"::protobuf::Field::number","value":"i32","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The field number.\n","sig":null,"attributes":[{"value":"/ The field number.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863985,"byte_end":11864006,"line_start":1346,"line_end":1346,"column_start":5,"column_end":26}},{"value":"prost(int32, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864011,"byte_end":11864037,"line_start":1347,"line_end":1347,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864123,"byte_end":11864127,"line_start":1351,"line_end":1351,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Field::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The field name.\n","sig":null,"attributes":[{"value":"/ The field name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864063,"byte_end":11864082,"line_start":1349,"line_end":1349,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864087,"byte_end":11864114,"line_start":1350,"line_end":1350,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864351,"byte_end":11864359,"line_start":1355,"line_end":1355,"column_start":9,"column_end":17},"name":"type_url","qualname":"::protobuf::Field::type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The field type URL, without the scheme, for message or enumeration\n types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n","sig":null,"attributes":[{"value":"/ The field type URL, without the scheme, for message or enumeration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864165,"byte_end":11864235,"line_start":1352,"line_end":1352,"column_start":5,"column_end":75}},{"value":"/ types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864240,"byte_end":11864310,"line_start":1353,"line_end":1353,"column_start":5,"column_end":75}},{"value":"prost(string, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864315,"byte_end":11864342,"line_start":1354,"line_end":1354,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864596,"byte_end":11864607,"line_start":1359,"line_end":1359,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::protobuf::Field::oneof_index","value":"i32","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The index of the field type in `Type.oneofs`, for message or enumeration\n types. The first type has index 1; zero means the type is not in the list.\n","sig":null,"attributes":[{"value":"/ The index of the field type in `Type.oneofs`, for message or enumeration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864397,"byte_end":11864473,"line_start":1356,"line_end":1356,"column_start":5,"column_end":81}},{"value":"/ types. The first type has index 1; zero means the type is not in the list.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864478,"byte_end":11864556,"line_start":1357,"line_end":1357,"column_start":5,"column_end":83}},{"value":"prost(int32, tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864561,"byte_end":11864587,"line_start":1358,"line_end":1358,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864715,"byte_end":11864721,"line_start":1362,"line_end":1362,"column_start":9,"column_end":15},"name":"packed","qualname":"::protobuf::Field::packed","value":"bool","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" Whether to use alternative packed wire representation.\n","sig":null,"attributes":[{"value":"/ Whether to use alternative packed wire representation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864618,"byte_end":11864676,"line_start":1360,"line_end":1360,"column_start":5,"column_end":63}},{"value":"prost(bool, tag = \"8\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864681,"byte_end":11864706,"line_start":1361,"line_end":1361,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864817,"byte_end":11864824,"line_start":1365,"line_end":1365,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::Field::options","value":"prost::alloc::vec::Vec<protobuf::Option>","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864733,"byte_end":11864765,"line_start":1363,"line_end":1363,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864770,"byte_end":11864808,"line_start":1364,"line_end":1364,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864930,"byte_end":11864939,"line_start":1368,"line_end":1368,"column_start":9,"column_end":18},"name":"json_name","qualname":"::protobuf::Field::json_name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The field JSON name.\n","sig":null,"attributes":[{"value":"/ The field JSON name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864864,"byte_end":11864888,"line_start":1366,"line_end":1366,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"10\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864893,"byte_end":11864921,"line_start":1367,"line_end":1367,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865095,"byte_end":11865108,"line_start":1371,"line_end":1371,"column_start":9,"column_end":22},"name":"default_value","qualname":"::protobuf::Field::default_value","value":"prost::alloc::string::String","parent":{"krate":0,"index":2557},"children":[],"decl_id":null,"docs":" The string value of the default value of this field. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ The string value of the default value of this field. Proto2 syntax only.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11864977,"byte_end":11865053,"line_start":1369,"line_end":1369,"column_start":5,"column_end":81}},{"value":"prost(string, tag = \"11\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865058,"byte_end":11865086,"line_start":1370,"line_end":1370,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863853,"byte_end":11863857,"line_start":1342,"line_end":1342,"column_start":9,"column_end":13},"name":"kind","qualname":"<Field>::kind","value":"fn kind<'_>(&'_ Self) -> field::Kind","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `kind`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11863963,"byte_end":11863974,"line_start":1345,"line_end":1345,"column_start":9,"column_end":20},"name":"cardinality","qualname":"<Field>::cardinality","value":"fn cardinality<'_>(&'_ Self) -> field::Cardinality","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `cardinality`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":423},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865198,"byte_end":11865203,"line_start":1374,"line_end":1374,"column_start":9,"column_end":14},"name":"field","qualname":"::protobuf::field","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2629},{"krate":0,"index":2687},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":424},{"krate":0,"index":2712},{"krate":0,"index":2725},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":427}],"decl_id":null,"docs":" Nested message and enum types in `Field`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `Field`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865144,"byte_end":11865189,"line_start":1373,"line_end":1373,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865482,"byte_end":11865493,"line_start":1390,"line_end":1390,"column_start":9,"column_end":20},"name":"TypeUnknown","qualname":"::protobuf::field::Kind::TypeUnknown","value":"Kind::TypeUnknown","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type unknown.\n","sig":null,"attributes":[{"value":"/ Field type unknown.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865450,"byte_end":11865473,"line_start":1389,"line_end":1389,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865538,"byte_end":11865548,"line_start":1392,"line_end":1392,"column_start":9,"column_end":19},"name":"TypeDouble","qualname":"::protobuf::field::Kind::TypeDouble","value":"Kind::TypeDouble","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type double.\n","sig":null,"attributes":[{"value":"/ Field type double.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865507,"byte_end":11865529,"line_start":1391,"line_end":1391,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865592,"byte_end":11865601,"line_start":1394,"line_end":1394,"column_start":9,"column_end":18},"name":"TypeFloat","qualname":"::protobuf::field::Kind::TypeFloat","value":"Kind::TypeFloat","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type float.\n","sig":null,"attributes":[{"value":"/ Field type float.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865562,"byte_end":11865583,"line_start":1393,"line_end":1393,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865645,"byte_end":11865654,"line_start":1396,"line_end":1396,"column_start":9,"column_end":18},"name":"TypeInt64","qualname":"::protobuf::field::Kind::TypeInt64","value":"Kind::TypeInt64","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type int64.\n","sig":null,"attributes":[{"value":"/ Field type int64.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865615,"byte_end":11865636,"line_start":1395,"line_end":1395,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865699,"byte_end":11865709,"line_start":1398,"line_end":1398,"column_start":9,"column_end":19},"name":"TypeUint64","qualname":"::protobuf::field::Kind::TypeUint64","value":"Kind::TypeUint64","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type uint64.\n","sig":null,"attributes":[{"value":"/ Field type uint64.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865668,"byte_end":11865690,"line_start":1397,"line_end":1397,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2645},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865753,"byte_end":11865762,"line_start":1400,"line_end":1400,"column_start":9,"column_end":18},"name":"TypeInt32","qualname":"::protobuf::field::Kind::TypeInt32","value":"Kind::TypeInt32","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type int32.\n","sig":null,"attributes":[{"value":"/ Field type int32.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865723,"byte_end":11865744,"line_start":1399,"line_end":1399,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865808,"byte_end":11865819,"line_start":1402,"line_end":1402,"column_start":9,"column_end":20},"name":"TypeFixed64","qualname":"::protobuf::field::Kind::TypeFixed64","value":"Kind::TypeFixed64","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type fixed64.\n","sig":null,"attributes":[{"value":"/ Field type fixed64.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865776,"byte_end":11865799,"line_start":1401,"line_end":1401,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865865,"byte_end":11865876,"line_start":1404,"line_end":1404,"column_start":9,"column_end":20},"name":"TypeFixed32","qualname":"::protobuf::field::Kind::TypeFixed32","value":"Kind::TypeFixed32","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type fixed32.\n","sig":null,"attributes":[{"value":"/ Field type fixed32.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865833,"byte_end":11865856,"line_start":1403,"line_end":1403,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865919,"byte_end":11865927,"line_start":1406,"line_end":1406,"column_start":9,"column_end":17},"name":"TypeBool","qualname":"::protobuf::field::Kind::TypeBool","value":"Kind::TypeBool","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type bool.\n","sig":null,"attributes":[{"value":"/ Field type bool.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865890,"byte_end":11865910,"line_start":1405,"line_end":1405,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865972,"byte_end":11865982,"line_start":1408,"line_end":1408,"column_start":9,"column_end":19},"name":"TypeString","qualname":"::protobuf::field::Kind::TypeString","value":"Kind::TypeString","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type string.\n","sig":null,"attributes":[{"value":"/ Field type string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865941,"byte_end":11865963,"line_start":1407,"line_end":1407,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2660},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866062,"byte_end":11866071,"line_start":1410,"line_end":1410,"column_start":9,"column_end":18},"name":"TypeGroup","qualname":"::protobuf::field::Kind::TypeGroup","value":"Kind::TypeGroup","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type group. Proto2 syntax only, and deprecated.\n","sig":null,"attributes":[{"value":"/ Field type group. Proto2 syntax only, and deprecated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865996,"byte_end":11866053,"line_start":1409,"line_end":1409,"column_start":9,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2663},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866118,"byte_end":11866129,"line_start":1412,"line_end":1412,"column_start":9,"column_end":20},"name":"TypeMessage","qualname":"::protobuf::field::Kind::TypeMessage","value":"Kind::TypeMessage","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type message.\n","sig":null,"attributes":[{"value":"/ Field type message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866086,"byte_end":11866109,"line_start":1411,"line_end":1411,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866174,"byte_end":11866183,"line_start":1414,"line_end":1414,"column_start":9,"column_end":18},"name":"TypeBytes","qualname":"::protobuf::field::Kind::TypeBytes","value":"Kind::TypeBytes","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type bytes.\n","sig":null,"attributes":[{"value":"/ Field type bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866144,"byte_end":11866165,"line_start":1413,"line_end":1413,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866229,"byte_end":11866239,"line_start":1416,"line_end":1416,"column_start":9,"column_end":19},"name":"TypeUint32","qualname":"::protobuf::field::Kind::TypeUint32","value":"Kind::TypeUint32","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type uint32.\n","sig":null,"attributes":[{"value":"/ Field type uint32.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866198,"byte_end":11866220,"line_start":1415,"line_end":1415,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866283,"byte_end":11866291,"line_start":1418,"line_end":1418,"column_start":9,"column_end":17},"name":"TypeEnum","qualname":"::protobuf::field::Kind::TypeEnum","value":"Kind::TypeEnum","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type enum.\n","sig":null,"attributes":[{"value":"/ Field type enum.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866254,"byte_end":11866274,"line_start":1417,"line_end":1417,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866339,"byte_end":11866351,"line_start":1420,"line_end":1420,"column_start":9,"column_end":21},"name":"TypeSfixed32","qualname":"::protobuf::field::Kind::TypeSfixed32","value":"Kind::TypeSfixed32","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type sfixed32.\n","sig":null,"attributes":[{"value":"/ Field type sfixed32.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866306,"byte_end":11866330,"line_start":1419,"line_end":1419,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866399,"byte_end":11866411,"line_start":1422,"line_end":1422,"column_start":9,"column_end":21},"name":"TypeSfixed64","qualname":"::protobuf::field::Kind::TypeSfixed64","value":"Kind::TypeSfixed64","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type sfixed64.\n","sig":null,"attributes":[{"value":"/ Field type sfixed64.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866366,"byte_end":11866390,"line_start":1421,"line_end":1421,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866457,"byte_end":11866467,"line_start":1424,"line_end":1424,"column_start":9,"column_end":19},"name":"TypeSint32","qualname":"::protobuf::field::Kind::TypeSint32","value":"Kind::TypeSint32","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type sint32.\n","sig":null,"attributes":[{"value":"/ Field type sint32.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866426,"byte_end":11866448,"line_start":1423,"line_end":1423,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866513,"byte_end":11866523,"line_start":1426,"line_end":1426,"column_start":9,"column_end":19},"name":"TypeSint64","qualname":"::protobuf::field::Kind::TypeSint64","value":"Kind::TypeSint64","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Field type sint64.\n","sig":null,"attributes":[{"value":"/ Field type sint64.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866482,"byte_end":11866504,"line_start":1425,"line_end":1425,"column_start":9,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865435,"byte_end":11865439,"line_start":1388,"line_end":1388,"column_start":14,"column_end":18},"name":"Kind","qualname":"::protobuf::field::Kind","value":"enum Kind {\n    TypeUnknown = ,\n    TypeDouble = ,\n    TypeFloat = ,\n    TypeInt64 = ,\n    TypeUint64 = ,\n    TypeInt32 = ,\n    TypeFixed64 = ,\n    TypeFixed32 = ,\n    TypeBool = ,\n    TypeString = ,\n    TypeGroup = ,\n    TypeMessage = ,\n    TypeBytes = ,\n    TypeUint32 = ,\n    TypeEnum = ,\n    TypeSfixed32 = ,\n    TypeSfixed64 = ,\n    TypeSint32 = ,\n    TypeSint64 = ,\n}","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684}],"decl_id":null,"docs":" Basic field types.\n","sig":null,"attributes":[{"value":"/ Basic field types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865210,"byte_end":11865232,"line_start":1375,"line_end":1375,"column_start":5,"column_end":27}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11865409,"byte_end":11865421,"line_start":1387,"line_end":1387,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866834,"byte_end":11866845,"line_start":1433,"line_end":1433,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<Kind>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866560,"byte_end":11866633,"line_start":1429,"line_end":1429,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866642,"byte_end":11866645,"line_start":1430,"line_end":1430,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866654,"byte_end":11866730,"line_start":1431,"line_end":1431,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866739,"byte_end":11866818,"line_start":1432,"line_end":1432,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11867980,"byte_end":11867993,"line_start":1457,"line_end":1457,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<Kind>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11867895,"byte_end":11867964,"line_start":1456,"line_end":1456,"column_start":9,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869538,"byte_end":11869545,"line_start":1497,"line_end":1497,"column_start":9,"column_end":16},"name":"Unknown","qualname":"::protobuf::field::Cardinality::Unknown","value":"Cardinality::Unknown","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" For fields with unknown cardinality.\n","sig":null,"attributes":[{"value":"/ For fields with unknown cardinality.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869489,"byte_end":11869529,"line_start":1496,"line_end":1496,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869592,"byte_end":11869600,"line_start":1499,"line_end":1499,"column_start":9,"column_end":17},"name":"Optional","qualname":"::protobuf::field::Cardinality::Optional","value":"Cardinality::Optional","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" For optional fields.\n","sig":null,"attributes":[{"value":"/ For optional fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869559,"byte_end":11869583,"line_start":1498,"line_end":1498,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869667,"byte_end":11869675,"line_start":1501,"line_end":1501,"column_start":9,"column_end":17},"name":"Required","qualname":"::protobuf::field::Cardinality::Required","value":"Cardinality::Required","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" For required fields. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ For required fields. Proto2 syntax only.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869614,"byte_end":11869658,"line_start":1500,"line_end":1500,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869722,"byte_end":11869730,"line_start":1503,"line_end":1503,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::protobuf::field::Cardinality::Repeated","value":"Cardinality::Repeated","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" For repeated fields.\n","sig":null,"attributes":[{"value":"/ For repeated fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869689,"byte_end":11869713,"line_start":1502,"line_end":1502,"column_start":9,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869467,"byte_end":11869478,"line_start":1495,"line_end":1495,"column_start":14,"column_end":25},"name":"Cardinality","qualname":"::protobuf::field::Cardinality","value":"enum Cardinality { Unknown = , Optional = , Required = , Repeated = , }","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2722}],"decl_id":null,"docs":" Whether a field is optional, required, or repeated.\n","sig":null,"attributes":[{"value":"/ Whether a field is optional, required, or repeated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869209,"byte_end":11869264,"line_start":1482,"line_end":1482,"column_start":5,"column_end":60}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869441,"byte_end":11869453,"line_start":1494,"line_end":1494,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11870047,"byte_end":11870058,"line_start":1510,"line_end":1510,"column_start":16,"column_end":27},"name":"as_str_name","qualname":"<Cardinality>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869773,"byte_end":11869846,"line_start":1506,"line_end":1506,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869855,"byte_end":11869858,"line_start":1507,"line_end":1507,"column_start":9,"column_end":12}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869867,"byte_end":11869943,"line_start":1508,"line_end":1508,"column_start":9,"column_end":85}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869952,"byte_end":11870031,"line_start":1509,"line_end":1509,"column_start":9,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11870484,"byte_end":11870497,"line_start":1519,"line_end":1519,"column_start":16,"column_end":29},"name":"from_str_name","qualname":"<Cardinality>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11870399,"byte_end":11870468,"line_start":1518,"line_end":1518,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871014,"byte_end":11871018,"line_start":1533,"line_end":1533,"column_start":12,"column_end":16},"name":"Enum","qualname":"::protobuf::Enum","value":"Enum { name, enumvalue, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791}],"decl_id":null,"docs":" Enum type definition.\n","sig":null,"attributes":[{"value":"/ Enum type definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11870884,"byte_end":11870909,"line_start":1530,"line_end":1530,"column_start":1,"column_end":26}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11870910,"byte_end":11870956,"line_start":1531,"line_end":1531,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871085,"byte_end":11871089,"line_start":1536,"line_end":1536,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Enum::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" Enum type name.\n","sig":null,"attributes":[{"value":"/ Enum type name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871025,"byte_end":11871044,"line_start":1534,"line_end":1534,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871049,"byte_end":11871076,"line_start":1535,"line_end":1535,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871206,"byte_end":11871215,"line_start":1539,"line_end":1539,"column_start":9,"column_end":18},"name":"enumvalue","qualname":"::protobuf::Enum::enumvalue","value":"prost::alloc::vec::Vec<protobuf::EnumValue>","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" Enum value definitions.\n","sig":null,"attributes":[{"value":"/ Enum value definitions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871127,"byte_end":11871154,"line_start":1537,"line_end":1537,"column_start":5,"column_end":32}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871159,"byte_end":11871197,"line_start":1538,"line_end":1538,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871338,"byte_end":11871345,"line_start":1542,"line_end":1542,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::Enum::options","value":"prost::alloc::vec::Vec<protobuf::Option>","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871258,"byte_end":11871286,"line_start":1540,"line_end":1540,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871291,"byte_end":11871329,"line_start":1541,"line_end":1541,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871460,"byte_end":11871474,"line_start":1545,"line_end":1545,"column_start":9,"column_end":23},"name":"source_context","qualname":"::protobuf::Enum::source_context","value":"core::option::Option<protobuf::SourceContext>","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871385,"byte_end":11871408,"line_start":1543,"line_end":1543,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871413,"byte_end":11871451,"line_start":1544,"line_end":1544,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871598,"byte_end":11871604,"line_start":1548,"line_end":1548,"column_start":9,"column_end":15},"name":"syntax","qualname":"::protobuf::Enum::syntax","value":"i32","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871519,"byte_end":11871541,"line_start":1546,"line_end":1546,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871546,"byte_end":11871589,"line_start":1547,"line_end":1547,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871598,"byte_end":11871604,"line_start":1548,"line_end":1548,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Enum>::syntax","value":"fn syntax<'_>(&'_ Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871744,"byte_end":11871753,"line_start":1553,"line_end":1553,"column_start":12,"column_end":21},"name":"EnumValue","qualname":"::protobuf::EnumValue","value":"EnumValue { name, number, options }","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820}],"decl_id":null,"docs":" Enum value definition.\n","sig":null,"attributes":[{"value":"/ Enum value definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871613,"byte_end":11871639,"line_start":1550,"line_end":1550,"column_start":1,"column_end":27}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871640,"byte_end":11871686,"line_start":1551,"line_end":1551,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871821,"byte_end":11871825,"line_start":1556,"line_end":1556,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::EnumValue::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2792},"children":[],"decl_id":null,"docs":" Enum value name.\n","sig":null,"attributes":[{"value":"/ Enum value name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871760,"byte_end":11871780,"line_start":1554,"line_end":1554,"column_start":5,"column_end":25}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871785,"byte_end":11871812,"line_start":1555,"line_end":1555,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2819},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871925,"byte_end":11871931,"line_start":1559,"line_end":1559,"column_start":9,"column_end":15},"name":"number","qualname":"::protobuf::EnumValue::number","value":"i32","parent":{"krate":0,"index":2792},"children":[],"decl_id":null,"docs":" Enum value number.\n","sig":null,"attributes":[{"value":"/ Enum value number.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871863,"byte_end":11871885,"line_start":1557,"line_end":1557,"column_start":5,"column_end":27}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871890,"byte_end":11871916,"line_start":1558,"line_end":1558,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872022,"byte_end":11872029,"line_start":1562,"line_end":1562,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::EnumValue::options","value":"prost::alloc::vec::Vec<protobuf::Option>","parent":{"krate":0,"index":2792},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871942,"byte_end":11871970,"line_start":1560,"line_end":1560,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11871975,"byte_end":11872013,"line_start":1561,"line_end":1561,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872266,"byte_end":11872272,"line_start":1568,"line_end":1568,"column_start":12,"column_end":18},"name":"Option","qualname":"::protobuf::Option","value":"Option { name, value }","parent":null,"children":[{"krate":0,"index":2845},{"krate":0,"index":2846}],"decl_id":null,"docs":" A protocol buffer option, which can be attached to a message, field,\n enumeration, etc.\n","sig":null,"attributes":[{"value":"/ A protocol buffer option, which can be attached to a message, field,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872067,"byte_end":11872139,"line_start":1564,"line_end":1564,"column_start":1,"column_end":73}},{"value":"/ enumeration, etc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872140,"byte_end":11872161,"line_start":1565,"line_end":1565,"column_start":1,"column_end":22}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872162,"byte_end":11872208,"line_start":1566,"line_end":1566,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872580,"byte_end":11872584,"line_start":1574,"line_end":1574,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Option::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" The option's name. For protobuf built-in options (options defined in\n descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n For custom options, it should be the fully-qualified name. For example,\n `\"google.api.http\"`.\n","sig":null,"attributes":[{"value":"/ The option's name. For protobuf built-in options (options defined in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872279,"byte_end":11872351,"line_start":1569,"line_end":1569,"column_start":5,"column_end":77}},{"value":"/ descriptor.proto), this is the short name. For example, `\"map_entry\"`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872356,"byte_end":11872430,"line_start":1570,"line_end":1570,"column_start":5,"column_end":79}},{"value":"/ For custom options, it should be the fully-qualified name. For example,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872435,"byte_end":11872510,"line_start":1571,"line_end":1571,"column_start":5,"column_end":80}},{"value":"/ `\"google.api.http\"`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872515,"byte_end":11872539,"line_start":1572,"line_end":1572,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872544,"byte_end":11872571,"line_start":1573,"line_end":1573,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872970,"byte_end":11872975,"line_start":1580,"line_end":1580,"column_start":9,"column_end":14},"name":"value","qualname":"::protobuf::Option::value","value":"core::option::Option<protobuf::Any>","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" The option's value packed in an Any message. If the value is a primitive,\n the corresponding wrapper type defined in google/protobuf/wrappers.proto\n should be used. If the value is an enum, it should be stored as an int32\n value using the google.protobuf.Int32Value type.\n","sig":null,"attributes":[{"value":"/ The option's value packed in an Any message. If the value is a primitive,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872622,"byte_end":11872699,"line_start":1575,"line_end":1575,"column_start":5,"column_end":82}},{"value":"/ the corresponding wrapper type defined in google/protobuf/wrappers.proto","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872704,"byte_end":11872780,"line_start":1576,"line_end":1576,"column_start":5,"column_end":81}},{"value":"/ should be used. If the value is an enum, it should be stored as an int32","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872785,"byte_end":11872861,"line_start":1577,"line_end":1577,"column_start":5,"column_end":81}},{"value":"/ value using the google.protobuf.Int32Value type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872866,"byte_end":11872918,"line_start":1578,"line_end":1578,"column_start":5,"column_end":57}},{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11872923,"byte_end":11872961,"line_start":1579,"line_end":1579,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873220,"byte_end":11873226,"line_start":1587,"line_end":1587,"column_start":5,"column_end":11},"name":"Proto2","qualname":"::protobuf::Syntax::Proto2","value":"Syntax::Proto2","parent":{"krate":0,"index":2847},"children":[],"decl_id":null,"docs":" Syntax `proto2`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto2`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873195,"byte_end":11873215,"line_start":1586,"line_end":1586,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873261,"byte_end":11873267,"line_start":1589,"line_end":1589,"column_start":5,"column_end":11},"name":"Proto3","qualname":"::protobuf::Syntax::Proto3","value":"Syntax::Proto3","parent":{"krate":0,"index":2847},"children":[],"decl_id":null,"docs":" Syntax `proto3`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto3`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873236,"byte_end":11873256,"line_start":1588,"line_end":1588,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873182,"byte_end":11873188,"line_start":1585,"line_end":1585,"column_start":10,"column_end":16},"name":"Syntax","qualname":"::protobuf::Syntax","value":"enum Syntax { Proto2 = , Proto3 = , }","parent":null,"children":[{"krate":0,"index":2848},{"krate":0,"index":2851}],"decl_id":null,"docs":" The syntax in which a protocol buffer element is defined.\n","sig":null,"attributes":[{"value":"/ The syntax in which a protocol buffer element is defined.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873008,"byte_end":11873069,"line_start":1582,"line_end":1582,"column_start":1,"column_end":62}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873160,"byte_end":11873172,"line_start":1584,"line_end":1584,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873551,"byte_end":11873562,"line_start":1596,"line_end":1596,"column_start":12,"column_end":23},"name":"as_str_name","qualname":"<Syntax>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873293,"byte_end":11873366,"line_start":1592,"line_end":1592,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873371,"byte_end":11873374,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873379,"byte_end":11873455,"line_start":1594,"line_end":1594,"column_start":5,"column_end":81}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873460,"byte_end":11873539,"line_start":1595,"line_end":1595,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873804,"byte_end":11873817,"line_start":1603,"line_end":1603,"column_start":12,"column_end":25},"name":"from_str_name","qualname":"<Syntax>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873723,"byte_end":11873792,"line_start":1602,"line_end":1602,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874705,"byte_end":11874708,"line_start":1622,"line_end":1622,"column_start":12,"column_end":15},"name":"Api","qualname":"::protobuf::Api","value":"Api { name, methods, options, version, source_context, mixins, syntax }","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926}],"decl_id":null,"docs":" Api is a light-weight descriptor for an API Interface.","sig":null,"attributes":[{"value":"/ Api is a light-weight descriptor for an API Interface.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874030,"byte_end":11874088,"line_start":1611,"line_end":1611,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874089,"byte_end":11874092,"line_start":1612,"line_end":1612,"column_start":1,"column_end":4}},{"value":"/ Interfaces are also described as \"protocol buffer services\" in some contexts,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874093,"byte_end":11874174,"line_start":1613,"line_end":1613,"column_start":1,"column_end":82}},{"value":"/ such as by the \"service\" keyword in a .proto file, but they are different","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874175,"byte_end":11874252,"line_start":1614,"line_end":1614,"column_start":1,"column_end":78}},{"value":"/ from API Services, which represent a concrete implementation of an interface","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874253,"byte_end":11874333,"line_start":1615,"line_end":1615,"column_start":1,"column_end":81}},{"value":"/ as opposed to simply a description of methods and bindings. They are also","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874334,"byte_end":11874411,"line_start":1616,"line_end":1616,"column_start":1,"column_end":78}},{"value":"/ sometimes simply referred to as \"APIs\" in other contexts, such as the name of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874412,"byte_end":11874493,"line_start":1617,"line_end":1617,"column_start":1,"column_end":82}},{"value":"/ this message itself. See <https://cloud.google.com/apis/design/glossary> for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874494,"byte_end":11874574,"line_start":1618,"line_end":1618,"column_start":1,"column_end":81}},{"value":"/ detailed terminology.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874575,"byte_end":11874600,"line_start":1619,"line_end":1619,"column_start":1,"column_end":26}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874601,"byte_end":11874647,"line_start":1620,"line_end":1620,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874875,"byte_end":11874879,"line_start":1626,"line_end":1626,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Api::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The fully qualified name of this interface, including package name\n followed by the interface's simple name.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of this interface, including package name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874715,"byte_end":11874785,"line_start":1623,"line_end":1623,"column_start":5,"column_end":75}},{"value":"/ followed by the interface's simple name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874790,"byte_end":11874834,"line_start":1624,"line_end":1624,"column_start":5,"column_end":49}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874839,"byte_end":11874866,"line_start":1625,"line_end":1625,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875025,"byte_end":11875032,"line_start":1629,"line_end":1629,"column_start":9,"column_end":16},"name":"methods","qualname":"::protobuf::Api::methods","value":"prost::alloc::vec::Vec<protobuf::Method>","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The methods of this interface, in unspecified order.\n","sig":null,"attributes":[{"value":"/ The methods of this interface, in unspecified order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874917,"byte_end":11874973,"line_start":1627,"line_end":1627,"column_start":5,"column_end":61}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11874978,"byte_end":11875016,"line_start":1628,"line_end":1628,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875167,"byte_end":11875174,"line_start":1632,"line_end":1632,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::Api::options","value":"prost::alloc::vec::Vec<protobuf::Option>","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Any metadata attached to the interface.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the interface.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875072,"byte_end":11875115,"line_start":1630,"line_end":1630,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875120,"byte_end":11875158,"line_start":1631,"line_end":1631,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876395,"byte_end":11876402,"line_start":1653,"line_end":1653,"column_start":9,"column_end":16},"name":"version","qualname":"::protobuf::Api::version","value":"prost::alloc::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" A version string for this interface. If specified, must have the form\n `major-version.minor-version`, as in `1.10`. If the minor version is\n omitted, it defaults to zero. If the entire version field is empty, the\n major version is derived from the package name, as outlined below. If the\n field is not empty, the version in the package name will be verified to be\n consistent with what is provided here.","sig":null,"attributes":[{"value":"/ A version string for this interface. If specified, must have the form","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875214,"byte_end":11875287,"line_start":1633,"line_end":1633,"column_start":5,"column_end":78}},{"value":"/ `major-version.minor-version`, as in `1.10`. If the minor version is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875292,"byte_end":11875364,"line_start":1634,"line_end":1634,"column_start":5,"column_end":77}},{"value":"/ omitted, it defaults to zero. If the entire version field is empty, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875369,"byte_end":11875444,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ major version is derived from the package name, as outlined below. If the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875449,"byte_end":11875526,"line_start":1636,"line_end":1636,"column_start":5,"column_end":82}},{"value":"/ field is not empty, the version in the package name will be verified to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875531,"byte_end":11875609,"line_start":1637,"line_end":1637,"column_start":5,"column_end":83}},{"value":"/ consistent with what is provided here.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875614,"byte_end":11875656,"line_start":1638,"line_end":1638,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875661,"byte_end":11875664,"line_start":1639,"line_end":1639,"column_start":5,"column_end":8}},{"value":"/ The versioning schema uses [semantic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875669,"byte_end":11875709,"line_start":1640,"line_end":1640,"column_start":5,"column_end":45}},{"value":"/ versioning](<http://semver.org>) where the major version number","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875714,"byte_end":11875781,"line_start":1641,"line_end":1641,"column_start":5,"column_end":72}},{"value":"/ indicates a breaking change and the minor version an additive,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875786,"byte_end":11875852,"line_start":1642,"line_end":1642,"column_start":5,"column_end":71}},{"value":"/ non-breaking change. Both version numbers are signals to users","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875857,"byte_end":11875923,"line_start":1643,"line_end":1643,"column_start":5,"column_end":71}},{"value":"/ what to expect from different versions, and should be carefully","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11875928,"byte_end":11875995,"line_start":1644,"line_end":1644,"column_start":5,"column_end":72}},{"value":"/ chosen based on the product plan.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876000,"byte_end":11876037,"line_start":1645,"line_end":1645,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876042,"byte_end":11876045,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ The major version is also reflected in the package name of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876050,"byte_end":11876116,"line_start":1647,"line_end":1647,"column_start":5,"column_end":71}},{"value":"/ interface, which must end in `v<major-version>`, as in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876121,"byte_end":11876179,"line_start":1648,"line_end":1648,"column_start":5,"column_end":63}},{"value":"/ `google.feature.v1`. For major versions 0 and 1, the suffix can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876184,"byte_end":11876251,"line_start":1649,"line_end":1649,"column_start":5,"column_end":72}},{"value":"/ be omitted. Zero major versions must only be used for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876256,"byte_end":11876313,"line_start":1650,"line_end":1650,"column_start":5,"column_end":62}},{"value":"/ experimental, non-GA interfaces.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876318,"byte_end":11876354,"line_start":1651,"line_end":1651,"column_start":5,"column_end":41}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876359,"byte_end":11876386,"line_start":1652,"line_end":1652,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876579,"byte_end":11876593,"line_start":1657,"line_end":1657,"column_start":9,"column_end":23},"name":"source_context","qualname":"::protobuf::Api::source_context","value":"core::option::Option<protobuf::SourceContext>","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Source context for the protocol buffer service represented by this\n message.\n","sig":null,"attributes":[{"value":"/ Source context for the protocol buffer service represented by this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876440,"byte_end":11876510,"line_start":1654,"line_end":1654,"column_start":5,"column_end":75}},{"value":"/ message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876515,"byte_end":11876527,"line_start":1655,"line_end":1655,"column_start":5,"column_end":17}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876532,"byte_end":11876570,"line_start":1656,"line_end":1656,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876735,"byte_end":11876741,"line_start":1660,"line_end":1660,"column_start":9,"column_end":15},"name":"mixins","qualname":"::protobuf::Api::mixins","value":"prost::alloc::vec::Vec<protobuf::Mixin>","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Included interfaces. See \\\\[Mixin\\]\\[\\\\].\n","sig":null,"attributes":[{"value":"/ Included interfaces. See \\\\[Mixin\\]\\[\\\\].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876638,"byte_end":11876683,"line_start":1658,"line_end":1658,"column_start":5,"column_end":50}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876688,"byte_end":11876726,"line_start":1659,"line_end":1659,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876874,"byte_end":11876880,"line_start":1663,"line_end":1663,"column_start":9,"column_end":15},"name":"syntax","qualname":"::protobuf::Api::syntax","value":"i32","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The source syntax of the service.\n","sig":null,"attributes":[{"value":"/ The source syntax of the service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876780,"byte_end":11876817,"line_start":1661,"line_end":1661,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876822,"byte_end":11876865,"line_start":1662,"line_end":1662,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876874,"byte_end":11876880,"line_start":1663,"line_end":1663,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Api>::syntax","value":"fn syntax<'_>(&'_ Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877045,"byte_end":11877051,"line_start":1668,"line_end":1668,"column_start":12,"column_end":18},"name":"Method","qualname":"::protobuf::Method","value":"Method { name, request_type_url, request_streaming, response_type_url, response_streaming, options, syntax }","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979}],"decl_id":null,"docs":" Method represents a method of an API interface.\n","sig":null,"attributes":[{"value":"/ Method represents a method of an API interface.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876889,"byte_end":11876940,"line_start":1665,"line_end":1665,"column_start":1,"column_end":52}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11876941,"byte_end":11876987,"line_start":1666,"line_end":1666,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877134,"byte_end":11877138,"line_start":1671,"line_end":1671,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Method::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" The simple name of this method.\n","sig":null,"attributes":[{"value":"/ The simple name of this method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877058,"byte_end":11877093,"line_start":1669,"line_end":1669,"column_start":5,"column_end":40}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877098,"byte_end":11877125,"line_start":1670,"line_end":1670,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2974},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877253,"byte_end":11877269,"line_start":1674,"line_end":1674,"column_start":9,"column_end":25},"name":"request_type_url","qualname":"::protobuf::Method::request_type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" A URL of the input message type.\n","sig":null,"attributes":[{"value":"/ A URL of the input message type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877176,"byte_end":11877212,"line_start":1672,"line_end":1672,"column_start":5,"column_end":41}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877217,"byte_end":11877244,"line_start":1673,"line_end":1673,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2975},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877383,"byte_end":11877400,"line_start":1677,"line_end":1677,"column_start":9,"column_end":26},"name":"request_streaming","qualname":"::protobuf::Method::request_streaming","value":"bool","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" If true, the request is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the request is streamed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877307,"byte_end":11877344,"line_start":1675,"line_end":1675,"column_start":5,"column_end":42}},{"value":"prost(bool, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877349,"byte_end":11877374,"line_start":1676,"line_end":1676,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877492,"byte_end":11877509,"line_start":1680,"line_end":1680,"column_start":9,"column_end":26},"name":"response_type_url","qualname":"::protobuf::Method::response_type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" The URL of the output message type.\n","sig":null,"attributes":[{"value":"/ The URL of the output message type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877412,"byte_end":11877451,"line_start":1678,"line_end":1678,"column_start":5,"column_end":44}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877456,"byte_end":11877483,"line_start":1679,"line_end":1679,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877624,"byte_end":11877642,"line_start":1683,"line_end":1683,"column_start":9,"column_end":27},"name":"response_streaming","qualname":"::protobuf::Method::response_streaming","value":"bool","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" If true, the response is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the response is streamed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877547,"byte_end":11877585,"line_start":1681,"line_end":1681,"column_start":5,"column_end":43}},{"value":"prost(bool, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877590,"byte_end":11877615,"line_start":1682,"line_end":1682,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877746,"byte_end":11877753,"line_start":1686,"line_end":1686,"column_start":9,"column_end":16},"name":"options","qualname":"::protobuf::Method::options","value":"prost::alloc::vec::Vec<protobuf::Option>","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" Any metadata attached to the method.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877654,"byte_end":11877694,"line_start":1684,"line_end":1684,"column_start":5,"column_end":45}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877699,"byte_end":11877737,"line_start":1685,"line_end":1685,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877887,"byte_end":11877893,"line_start":1689,"line_end":1689,"column_start":9,"column_end":15},"name":"syntax","qualname":"::protobuf::Method::syntax","value":"i32","parent":{"krate":0,"index":2927},"children":[],"decl_id":null,"docs":" The source syntax of this method.\n","sig":null,"attributes":[{"value":"/ The source syntax of this method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877793,"byte_end":11877830,"line_start":1687,"line_end":1687,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877835,"byte_end":11877878,"line_start":1688,"line_end":1688,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877887,"byte_end":11877893,"line_start":1689,"line_end":1689,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Method>::syntax","value":"fn syntax<'_>(&'_ Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880709,"byte_end":11880714,"line_start":1781,"line_end":1781,"column_start":12,"column_end":17},"name":"Mixin","qualname":"::protobuf::Mixin","value":"Mixin { name, root }","parent":null,"children":[{"krate":0,"index":3005},{"krate":0,"index":3006}],"decl_id":null,"docs":" Declares an API Interface to be included in this interface. The including\n interface must redeclare all the methods from the included interface, but\n documentation and options are inherited as follows:","sig":null,"attributes":[{"value":"/ Declares an API Interface to be included in this interface. The including","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877902,"byte_end":11877979,"line_start":1691,"line_end":1691,"column_start":1,"column_end":78}},{"value":"/ interface must redeclare all the methods from the included interface, but","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11877980,"byte_end":11878057,"line_start":1692,"line_end":1692,"column_start":1,"column_end":78}},{"value":"/ documentation and options are inherited as follows:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878058,"byte_end":11878113,"line_start":1693,"line_end":1693,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878114,"byte_end":11878117,"line_start":1694,"line_end":1694,"column_start":1,"column_end":4}},{"value":"/ * If after comment and whitespace stripping, the documentation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878118,"byte_end":11878184,"line_start":1695,"line_end":1695,"column_start":1,"column_end":67}},{"value":"/   string of the redeclared method is empty, it will be inherited","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878185,"byte_end":11878253,"line_start":1696,"line_end":1696,"column_start":1,"column_end":69}},{"value":"/   from the original method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878254,"byte_end":11878285,"line_start":1697,"line_end":1697,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878286,"byte_end":11878289,"line_start":1698,"line_end":1698,"column_start":1,"column_end":4}},{"value":"/ * Each annotation belonging to the service config (http,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878290,"byte_end":11878350,"line_start":1699,"line_end":1699,"column_start":1,"column_end":61}},{"value":"/   visibility) which is not set in the redeclared method will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878351,"byte_end":11878418,"line_start":1700,"line_end":1700,"column_start":1,"column_end":68}},{"value":"/   inherited.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878419,"byte_end":11878435,"line_start":1701,"line_end":1701,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878436,"byte_end":11878439,"line_start":1702,"line_end":1702,"column_start":1,"column_end":4}},{"value":"/ * If an http annotation is inherited, the path pattern will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878440,"byte_end":11878506,"line_start":1703,"line_end":1703,"column_start":1,"column_end":67}},{"value":"/   modified as follows. Any version prefix will be replaced by the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878507,"byte_end":11878576,"line_start":1704,"line_end":1704,"column_start":1,"column_end":70}},{"value":"/   version of the including interface plus the \\\\[root\\]\\[\\\\] path if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878577,"byte_end":11878649,"line_start":1705,"line_end":1705,"column_start":1,"column_end":73}},{"value":"/   specified.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878650,"byte_end":11878666,"line_start":1706,"line_end":1706,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878667,"byte_end":11878670,"line_start":1707,"line_end":1707,"column_start":1,"column_end":4}},{"value":"/ Example of a simple mixin:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878671,"byte_end":11878701,"line_start":1708,"line_end":1708,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878702,"byte_end":11878705,"line_start":1709,"line_end":1709,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878706,"byte_end":11878717,"line_start":1710,"line_end":1710,"column_start":1,"column_end":12}},{"value":"/ package google.acl.v1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878718,"byte_end":11878744,"line_start":1711,"line_end":1711,"column_start":1,"column_end":27}},{"value":"/ service AccessControl {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878745,"byte_end":11878772,"line_start":1712,"line_end":1712,"column_start":1,"column_end":28}},{"value":"/    // Get the underlying ACL object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878773,"byte_end":11878813,"line_start":1713,"line_end":1713,"column_start":1,"column_end":41}},{"value":"/    rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878814,"byte_end":11878862,"line_start":1714,"line_end":1714,"column_start":1,"column_end":49}},{"value":"/      option (google.api.http).get = \"/v1/{resource=**}:getAcl\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878863,"byte_end":11878930,"line_start":1715,"line_end":1715,"column_start":1,"column_end":68}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878931,"byte_end":11878939,"line_start":1716,"line_end":1716,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878940,"byte_end":11878945,"line_start":1717,"line_end":1717,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878946,"byte_end":11878949,"line_start":1718,"line_end":1718,"column_start":1,"column_end":4}},{"value":"/ package google.storage.v2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878950,"byte_end":11878980,"line_start":1719,"line_end":1719,"column_start":1,"column_end":31}},{"value":"/ service Storage {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11878981,"byte_end":11879002,"line_start":1720,"line_end":1720,"column_start":1,"column_end":22}},{"value":"/    rpc GetAcl(GetAclRequest) returns (Acl);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879003,"byte_end":11879050,"line_start":1721,"line_end":1721,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879051,"byte_end":11879054,"line_start":1722,"line_end":1722,"column_start":1,"column_end":4}},{"value":"/    // Get a data record.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879055,"byte_end":11879083,"line_start":1723,"line_end":1723,"column_start":1,"column_end":29}},{"value":"/    rpc GetData(GetDataRequest) returns (Data) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879084,"byte_end":11879135,"line_start":1724,"line_end":1724,"column_start":1,"column_end":52}},{"value":"/      option (google.api.http).get = \"/v2/{resource=**}\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879136,"byte_end":11879196,"line_start":1725,"line_end":1725,"column_start":1,"column_end":61}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879197,"byte_end":11879205,"line_start":1726,"line_end":1726,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879206,"byte_end":11879211,"line_start":1727,"line_end":1727,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879212,"byte_end":11879219,"line_start":1728,"line_end":1728,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879220,"byte_end":11879223,"line_start":1729,"line_end":1729,"column_start":1,"column_end":4}},{"value":"/ Example of a mixin configuration:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879224,"byte_end":11879261,"line_start":1730,"line_end":1730,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879262,"byte_end":11879265,"line_start":1731,"line_end":1731,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879266,"byte_end":11879277,"line_start":1732,"line_end":1732,"column_start":1,"column_end":12}},{"value":"/ apis:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879278,"byte_end":11879287,"line_start":1733,"line_end":1733,"column_start":1,"column_end":10}},{"value":"/ - name: google.storage.v2.Storage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879288,"byte_end":11879325,"line_start":1734,"line_end":1734,"column_start":1,"column_end":38}},{"value":"/    mixins:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879326,"byte_end":11879340,"line_start":1735,"line_end":1735,"column_start":1,"column_end":15}},{"value":"/    - name: google.acl.v1.AccessControl","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879341,"byte_end":11879383,"line_start":1736,"line_end":1736,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879384,"byte_end":11879391,"line_start":1737,"line_end":1737,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879392,"byte_end":11879395,"line_start":1738,"line_end":1738,"column_start":1,"column_end":4}},{"value":"/ The mixin construct implies that all methods in `AccessControl` are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879396,"byte_end":11879467,"line_start":1739,"line_end":1739,"column_start":1,"column_end":72}},{"value":"/ also declared with same name and request/response types in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879468,"byte_end":11879530,"line_start":1740,"line_end":1740,"column_start":1,"column_end":63}},{"value":"/ `Storage`. A documentation generator or annotation processor will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879531,"byte_end":11879600,"line_start":1741,"line_end":1741,"column_start":1,"column_end":70}},{"value":"/ see the effective `Storage.GetAcl` method after inheriting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879601,"byte_end":11879663,"line_start":1742,"line_end":1742,"column_start":1,"column_end":63}},{"value":"/ documentation and annotations as follows:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879664,"byte_end":11879709,"line_start":1743,"line_end":1743,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879710,"byte_end":11879713,"line_start":1744,"line_end":1744,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879714,"byte_end":11879725,"line_start":1745,"line_end":1745,"column_start":1,"column_end":12}},{"value":"/ service Storage {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879726,"byte_end":11879747,"line_start":1746,"line_end":1746,"column_start":1,"column_end":22}},{"value":"/    // Get the underlying ACL object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879748,"byte_end":11879788,"line_start":1747,"line_end":1747,"column_start":1,"column_end":41}},{"value":"/    rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879789,"byte_end":11879837,"line_start":1748,"line_end":1748,"column_start":1,"column_end":49}},{"value":"/      option (google.api.http).get = \"/v2/{resource=**}:getAcl\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879838,"byte_end":11879905,"line_start":1749,"line_end":1749,"column_start":1,"column_end":68}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879906,"byte_end":11879914,"line_start":1750,"line_end":1750,"column_start":1,"column_end":9}},{"value":"/    ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879915,"byte_end":11879925,"line_start":1751,"line_end":1751,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879926,"byte_end":11879931,"line_start":1752,"line_end":1752,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879932,"byte_end":11879939,"line_start":1753,"line_end":1753,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879940,"byte_end":11879943,"line_start":1754,"line_end":1754,"column_start":1,"column_end":4}},{"value":"/ Note how the version in the path pattern changed from `v1` to `v2`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11879944,"byte_end":11880015,"line_start":1755,"line_end":1755,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880016,"byte_end":11880019,"line_start":1756,"line_end":1756,"column_start":1,"column_end":4}},{"value":"/ If the `root` field in the mixin is specified, it should be a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880020,"byte_end":11880085,"line_start":1757,"line_end":1757,"column_start":1,"column_end":66}},{"value":"/ relative path under which inherited HTTP paths are placed. Example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880086,"byte_end":11880157,"line_start":1758,"line_end":1758,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880158,"byte_end":11880161,"line_start":1759,"line_end":1759,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880162,"byte_end":11880173,"line_start":1760,"line_end":1760,"column_start":1,"column_end":12}},{"value":"/ apis:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880174,"byte_end":11880183,"line_start":1761,"line_end":1761,"column_start":1,"column_end":10}},{"value":"/ - name: google.storage.v2.Storage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880184,"byte_end":11880221,"line_start":1762,"line_end":1762,"column_start":1,"column_end":38}},{"value":"/    mixins:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880222,"byte_end":11880236,"line_start":1763,"line_end":1763,"column_start":1,"column_end":15}},{"value":"/    - name: google.acl.v1.AccessControl","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880237,"byte_end":11880279,"line_start":1764,"line_end":1764,"column_start":1,"column_end":43}},{"value":"/      root: acls","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880280,"byte_end":11880299,"line_start":1765,"line_end":1765,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880300,"byte_end":11880307,"line_start":1766,"line_end":1766,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880308,"byte_end":11880311,"line_start":1767,"line_end":1767,"column_start":1,"column_end":4}},{"value":"/ This implies the following inherited HTTP annotation:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880312,"byte_end":11880369,"line_start":1768,"line_end":1768,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880370,"byte_end":11880373,"line_start":1769,"line_end":1769,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880374,"byte_end":11880385,"line_start":1770,"line_end":1770,"column_start":1,"column_end":12}},{"value":"/ service Storage {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880386,"byte_end":11880407,"line_start":1771,"line_end":1771,"column_start":1,"column_end":22}},{"value":"/    // Get the underlying ACL object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880408,"byte_end":11880448,"line_start":1772,"line_end":1772,"column_start":1,"column_end":41}},{"value":"/    rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880449,"byte_end":11880497,"line_start":1773,"line_end":1773,"column_start":1,"column_end":49}},{"value":"/      option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880498,"byte_end":11880570,"line_start":1774,"line_end":1774,"column_start":1,"column_end":73}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880571,"byte_end":11880579,"line_start":1775,"line_end":1775,"column_start":1,"column_end":9}},{"value":"/    ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880580,"byte_end":11880590,"line_start":1776,"line_end":1776,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880591,"byte_end":11880596,"line_start":1777,"line_end":1777,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880597,"byte_end":11880604,"line_start":1778,"line_end":1778,"column_start":1,"column_end":8}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880605,"byte_end":11880651,"line_start":1779,"line_end":1779,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880826,"byte_end":11880830,"line_start":1784,"line_end":1784,"column_start":9,"column_end":13},"name":"name","qualname":"::protobuf::Mixin::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" The fully qualified name of the interface which is included.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of the interface which is included.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880721,"byte_end":11880785,"line_start":1782,"line_end":1782,"column_start":5,"column_end":69}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880790,"byte_end":11880817,"line_start":1783,"line_end":1783,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880995,"byte_end":11880999,"line_start":1788,"line_end":1788,"column_start":9,"column_end":13},"name":"root","qualname":"::protobuf::Mixin::root","value":"prost::alloc::string::String","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" If non-empty specifies a path under which inherited HTTP paths\n are rooted.\n","sig":null,"attributes":[{"value":"/ If non-empty specifies a path under which inherited HTTP paths","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880868,"byte_end":11880934,"line_start":1785,"line_end":1785,"column_start":5,"column_end":71}},{"value":"/ are rooted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880939,"byte_end":11880954,"line_start":1786,"line_end":1786,"column_start":5,"column_end":20}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11880959,"byte_end":11880986,"line_start":1787,"line_end":1787,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883336,"byte_end":11883344,"line_start":1856,"line_end":1856,"column_start":12,"column_end":20},"name":"Duration","qualname":"::protobuf::Duration","value":"Duration { seconds, nanos }","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033}],"decl_id":null,"docs":" A Duration represents a signed, fixed-length span of time represented\n as a count of seconds and fractions of seconds at nanosecond\n resolution. It is independent of any calendar and concepts like \"day\"\n or \"month\". It is related to Timestamp in that the difference between\n two Timestamp values is a Duration and it can be added or subtracted\n from a Timestamp. Range is approximately +-10,000 years.","sig":null,"attributes":[{"value":"/ A Duration represents a signed, fixed-length span of time represented","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881035,"byte_end":11881108,"line_start":1790,"line_end":1790,"column_start":1,"column_end":74}},{"value":"/ as a count of seconds and fractions of seconds at nanosecond","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881109,"byte_end":11881173,"line_start":1791,"line_end":1791,"column_start":1,"column_end":65}},{"value":"/ resolution. It is independent of any calendar and concepts like \"day\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881174,"byte_end":11881247,"line_start":1792,"line_end":1792,"column_start":1,"column_end":74}},{"value":"/ or \"month\". It is related to Timestamp in that the difference between","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881248,"byte_end":11881321,"line_start":1793,"line_end":1793,"column_start":1,"column_end":74}},{"value":"/ two Timestamp values is a Duration and it can be added or subtracted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881322,"byte_end":11881394,"line_start":1794,"line_end":1794,"column_start":1,"column_end":73}},{"value":"/ from a Timestamp. Range is approximately +-10,000 years.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881395,"byte_end":11881455,"line_start":1795,"line_end":1795,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881456,"byte_end":11881459,"line_start":1796,"line_end":1796,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881460,"byte_end":11881474,"line_start":1797,"line_end":1797,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881475,"byte_end":11881478,"line_start":1798,"line_end":1798,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Duration from two Timestamps in pseudo code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881479,"byte_end":11881546,"line_start":1799,"line_end":1799,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881547,"byte_end":11881550,"line_start":1800,"line_end":1800,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881551,"byte_end":11881562,"line_start":1801,"line_end":1801,"column_start":1,"column_end":12}},{"value":"/ Timestamp start = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881563,"byte_end":11881589,"line_start":1802,"line_end":1802,"column_start":1,"column_end":27}},{"value":"/ Timestamp end = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881590,"byte_end":11881614,"line_start":1803,"line_end":1803,"column_start":1,"column_end":25}},{"value":"/ Duration duration = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881615,"byte_end":11881643,"line_start":1804,"line_end":1804,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881644,"byte_end":11881647,"line_start":1805,"line_end":1805,"column_start":1,"column_end":4}},{"value":"/ duration.seconds = end.seconds - start.seconds;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881648,"byte_end":11881699,"line_start":1806,"line_end":1806,"column_start":1,"column_end":52}},{"value":"/ duration.nanos = end.nanos - start.nanos;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881700,"byte_end":11881745,"line_start":1807,"line_end":1807,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881746,"byte_end":11881749,"line_start":1808,"line_end":1808,"column_start":1,"column_end":4}},{"value":"/ if (duration.seconds < 0 && duration.nanos > 0) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881750,"byte_end":11881803,"line_start":1809,"line_end":1809,"column_start":1,"column_end":54}},{"value":"/    duration.seconds += 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881804,"byte_end":11881833,"line_start":1810,"line_end":1810,"column_start":1,"column_end":30}},{"value":"/    duration.nanos -= 1000000000;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881834,"byte_end":11881870,"line_start":1811,"line_end":1811,"column_start":1,"column_end":37}},{"value":"/ } else if (duration.seconds > 0 && duration.nanos < 0) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881871,"byte_end":11881931,"line_start":1812,"line_end":1812,"column_start":1,"column_end":61}},{"value":"/    duration.seconds -= 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881932,"byte_end":11881961,"line_start":1813,"line_end":1813,"column_start":1,"column_end":30}},{"value":"/    duration.nanos += 1000000000;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881962,"byte_end":11881998,"line_start":1814,"line_end":1814,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11881999,"byte_end":11882004,"line_start":1815,"line_end":1815,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882005,"byte_end":11882012,"line_start":1816,"line_end":1816,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882013,"byte_end":11882016,"line_start":1817,"line_end":1817,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882017,"byte_end":11882091,"line_start":1818,"line_end":1818,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882092,"byte_end":11882095,"line_start":1819,"line_end":1819,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882096,"byte_end":11882107,"line_start":1820,"line_end":1820,"column_start":1,"column_end":12}},{"value":"/ Timestamp start = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882108,"byte_end":11882134,"line_start":1821,"line_end":1821,"column_start":1,"column_end":27}},{"value":"/ Duration duration = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882135,"byte_end":11882163,"line_start":1822,"line_end":1822,"column_start":1,"column_end":29}},{"value":"/ Timestamp end = ...;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882164,"byte_end":11882188,"line_start":1823,"line_end":1823,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882189,"byte_end":11882192,"line_start":1824,"line_end":1824,"column_start":1,"column_end":4}},{"value":"/ end.seconds = start.seconds + duration.seconds;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882193,"byte_end":11882244,"line_start":1825,"line_end":1825,"column_start":1,"column_end":52}},{"value":"/ end.nanos = start.nanos + duration.nanos;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882245,"byte_end":11882290,"line_start":1826,"line_end":1826,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882291,"byte_end":11882294,"line_start":1827,"line_end":1827,"column_start":1,"column_end":4}},{"value":"/ if (end.nanos < 0) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882295,"byte_end":11882319,"line_start":1828,"line_end":1828,"column_start":1,"column_end":25}},{"value":"/    end.seconds -= 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882320,"byte_end":11882344,"line_start":1829,"line_end":1829,"column_start":1,"column_end":25}},{"value":"/    end.nanos += 1000000000;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882345,"byte_end":11882376,"line_start":1830,"line_end":1830,"column_start":1,"column_end":32}},{"value":"/ } else if (end.nanos >= 1000000000) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882377,"byte_end":11882418,"line_start":1831,"line_end":1831,"column_start":1,"column_end":42}},{"value":"/    end.seconds += 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882419,"byte_end":11882443,"line_start":1832,"line_end":1832,"column_start":1,"column_end":25}},{"value":"/    end.nanos -= 1000000000;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882444,"byte_end":11882475,"line_start":1833,"line_end":1833,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882476,"byte_end":11882481,"line_start":1834,"line_end":1834,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882482,"byte_end":11882489,"line_start":1835,"line_end":1835,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882490,"byte_end":11882493,"line_start":1836,"line_end":1836,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Duration from datetime.timedelta in Python.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882494,"byte_end":11882560,"line_start":1837,"line_end":1837,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882561,"byte_end":11882564,"line_start":1838,"line_end":1838,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882565,"byte_end":11882576,"line_start":1839,"line_end":1839,"column_start":1,"column_end":12}},{"value":"/ td = datetime.timedelta(days=3, minutes=10)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882577,"byte_end":11882624,"line_start":1840,"line_end":1840,"column_start":1,"column_end":48}},{"value":"/ duration = Duration()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882625,"byte_end":11882650,"line_start":1841,"line_end":1841,"column_start":1,"column_end":26}},{"value":"/ duration.FromTimedelta(td)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882651,"byte_end":11882681,"line_start":1842,"line_end":1842,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882682,"byte_end":11882689,"line_start":1843,"line_end":1843,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882690,"byte_end":11882693,"line_start":1844,"line_end":1844,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882694,"byte_end":11882712,"line_start":1845,"line_end":1845,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882713,"byte_end":11882716,"line_start":1846,"line_end":1846,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Duration type is encoded as a string rather than an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882717,"byte_end":11882792,"line_start":1847,"line_end":1847,"column_start":1,"column_end":76}},{"value":"/ object, where the string ends in the suffix \"s\" (indicating seconds) and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882793,"byte_end":11882869,"line_start":1848,"line_end":1848,"column_start":1,"column_end":77}},{"value":"/ is preceded by the number of seconds, with nanoseconds expressed as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882870,"byte_end":11882941,"line_start":1849,"line_end":1849,"column_start":1,"column_end":72}},{"value":"/ fractional seconds. For example, 3 seconds with 0 nanoseconds should be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11882942,"byte_end":11883017,"line_start":1850,"line_end":1850,"column_start":1,"column_end":76}},{"value":"/ encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883018,"byte_end":11883093,"line_start":1851,"line_end":1851,"column_start":1,"column_end":76}},{"value":"/ be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883094,"byte_end":11883164,"line_start":1852,"line_end":1852,"column_start":1,"column_end":71}},{"value":"/ microsecond should be expressed in JSON format as \"3.000001s\".","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883165,"byte_end":11883231,"line_start":1853,"line_end":1853,"column_start":1,"column_end":67}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883232,"byte_end":11883278,"line_start":1854,"line_end":1854,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883613,"byte_end":11883620,"line_start":1861,"line_end":1861,"column_start":9,"column_end":16},"name":"seconds","qualname":"::protobuf::Duration::seconds","value":"i64","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n","sig":null,"attributes":[{"value":"/ Signed seconds of the span of time. Must be from -315,576,000,000","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883351,"byte_end":11883420,"line_start":1857,"line_end":1857,"column_start":5,"column_end":74}},{"value":"/ to +315,576,000,000 inclusive. Note: these bounds are computed from:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883425,"byte_end":11883497,"line_start":1858,"line_end":1858,"column_start":5,"column_end":77}},{"value":"/ 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883502,"byte_end":11883573,"line_start":1859,"line_end":1859,"column_start":5,"column_end":76}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883578,"byte_end":11883604,"line_start":1860,"line_end":1860,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884081,"byte_end":11884086,"line_start":1869,"line_end":1869,"column_start":9,"column_end":14},"name":"nanos","qualname":"::protobuf::Duration::nanos","value":"i32","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n","sig":null,"attributes":[{"value":"/ Signed fractions of a second at nanosecond resolution of the span","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883631,"byte_end":11883700,"line_start":1862,"line_end":1862,"column_start":5,"column_end":74}},{"value":"/ of time. Durations less than one second are represented with a 0","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883705,"byte_end":11883773,"line_start":1863,"line_end":1863,"column_start":5,"column_end":73}},{"value":"/ `seconds` field and a positive or negative `nanos` field. For durations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883778,"byte_end":11883853,"line_start":1864,"line_end":1864,"column_start":5,"column_end":80}},{"value":"/ of one second or more, a non-zero value for the `nanos` field must be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883858,"byte_end":11883931,"line_start":1865,"line_end":1865,"column_start":5,"column_end":78}},{"value":"/ of the same sign as the `seconds` field. Must be from -999,999,999","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11883936,"byte_end":11884006,"line_start":1866,"line_end":1866,"column_start":5,"column_end":75}},{"value":"/ to +999,999,999 inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884011,"byte_end":11884041,"line_start":1867,"line_end":1867,"column_start":5,"column_end":35}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884046,"byte_end":11884072,"line_start":1868,"line_end":1868,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890485,"byte_end":11890494,"line_start":2095,"line_end":2095,"column_start":12,"column_end":21},"name":"FieldMask","qualname":"::protobuf::FieldMask","value":"FieldMask { paths }","parent":null,"children":[{"krate":0,"index":3063}],"decl_id":null,"docs":" `FieldMask` represents a set of symbolic field paths, for example:","sig":null,"attributes":[{"value":"/ `FieldMask` represents a set of symbolic field paths, for example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884095,"byte_end":11884165,"line_start":1871,"line_end":1871,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884166,"byte_end":11884169,"line_start":1872,"line_end":1872,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884170,"byte_end":11884181,"line_start":1873,"line_end":1873,"column_start":1,"column_end":12}},{"value":"/ paths: \"f.a\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884182,"byte_end":11884198,"line_start":1874,"line_end":1874,"column_start":1,"column_end":17}},{"value":"/ paths: \"f.b.d\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884199,"byte_end":11884217,"line_start":1875,"line_end":1875,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884218,"byte_end":11884225,"line_start":1876,"line_end":1876,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884226,"byte_end":11884229,"line_start":1877,"line_end":1877,"column_start":1,"column_end":4}},{"value":"/ Here `f` represents a field in some root message, `a` and `b`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884230,"byte_end":11884295,"line_start":1878,"line_end":1878,"column_start":1,"column_end":66}},{"value":"/ fields in the message found in `f`, and `d` a field found in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884296,"byte_end":11884364,"line_start":1879,"line_end":1879,"column_start":1,"column_end":69}},{"value":"/ message in `f.b`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884365,"byte_end":11884386,"line_start":1880,"line_end":1880,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884387,"byte_end":11884390,"line_start":1881,"line_end":1881,"column_start":1,"column_end":4}},{"value":"/ Field masks are used to specify a subset of fields that should be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884391,"byte_end":11884460,"line_start":1882,"line_end":1882,"column_start":1,"column_end":70}},{"value":"/ returned by a get operation or modified by an update operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884461,"byte_end":11884528,"line_start":1883,"line_end":1883,"column_start":1,"column_end":68}},{"value":"/ Field masks also have a custom JSON encoding (see below).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884529,"byte_end":11884590,"line_start":1884,"line_end":1884,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884591,"byte_end":11884594,"line_start":1885,"line_end":1885,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Projections","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884595,"byte_end":11884627,"line_start":1886,"line_end":1886,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884628,"byte_end":11884631,"line_start":1887,"line_end":1887,"column_start":1,"column_end":4}},{"value":"/ When used in the context of a projection, a response message or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884632,"byte_end":11884699,"line_start":1888,"line_end":1888,"column_start":1,"column_end":68}},{"value":"/ sub-message is filtered by the API to only contain those fields as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884700,"byte_end":11884770,"line_start":1889,"line_end":1889,"column_start":1,"column_end":71}},{"value":"/ specified in the mask. For example, if the mask in the previous","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884771,"byte_end":11884838,"line_start":1890,"line_end":1890,"column_start":1,"column_end":68}},{"value":"/ example is applied to a response message as follows:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884839,"byte_end":11884895,"line_start":1891,"line_end":1891,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884896,"byte_end":11884899,"line_start":1892,"line_end":1892,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884900,"byte_end":11884911,"line_start":1893,"line_end":1893,"column_start":1,"column_end":12}},{"value":"/ f {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884912,"byte_end":11884919,"line_start":1894,"line_end":1894,"column_start":1,"column_end":8}},{"value":"/    a : 22","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884920,"byte_end":11884933,"line_start":1895,"line_end":1895,"column_start":1,"column_end":14}},{"value":"/    b {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884934,"byte_end":11884944,"line_start":1896,"line_end":1896,"column_start":1,"column_end":11}},{"value":"/      d : 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884945,"byte_end":11884959,"line_start":1897,"line_end":1897,"column_start":1,"column_end":15}},{"value":"/      x : 2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884960,"byte_end":11884974,"line_start":1898,"line_end":1898,"column_start":1,"column_end":15}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884975,"byte_end":11884983,"line_start":1899,"line_end":1899,"column_start":1,"column_end":9}},{"value":"/    y : 13","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884984,"byte_end":11884997,"line_start":1900,"line_end":1900,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11884998,"byte_end":11885003,"line_start":1901,"line_end":1901,"column_start":1,"column_end":6}},{"value":"/ z: 8","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885004,"byte_end":11885012,"line_start":1902,"line_end":1902,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885013,"byte_end":11885020,"line_start":1903,"line_end":1903,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885021,"byte_end":11885024,"line_start":1904,"line_end":1904,"column_start":1,"column_end":4}},{"value":"/ The result will not contain specific values for fields x,y and z","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885025,"byte_end":11885093,"line_start":1905,"line_end":1905,"column_start":1,"column_end":69}},{"value":"/ (their value will be set to the default, and omitted in proto text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885094,"byte_end":11885164,"line_start":1906,"line_end":1906,"column_start":1,"column_end":71}},{"value":"/ output):","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885165,"byte_end":11885177,"line_start":1907,"line_end":1907,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885178,"byte_end":11885181,"line_start":1908,"line_end":1908,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885182,"byte_end":11885193,"line_start":1909,"line_end":1909,"column_start":1,"column_end":12}},{"value":"/ f {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885194,"byte_end":11885201,"line_start":1910,"line_end":1910,"column_start":1,"column_end":8}},{"value":"/    a : 22","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885202,"byte_end":11885215,"line_start":1911,"line_end":1911,"column_start":1,"column_end":14}},{"value":"/    b {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885216,"byte_end":11885226,"line_start":1912,"line_end":1912,"column_start":1,"column_end":11}},{"value":"/      d : 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885227,"byte_end":11885241,"line_start":1913,"line_end":1913,"column_start":1,"column_end":15}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885242,"byte_end":11885250,"line_start":1914,"line_end":1914,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885251,"byte_end":11885256,"line_start":1915,"line_end":1915,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885257,"byte_end":11885264,"line_start":1916,"line_end":1916,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885265,"byte_end":11885268,"line_start":1917,"line_end":1917,"column_start":1,"column_end":4}},{"value":"/ A repeated field is not allowed except at the last position of a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885269,"byte_end":11885337,"line_start":1918,"line_end":1918,"column_start":1,"column_end":69}},{"value":"/ paths string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885338,"byte_end":11885355,"line_start":1919,"line_end":1919,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885356,"byte_end":11885359,"line_start":1920,"line_end":1920,"column_start":1,"column_end":4}},{"value":"/ If a FieldMask object is not present in a get operation, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885360,"byte_end":11885424,"line_start":1921,"line_end":1921,"column_start":1,"column_end":65}},{"value":"/ operation applies to all fields (as if a FieldMask of all fields","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885425,"byte_end":11885493,"line_start":1922,"line_end":1922,"column_start":1,"column_end":69}},{"value":"/ had been specified).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885494,"byte_end":11885518,"line_start":1923,"line_end":1923,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885519,"byte_end":11885522,"line_start":1924,"line_end":1924,"column_start":1,"column_end":4}},{"value":"/ Note that a field mask does not necessarily apply to the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885523,"byte_end":11885583,"line_start":1925,"line_end":1925,"column_start":1,"column_end":61}},{"value":"/ top-level response message. In case of a REST get operation, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885584,"byte_end":11885652,"line_start":1926,"line_end":1926,"column_start":1,"column_end":69}},{"value":"/ field mask applies directly to the response, but in case of a REST","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885653,"byte_end":11885723,"line_start":1927,"line_end":1927,"column_start":1,"column_end":71}},{"value":"/ list operation, the mask instead applies to each individual message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885724,"byte_end":11885795,"line_start":1928,"line_end":1928,"column_start":1,"column_end":72}},{"value":"/ in the returned resource list. In case of a REST custom method,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885796,"byte_end":11885863,"line_start":1929,"line_end":1929,"column_start":1,"column_end":68}},{"value":"/ other definitions may be used. Where the mask applies will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885864,"byte_end":11885929,"line_start":1930,"line_end":1930,"column_start":1,"column_end":66}},{"value":"/ clearly documented together with its declaration in the API.  In","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885930,"byte_end":11885998,"line_start":1931,"line_end":1931,"column_start":1,"column_end":69}},{"value":"/ any case, the effect on the returned resource/resources is required","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11885999,"byte_end":11886070,"line_start":1932,"line_end":1932,"column_start":1,"column_end":72}},{"value":"/ behavior for APIs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886071,"byte_end":11886093,"line_start":1933,"line_end":1933,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886094,"byte_end":11886097,"line_start":1934,"line_end":1934,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Update Operations","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886098,"byte_end":11886136,"line_start":1935,"line_end":1935,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886137,"byte_end":11886140,"line_start":1936,"line_end":1936,"column_start":1,"column_end":4}},{"value":"/ A field mask in update operations specifies which fields of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886141,"byte_end":11886208,"line_start":1937,"line_end":1937,"column_start":1,"column_end":68}},{"value":"/ targeted resource are going to be updated. The API is required","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886209,"byte_end":11886275,"line_start":1938,"line_end":1938,"column_start":1,"column_end":67}},{"value":"/ to only change the values of the fields as specified in the mask","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886276,"byte_end":11886344,"line_start":1939,"line_end":1939,"column_start":1,"column_end":69}},{"value":"/ and leave the others untouched. If a resource is passed in to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886345,"byte_end":11886410,"line_start":1940,"line_end":1940,"column_start":1,"column_end":66}},{"value":"/ describe the updated values, the API ignores the values of all","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886411,"byte_end":11886477,"line_start":1941,"line_end":1941,"column_start":1,"column_end":67}},{"value":"/ fields not covered by the mask.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886478,"byte_end":11886513,"line_start":1942,"line_end":1942,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886514,"byte_end":11886517,"line_start":1943,"line_end":1943,"column_start":1,"column_end":4}},{"value":"/ If a repeated field is specified for an update operation, new values will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886518,"byte_end":11886595,"line_start":1944,"line_end":1944,"column_start":1,"column_end":78}},{"value":"/ be appended to the existing repeated field in the target resource. Note that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886596,"byte_end":11886676,"line_start":1945,"line_end":1945,"column_start":1,"column_end":81}},{"value":"/ a repeated field is only allowed in the last position of a `paths` string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886677,"byte_end":11886755,"line_start":1946,"line_end":1946,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886756,"byte_end":11886759,"line_start":1947,"line_end":1947,"column_start":1,"column_end":4}},{"value":"/ If a sub-message is specified in the last position of the field mask for an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886760,"byte_end":11886839,"line_start":1948,"line_end":1948,"column_start":1,"column_end":80}},{"value":"/ update operation, then new value will be merged into the existing sub-message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886840,"byte_end":11886921,"line_start":1949,"line_end":1949,"column_start":1,"column_end":82}},{"value":"/ in the target resource.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886922,"byte_end":11886949,"line_start":1950,"line_end":1950,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886950,"byte_end":11886953,"line_start":1951,"line_end":1951,"column_start":1,"column_end":4}},{"value":"/ For example, given the target message:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886954,"byte_end":11886996,"line_start":1952,"line_end":1952,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11886997,"byte_end":11887000,"line_start":1953,"line_end":1953,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887001,"byte_end":11887012,"line_start":1954,"line_end":1954,"column_start":1,"column_end":12}},{"value":"/ f {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887013,"byte_end":11887020,"line_start":1955,"line_end":1955,"column_start":1,"column_end":8}},{"value":"/    b {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887021,"byte_end":11887031,"line_start":1956,"line_end":1956,"column_start":1,"column_end":11}},{"value":"/      d: 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887032,"byte_end":11887045,"line_start":1957,"line_end":1957,"column_start":1,"column_end":14}},{"value":"/      x: 2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887046,"byte_end":11887059,"line_start":1958,"line_end":1958,"column_start":1,"column_end":14}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887060,"byte_end":11887068,"line_start":1959,"line_end":1959,"column_start":1,"column_end":9}},{"value":"/    c: \\[1\\]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887069,"byte_end":11887084,"line_start":1960,"line_end":1960,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887085,"byte_end":11887090,"line_start":1961,"line_end":1961,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887091,"byte_end":11887098,"line_start":1962,"line_end":1962,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887099,"byte_end":11887102,"line_start":1963,"line_end":1963,"column_start":1,"column_end":4}},{"value":"/ And an update message:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887103,"byte_end":11887129,"line_start":1964,"line_end":1964,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887130,"byte_end":11887133,"line_start":1965,"line_end":1965,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887134,"byte_end":11887145,"line_start":1966,"line_end":1966,"column_start":1,"column_end":12}},{"value":"/ f {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887146,"byte_end":11887153,"line_start":1967,"line_end":1967,"column_start":1,"column_end":8}},{"value":"/    b {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887154,"byte_end":11887164,"line_start":1968,"line_end":1968,"column_start":1,"column_end":11}},{"value":"/      d: 10","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887165,"byte_end":11887179,"line_start":1969,"line_end":1969,"column_start":1,"column_end":15}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887180,"byte_end":11887188,"line_start":1970,"line_end":1970,"column_start":1,"column_end":9}},{"value":"/    c: \\[2\\]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887189,"byte_end":11887204,"line_start":1971,"line_end":1971,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887205,"byte_end":11887210,"line_start":1972,"line_end":1972,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887211,"byte_end":11887218,"line_start":1973,"line_end":1973,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887219,"byte_end":11887222,"line_start":1974,"line_end":1974,"column_start":1,"column_end":4}},{"value":"/ then if the field mask is:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887223,"byte_end":11887253,"line_start":1975,"line_end":1975,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887254,"byte_end":11887257,"line_start":1976,"line_end":1976,"column_start":1,"column_end":4}},{"value":"/ paths: \\[\"f.b\", \"f.c\"\\]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887258,"byte_end":11887285,"line_start":1977,"line_end":1977,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887286,"byte_end":11887289,"line_start":1978,"line_end":1978,"column_start":1,"column_end":4}},{"value":"/ then the result will be:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887290,"byte_end":11887318,"line_start":1979,"line_end":1979,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887319,"byte_end":11887322,"line_start":1980,"line_end":1980,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887323,"byte_end":11887334,"line_start":1981,"line_end":1981,"column_start":1,"column_end":12}},{"value":"/ f {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887335,"byte_end":11887342,"line_start":1982,"line_end":1982,"column_start":1,"column_end":8}},{"value":"/    b {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887343,"byte_end":11887353,"line_start":1983,"line_end":1983,"column_start":1,"column_end":11}},{"value":"/      d: 10","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887354,"byte_end":11887368,"line_start":1984,"line_end":1984,"column_start":1,"column_end":15}},{"value":"/      x: 2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887369,"byte_end":11887382,"line_start":1985,"line_end":1985,"column_start":1,"column_end":14}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887383,"byte_end":11887391,"line_start":1986,"line_end":1986,"column_start":1,"column_end":9}},{"value":"/    c: [1, 2]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887392,"byte_end":11887408,"line_start":1987,"line_end":1987,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887409,"byte_end":11887414,"line_start":1988,"line_end":1988,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887415,"byte_end":11887422,"line_start":1989,"line_end":1989,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887423,"byte_end":11887426,"line_start":1990,"line_end":1990,"column_start":1,"column_end":4}},{"value":"/ An implementation may provide options to override this default behavior for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887427,"byte_end":11887506,"line_start":1991,"line_end":1991,"column_start":1,"column_end":80}},{"value":"/ repeated and message fields.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887507,"byte_end":11887539,"line_start":1992,"line_end":1992,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887540,"byte_end":11887543,"line_start":1993,"line_end":1993,"column_start":1,"column_end":4}},{"value":"/ In order to reset a field's value to the default, the field must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887544,"byte_end":11887612,"line_start":1994,"line_end":1994,"column_start":1,"column_end":69}},{"value":"/ be in the mask and set to the default value in the provided resource.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887613,"byte_end":11887686,"line_start":1995,"line_end":1995,"column_start":1,"column_end":74}},{"value":"/ Hence, in order to reset all fields of a resource, provide a default","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887687,"byte_end":11887759,"line_start":1996,"line_end":1996,"column_start":1,"column_end":73}},{"value":"/ instance of the resource and set all fields in the mask, or do","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887760,"byte_end":11887826,"line_start":1997,"line_end":1997,"column_start":1,"column_end":67}},{"value":"/ not provide a mask as described below.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887827,"byte_end":11887869,"line_start":1998,"line_end":1998,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887870,"byte_end":11887873,"line_start":1999,"line_end":1999,"column_start":1,"column_end":4}},{"value":"/ If a field mask is not present on update, the operation applies to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887874,"byte_end":11887944,"line_start":2000,"line_end":2000,"column_start":1,"column_end":71}},{"value":"/ all fields (as if a field mask of all fields has been specified).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11887945,"byte_end":11888014,"line_start":2001,"line_end":2001,"column_start":1,"column_end":70}},{"value":"/ Note that in the presence of schema evolution, this may mean that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888015,"byte_end":11888084,"line_start":2002,"line_end":2002,"column_start":1,"column_end":70}},{"value":"/ fields the client does not know and has therefore not filled into","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888085,"byte_end":11888154,"line_start":2003,"line_end":2003,"column_start":1,"column_end":70}},{"value":"/ the request will be reset to their default. If this is unwanted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888155,"byte_end":11888222,"line_start":2004,"line_end":2004,"column_start":1,"column_end":68}},{"value":"/ behavior, a specific service may require a client to always specify","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888223,"byte_end":11888294,"line_start":2005,"line_end":2005,"column_start":1,"column_end":72}},{"value":"/ a field mask, producing an error if not.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888295,"byte_end":11888339,"line_start":2006,"line_end":2006,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888340,"byte_end":11888343,"line_start":2007,"line_end":2007,"column_start":1,"column_end":4}},{"value":"/ As with get operations, the location of the resource which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888344,"byte_end":11888406,"line_start":2008,"line_end":2008,"column_start":1,"column_end":63}},{"value":"/ describes the updated values in the request message depends on the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888407,"byte_end":11888477,"line_start":2009,"line_end":2009,"column_start":1,"column_end":71}},{"value":"/ operation kind. In any case, the effect of the field mask is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888478,"byte_end":11888542,"line_start":2010,"line_end":2010,"column_start":1,"column_end":65}},{"value":"/ required to be honored by the API.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888543,"byte_end":11888581,"line_start":2011,"line_end":2011,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888582,"byte_end":11888585,"line_start":2012,"line_end":2012,"column_start":1,"column_end":4}},{"value":"/ ## Considerations for HTTP REST","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888586,"byte_end":11888621,"line_start":2013,"line_end":2013,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888622,"byte_end":11888625,"line_start":2014,"line_end":2014,"column_start":1,"column_end":4}},{"value":"/ The HTTP kind of an update operation which uses a field mask must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888626,"byte_end":11888695,"line_start":2015,"line_end":2015,"column_start":1,"column_end":70}},{"value":"/ be set to PATCH instead of PUT in order to satisfy HTTP semantics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888696,"byte_end":11888765,"line_start":2016,"line_end":2016,"column_start":1,"column_end":70}},{"value":"/ (PUT must only be used for full updates).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888766,"byte_end":11888811,"line_start":2017,"line_end":2017,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888812,"byte_end":11888815,"line_start":2018,"line_end":2018,"column_start":1,"column_end":4}},{"value":"/ # JSON Encoding of Field Masks","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888816,"byte_end":11888850,"line_start":2019,"line_end":2019,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888851,"byte_end":11888854,"line_start":2020,"line_end":2020,"column_start":1,"column_end":4}},{"value":"/ In JSON, a field mask is encoded as a single string where paths are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888855,"byte_end":11888926,"line_start":2021,"line_end":2021,"column_start":1,"column_end":72}},{"value":"/ separated by a comma. Fields name in each path are converted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888927,"byte_end":11888991,"line_start":2022,"line_end":2022,"column_start":1,"column_end":65}},{"value":"/ to/from lower-camel naming conventions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11888992,"byte_end":11889035,"line_start":2023,"line_end":2023,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889036,"byte_end":11889039,"line_start":2024,"line_end":2024,"column_start":1,"column_end":4}},{"value":"/ As an example, consider the following message declarations:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889040,"byte_end":11889103,"line_start":2025,"line_end":2025,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889104,"byte_end":11889107,"line_start":2026,"line_end":2026,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889108,"byte_end":11889119,"line_start":2027,"line_end":2027,"column_start":1,"column_end":12}},{"value":"/ message Profile {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889120,"byte_end":11889141,"line_start":2028,"line_end":2028,"column_start":1,"column_end":22}},{"value":"/    User user = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889142,"byte_end":11889163,"line_start":2029,"line_end":2029,"column_start":1,"column_end":22}},{"value":"/    Photo photo = 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889164,"byte_end":11889187,"line_start":2030,"line_end":2030,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889188,"byte_end":11889193,"line_start":2031,"line_end":2031,"column_start":1,"column_end":6}},{"value":"/ message User {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889194,"byte_end":11889212,"line_start":2032,"line_end":2032,"column_start":1,"column_end":19}},{"value":"/    string display_name = 1;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889213,"byte_end":11889244,"line_start":2033,"line_end":2033,"column_start":1,"column_end":32}},{"value":"/    string address = 2;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889245,"byte_end":11889271,"line_start":2034,"line_end":2034,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889272,"byte_end":11889277,"line_start":2035,"line_end":2035,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889278,"byte_end":11889285,"line_start":2036,"line_end":2036,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889286,"byte_end":11889289,"line_start":2037,"line_end":2037,"column_start":1,"column_end":4}},{"value":"/ In proto a field mask for `Profile` may look as such:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889290,"byte_end":11889347,"line_start":2038,"line_end":2038,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889348,"byte_end":11889351,"line_start":2039,"line_end":2039,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889352,"byte_end":11889363,"line_start":2040,"line_end":2040,"column_start":1,"column_end":12}},{"value":"/ mask {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889364,"byte_end":11889374,"line_start":2041,"line_end":2041,"column_start":1,"column_end":11}},{"value":"/    paths: \"user.display_name\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889375,"byte_end":11889408,"line_start":2042,"line_end":2042,"column_start":1,"column_end":34}},{"value":"/    paths: \"photo\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889409,"byte_end":11889430,"line_start":2043,"line_end":2043,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889431,"byte_end":11889436,"line_start":2044,"line_end":2044,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889437,"byte_end":11889444,"line_start":2045,"line_end":2045,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889445,"byte_end":11889448,"line_start":2046,"line_end":2046,"column_start":1,"column_end":4}},{"value":"/ In JSON, the same mask is represented as below:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889449,"byte_end":11889500,"line_start":2047,"line_end":2047,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889501,"byte_end":11889504,"line_start":2048,"line_end":2048,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889505,"byte_end":11889516,"line_start":2049,"line_end":2049,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889517,"byte_end":11889522,"line_start":2050,"line_end":2050,"column_start":1,"column_end":6}},{"value":"/    mask: \"user.displayName,photo\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889523,"byte_end":11889560,"line_start":2051,"line_end":2051,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889561,"byte_end":11889566,"line_start":2052,"line_end":2052,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889567,"byte_end":11889574,"line_start":2053,"line_end":2053,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889575,"byte_end":11889578,"line_start":2054,"line_end":2054,"column_start":1,"column_end":4}},{"value":"/ # Field Masks and Oneof Fields","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889579,"byte_end":11889613,"line_start":2055,"line_end":2055,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889614,"byte_end":11889617,"line_start":2056,"line_end":2056,"column_start":1,"column_end":4}},{"value":"/ Field masks treat fields in oneofs just as regular fields. Consider the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889618,"byte_end":11889693,"line_start":2057,"line_end":2057,"column_start":1,"column_end":76}},{"value":"/ following message:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889694,"byte_end":11889716,"line_start":2058,"line_end":2058,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889717,"byte_end":11889720,"line_start":2059,"line_end":2059,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889721,"byte_end":11889732,"line_start":2060,"line_end":2060,"column_start":1,"column_end":12}},{"value":"/ message SampleMessage {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889733,"byte_end":11889760,"line_start":2061,"line_end":2061,"column_start":1,"column_end":28}},{"value":"/    oneof test_oneof {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889761,"byte_end":11889786,"line_start":2062,"line_end":2062,"column_start":1,"column_end":26}},{"value":"/      string name = 4;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889787,"byte_end":11889812,"line_start":2063,"line_end":2063,"column_start":1,"column_end":26}},{"value":"/      SubMessage sub_message = 9;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889813,"byte_end":11889849,"line_start":2064,"line_end":2064,"column_start":1,"column_end":37}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889850,"byte_end":11889858,"line_start":2065,"line_end":2065,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889859,"byte_end":11889864,"line_start":2066,"line_end":2066,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889865,"byte_end":11889872,"line_start":2067,"line_end":2067,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889873,"byte_end":11889876,"line_start":2068,"line_end":2068,"column_start":1,"column_end":4}},{"value":"/ The field mask can be:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889877,"byte_end":11889903,"line_start":2069,"line_end":2069,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889904,"byte_end":11889907,"line_start":2070,"line_end":2070,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889908,"byte_end":11889919,"line_start":2071,"line_end":2071,"column_start":1,"column_end":12}},{"value":"/ mask {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889920,"byte_end":11889930,"line_start":2072,"line_end":2072,"column_start":1,"column_end":11}},{"value":"/    paths: \"name\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889931,"byte_end":11889951,"line_start":2073,"line_end":2073,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889952,"byte_end":11889957,"line_start":2074,"line_end":2074,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889958,"byte_end":11889965,"line_start":2075,"line_end":2075,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889966,"byte_end":11889969,"line_start":2076,"line_end":2076,"column_start":1,"column_end":4}},{"value":"/ Or:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889970,"byte_end":11889977,"line_start":2077,"line_end":2077,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889978,"byte_end":11889981,"line_start":2078,"line_end":2078,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889982,"byte_end":11889993,"line_start":2079,"line_end":2079,"column_start":1,"column_end":12}},{"value":"/ mask {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11889994,"byte_end":11890004,"line_start":2080,"line_end":2080,"column_start":1,"column_end":11}},{"value":"/    paths: \"sub_message\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890005,"byte_end":11890032,"line_start":2081,"line_end":2081,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890033,"byte_end":11890038,"line_start":2082,"line_end":2082,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890039,"byte_end":11890046,"line_start":2083,"line_end":2083,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890047,"byte_end":11890050,"line_start":2084,"line_end":2084,"column_start":1,"column_end":4}},{"value":"/ Note that oneof type names (\"test_oneof\" in this case) cannot be used in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890051,"byte_end":11890127,"line_start":2085,"line_end":2085,"column_start":1,"column_end":77}},{"value":"/ paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890128,"byte_end":11890138,"line_start":2086,"line_end":2086,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890139,"byte_end":11890142,"line_start":2087,"line_end":2087,"column_start":1,"column_end":4}},{"value":"/ ## Field Mask Verification","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890143,"byte_end":11890173,"line_start":2088,"line_end":2088,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890174,"byte_end":11890177,"line_start":2089,"line_end":2089,"column_start":1,"column_end":4}},{"value":"/ The implementation of any API method which has a FieldMask type field in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890178,"byte_end":11890258,"line_start":2090,"line_end":2090,"column_start":1,"column_end":81}},{"value":"/ request should verify the included field paths, and return an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890259,"byte_end":11890324,"line_start":2091,"line_end":2091,"column_start":1,"column_end":66}},{"value":"/ `INVALID_ARGUMENT` error if any path is unmappable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890325,"byte_end":11890380,"line_start":2092,"line_end":2092,"column_start":1,"column_end":56}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890381,"byte_end":11890427,"line_start":2093,"line_end":2093,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890584,"byte_end":11890589,"line_start":2098,"line_end":2098,"column_start":9,"column_end":14},"name":"paths","qualname":"::protobuf::FieldMask::paths","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The set of field mask paths.\n","sig":null,"attributes":[{"value":"/ The set of field mask paths.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890501,"byte_end":11890533,"line_start":2096,"line_end":2096,"column_start":5,"column_end":37}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890538,"byte_end":11890575,"line_start":2097,"line_end":2097,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891201,"byte_end":11891207,"line_start":2110,"line_end":2110,"column_start":12,"column_end":18},"name":"Struct","qualname":"::protobuf::Struct","value":"Struct { fields }","parent":null,"children":[{"krate":0,"index":3097}],"decl_id":null,"docs":" `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.","sig":null,"attributes":[{"value":"/ `Struct` represents a structured data value, consisting of fields","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890651,"byte_end":11890720,"line_start":2100,"line_end":2100,"column_start":1,"column_end":70}},{"value":"/ which map to dynamically typed values. In some languages, `Struct`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890721,"byte_end":11890791,"line_start":2101,"line_end":2101,"column_start":1,"column_end":71}},{"value":"/ might be supported by a native representation. For example, in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890792,"byte_end":11890858,"line_start":2102,"line_end":2102,"column_start":1,"column_end":67}},{"value":"/ scripting languages like JS a struct is represented as an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890859,"byte_end":11890920,"line_start":2103,"line_end":2103,"column_start":1,"column_end":62}},{"value":"/ object. The details of that representation are described together","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890921,"byte_end":11890990,"line_start":2104,"line_end":2104,"column_start":1,"column_end":70}},{"value":"/ with the proto support for the language.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11890991,"byte_end":11891035,"line_start":2105,"line_end":2105,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891036,"byte_end":11891039,"line_start":2106,"line_end":2106,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Struct` is JSON object.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891040,"byte_end":11891096,"line_start":2107,"line_end":2107,"column_start":1,"column_end":57}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891097,"byte_end":11891143,"line_start":2108,"line_end":2108,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891324,"byte_end":11891330,"line_start":2113,"line_end":2113,"column_start":9,"column_end":15},"name":"fields","qualname":"::protobuf::Struct::fields","value":"prost::alloc::collections::BTreeMap<prost::alloc::string::String, protobuf::Value>","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Unordered map of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Unordered map of dynamically typed values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891214,"byte_end":11891260,"line_start":2111,"line_end":2111,"column_start":5,"column_end":51}},{"value":"prost(btree_map = \"string, message\", tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891265,"byte_end":11891315,"line_start":2112,"line_end":2112,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891868,"byte_end":11891873,"line_start":2126,"line_end":2126,"column_start":12,"column_end":17},"name":"Value","qualname":"::protobuf::Value","value":"Value { kind }","parent":null,"children":[{"krate":0,"index":3118}],"decl_id":null,"docs":" `Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of these\n variants. Absence of any variant indicates an error.","sig":null,"attributes":[{"value":"/ `Value` represents a dynamically typed value which can be either","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891435,"byte_end":11891503,"line_start":2118,"line_end":2118,"column_start":1,"column_end":69}},{"value":"/ null, a number, a string, a boolean, a recursive struct value, or a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891504,"byte_end":11891575,"line_start":2119,"line_end":2119,"column_start":1,"column_end":72}},{"value":"/ list of values. A producer of value is expected to set one of these","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891576,"byte_end":11891647,"line_start":2120,"line_end":2120,"column_start":1,"column_end":72}},{"value":"/ variants. Absence of any variant indicates an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891648,"byte_end":11891704,"line_start":2121,"line_end":2121,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891705,"byte_end":11891708,"line_start":2122,"line_end":2122,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Value` is JSON value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891709,"byte_end":11891763,"line_start":2123,"line_end":2123,"column_start":1,"column_end":55}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891764,"byte_end":11891810,"line_start":2124,"line_end":2124,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891974,"byte_end":11891978,"line_start":2129,"line_end":2129,"column_start":9,"column_end":13},"name":"kind","qualname":"::protobuf::Value::kind","value":"core::option::Option<protobuf::value::Kind>","parent":{"krate":0,"index":3098},"children":[],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891880,"byte_end":11891902,"line_start":2127,"line_end":2127,"column_start":5,"column_end":27}},{"value":"prost(oneof = \"value::Kind\", tags = \"1, 2, 3, 4, 5, 6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11891907,"byte_end":11891965,"line_start":2128,"line_end":2128,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":433},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892073,"byte_end":11892078,"line_start":2132,"line_end":2132,"column_start":9,"column_end":14},"name":"value","qualname":"::protobuf::value","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3138}],"decl_id":null,"docs":" Nested message and enum types in `Value`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `Value`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892019,"byte_end":11892064,"line_start":2131,"line_end":2131,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892334,"byte_end":11892343,"line_start":2139,"line_end":2139,"column_start":9,"column_end":18},"name":"NullValue","qualname":"::protobuf::value::Kind::NullValue","value":"Kind::NullValue(i32)","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":" Represents a null value.\n","sig":null,"attributes":[{"value":"/ Represents a null value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892235,"byte_end":11892263,"line_start":2137,"line_end":2137,"column_start":9,"column_end":37}},{"value":"prost(enumeration = \"super::NullValue\", tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892272,"byte_end":11892325,"line_start":2138,"line_end":2138,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892344,"byte_end":11892347,"line_start":2139,"line_end":2139,"column_start":19,"column_end":22},"name":"0","qualname":"::protobuf::value::Kind::NullValue::0","value":"i32","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892433,"byte_end":11892444,"line_start":2142,"line_end":2142,"column_start":9,"column_end":20},"name":"NumberValue","qualname":"::protobuf::value::Kind::NumberValue","value":"Kind::NumberValue(f64)","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":" Represents a double value.\n","sig":null,"attributes":[{"value":"/ Represents a double value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892358,"byte_end":11892388,"line_start":2140,"line_end":2140,"column_start":9,"column_end":39}},{"value":"prost(double, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892397,"byte_end":11892424,"line_start":2141,"line_end":2141,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892445,"byte_end":11892448,"line_start":2142,"line_end":2142,"column_start":21,"column_end":24},"name":"0","qualname":"::protobuf::value::Kind::NumberValue::0","value":"f64","parent":{"krate":0,"index":3156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892534,"byte_end":11892545,"line_start":2145,"line_end":2145,"column_start":9,"column_end":20},"name":"StringValue","qualname":"::protobuf::value::Kind::StringValue","value":"Kind::StringValue(::prost::alloc::string::String)","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":" Represents a string value.\n","sig":null,"attributes":[{"value":"/ Represents a string value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892459,"byte_end":11892489,"line_start":2143,"line_end":2143,"column_start":9,"column_end":39}},{"value":"prost(string, tag = \"3\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892498,"byte_end":11892525,"line_start":2144,"line_end":2144,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892546,"byte_end":11892576,"line_start":2145,"line_end":2145,"column_start":21,"column_end":51},"name":"0","qualname":"::protobuf::value::Kind::StringValue::0","value":"prost::alloc::string::String","parent":{"krate":0,"index":3159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892661,"byte_end":11892670,"line_start":2148,"line_end":2148,"column_start":9,"column_end":18},"name":"BoolValue","qualname":"::protobuf::value::Kind::BoolValue","value":"Kind::BoolValue(bool)","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":" Represents a boolean value.\n","sig":null,"attributes":[{"value":"/ Represents a boolean value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892587,"byte_end":11892618,"line_start":2146,"line_end":2146,"column_start":9,"column_end":40}},{"value":"prost(bool, tag = \"4\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892627,"byte_end":11892652,"line_start":2147,"line_end":2147,"column_start":9,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892671,"byte_end":11892675,"line_start":2148,"line_end":2148,"column_start":19,"column_end":23},"name":"0","qualname":"::protobuf::value::Kind::BoolValue::0","value":"bool","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892766,"byte_end":11892777,"line_start":2151,"line_end":2151,"column_start":9,"column_end":20},"name":"StructValue","qualname":"::protobuf::value::Kind::StructValue","value":"Kind::StructValue(super::Struct)","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":" Represents a structured value.\n","sig":null,"attributes":[{"value":"/ Represents a structured value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892686,"byte_end":11892720,"line_start":2149,"line_end":2149,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"5\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892729,"byte_end":11892757,"line_start":2150,"line_end":2150,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3167},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892778,"byte_end":11892791,"line_start":2151,"line_end":2151,"column_start":21,"column_end":34},"name":"0","qualname":"::protobuf::value::Kind::StructValue::0","value":"protobuf::Struct","parent":{"krate":0,"index":3165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892882,"byte_end":11892891,"line_start":2154,"line_end":2154,"column_start":9,"column_end":18},"name":"ListValue","qualname":"::protobuf::value::Kind::ListValue","value":"Kind::ListValue(super::ListValue)","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":" Represents a repeated `Value`.\n","sig":null,"attributes":[{"value":"/ Represents a repeated `Value`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892802,"byte_end":11892836,"line_start":2152,"line_end":2152,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"6\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892845,"byte_end":11892873,"line_start":2153,"line_end":2153,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892892,"byte_end":11892908,"line_start":2154,"line_end":2154,"column_start":19,"column_end":35},"name":"0","qualname":"::protobuf::value::Kind::ListValue::0","value":"protobuf::ListValue","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892220,"byte_end":11892224,"line_start":2136,"line_end":2136,"column_start":14,"column_end":18},"name":"Kind","qualname":"::protobuf::value::Kind","value":"enum Kind {\n    NullValue(i32),\n    NumberValue(f64),\n    StringValue(::prost::alloc::string::String),\n    BoolValue(bool),\n    StructValue(super::Struct),\n    ListValue(super::ListValue),\n}","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3159},{"krate":0,"index":3162},{"krate":0,"index":3165},{"krate":0,"index":3168}],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892085,"byte_end":11892107,"line_start":2133,"line_end":2133,"column_start":5,"column_end":27}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892112,"byte_end":11892158,"line_start":2134,"line_end":2134,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893150,"byte_end":11893159,"line_start":2162,"line_end":2162,"column_start":12,"column_end":21},"name":"ListValue","qualname":"::protobuf::ListValue","value":"ListValue { values }","parent":null,"children":[{"krate":0,"index":3191}],"decl_id":null,"docs":" `ListValue` is a wrapper around a repeated field of values.","sig":null,"attributes":[{"value":"/ `ListValue` is a wrapper around a repeated field of values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892919,"byte_end":11892982,"line_start":2157,"line_end":2157,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892983,"byte_end":11892986,"line_start":2158,"line_end":2158,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `ListValue` is JSON array.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11892987,"byte_end":11893045,"line_start":2159,"line_end":2159,"column_start":1,"column_end":59}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893046,"byte_end":11893092,"line_start":2160,"line_end":2160,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3191},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893265,"byte_end":11893271,"line_start":2165,"line_end":2165,"column_start":9,"column_end":15},"name":"values","qualname":"::protobuf::ListValue::values","value":"prost::alloc::vec::Vec<protobuf::Value>","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" Repeated field of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Repeated field of dynamically typed values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893166,"byte_end":11893213,"line_start":2163,"line_end":2163,"column_start":5,"column_end":52}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893218,"byte_end":11893256,"line_start":2164,"line_end":2164,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893623,"byte_end":11893632,"line_start":2175,"line_end":2175,"column_start":5,"column_end":14},"name":"NullValue","qualname":"::protobuf::NullValue::NullValue","value":"NullValue::NullValue","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" Null value.\n","sig":null,"attributes":[{"value":"/ Null value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893603,"byte_end":11893618,"line_start":2174,"line_end":2174,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893587,"byte_end":11893596,"line_start":2173,"line_end":2173,"column_start":10,"column_end":19},"name":"NullValue","qualname":"::protobuf::NullValue","value":"enum NullValue { NullValue = , }","parent":null,"children":[{"krate":0,"index":3193}],"decl_id":null,"docs":" `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.","sig":null,"attributes":[{"value":"/ `NullValue` is a singleton enumeration to represent the null value for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893308,"byte_end":11893386,"line_start":2167,"line_end":2167,"column_start":1,"column_end":79}},{"value":"/ `Value` type union.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893387,"byte_end":11893410,"line_start":2168,"line_end":2168,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893411,"byte_end":11893414,"line_start":2169,"line_end":2169,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `NullValue` is JSON `null`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893415,"byte_end":11893474,"line_start":2170,"line_end":2170,"column_start":1,"column_end":60}},{"value":"repr(i32)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893565,"byte_end":11893577,"line_start":2172,"line_end":2172,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893919,"byte_end":11893930,"line_start":2182,"line_end":2182,"column_start":12,"column_end":23},"name":"as_str_name","qualname":"<NullValue>::as_str_name","value":"fn as_str_name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" String value of the enum field names used in the ProtoBuf definition.","sig":null,"attributes":[{"value":"/ String value of the enum field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893661,"byte_end":11893734,"line_start":2178,"line_end":2178,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893739,"byte_end":11893742,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ The values are not transformed in any way and thus are considered stable","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893747,"byte_end":11893823,"line_start":2180,"line_end":2180,"column_start":5,"column_end":81}},{"value":"/ (if the ProtoBuf definition does not change) and safe for programmatic use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893828,"byte_end":11893907,"line_start":2181,"line_end":2181,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894128,"byte_end":11894141,"line_start":2188,"line_end":2188,"column_start":12,"column_end":25},"name":"from_str_name","qualname":"<NullValue>::from_str_name","value":"fn from_str_name<'_>(&'_ str) -> ::core::option::Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an enum from field names used in the ProtoBuf definition.\n","sig":null,"attributes":[{"value":"/ Creates an enum from field names used in the ProtoBuf definition.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894047,"byte_end":11894116,"line_start":2187,"line_end":2187,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898496,"byte_end":11898505,"line_start":2296,"line_end":2296,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::protobuf::Timestamp","value":"Timestamp { seconds, nanos }","parent":null,"children":[{"krate":0,"index":3246},{"krate":0,"index":3247}],"decl_id":null,"docs":" A Timestamp represents a point in time independent of any time zone or local\n calendar, encoded as a count of seconds and fractions of seconds at\n nanosecond resolution. The count is relative to an epoch at UTC midnight on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n Gregorian calendar backwards to year one.","sig":null,"attributes":[{"value":"/ A Timestamp represents a point in time independent of any time zone or local","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894303,"byte_end":11894383,"line_start":2195,"line_end":2195,"column_start":1,"column_end":81}},{"value":"/ calendar, encoded as a count of seconds and fractions of seconds at","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894384,"byte_end":11894455,"line_start":2196,"line_end":2196,"column_start":1,"column_end":72}},{"value":"/ nanosecond resolution. The count is relative to an epoch at UTC midnight on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894456,"byte_end":11894535,"line_start":2197,"line_end":2197,"column_start":1,"column_end":80}},{"value":"/ January 1, 1970, in the proleptic Gregorian calendar which extends the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894536,"byte_end":11894610,"line_start":2198,"line_end":2198,"column_start":1,"column_end":75}},{"value":"/ Gregorian calendar backwards to year one.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894611,"byte_end":11894656,"line_start":2199,"line_end":2199,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894657,"byte_end":11894660,"line_start":2200,"line_end":2200,"column_start":1,"column_end":4}},{"value":"/ All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894661,"byte_end":11894740,"line_start":2201,"line_end":2201,"column_start":1,"column_end":80}},{"value":"/ second table is needed for interpretation, using a [24-hour linear","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894741,"byte_end":11894811,"line_start":2202,"line_end":2202,"column_start":1,"column_end":71}},{"value":"/ smear](<https://developers.google.com/time/smear>).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894812,"byte_end":11894867,"line_start":2203,"line_end":2203,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894868,"byte_end":11894871,"line_start":2204,"line_end":2204,"column_start":1,"column_end":4}},{"value":"/ The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894872,"byte_end":11894952,"line_start":2205,"line_end":2205,"column_start":1,"column_end":81}},{"value":"/ restricting to that range, we ensure that we can convert to and from [RFC","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11894953,"byte_end":11895030,"line_start":2206,"line_end":2206,"column_start":1,"column_end":78}},{"value":"/ 3339](<https://www.ietf.org/rfc/rfc3339.txt>) date strings.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895031,"byte_end":11895094,"line_start":2207,"line_end":2207,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895095,"byte_end":11895098,"line_start":2208,"line_end":2208,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895099,"byte_end":11895113,"line_start":2209,"line_end":2209,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895114,"byte_end":11895117,"line_start":2210,"line_end":2210,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Timestamp from POSIX `time()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895118,"byte_end":11895171,"line_start":2211,"line_end":2211,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895172,"byte_end":11895175,"line_start":2212,"line_end":2212,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895176,"byte_end":11895187,"line_start":2213,"line_end":2213,"column_start":1,"column_end":12}},{"value":"/ Timestamp timestamp;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895188,"byte_end":11895212,"line_start":2214,"line_end":2214,"column_start":1,"column_end":25}},{"value":"/ timestamp.set_seconds(time(NULL));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895213,"byte_end":11895251,"line_start":2215,"line_end":2215,"column_start":1,"column_end":39}},{"value":"/ timestamp.set_nanos(0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895252,"byte_end":11895279,"line_start":2216,"line_end":2216,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895280,"byte_end":11895287,"line_start":2217,"line_end":2217,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895288,"byte_end":11895291,"line_start":2218,"line_end":2218,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from POSIX `gettimeofday()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895292,"byte_end":11895353,"line_start":2219,"line_end":2219,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895354,"byte_end":11895357,"line_start":2220,"line_end":2220,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895358,"byte_end":11895369,"line_start":2221,"line_end":2221,"column_start":1,"column_end":12}},{"value":"/ struct timeval tv;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895370,"byte_end":11895392,"line_start":2222,"line_end":2222,"column_start":1,"column_end":23}},{"value":"/ gettimeofday(&tv, NULL);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895393,"byte_end":11895421,"line_start":2223,"line_end":2223,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895422,"byte_end":11895425,"line_start":2224,"line_end":2224,"column_start":1,"column_end":4}},{"value":"/ Timestamp timestamp;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895426,"byte_end":11895450,"line_start":2225,"line_end":2225,"column_start":1,"column_end":25}},{"value":"/ timestamp.set_seconds(tv.tv_sec);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895451,"byte_end":11895488,"line_start":2226,"line_end":2226,"column_start":1,"column_end":38}},{"value":"/ timestamp.set_nanos(tv.tv_usec * 1000);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895489,"byte_end":11895532,"line_start":2227,"line_end":2227,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895533,"byte_end":11895540,"line_start":2228,"line_end":2228,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895541,"byte_end":11895544,"line_start":2229,"line_end":2229,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895545,"byte_end":11895617,"line_start":2230,"line_end":2230,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895618,"byte_end":11895621,"line_start":2231,"line_end":2231,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895622,"byte_end":11895633,"line_start":2232,"line_end":2232,"column_start":1,"column_end":12}},{"value":"/ FILETIME ft;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895634,"byte_end":11895650,"line_start":2233,"line_end":2233,"column_start":1,"column_end":17}},{"value":"/ GetSystemTimeAsFileTime(&ft);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895651,"byte_end":11895684,"line_start":2234,"line_end":2234,"column_start":1,"column_end":34}},{"value":"/ UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895685,"byte_end":11895759,"line_start":2235,"line_end":2235,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895760,"byte_end":11895763,"line_start":2236,"line_end":2236,"column_start":1,"column_end":4}},{"value":"/ // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895764,"byte_end":11895840,"line_start":2237,"line_end":2237,"column_start":1,"column_end":77}},{"value":"/ // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895841,"byte_end":11895910,"line_start":2238,"line_end":2238,"column_start":1,"column_end":70}},{"value":"/ Timestamp timestamp;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895911,"byte_end":11895935,"line_start":2239,"line_end":2239,"column_start":1,"column_end":25}},{"value":"/ timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11895936,"byte_end":11896008,"line_start":2240,"line_end":2240,"column_start":1,"column_end":73}},{"value":"/ timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896009,"byte_end":11896069,"line_start":2241,"line_end":2241,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896070,"byte_end":11896077,"line_start":2242,"line_end":2242,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896078,"byte_end":11896081,"line_start":2243,"line_end":2243,"column_start":1,"column_end":4}},{"value":"/ Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896082,"byte_end":11896154,"line_start":2244,"line_end":2244,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896155,"byte_end":11896158,"line_start":2245,"line_end":2245,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896159,"byte_end":11896170,"line_start":2246,"line_end":2246,"column_start":1,"column_end":12}},{"value":"/ long millis = System.currentTimeMillis();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896171,"byte_end":11896216,"line_start":2247,"line_end":2247,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896217,"byte_end":11896220,"line_start":2248,"line_end":2248,"column_start":1,"column_end":4}},{"value":"/ Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896221,"byte_end":11896295,"line_start":2249,"line_end":2249,"column_start":1,"column_end":75}},{"value":"/      .setNanos((int) ((millis % 1000) * 1000000)).build();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896296,"byte_end":11896358,"line_start":2250,"line_end":2250,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896359,"byte_end":11896366,"line_start":2251,"line_end":2251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896367,"byte_end":11896370,"line_start":2252,"line_end":2252,"column_start":1,"column_end":4}},{"value":"/ Example 5: Compute Timestamp from Java `Instant.now()`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896371,"byte_end":11896430,"line_start":2253,"line_end":2253,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896431,"byte_end":11896434,"line_start":2254,"line_end":2254,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896435,"byte_end":11896446,"line_start":2255,"line_end":2255,"column_start":1,"column_end":12}},{"value":"/ Instant now = Instant.now();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896447,"byte_end":11896479,"line_start":2256,"line_end":2256,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896480,"byte_end":11896483,"line_start":2257,"line_end":2257,"column_start":1,"column_end":4}},{"value":"/ Timestamp timestamp =","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896484,"byte_end":11896509,"line_start":2258,"line_end":2258,"column_start":1,"column_end":26}},{"value":"/      Timestamp.newBuilder().setSeconds(now.getEpochSecond())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896510,"byte_end":11896574,"line_start":2259,"line_end":2259,"column_start":1,"column_end":65}},{"value":"/          .setNanos(now.getNano()).build();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896575,"byte_end":11896621,"line_start":2260,"line_end":2260,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896622,"byte_end":11896629,"line_start":2261,"line_end":2261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896630,"byte_end":11896633,"line_start":2262,"line_end":2262,"column_start":1,"column_end":4}},{"value":"/ Example 6: Compute Timestamp from current time in Python.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896634,"byte_end":11896695,"line_start":2263,"line_end":2263,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896696,"byte_end":11896699,"line_start":2264,"line_end":2264,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896700,"byte_end":11896711,"line_start":2265,"line_end":2265,"column_start":1,"column_end":12}},{"value":"/ timestamp = Timestamp()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896712,"byte_end":11896739,"line_start":2266,"line_end":2266,"column_start":1,"column_end":28}},{"value":"/ timestamp.GetCurrentTime()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896740,"byte_end":11896770,"line_start":2267,"line_end":2267,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896771,"byte_end":11896778,"line_start":2268,"line_end":2268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896779,"byte_end":11896782,"line_start":2269,"line_end":2269,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896783,"byte_end":11896801,"line_start":2270,"line_end":2270,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896802,"byte_end":11896805,"line_start":2271,"line_end":2271,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Timestamp type is encoded as a string in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896806,"byte_end":11896874,"line_start":2272,"line_end":2272,"column_start":1,"column_end":69}},{"value":"/ [RFC 3339](<https://www.ietf.org/rfc/rfc3339.txt>) format. That is, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896875,"byte_end":11896950,"line_start":2273,"line_end":2273,"column_start":1,"column_end":76}},{"value":"/ format is \"{year}-{month}-{day}T{hour}:{min}:{sec}\\\\[.{frac_sec}\\\\]Z\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11896951,"byte_end":11897024,"line_start":2274,"line_end":2274,"column_start":1,"column_end":74}},{"value":"/ where {year} is always expressed using four digits while {month}, {day},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897025,"byte_end":11897101,"line_start":2275,"line_end":2275,"column_start":1,"column_end":77}},{"value":"/ {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897102,"byte_end":11897181,"line_start":2276,"line_end":2276,"column_start":1,"column_end":80}},{"value":"/ seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897182,"byte_end":11897260,"line_start":2277,"line_end":2277,"column_start":1,"column_end":79}},{"value":"/ are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897261,"byte_end":11897338,"line_start":2278,"line_end":2278,"column_start":1,"column_end":78}},{"value":"/ is required. A proto3 JSON serializer should always use UTC (as indicated by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897339,"byte_end":11897419,"line_start":2279,"line_end":2279,"column_start":1,"column_end":81}},{"value":"/ \"Z\") when printing the Timestamp type and a proto3 JSON parser should be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897420,"byte_end":11897496,"line_start":2280,"line_end":2280,"column_start":1,"column_end":77}},{"value":"/ able to accept both UTC and other timezones (as indicated by an offset).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897497,"byte_end":11897573,"line_start":2281,"line_end":2281,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897574,"byte_end":11897577,"line_start":2282,"line_end":2282,"column_start":1,"column_end":4}},{"value":"/ For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897578,"byte_end":11897647,"line_start":2283,"line_end":2283,"column_start":1,"column_end":70}},{"value":"/ 01:30 UTC on January 15, 2017.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897648,"byte_end":11897682,"line_start":2284,"line_end":2284,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897683,"byte_end":11897686,"line_start":2285,"line_end":2285,"column_start":1,"column_end":4}},{"value":"/ In JavaScript, one can convert a Date object to this format using the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897687,"byte_end":11897760,"line_start":2286,"line_end":2286,"column_start":1,"column_end":74}},{"value":"/ standard","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897761,"byte_end":11897773,"line_start":2287,"line_end":2287,"column_start":1,"column_end":13}},{"value":"/ \\[toISOString()\\](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897774,"byte_end":11897896,"line_start":2288,"line_end":2288,"column_start":1,"column_end":123}},{"value":"/ method. In Python, a standard `datetime.datetime` object can be converted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897897,"byte_end":11897974,"line_start":2289,"line_end":2289,"column_start":1,"column_end":78}},{"value":"/ to this format using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11897975,"byte_end":11897999,"line_start":2290,"line_end":2290,"column_start":1,"column_end":25}},{"value":"/ \\[`strftime`\\](<https://docs.python.org/2/library/time.html#time.strftime>) with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898000,"byte_end":11898084,"line_start":2291,"line_end":2291,"column_start":1,"column_end":85}},{"value":"/ the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898085,"byte_end":11898165,"line_start":2292,"line_end":2292,"column_start":1,"column_end":81}},{"value":"/ the Joda Time's \\[`ISODateTimeFormat.dateTime()`\\](<http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D>) to obtain a formatter capable of generating timestamps in this format.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898166,"byte_end":11898391,"line_start":2293,"line_end":2293,"column_start":1,"column_end":226}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898392,"byte_end":11898438,"line_start":2294,"line_end":2294,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898710,"byte_end":11898717,"line_start":2301,"line_end":2301,"column_start":9,"column_end":16},"name":"seconds","qualname":"::protobuf::Timestamp::seconds","value":"i64","parent":{"krate":0,"index":3221},"children":[],"decl_id":null,"docs":" Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.\n","sig":null,"attributes":[{"value":"/ Represents seconds of UTC time since Unix epoch","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898512,"byte_end":11898563,"line_start":2297,"line_end":2297,"column_start":5,"column_end":56}},{"value":"/ 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898568,"byte_end":11898630,"line_start":2298,"line_end":2298,"column_start":5,"column_end":67}},{"value":"/ 9999-12-31T23:59:59Z inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898635,"byte_end":11898670,"line_start":2299,"line_end":2299,"column_start":5,"column_end":40}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898675,"byte_end":11898701,"line_start":2300,"line_end":2300,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11899005,"byte_end":11899010,"line_start":2307,"line_end":2307,"column_start":9,"column_end":14},"name":"nanos","qualname":"::protobuf::Timestamp::nanos","value":"i32","parent":{"krate":0,"index":3221},"children":[],"decl_id":null,"docs":" Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.\n","sig":null,"attributes":[{"value":"/ Non-negative fractions of a second at nanosecond resolution. Negative","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898728,"byte_end":11898801,"line_start":2302,"line_end":2302,"column_start":5,"column_end":78}},{"value":"/ second values with fractions must still have non-negative nanos values","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898806,"byte_end":11898880,"line_start":2303,"line_end":2303,"column_start":5,"column_end":79}},{"value":"/ that count forward in time. Must be from 0 to 999,999,999","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898885,"byte_end":11898946,"line_start":2304,"line_end":2304,"column_start":5,"column_end":66}},{"value":"/ inclusive.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898951,"byte_end":11898965,"line_start":2305,"line_end":2305,"column_start":5,"column_end":19}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11898970,"byte_end":11898996,"line_start":2306,"line_end":2306,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1291,"byte_end":1300,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Duration>::normalize","value":"fn normalize<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes the duration to a canonical format.","sig":null,"attributes":[{"value":"/ Normalizes the duration to a canonical format.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1040,"byte_end":1090,"line_start":37,"line_end":37,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1095,"byte_end":1098,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Based on [`google::protobuf::util::CreateNormalized`][1].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1103,"byte_end":1164,"line_start":39,"line_end":39,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1169,"byte_end":1172,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/google/protobuf/blob/v3.3.2/src/google/protobuf/util/time_util.cc#L79-L100","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1177,"byte_end":1279,"line_start":41,"line_end":41,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3326,"byte_end":3334,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Duration as core::convert::TryFrom>::try_from","value":"fn try_from(time::Duration) -> Result<Duration, DurationError>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":" Converts a `std::time::Duration` to a `Duration`, failing if the duration is too large.\n","sig":null,"attributes":[{"value":"/ Converts a `std::time::Duration` to a `Duration`, failing if the duration is too large.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3227,"byte_end":3318,"line_start":91,"line_end":91,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3843,"byte_end":3851,"line_start":106,"line_end":106,"column_start":8,"column_end":16},"name":"try_from","qualname":"<time::Duration as core::convert::TryFrom>::try_from","value":"fn try_from(Duration) -> Result<time::Duration, DurationError>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":" Converts a `Duration` to a `std::time::Duration`, failing if the duration is negative.\n","sig":null,"attributes":[{"value":"/ Converts a `Duration` to a `std::time::Duration`, failing if the duration is negative.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3745,"byte_end":3835,"line_start":105,"line_end":105,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":4385,"byte_end":4388,"line_start":123,"line_end":123,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5459,"byte_end":5471,"line_start":155,"line_end":155,"column_start":5,"column_end":17},"name":"ParseFailure","qualname":"::DurationError::ParseFailure","value":"DurationError::ParseFailure","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Indicates failure to parse a [`Duration`] from a string.","sig":null,"attributes":[{"value":"/ Indicates failure to parse a [`Duration`] from a string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5200,"byte_end":5260,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5265,"byte_end":5268,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The [`Duration`] string format is specified in the [Protobuf JSON mapping specification][1].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5273,"byte_end":5369,"line_start":152,"line_end":152,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5374,"byte_end":5377,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ [1]: https://developers.google.com/protocol-buffers/docs/proto3#json","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5382,"byte_end":5454,"line_start":154,"line_end":154,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5725,"byte_end":5741,"line_start":160,"line_end":160,"column_start":5,"column_end":21},"name":"NegativeDuration","qualname":"::DurationError::NegativeDuration","value":"DurationError::NegativeDuration(time::Duration)","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Indicates failure to convert a `prost_types::Duration` to a `std::time::Duration` because\n the duration is negative. The included `std::time::Duration` matches the magnitude of the\n original negative `prost_types::Duration`.\n","sig":null,"attributes":[{"value":"/ Indicates failure to convert a `prost_types::Duration` to a `std::time::Duration` because","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5478,"byte_end":5571,"line_start":157,"line_end":157,"column_start":5,"column_end":98}},{"value":"/ the duration is negative. The included `std::time::Duration` matches the magnitude of the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5576,"byte_end":5669,"line_start":158,"line_end":158,"column_start":5,"column_end":98}},{"value":"/ original negative `prost_types::Duration`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5674,"byte_end":5720,"line_start":159,"line_end":159,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5742,"byte_end":5756,"line_start":160,"line_end":160,"column_start":22,"column_end":36},"name":"0","qualname":"::DurationError::NegativeDuration::0","value":"core::time::Duration","parent":{"krate":0,"index":3251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6021,"byte_end":6031,"line_start":166,"line_end":166,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::DurationError::OutOfRange","value":"DurationError::OutOfRange","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Indicates failure to convert a `std::time::Duration` to a `prost_types::Duration`.","sig":null,"attributes":[{"value":"/ Indicates failure to convert a `std::time::Duration` to a `prost_types::Duration`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5764,"byte_end":5850,"line_start":162,"line_end":162,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5855,"byte_end":5858,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Converting a `std::time::Duration` to a `prost_types::Duration` fails if the magnitude","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5863,"byte_end":5953,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/ exceeds that representable by `prost_types::Duration`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5958,"byte_end":6016,"line_start":165,"line_end":165,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5180,"byte_end":5193,"line_start":149,"line_end":149,"column_start":10,"column_end":23},"name":"DurationError","qualname":"::DurationError","value":"enum DurationError {\n    ParseFailure,\n    NegativeDuration(time::Duration),\n    OutOfRange,\n}","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3254}],"decl_id":null,"docs":" A duration handling error.\n","sig":null,"attributes":[{"value":"/ A duration handling error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5047,"byte_end":5077,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5078,"byte_end":5124,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":5153,"byte_end":5170,"line_start":148,"line_end":148,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6081,"byte_end":6084,"line_start":170,"line_end":170,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DurationError as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6674,"byte_end":6682,"line_start":189,"line_end":189,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Duration as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Duration, DurationError>","parent":{"krate":1,"index":12996},"children":[],"decl_id":{"krate":1,"index":12998},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":7081,"byte_end":7090,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Timestamp>::normalize","value":"fn normalize<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes the timestamp to a canonical format.","sig":null,"attributes":[{"value":"/ Normalizes the timestamp to a canonical format.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6830,"byte_end":6881,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6886,"byte_end":6889,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Based on [`google::protobuf::util::CreateNormalized`][1].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6894,"byte_end":6955,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6960,"byte_end":6963,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/google/protobuf/blob/v3.3.2/src/google/protobuf/util/time_util.cc#L59-L77","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6968,"byte_end":7069,"line_start":199,"line_end":199,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8842,"byte_end":8855,"line_start":243,"line_end":243,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Timestamp>::try_normalize","value":"fn try_normalize(Self) -> Result<Timestamp, Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes the timestamp to a canonical format, returning the original value if it cannot be\n normalized.","sig":null,"attributes":[{"value":"/ Normalizes the timestamp to a canonical format, returning the original value if it cannot be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8509,"byte_end":8605,"line_start":237,"line_end":237,"column_start":5,"column_end":101}},{"value":"/ normalized.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8610,"byte_end":8625,"line_start":238,"line_end":238,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8630,"byte_end":8633,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Normalization is based on [`google::protobuf::util::CreateNormalized`][1].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8638,"byte_end":8716,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8721,"byte_end":8724,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/google/protobuf/blob/v3.3.2/src/google/protobuf/util/time_util.cc#L59-L77","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":8729,"byte_end":8830,"line_start":242,"line_end":242,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":9371,"byte_end":9375,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"date","qualname":"<Timestamp>::date","value":"fn date(i64, u8, u8) -> Result<Timestamp, TimestampError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Timestamp` at the start of the provided UTC date.\n","sig":null,"attributes":[{"value":"/ Creates a new `Timestamp` at the start of the provided UTC date.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":9291,"byte_end":9359,"line_start":256,"line_end":256,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":9609,"byte_end":9618,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"date_time","qualname":"<Timestamp>::date_time","value":"fn date_time(i64, u8, u8, u8, u8, u8) -> Result<Timestamp, TimestampError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Timestamp` instance with the provided UTC date and time.\n","sig":null,"attributes":[{"value":"/ Creates a new `Timestamp` instance with the provided UTC date and time.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":9522,"byte_end":9597,"line_start":261,"line_end":261,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":9954,"byte_end":9969,"line_start":274,"line_end":274,"column_start":12,"column_end":27},"name":"date_time_nanos","qualname":"<Timestamp>::date_time_nanos","value":"fn date_time_nanos(i64, u8, u8, u8, u8, u8, u32)\n-> Result<Timestamp, TimestampError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Timestamp` instance with the provided UTC date and time.\n","sig":null,"attributes":[{"value":"/ Creates a new `Timestamp` instance with the provided UTC date and time.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":9867,"byte_end":9942,"line_start":273,"line_end":273,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12537,"byte_end":12553,"line_start":350,"line_end":350,"column_start":5,"column_end":21},"name":"OutOfSystemRange","qualname":"::TimestampError::OutOfSystemRange","value":"TimestampError::OutOfSystemRange(Timestamp)","parent":{"krate":0,"index":3262},"children":[],"decl_id":null,"docs":" Indicates that a [`Timestamp`] could not be converted to\n [`SystemTime`][std::time::SystemTime] because it is out of range.","sig":null,"attributes":[{"value":"/ Indicates that a [`Timestamp`] could not be converted to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12085,"byte_end":12145,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/ [`SystemTime`][std::time::SystemTime] because it is out of range.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12150,"byte_end":12219,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12224,"byte_end":12227,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The range of times that can be represented by `SystemTime` depends on the platform. All","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12232,"byte_end":12323,"line_start":346,"line_end":346,"column_start":5,"column_end":96}},{"value":"/ `Timestamp`s are likely representable on 64-bit Unix-like platforms, but other platforms,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12328,"byte_end":12421,"line_start":347,"line_end":347,"column_start":5,"column_end":98}},{"value":"/ such as Windows and 32-bit Linux, may not be able to represent the full range of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12426,"byte_end":12510,"line_start":348,"line_end":348,"column_start":5,"column_end":89}},{"value":"/ `Timestamp`s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12515,"byte_end":12532,"line_start":349,"line_end":349,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12554,"byte_end":12563,"line_start":350,"line_end":350,"column_start":22,"column_end":31},"name":"0","qualname":"::TimestampError::OutOfSystemRange::0","value":"protobuf::Timestamp","parent":{"krate":0,"index":3263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12648,"byte_end":12660,"line_start":353,"line_end":353,"column_start":5,"column_end":17},"name":"ParseFailure","qualname":"::TimestampError::ParseFailure","value":"TimestampError::ParseFailure","parent":{"krate":0,"index":3262},"children":[],"decl_id":null,"docs":" An error indicating failure to parse a timestamp in RFC-3339 format.\n","sig":null,"attributes":[{"value":"/ An error indicating failure to parse a timestamp in RFC-3339 format.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12571,"byte_end":12643,"line_start":352,"line_end":352,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12758,"byte_end":12773,"line_start":356,"line_end":356,"column_start":5,"column_end":20},"name":"InvalidDateTime","qualname":"::TimestampError::InvalidDateTime","value":"TimestampError::InvalidDateTime","parent":{"krate":0,"index":3262},"children":[],"decl_id":null,"docs":" Indicates an error when constructing a timestamp due to invalid date or time data.\n","sig":null,"attributes":[{"value":"/ Indicates an error when constructing a timestamp due to invalid date or time data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12667,"byte_end":12753,"line_start":355,"line_end":355,"column_start":5,"column_end":91}}]},{"kind":"Enum","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12064,"byte_end":12078,"line_start":342,"line_end":342,"column_start":10,"column_end":24},"name":"TimestampError","qualname":"::TimestampError","value":"enum TimestampError {\n    OutOfSystemRange(Timestamp),\n    ParseFailure,\n    InvalidDateTime,\n}","parent":null,"children":[{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3268}],"decl_id":null,"docs":" A timestamp handling error.\n","sig":null,"attributes":[{"value":"/ A timestamp handling error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":11930,"byte_end":11961,"line_start":338,"line_end":338,"column_start":1,"column_end":32}},{"value":"allow(clippy :: derive_partial_eq_without_eq)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":11962,"byte_end":12008,"line_start":339,"line_end":339,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12037,"byte_end":12054,"line_start":341,"line_end":341,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12824,"byte_end":12827,"line_start":360,"line_end":360,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TimestampError as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":14573,"byte_end":14581,"line_start":413,"line_end":413,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Timestamp as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Timestamp, TimestampError>","parent":{"krate":1,"index":12996},"children":[],"decl_id":{"krate":1,"index":12998},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":14753,"byte_end":14756,"line_start":419,"line_end":419,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Timestamp as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10302},"children":[],"decl_id":{"krate":1,"index":10303},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":18,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756599,"byte_end":7756606,"line_start":153,"line_end":153,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":31653,"byte_end":31661,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":32700,"byte_end":32708,"line_start":66,"line_end":66,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":33637,"byte_end":33645,"line_start":97,"line_end":97,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":48158,"byte_end":48167,"line_start":576,"line_end":576,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812984,"byte_end":11812988,"line_start":229,"line_end":229,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815716,"byte_end":11815721,"line_start":299,"line_end":299,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830425,"byte_end":11830437,"line_start":585,"line_end":585,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839327,"byte_end":11839332,"line_start":770,"line_end":770,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840625,"byte_end":11840631,"line_start":812,"line_end":812,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845688,"byte_end":11845704,"line_start":929,"line_end":929,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866545,"byte_end":11866549,"line_start":1428,"line_end":1428,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869751,"byte_end":11869762,"line_start":1505,"line_end":1505,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873280,"byte_end":11873286,"line_start":1591,"line_end":1591,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893645,"byte_end":11893654,"line_start":2177,"line_end":2177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1025,"byte_end":1033,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3179,"byte_end":3187,"line_start":88,"line_end":88,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3697,"byte_end":3705,"line_start":102,"line_end":102,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":4367,"byte_end":4375,"line_start":122,"line_end":122,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6058,"byte_end":6071,"line_start":169,"line_end":169,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6625,"byte_end":6633,"line_start":186,"line_end":186,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6814,"byte_end":6823,"line_start":194,"line_end":194,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12800,"byte_end":12814,"line_start":359,"line_end":359,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":14522,"byte_end":14531,"line_start":410,"line_end":410,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":14734,"byte_end":14743,"line_start":418,"line_end":418,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":503,"byte_end":511,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":101}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/compiler.rs","byte_start":7756599,"byte_end":7756606,"line_start":153,"line_end":153,"column_start":10,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":31653,"byte_end":31661,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":32700,"byte_end":32708,"line_start":66,"line_end":66,"column_start":23,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":33637,"byte_end":33645,"line_start":97,"line_end":97,"column_start":26,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/datetime.rs","byte_start":48158,"byte_end":48167,"line_start":576,"line_end":576,"column_start":25,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3221},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11812984,"byte_end":11812988,"line_start":229,"line_end":229,"column_start":10,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11815716,"byte_end":11815721,"line_start":299,"line_end":299,"column_start":10,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11830425,"byte_end":11830437,"line_start":585,"line_end":585,"column_start":10,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11839327,"byte_end":11839332,"line_start":770,"line_end":770,"column_start":10,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11840625,"byte_end":11840631,"line_start":812,"line_end":812,"column_start":10,"column_end":16},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11845688,"byte_end":11845704,"line_start":929,"line_end":929,"column_start":10,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11866545,"byte_end":11866549,"line_start":1428,"line_end":1428,"column_start":10,"column_end":14},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11869751,"byte_end":11869762,"line_start":1505,"line_end":1505,"column_start":10,"column_end":21},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11873280,"byte_end":11873286,"line_start":1591,"line_end":1591,"column_start":6,"column_end":12},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/protobuf.rs","byte_start":11893645,"byte_end":11893654,"line_start":2177,"line_end":2177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":1025,"byte_end":1033,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3179,"byte_end":3187,"line_start":88,"line_end":88,"column_start":34,"column_end":42},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3007},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":3697,"byte_end":3705,"line_start":102,"line_end":102,"column_start":34,"column_end":42},"kind":{"Impl":{"id":212}},"from":{"krate":1,"index":43659},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":4367,"byte_end":4375,"line_start":122,"line_end":122,"column_start":23,"column_end":31},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3007},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6058,"byte_end":6071,"line_start":169,"line_end":169,"column_start":23,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3248},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6625,"byte_end":6633,"line_start":186,"line_end":186,"column_start":18,"column_end":26},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3007},"to":{"krate":1,"index":12996}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":6814,"byte_end":6823,"line_start":194,"line_end":194,"column_start":6,"column_end":15},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":12800,"byte_end":12814,"line_start":359,"line_end":359,"column_start":23,"column_end":37},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3262},"to":{"krate":1,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":14522,"byte_end":14531,"line_start":410,"line_end":410,"column_start":18,"column_end":27},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3221},"to":{"krate":1,"index":12996}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.11.9/src/lib.rs","byte_start":14734,"byte_end":14743,"line_start":418,"line_end":418,"column_start":23,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3221},"to":{"krate":1,"index":10302}}]}