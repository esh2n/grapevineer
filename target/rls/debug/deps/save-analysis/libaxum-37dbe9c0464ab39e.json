{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","axum","--edition=2021","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=37dbe9c0464ab39e","-C","extra-filename=-37dbe9c0464ab39e","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","async_trait=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libasync_trait-e765ceb80a31bcae.dylib","--extern","axum_core=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libaxum_core-1881f821d27ba30b.rmeta","--extern","bitflags=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbitflags-dba3179e571a7d71.rmeta","--extern","bytes=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbytes-e80fde13cfdaa1ed.rmeta","--extern","futures_util=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_util-b494cf234e0f07f9.rmeta","--extern","http=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhttp-e26953804186d5d7.rmeta","--extern","http_body=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhttp_body-5d4b542c8e32da69.rmeta","--extern","hyper=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhyper-4fb1bc73701e1ff6.rmeta","--extern","itoa=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libitoa-866eb5fa13899dbc.rmeta","--extern","matchit=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libmatchit-42298bbc2feb36aa.rmeta","--extern","memchr=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libmemchr-a67e036d8cbcff7e.rmeta","--extern","mime=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libmime-9f3c364e7c67a07c.rmeta","--extern","percent_encoding=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpercent_encoding-d7c911d16cb8d19c.rmeta","--extern","pin_project_lite=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpin_project_lite-6d07fd99c72705e6.rmeta","--extern","serde=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libserde-21885f6df6447506.rmeta","--extern","sync_wrapper=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libsync_wrapper-adb9ea654da178d3.rmeta","--extern","tower=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtower-809c23d938735dd8.rmeta","--extern","tower_layer=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtower_layer-bd1df33e337ced1e.rmeta","--extern","tower_service=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtower_service-c1891b78c9faf521.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libaxum-37dbe9c0464ab39e.rmeta"},"prelude":{"crate_id":{"name":"axum","disambiguator":[9053848852422097261,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":20,"id":{"name":"http","disambiguator":[6804580725505175404,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":21,"id":{"name":"fnv","disambiguator":[15040427873531084151,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":22,"id":{"name":"bytes","disambiguator":[5441976563651757446,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","num":23,"id":{"name":"itoa","disambiguator":[13428814949081963950,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":24,"id":{"name":"tower","disambiguator":[18395068276203530557,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","num":25,"id":{"name":"tower_layer","disambiguator":[14743386033049793810,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":26,"id":{"name":"futures_core","disambiguator":[9123476880726111055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/util.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[6971910164290660896,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","num":28,"id":{"name":"tower_service","disambiguator":[16303854971109284847,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","num":29,"id":{"name":"futures_util","disambiguator":[7694453814300953793,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":30,"id":{"name":"pin_utils","disambiguator":[568644568986885198,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":31,"id":{"name":"futures_task","disambiguator":[15761437803434426678,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":32,"id":{"name":"rand","disambiguator":[2227364008512732492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":33,"id":{"name":"rand_core","disambiguator":[280784899682975382,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":34,"id":{"name":"getrandom","disambiguator":[15959646280991551733,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":35,"id":{"name":"cfg_if","disambiguator":[8037730387315135600,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":36,"id":{"name":"libc","disambiguator":[3878213621847001735,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":37,"id":{"name":"rand_chacha","disambiguator":[16789050008323027929,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":38,"id":{"name":"ppv_lite86","disambiguator":[11911600870120059369,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":39,"id":{"name":"tokio","disambiguator":[2164534071916540129,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":40,"id":{"name":"mio","disambiguator":[8424425407149752286,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":41,"id":{"name":"log","disambiguator":[12996859001740394752,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":42,"id":{"name":"tokio_macros","disambiguator":[15899561400381894157,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":43,"id":{"name":"socket2","disambiguator":[4013541389436397340,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":44,"id":{"name":"tracing","disambiguator":[10640532649317078379,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":45,"id":{"name":"tracing_core","disambiguator":[1421309024311854827,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":46,"id":{"name":"once_cell","disambiguator":[3105578953040151470,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":47,"id":{"name":"tracing_attributes","disambiguator":[15682539678954689692,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":48,"id":{"name":"slab","disambiguator":[4481325763050722982,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":49,"id":{"name":"tokio_util","disambiguator":[17083992789186825057,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":50,"id":{"name":"futures_sink","disambiguator":[16918135308039601362,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":51,"id":{"name":"indexmap","disambiguator":[6638787429486228540,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":52,"id":{"name":"hashbrown","disambiguator":[13571119530625034222,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":53,"id":{"name":"pin_project","disambiguator":[265330023949537341,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","num":54,"id":{"name":"pin_project_internal","disambiguator":[588734385584158946,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","num":55,"id":{"name":"async_trait","disambiguator":[5200532413426772501,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","num":56,"id":{"name":"axum_core","disambiguator":[16473010957615913463,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":57,"id":{"name":"http_body","disambiguator":[12136940658047001828,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","num":58,"id":{"name":"mime","disambiguator":[16993739840941636744,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","num":59,"id":{"name":"sync_wrapper","disambiguator":[15295030364843232476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":60,"id":{"name":"hyper","disambiguator":[2232558708335651732,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":61,"id":{"name":"httpdate","disambiguator":[10536693048113369124,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":62,"id":{"name":"futures_channel","disambiguator":[14150896857860075213,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":63,"id":{"name":"h2","disambiguator":[3924981800782476062,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":64,"id":{"name":"httparse","disambiguator":[4022596938561856078,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":65,"id":{"name":"want","disambiguator":[3315397095608833603,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","num":66,"id":{"name":"try_lock","disambiguator":[15130702162584555777,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","num":67,"id":{"name":"serde","disambiguator":[615399658882494608,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","num":68,"id":{"name":"bitflags","disambiguator":[9570617667018167498,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","num":69,"id":{"name":"matchit","disambiguator":[10383918701971444776,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/util.rs","num":70,"id":{"name":"percent_encoding","disambiguator":[5112896467010261535,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":0,"byte_end":15671,"line_start":1,"line_end":502,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30318,"byte_end":30328,"line_start":5,"line_end":5,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamBody","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":57,"index":470},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30369,"byte_end":30373,"line_start":8,"line_end":8,"column_start":21,"column_end":25},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":57,"index":37},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30387,"byte_end":30392,"line_start":8,"line_end":8,"column_start":39,"column_end":44},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":57,"index":534},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30394,"byte_end":30398,"line_start":8,"line_end":8,"column_start":46,"column_end":50},"alias_span":null,"name":"Full","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":60,"index":547},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30441,"byte_end":30445,"line_start":11,"line_end":11,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":22,"index":557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30481,"byte_end":30486,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":56,"index":144},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30530,"byte_end":30535,"line_start":17,"line_end":17,"column_start":27,"column_end":32},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":56,"index":143},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30537,"byte_end":30544,"line_start":17,"line_end":17,"column_start":34,"column_end":41},"alias_span":null,"name":"BoxBody","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":97466,"byte_end":97495,"line_start":6,"line_end":6,"column_start":32,"column_end":61},"alias_span":null,"name":"FailedToDeserializePathParams","value":"","parent":{"krate":0,"index":745}},{"kind":"Use","ref_id":{"krate":0,"index":3634},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":97497,"byte_end":97519,"line_start":6,"line_end":6,"column_start":63,"column_end":85},"alias_span":null,"name":"InvalidUtf8InPathParam","value":"","parent":{"krate":0,"index":745}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":97561,"byte_end":97562,"line_start":7,"line_end":7,"column_start":40,"column_end":41},"alias_span":null,"name":"*","value":"BytesRejection","parent":{"krate":0,"index":745}},{"kind":"Use","ref_id":{"krate":56,"index":766},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":41964,"byte_end":41980,"line_start":20,"line_end":20,"column_start":30,"column_end":46},"alias_span":null,"name":"DefaultBodyLimit","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":56,"index":220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":41982,"byte_end":41989,"line_start":20,"line_end":20,"column_start":48,"column_end":55},"alias_span":null,"name":"FromRef","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":56,"index":1687},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":41991,"byte_end":42002,"line_start":20,"line_end":20,"column_start":57,"column_end":68},"alias_span":null,"name":"FromRequest","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":56,"index":1680},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42004,"byte_end":42020,"line_start":20,"line_end":20,"column_start":70,"column_end":86},"alias_span":null,"name":"FromRequestParts","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42177,"byte_end":42181,"line_start":28,"line_end":28,"column_start":11,"column_end":15},"alias_span":null,"name":"Host","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3898},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42177,"byte_end":42181,"line_start":28,"line_end":28,"column_start":11,"column_end":15},"alias_span":null,"name":"Host","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3550},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42194,"byte_end":42198,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3551},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42194,"byte_end":42198,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42200,"byte_end":42213,"line_start":29,"line_end":29,"column_start":18,"column_end":31},"alias_span":null,"name":"RawPathParams","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3914},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42230,"byte_end":42237,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"alias_span":null,"name":"RawForm","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42230,"byte_end":42237,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"alias_span":null,"name":"RawForm","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3927},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42254,"byte_end":42262,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"alias_span":null,"name":"RawQuery","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42254,"byte_end":42262,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"alias_span":null,"name":"RawQuery","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42284,"byte_end":42294,"line_start":32,"line_end":32,"column_start":21,"column_end":31},"alias_span":null,"name":"BodyStream","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42296,"byte_end":42303,"line_start":32,"line_end":32,"column_start":33,"column_end":40},"alias_span":null,"name":"RawBody","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3951},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42296,"byte_end":42303,"line_start":32,"line_end":32,"column_start":33,"column_end":40},"alias_span":null,"name":"RawBody","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42317,"byte_end":42322,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":3979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42317,"byte_end":42322,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42509,"byte_end":42518,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":42509,"byte_end":42518,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132699,"byte_end":132713,"line_start":54,"line_end":54,"column_start":24,"column_end":38},"alias_span":null,"name":"HandlerService","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":149998,"byte_end":150012,"line_start":11,"line_end":11,"column_start":5,"column_end":19},"alias_span":null,"name":"from_extractor","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150014,"byte_end":150039,"line_start":11,"line_end":11,"column_start":21,"column_end":46},"alias_span":null,"name":"from_extractor_with_state","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1313},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150041,"byte_end":150054,"line_start":11,"line_end":11,"column_start":48,"column_end":61},"alias_span":null,"name":"FromExtractor","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1294},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150056,"byte_end":150074,"line_start":11,"line_end":11,"column_start":63,"column_end":81},"alias_span":null,"name":"FromExtractorLayer","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1409},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150103,"byte_end":150110,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150112,"byte_end":150130,"line_start":13,"line_end":13,"column_start":34,"column_end":52},"alias_span":null,"name":"from_fn_with_state","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1440},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150132,"byte_end":150138,"line_start":13,"line_end":13,"column_start":54,"column_end":60},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1416},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150140,"byte_end":150151,"line_start":13,"line_end":13,"column_start":62,"column_end":73},"alias_span":null,"name":"FromFnLayer","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150153,"byte_end":150157,"line_start":13,"line_end":13,"column_start":75,"column_end":79},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1543},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150193,"byte_end":150204,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"alias_span":null,"name":"map_request","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1546},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150206,"byte_end":150228,"line_start":15,"line_end":15,"column_start":18,"column_end":40},"alias_span":null,"name":"map_request_with_state","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1618},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150230,"byte_end":150250,"line_start":15,"line_end":15,"column_start":42,"column_end":62},"alias_span":null,"name":"IntoMapRequestResult","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150252,"byte_end":150262,"line_start":15,"line_end":15,"column_start":64,"column_end":74},"alias_span":null,"name":"MapRequest","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1550},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150264,"byte_end":150279,"line_start":15,"line_end":15,"column_start":76,"column_end":91},"alias_span":null,"name":"MapRequestLayer","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1677},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150318,"byte_end":150330,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"map_response","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1680},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150332,"byte_end":150355,"line_start":18,"line_end":18,"column_start":19,"column_end":42},"alias_span":null,"name":"map_response_with_state","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1708},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150357,"byte_end":150368,"line_start":18,"line_end":18,"column_start":44,"column_end":55},"alias_span":null,"name":"MapResponse","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":1684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150370,"byte_end":150386,"line_start":18,"line_end":18,"column_start":57,"column_end":73},"alias_span":null,"name":"MapResponseLayer","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":2907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150417,"byte_end":150429,"line_start":20,"line_end":20,"column_start":27,"column_end":39},"alias_span":null,"name":"AddExtension","value":"","parent":{"krate":0,"index":1237}},{"kind":"Use","ref_id":{"krate":0,"index":4382},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150507,"byte_end":150521,"line_start":25,"line_end":25,"column_start":36,"column_end":50},"alias_span":null,"name":"FromExtractorResponseFuture","value":"","parent":{"krate":0,"index":1798}},{"kind":"Use","ref_id":{"krate":0,"index":1483},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150582,"byte_end":150596,"line_start":26,"line_end":26,"column_start":29,"column_end":43},"alias_span":null,"name":"FromFnResponseFuture","value":"","parent":{"krate":0,"index":1798}},{"kind":"Use","ref_id":{"krate":0,"index":1596},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150654,"byte_end":150668,"line_start":27,"line_end":27,"column_start":33,"column_end":47},"alias_span":null,"name":"MapRequestResponseFuture","value":"","parent":{"krate":0,"index":1798}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150731,"byte_end":150745,"line_start":28,"line_end":28,"column_start":34,"column_end":48},"alias_span":null,"name":"MapResponseResponseFuture","value":"","parent":{"krate":0,"index":1798}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195706,"byte_end":195715,"line_start":24,"line_end":24,"column_start":16,"column_end":25},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195706,"byte_end":195715,"line_start":24,"line_end":24,"column_start":16,"column_end":25},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":1740},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195768,"byte_end":195781,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"AppendHeaders","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":1741},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195768,"byte_end":195781,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"AppendHeaders","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":2692},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195783,"byte_end":195796,"line_start":28,"line_end":28,"column_start":20,"column_end":33},"alias_span":null,"name":"ErrorResponse","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":440},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195798,"byte_end":195810,"line_start":28,"line_end":28,"column_start":35,"column_end":47},"alias_span":null,"name":"IntoResponse","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":570},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195812,"byte_end":195829,"line_start":28,"line_end":28,"column_start":49,"column_end":66},"alias_span":null,"name":"IntoResponseParts","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":630},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195831,"byte_end":195839,"line_start":28,"line_end":28,"column_start":68,"column_end":76},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":2483},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195841,"byte_end":195854,"line_start":28,"line_end":28,"column_start":78,"column_end":91},"alias_span":null,"name":"ResponseParts","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":56,"index":632},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195856,"byte_end":195862,"line_start":28,"line_end":28,"column_start":93,"column_end":99},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":0,"index":5522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195907,"byte_end":195915,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"alias_span":null,"name":"Redirect","value":"","parent":{"krate":0,"index":1811}},{"kind":"Use","ref_id":{"krate":0,"index":5684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/future.rs","byte_start":222525,"byte_end":222546,"line_start":4,"line_end":4,"column_start":24,"column_end":45},"alias_span":null,"name":"IntoMakeServiceFuture","value":"","parent":{"krate":0,"index":1946}},{"kind":"Use","ref_id":{"krate":0,"index":5945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/future.rs","byte_start":222560,"byte_end":222581,"line_start":5,"line_end":5,"column_start":13,"column_end":34},"alias_span":null,"name":"InfallibleRouteFuture","value":"","parent":{"krate":0,"index":1946}},{"kind":"Use","ref_id":{"krate":0,"index":5858},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/future.rs","byte_start":222583,"byte_end":222594,"line_start":5,"line_end":5,"column_start":36,"column_end":47},"alias_span":null,"name":"RouteFuture","value":"","parent":{"krate":0,"index":1946}},{"kind":"Use","ref_id":{"krate":0,"index":5665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205672,"byte_end":205687,"line_start":37,"line_end":37,"column_start":35,"column_end":50},"alias_span":null,"name":"IntoMakeService","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205704,"byte_end":205716,"line_start":37,"line_end":37,"column_start":67,"column_end":79},"alias_span":null,"name":"MethodFilter","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205725,"byte_end":205730,"line_start":37,"line_end":37,"column_start":88,"column_end":93},"alias_span":null,"name":"Route","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":2066},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205770,"byte_end":205773,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":2057},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205775,"byte_end":205786,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"alias_span":null,"name":"any_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5573},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205788,"byte_end":205794,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"alias_span":null,"name":"delete","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5541},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205796,"byte_end":205810,"line_start":40,"line_end":40,"column_start":31,"column_end":45},"alias_span":null,"name":"delete_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5578},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205812,"byte_end":205815,"line_start":40,"line_end":40,"column_start":47,"column_end":50},"alias_span":null,"name":"get","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5545},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205817,"byte_end":205828,"line_start":40,"line_end":40,"column_start":52,"column_end":63},"alias_span":null,"name":"get_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5583},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205830,"byte_end":205834,"line_start":40,"line_end":40,"column_start":65,"column_end":69},"alias_span":null,"name":"head","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205836,"byte_end":205848,"line_start":40,"line_end":40,"column_start":71,"column_end":83},"alias_span":null,"name":"head_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":2061},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205850,"byte_end":205852,"line_start":40,"line_end":40,"column_start":85,"column_end":87},"alias_span":null,"name":"on","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":2053},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205854,"byte_end":205864,"line_start":40,"line_end":40,"column_start":89,"column_end":99},"alias_span":null,"name":"on_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5588},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205870,"byte_end":205877,"line_start":41,"line_end":41,"column_start":5,"column_end":12},"alias_span":null,"name":"options","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205879,"byte_end":205894,"line_start":41,"line_end":41,"column_start":14,"column_end":29},"alias_span":null,"name":"options_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205896,"byte_end":205901,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"alias_span":null,"name":"patch","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205903,"byte_end":205916,"line_start":41,"line_end":41,"column_start":38,"column_end":51},"alias_span":null,"name":"patch_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205918,"byte_end":205922,"line_start":41,"line_end":41,"column_start":53,"column_end":57},"alias_span":null,"name":"post","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5561},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205924,"byte_end":205936,"line_start":41,"line_end":41,"column_start":59,"column_end":71},"alias_span":null,"name":"post_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5603},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205938,"byte_end":205941,"line_start":41,"line_end":41,"column_start":73,"column_end":76},"alias_span":null,"name":"put","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5565},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205943,"byte_end":205954,"line_start":41,"line_end":41,"column_start":78,"column_end":89},"alias_span":null,"name":"put_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5608},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205956,"byte_end":205961,"line_start":41,"line_end":41,"column_start":91,"column_end":96},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":5569},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205967,"byte_end":205980,"line_start":42,"line_end":42,"column_start":5,"column_end":18},"alias_span":null,"name":"trace_service","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":0,"index":2071},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205982,"byte_end":205994,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"alias_span":null,"name":"MethodRouter","value":"","parent":{"krate":0,"index":1885}},{"kind":"Use","ref_id":{"krate":55,"index":511},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14934,"byte_end":14945,"line_start":467,"line_end":467,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15036,"byte_end":15040,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15150,"byte_end":15159,"line_start":478,"line_end":478,"column_start":26,"column_end":35},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15150,"byte_end":15159,"line_start":478,"line_end":478,"column_start":26,"column_end":35},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2718},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15265,"byte_end":15271,"line_start":483,"line_end":483,"column_start":24,"column_end":30},"alias_span":null,"name":"Router","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":641},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15461,"byte_end":15469,"line_start":494,"line_end":494,"column_start":21,"column_end":29},"alias_span":null,"name":"BoxError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":650},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15471,"byte_end":15476,"line_start":494,"line_end":494,"column_start":31,"column_end":36},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":54},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15478,"byte_end":15488,"line_start":494,"line_end":494,"column_start":38,"column_end":48},"alias_span":null,"name":"RequestExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15490,"byte_end":15505,"line_start":494,"line_end":494,"column_start":50,"column_end":65},"alias_span":null,"name":"RequestPartsExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":15600,"byte_end":15610,"line_start":499,"line_end":499,"column_start":28,"column_end":38},"alias_span":null,"name":"ServiceExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":0,"byte_end":15671,"line_start":1,"line_end":502,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":138},{"krate":0,"index":203},{"krate":0,"index":217},{"krate":0,"index":240},{"krate":0,"index":346},{"krate":0,"index":475},{"krate":0,"index":990},{"krate":0,"index":1237},{"krate":0,"index":1811},{"krate":0,"index":1885},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870}],"decl_id":null,"docs":" axum is a web application framework that focuses on ergonomics and modularity.","sig":null,"attributes":[{"value":"/ axum is a web application framework that focuses on ergonomics and modularity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":59,"byte_end":141,"line_start":2,"line_end":2,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":142,"byte_end":145,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Table of contents","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":146,"byte_end":169,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":170,"byte_end":173,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [High-level features](#high-level-features)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":174,"byte_end":223,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/ - [Compatibility](#compatibility)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":224,"byte_end":261,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - [Example](#example)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":262,"byte_end":287,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/ - [Routing](#routing)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":288,"byte_end":313,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/ - [Handlers](#handlers)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":314,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/ - [Extractors](#extractors)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":342,"byte_end":373,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/ - [Responses](#responses)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":374,"byte_end":403,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/ - [Error handling](#error-handling)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":404,"byte_end":443,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ - [Middleware](#middleware)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":444,"byte_end":475,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ - [Sharing state with handlers](#sharing-state-with-handlers)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":476,"byte_end":541,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/ - [Building integrations for axum](#building-integrations-for-axum)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":542,"byte_end":613,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ - [Required dependencies](#required-dependencies)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":614,"byte_end":667,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/ - [Examples](#examples)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":668,"byte_end":695,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/ - [Feature flags](#feature-flags)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":696,"byte_end":733,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":734,"byte_end":737,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # High-level features","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":738,"byte_end":763,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":764,"byte_end":767,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - Route requests to handlers with a macro-free API.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":768,"byte_end":823,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ - Declaratively parse requests using extractors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":824,"byte_end":876,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ - Simple and predictable error handling model.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":877,"byte_end":927,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ - Generate responses with minimal boilerplate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":928,"byte_end":978,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/ - Take full advantage of the [`tower`] and [`tower-http`] ecosystem of","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":979,"byte_end":1053,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/   middleware, services, and utilities.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1054,"byte_end":1096,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1097,"byte_end":1100,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In particular, the last point is what sets `axum` apart from other frameworks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1101,"byte_end":1183,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ `axum` doesn't have its own middleware system but instead uses","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1184,"byte_end":1250,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ [`tower::Service`]. This means `axum` gets timeouts, tracing, compression,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1251,"byte_end":1329,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ authorization, and more, for free. It also enables you to share middleware with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1330,"byte_end":1413,"line_start":33,"line_end":33,"column_start":1,"column_end":84}},{"value":"/ applications written using [`hyper`] or [`tonic`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1414,"byte_end":1468,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1469,"byte_end":1472,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Compatibility","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1473,"byte_end":1492,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1493,"byte_end":1496,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ axum is designed to work with [tokio] and [hyper]. Runtime and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1497,"byte_end":1563,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ transport layer independence is not a goal, at least for the time being.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1564,"byte_end":1640,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1641,"byte_end":1644,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1645,"byte_end":1658,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1659,"byte_end":1662,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The \"Hello, World!\" of axum is:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1663,"byte_end":1698,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1699,"byte_end":1702,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1703,"byte_end":1721,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1722,"byte_end":1737,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1738,"byte_end":1759,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1760,"byte_end":1775,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1776,"byte_end":1782,"line_start":49,"line_end":49,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1783,"byte_end":1786,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1787,"byte_end":1805,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1806,"byte_end":1827,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     // build our application with a single route","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1828,"byte_end":1880,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/     let app = Router::new().route(\"/\", get(|| async { \"Hello, World!\" }));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1881,"byte_end":1959,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // run it with hyper on localhost:3000","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":1964,"byte_end":2010,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/     axum::Server::bind(&\"0.0.0.0:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2011,"byte_end":2071,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/         .serve(app.into_make_service())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2072,"byte_end":2115,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/         .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2116,"byte_end":2134,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2135,"byte_end":2157,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2158,"byte_end":2163,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2164,"byte_end":2171,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2172,"byte_end":2175,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note using `#[tokio::main]` requires you enable tokio's `macros` and `rt-multi-thread` features","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2176,"byte_end":2275,"line_start":64,"line_end":64,"column_start":1,"column_end":100}},{"value":"/ or just `full` to enable all features (`cargo add tokio --features macros,rt-multi-thread`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2276,"byte_end":2372,"line_start":65,"line_end":65,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2373,"byte_end":2376,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Routing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2377,"byte_end":2390,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2391,"byte_end":2394,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`Router`] is used to setup which paths goes to which services:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2395,"byte_end":2462,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2463,"byte_end":2466,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2467,"byte_end":2478,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ use axum::{Router, routing::get};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2479,"byte_end":2516,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2517,"byte_end":2520,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // our router","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2521,"byte_end":2538,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2539,"byte_end":2566,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(root))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2567,"byte_end":2597,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/     .route(\"/foo\", get(get_foo).post(post_foo))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2598,"byte_end":2649,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/     .route(\"/foo/bar\", get(foo_bar));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2650,"byte_end":2691,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2692,"byte_end":2695,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // which calls one of these handlers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2696,"byte_end":2736,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/ async fn root() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2737,"byte_end":2759,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/ async fn get_foo() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2760,"byte_end":2785,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ async fn post_foo() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2786,"byte_end":2812,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/ async fn foo_bar() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2813,"byte_end":2838,"line_start":84,"line_end":84,"column_start":1,"column_end":26}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2839,"byte_end":2852,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2853,"byte_end":2946,"line_start":86,"line_end":86,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2947,"byte_end":2955,"line_start":87,"line_end":87,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2956,"byte_end":2963,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2964,"byte_end":2967,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ See [`Router`] for more details on routing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":2968,"byte_end":3015,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3016,"byte_end":3019,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Handlers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3020,"byte_end":3034,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3035,"byte_end":3038,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3088,"byte_end":3091,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ See [`handler`](crate::handler) for more details on handlers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3092,"byte_end":3157,"line_start":96,"line_end":96,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3158,"byte_end":3161,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3162,"byte_end":3178,"line_start":98,"line_end":98,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3179,"byte_end":3182,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ An extractor is a type that implements [`FromRequest`] or [`FromRequestParts`]. Extractors are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3183,"byte_end":3281,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ how you pick apart the incoming request to get the parts your handler needs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3282,"byte_end":3362,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3363,"byte_end":3366,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3367,"byte_end":3378,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/ use axum::extract::{Path, Query, Json};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3379,"byte_end":3422,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3423,"byte_end":3457,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3458,"byte_end":3461,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ // `Path` gives you the path parameters and deserializes them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3462,"byte_end":3528,"line_start":107,"line_end":107,"column_start":1,"column_end":67}},{"value":"/ async fn path(Path(user_id): Path<u32>) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3529,"byte_end":3575,"line_start":108,"line_end":108,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ // `Query` gives you the query parameters and deserializes them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3580,"byte_end":3648,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/ async fn query(Query(params): Query<HashMap<String, String>>) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3649,"byte_end":3717,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3718,"byte_end":3721,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ // Buffer the request body and deserialize it as JSON into a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3722,"byte_end":3786,"line_start":113,"line_end":113,"column_start":1,"column_end":65}},{"value":"/ // `serde_json::Value`. `Json` supports any type that implements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3787,"byte_end":3855,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // `serde::Deserialize`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3856,"byte_end":3884,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/ async fn json(Json(payload): Json<serde_json::Value>) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3885,"byte_end":3945,"line_start":116,"line_end":116,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3946,"byte_end":3953,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3954,"byte_end":3957,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ See [`extract`](crate::extract) for more details on extractors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":3958,"byte_end":4025,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4026,"byte_end":4029,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # Responses","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4030,"byte_end":4045,"line_start":121,"line_end":121,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4046,"byte_end":4049,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Anything that implements [`IntoResponse`] can be returned from handlers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4050,"byte_end":4126,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4127,"byte_end":4130,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4131,"byte_end":4149,"line_start":125,"line_end":125,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4150,"byte_end":4165,"line_start":126,"line_end":126,"column_start":1,"column_end":16}},{"value":"/     body::Body,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4166,"byte_end":4185,"line_start":127,"line_end":127,"column_start":1,"column_end":20}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4186,"byte_end":4207,"line_start":128,"line_end":128,"column_start":1,"column_end":22}},{"value":"/     response::Json,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4208,"byte_end":4231,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4232,"byte_end":4247,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4248,"byte_end":4254,"line_start":131,"line_end":131,"column_start":1,"column_end":7}},{"value":"/ use serde_json::{Value, json};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4255,"byte_end":4289,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4290,"byte_end":4293,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ // `&'static str` becomes a `200 OK` with `content-type: text/plain; charset=utf-8`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4294,"byte_end":4381,"line_start":134,"line_end":134,"column_start":1,"column_end":88}},{"value":"/ async fn plain_text() -> &'static str {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4382,"byte_end":4425,"line_start":135,"line_end":135,"column_start":1,"column_end":44}},{"value":"/     \"foo\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4426,"byte_end":4439,"line_start":136,"line_end":136,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4440,"byte_end":4445,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4446,"byte_end":4449,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ // `Json` gives a content-type of `application/json` and works with any type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4450,"byte_end":4530,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ // that implements `serde::Serialize`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4531,"byte_end":4572,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/ async fn json() -> Json<Value> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4573,"byte_end":4609,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/     Json(json!({ \"data\": 42 }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4610,"byte_end":4645,"line_start":142,"line_end":142,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4646,"byte_end":4651,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4652,"byte_end":4655,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4656,"byte_end":4683,"line_start":145,"line_end":145,"column_start":1,"column_end":28}},{"value":"/     .route(\"/plain_text\", get(plain_text))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4684,"byte_end":4730,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"/     .route(\"/json\", get(json));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4731,"byte_end":4766,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4767,"byte_end":4780,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4781,"byte_end":4874,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4875,"byte_end":4883,"line_start":150,"line_end":150,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4884,"byte_end":4891,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4892,"byte_end":4895,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ See [`response`](crate::response) for more details on building responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4896,"byte_end":4973,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4974,"byte_end":4977,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Error handling","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4978,"byte_end":4998,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":4999,"byte_end":5002,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ axum aims to have a simple and predictable error handling model. That means","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5003,"byte_end":5082,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ it is simple to convert errors into responses and you are guaranteed that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5083,"byte_end":5160,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"/ all errors are handled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5161,"byte_end":5188,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5189,"byte_end":5192,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ See [`error_handling`](crate::error_handling) for more details on axum's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5193,"byte_end":5269,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/ error handling model and how to handle errors gracefully.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5270,"byte_end":5331,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5332,"byte_end":5335,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Middleware","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5336,"byte_end":5352,"line_start":164,"line_end":164,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5353,"byte_end":5356,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ There are several different ways to write middleware for axum. See","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5357,"byte_end":5427,"line_start":166,"line_end":166,"column_start":1,"column_end":71}},{"value":"/ [`middleware`](crate::middleware) for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5428,"byte_end":5483,"line_start":167,"line_end":167,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5484,"byte_end":5487,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Sharing state with handlers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5488,"byte_end":5521,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5522,"byte_end":5525,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ It is common to share some state between handlers. For example, a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5526,"byte_end":5595,"line_start":171,"line_end":171,"column_start":1,"column_end":70}},{"value":"/ pool of database connections or clients to other services may need to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5596,"byte_end":5669,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ be shared.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5670,"byte_end":5684,"line_start":173,"line_end":173,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5685,"byte_end":5688,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The three most common ways of doing that are:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5689,"byte_end":5738,"line_start":175,"line_end":175,"column_start":1,"column_end":50}},{"value":"/ - Using the [`State`] extractor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5739,"byte_end":5774,"line_start":176,"line_end":176,"column_start":1,"column_end":36}},{"value":"/ - Using request extensions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5775,"byte_end":5805,"line_start":177,"line_end":177,"column_start":1,"column_end":31}},{"value":"/ - Using closure captures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5806,"byte_end":5834,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5835,"byte_end":5838,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ## Using the [`State`] extractor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5839,"byte_end":5875,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5876,"byte_end":5879,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5880,"byte_end":5898,"line_start":182,"line_end":182,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5899,"byte_end":5914,"line_start":183,"line_end":183,"column_start":1,"column_end":16}},{"value":"/     extract::State,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5915,"byte_end":5938,"line_start":184,"line_end":184,"column_start":1,"column_end":24}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5939,"byte_end":5960,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5961,"byte_end":5976,"line_start":186,"line_end":186,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5977,"byte_end":5983,"line_start":187,"line_end":187,"column_start":1,"column_end":7}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":5984,"byte_end":6007,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6008,"byte_end":6011,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ struct AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6012,"byte_end":6033,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6034,"byte_end":6048,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6049,"byte_end":6054,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6055,"byte_end":6058,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ let shared_state = Arc::new(AppState { /* ... */ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6059,"byte_end":6115,"line_start":194,"line_end":194,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6116,"byte_end":6119,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6120,"byte_end":6147,"line_start":196,"line_end":196,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6148,"byte_end":6181,"line_start":197,"line_end":197,"column_start":1,"column_end":34}},{"value":"/     .with_state(shared_state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6182,"byte_end":6216,"line_start":198,"line_end":198,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6217,"byte_end":6220,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ async fn handler(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6221,"byte_end":6242,"line_start":200,"line_end":200,"column_start":1,"column_end":22}},{"value":"/     State(state): State<Arc<AppState>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6243,"byte_end":6286,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6287,"byte_end":6294,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6295,"byte_end":6309,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6310,"byte_end":6315,"line_start":204,"line_end":204,"column_start":1,"column_end":6}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6316,"byte_end":6329,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6330,"byte_end":6423,"line_start":206,"line_end":206,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6424,"byte_end":6432,"line_start":207,"line_end":207,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6433,"byte_end":6440,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6441,"byte_end":6444,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ You should prefer using [`State`] if possible since it's more type safe. The downside is that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6445,"byte_end":6542,"line_start":210,"line_end":210,"column_start":1,"column_end":98}},{"value":"/ it's less dynamic than request extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6543,"byte_end":6589,"line_start":211,"line_end":211,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6590,"byte_end":6593,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ See [`State`] for more details about accessing state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6594,"byte_end":6651,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6652,"byte_end":6655,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ ## Using request extensions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6656,"byte_end":6687,"line_start":215,"line_end":215,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6688,"byte_end":6691,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Another way to extract state in handlers is using [`Extension`](crate::extract::Extension) as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6692,"byte_end":6789,"line_start":217,"line_end":217,"column_start":1,"column_end":98}},{"value":"/ layer and extractor:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6790,"byte_end":6814,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6815,"byte_end":6818,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6819,"byte_end":6837,"line_start":220,"line_end":220,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6838,"byte_end":6853,"line_start":221,"line_end":221,"column_start":1,"column_end":16}},{"value":"/     extract::Extension,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6854,"byte_end":6881,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6882,"byte_end":6903,"line_start":223,"line_end":223,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6904,"byte_end":6919,"line_start":224,"line_end":224,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6920,"byte_end":6926,"line_start":225,"line_end":225,"column_start":1,"column_end":7}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6927,"byte_end":6950,"line_start":226,"line_end":226,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6951,"byte_end":6954,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ struct AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6955,"byte_end":6976,"line_start":228,"line_end":228,"column_start":1,"column_end":22}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6977,"byte_end":6991,"line_start":229,"line_end":229,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6992,"byte_end":6997,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":6998,"byte_end":7001,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ let shared_state = Arc::new(AppState { /* ... */ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7002,"byte_end":7058,"line_start":232,"line_end":232,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7059,"byte_end":7062,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7063,"byte_end":7090,"line_start":234,"line_end":234,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7091,"byte_end":7124,"line_start":235,"line_end":235,"column_start":1,"column_end":34}},{"value":"/     .layer(Extension(shared_state));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7125,"byte_end":7165,"line_start":236,"line_end":236,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7166,"byte_end":7169,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ async fn handler(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7170,"byte_end":7191,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/     Extension(state): Extension<Arc<AppState>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7192,"byte_end":7243,"line_start":239,"line_end":239,"column_start":1,"column_end":52}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7244,"byte_end":7251,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7252,"byte_end":7266,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7267,"byte_end":7272,"line_start":242,"line_end":242,"column_start":1,"column_end":6}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7273,"byte_end":7286,"line_start":243,"line_end":243,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7287,"byte_end":7380,"line_start":244,"line_end":244,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7381,"byte_end":7389,"line_start":245,"line_end":245,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7390,"byte_end":7397,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7398,"byte_end":7401,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The downside to this approach is that you'll get runtime errors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7402,"byte_end":7469,"line_start":248,"line_end":248,"column_start":1,"column_end":68}},{"value":"/ (specifically a `500 Internal Server Error` response) if you try and extract","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7470,"byte_end":7550,"line_start":249,"line_end":249,"column_start":1,"column_end":81}},{"value":"/ an extension that doesn't exist, perhaps because you forgot to add the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7551,"byte_end":7625,"line_start":250,"line_end":250,"column_start":1,"column_end":75}},{"value":"/ middleware or because you're extracting the wrong type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7626,"byte_end":7685,"line_start":251,"line_end":251,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7686,"byte_end":7689,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ## Using closure captures","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7690,"byte_end":7719,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7720,"byte_end":7723,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ State can also be passed directly to handlers using closure captures:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7724,"byte_end":7797,"line_start":255,"line_end":255,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7798,"byte_end":7801,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7802,"byte_end":7820,"line_start":257,"line_end":257,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7821,"byte_end":7836,"line_start":258,"line_end":258,"column_start":1,"column_end":16}},{"value":"/     Json,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7837,"byte_end":7850,"line_start":259,"line_end":259,"column_start":1,"column_end":14}},{"value":"/     extract::{Extension, Path},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7851,"byte_end":7886,"line_start":260,"line_end":260,"column_start":1,"column_end":36}},{"value":"/     routing::{get, post},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7887,"byte_end":7916,"line_start":261,"line_end":261,"column_start":1,"column_end":30}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7917,"byte_end":7932,"line_start":262,"line_end":262,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7933,"byte_end":7939,"line_start":263,"line_end":263,"column_start":1,"column_end":7}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7940,"byte_end":7963,"line_start":264,"line_end":264,"column_start":1,"column_end":24}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7964,"byte_end":7991,"line_start":265,"line_end":265,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7992,"byte_end":7995,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ struct AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":7996,"byte_end":8017,"line_start":267,"line_end":267,"column_start":1,"column_end":22}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8018,"byte_end":8032,"line_start":268,"line_end":268,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8033,"byte_end":8038,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8039,"byte_end":8042,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ let shared_state = Arc::new(AppState { /* ... */ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8043,"byte_end":8099,"line_start":271,"line_end":271,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8100,"byte_end":8103,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8104,"byte_end":8131,"line_start":273,"line_end":273,"column_start":1,"column_end":28}},{"value":"/     .route(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8132,"byte_end":8147,"line_start":274,"line_end":274,"column_start":1,"column_end":16}},{"value":"/         \"/users\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8148,"byte_end":8169,"line_start":275,"line_end":275,"column_start":1,"column_end":22}},{"value":"/         post({","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8170,"byte_end":8188,"line_start":276,"line_end":276,"column_start":1,"column_end":19}},{"value":"/             let shared_state = Arc::clone(&shared_state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8189,"byte_end":8250,"line_start":277,"line_end":277,"column_start":1,"column_end":62}},{"value":"/             move |body| create_user(body, shared_state)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8251,"byte_end":8310,"line_start":278,"line_end":278,"column_start":1,"column_end":60}},{"value":"/         }),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8311,"byte_end":8326,"line_start":279,"line_end":279,"column_start":1,"column_end":16}},{"value":"/     )","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8327,"byte_end":8336,"line_start":280,"line_end":280,"column_start":1,"column_end":10}},{"value":"/     .route(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8337,"byte_end":8352,"line_start":281,"line_end":281,"column_start":1,"column_end":16}},{"value":"/         \"/users/:id\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8353,"byte_end":8378,"line_start":282,"line_end":282,"column_start":1,"column_end":26}},{"value":"/         get({","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8379,"byte_end":8396,"line_start":283,"line_end":283,"column_start":1,"column_end":18}},{"value":"/             let shared_state = Arc::clone(&shared_state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8397,"byte_end":8458,"line_start":284,"line_end":284,"column_start":1,"column_end":62}},{"value":"/             move |path| get_user(path, shared_state)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8459,"byte_end":8515,"line_start":285,"line_end":285,"column_start":1,"column_end":57}},{"value":"/         }),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8516,"byte_end":8531,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/     );","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8532,"byte_end":8542,"line_start":287,"line_end":287,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8543,"byte_end":8546,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ async fn get_user(Path(user_id): Path<String>, state: Arc<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8547,"byte_end":8621,"line_start":289,"line_end":289,"column_start":1,"column_end":75}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8622,"byte_end":8636,"line_start":290,"line_end":290,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8637,"byte_end":8642,"line_start":291,"line_end":291,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8643,"byte_end":8646,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ async fn create_user(Json(payload): Json<CreateUserPayload>, state: Arc<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8647,"byte_end":8735,"line_start":293,"line_end":293,"column_start":1,"column_end":89}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8736,"byte_end":8750,"line_start":294,"line_end":294,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8751,"byte_end":8756,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8757,"byte_end":8760,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8761,"byte_end":8787,"line_start":297,"line_end":297,"column_start":1,"column_end":27}},{"value":"/ struct CreateUserPayload {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8788,"byte_end":8818,"line_start":298,"line_end":298,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8819,"byte_end":8833,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8834,"byte_end":8839,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8840,"byte_end":8853,"line_start":301,"line_end":301,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8854,"byte_end":8947,"line_start":302,"line_end":302,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8948,"byte_end":8956,"line_start":303,"line_end":303,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8957,"byte_end":8964,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8965,"byte_end":8968,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ The downside to this approach is that it's a little more verbose than using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":8969,"byte_end":9048,"line_start":306,"line_end":306,"column_start":1,"column_end":80}},{"value":"/ [`State`] or extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9049,"byte_end":9077,"line_start":307,"line_end":307,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9078,"byte_end":9081,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ # Building integrations for axum","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9082,"byte_end":9118,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9119,"byte_end":9122,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ Libraries authors that want to provide [`FromRequest`], [`FromRequestParts`], or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9123,"byte_end":9207,"line_start":311,"line_end":311,"column_start":1,"column_end":85}},{"value":"/ [`IntoResponse`] implementations should depend on the [`axum-core`] crate, instead of `axum` if","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9208,"byte_end":9307,"line_start":312,"line_end":312,"column_start":1,"column_end":100}},{"value":"/ possible. [`axum-core`] contains core types and traits and is less likely to receive breaking","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9308,"byte_end":9405,"line_start":313,"line_end":313,"column_start":1,"column_end":98}},{"value":"/ changes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9406,"byte_end":9418,"line_start":314,"line_end":314,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9419,"byte_end":9422,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ # Required dependencies","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9423,"byte_end":9450,"line_start":316,"line_end":316,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9451,"byte_end":9454,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ To use axum there are a few dependencies you have to pull in as well:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9455,"byte_end":9528,"line_start":318,"line_end":318,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9529,"byte_end":9532,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9533,"byte_end":9544,"line_start":320,"line_end":320,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9545,"byte_end":9563,"line_start":321,"line_end":321,"column_start":1,"column_end":19}},{"value":"/ axum = \"<latest-version>\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9564,"byte_end":9593,"line_start":322,"line_end":322,"column_start":1,"column_end":30}},{"value":"/ hyper = { version = \"<latest-version>\", features = [\"full\"] }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9594,"byte_end":9659,"line_start":323,"line_end":323,"column_start":1,"column_end":66}},{"value":"/ tokio = { version = \"<latest-version>\", features = [\"full\"] }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9660,"byte_end":9725,"line_start":324,"line_end":324,"column_start":1,"column_end":66}},{"value":"/ tower = \"<latest-version>\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9726,"byte_end":9756,"line_start":325,"line_end":325,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9757,"byte_end":9764,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9765,"byte_end":9768,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ The `\"full\"` feature for hyper and tokio isn't strictly necessary but it's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9769,"byte_end":9847,"line_start":328,"line_end":328,"column_start":1,"column_end":79}},{"value":"/ the easiest way to get started.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9848,"byte_end":9883,"line_start":329,"line_end":329,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9884,"byte_end":9887,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ Note that [`hyper::Server`] is re-exported by axum so if that's all you need","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9888,"byte_end":9968,"line_start":331,"line_end":331,"column_start":1,"column_end":81}},{"value":"/ then you don't have to explicitly depend on hyper.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":9969,"byte_end":10023,"line_start":332,"line_end":332,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10024,"byte_end":10027,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ Tower isn't strictly necessary either but helpful for testing. See the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10028,"byte_end":10102,"line_start":334,"line_end":334,"column_start":1,"column_end":75}},{"value":"/ testing example in the repo to learn more about testing axum apps.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10103,"byte_end":10173,"line_start":335,"line_end":335,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10174,"byte_end":10177,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10178,"byte_end":10192,"line_start":337,"line_end":337,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10193,"byte_end":10196,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ The axum repo contains [a number of examples][examples] that show how to put all the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10197,"byte_end":10285,"line_start":339,"line_end":339,"column_start":1,"column_end":89}},{"value":"/ pieces together.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10286,"byte_end":10306,"line_start":340,"line_end":340,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10307,"byte_end":10310,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ # Feature flags","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10311,"byte_end":10330,"line_start":342,"line_end":342,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10331,"byte_end":10334,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ axum uses a set of [feature flags] to reduce the amount of compiled and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10335,"byte_end":10410,"line_start":344,"line_end":344,"column_start":1,"column_end":76}},{"value":"/ optional dependencies.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10411,"byte_end":10437,"line_start":345,"line_end":345,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10438,"byte_end":10441,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ The following optional features are available:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10442,"byte_end":10492,"line_start":347,"line_end":347,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10493,"byte_end":10496,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Name | Description | Default?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10497,"byte_end":10530,"line_start":349,"line_end":349,"column_start":1,"column_end":34}},{"value":"/ ---|---|---","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10531,"byte_end":10546,"line_start":350,"line_end":350,"column_start":1,"column_end":16}},{"value":"/ `headers` | Enables extracting typed headers via [`TypedHeader`] | No","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10547,"byte_end":10620,"line_start":351,"line_end":351,"column_start":1,"column_end":74}},{"value":"/ `http1` | Enables hyper's `http1` feature | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10621,"byte_end":10672,"line_start":352,"line_end":352,"column_start":1,"column_end":52}},{"value":"/ `http2` | Enables hyper's `http2` feature | No","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10673,"byte_end":10723,"line_start":353,"line_end":353,"column_start":1,"column_end":51}},{"value":"/ `json` | Enables the [`Json`] type and some similar convenience functionality | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10724,"byte_end":10811,"line_start":354,"line_end":354,"column_start":1,"column_end":88}},{"value":"/ `macros` | Enables optional utility macros | No","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10812,"byte_end":10863,"line_start":355,"line_end":355,"column_start":1,"column_end":52}},{"value":"/ `matched-path` | Enables capturing of every request's router path and the [`MatchedPath`] extractor | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10864,"byte_end":10973,"line_start":356,"line_end":356,"column_start":1,"column_end":110}},{"value":"/ `multipart` | Enables parsing `multipart/form-data` requests with [`Multipart`] | No","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":10974,"byte_end":11062,"line_start":357,"line_end":357,"column_start":1,"column_end":89}},{"value":"/ `original-uri` | Enables capturing of every request's original URI and the [`OriginalUri`] extractor | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11063,"byte_end":11173,"line_start":358,"line_end":358,"column_start":1,"column_end":111}},{"value":"/ `tokio` | Enables `tokio` as a dependency and `axum::Server`, `SSE` and `extract::connect_info` types. | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11174,"byte_end":11286,"line_start":359,"line_end":359,"column_start":1,"column_end":113}},{"value":"/ `tower-log` | Enables `tower`'s `log` feature | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11287,"byte_end":11342,"line_start":360,"line_end":360,"column_start":1,"column_end":56}},{"value":"/ `tracing` | Log rejections from built-in extractors | No","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11343,"byte_end":11403,"line_start":361,"line_end":361,"column_start":1,"column_end":61}},{"value":"/ `ws` | Enables WebSockets support via [`extract::ws`] | No","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11404,"byte_end":11466,"line_start":362,"line_end":362,"column_start":1,"column_end":63}},{"value":"/ `form` | Enables the `Form` extractor | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11467,"byte_end":11514,"line_start":363,"line_end":363,"column_start":1,"column_end":48}},{"value":"/ `query` | Enables the `Query` extractor | Yes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11515,"byte_end":11564,"line_start":364,"line_end":364,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11565,"byte_end":11568,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ [`TypedHeader`]: crate::extract::TypedHeader","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11569,"byte_end":11617,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/ [`MatchedPath`]: crate::extract::MatchedPath","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11618,"byte_end":11666,"line_start":367,"line_end":367,"column_start":1,"column_end":49}},{"value":"/ [`Multipart`]: crate::extract::Multipart","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11667,"byte_end":11711,"line_start":368,"line_end":368,"column_start":1,"column_end":45}},{"value":"/ [`OriginalUri`]: crate::extract::OriginalUri","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11712,"byte_end":11760,"line_start":369,"line_end":369,"column_start":1,"column_end":49}},{"value":"/ [`tower`]: https://crates.io/crates/tower","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11761,"byte_end":11806,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`tower-http`]: https://crates.io/crates/tower-http","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11807,"byte_end":11862,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/ [`tokio`]: http://crates.io/crates/tokio","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11863,"byte_end":11907,"line_start":372,"line_end":372,"column_start":1,"column_end":45}},{"value":"/ [`hyper`]: http://crates.io/crates/hyper","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11908,"byte_end":11952,"line_start":373,"line_end":373,"column_start":1,"column_end":45}},{"value":"/ [`tonic`]: http://crates.io/crates/tonic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11953,"byte_end":11997,"line_start":374,"line_end":374,"column_start":1,"column_end":45}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/features.html#the-features-section","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":11998,"byte_end":12095,"line_start":375,"line_end":375,"column_start":1,"column_end":98}},{"value":"/ [`IntoResponse`]: crate::response::IntoResponse","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12096,"byte_end":12147,"line_start":376,"line_end":376,"column_start":1,"column_end":52}},{"value":"/ [`Timeout`]: tower::timeout::Timeout","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12148,"byte_end":12188,"line_start":377,"line_end":377,"column_start":1,"column_end":41}},{"value":"/ [examples]: https://github.com/tokio-rs/axum/tree/main/examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12189,"byte_end":12256,"line_start":378,"line_end":378,"column_start":1,"column_end":68}},{"value":"/ [`Router::merge`]: crate::routing::Router::merge","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12257,"byte_end":12309,"line_start":379,"line_end":379,"column_start":1,"column_end":53}},{"value":"/ [`axum::Server`]: hyper::server::Server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12310,"byte_end":12353,"line_start":380,"line_end":380,"column_start":1,"column_end":44}},{"value":"/ [`Service`]: tower::Service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12354,"byte_end":12385,"line_start":381,"line_end":381,"column_start":1,"column_end":32}},{"value":"/ [`Service::poll_ready`]: tower::Service::poll_ready","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12386,"byte_end":12441,"line_start":382,"line_end":382,"column_start":1,"column_end":56}},{"value":"/ [`Service`'s]: tower::Service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12442,"byte_end":12475,"line_start":383,"line_end":383,"column_start":1,"column_end":34}},{"value":"/ [`tower::Service`]: tower::Service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12476,"byte_end":12514,"line_start":384,"line_end":384,"column_start":1,"column_end":39}},{"value":"/ [tower-guides]: https://github.com/tower-rs/tower/tree/master/guides","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12515,"byte_end":12587,"line_start":385,"line_end":385,"column_start":1,"column_end":73}},{"value":"/ [`Uuid`]: https://docs.rs/uuid/latest/uuid/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12588,"byte_end":12635,"line_start":386,"line_end":386,"column_start":1,"column_end":48}},{"value":"/ [`FromRequest`]: crate::extract::FromRequest","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12636,"byte_end":12684,"line_start":387,"line_end":387,"column_start":1,"column_end":49}},{"value":"/ [`FromRequestParts`]: crate::extract::FromRequestParts","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12685,"byte_end":12743,"line_start":388,"line_end":388,"column_start":1,"column_end":59}},{"value":"/ [`HeaderMap`]: http::header::HeaderMap","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12744,"byte_end":12786,"line_start":389,"line_end":389,"column_start":1,"column_end":43}},{"value":"/ [`Request`]: http::Request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12787,"byte_end":12817,"line_start":390,"line_end":390,"column_start":1,"column_end":31}},{"value":"/ [customize-extractor-error]: https://github.com/tokio-rs/axum/blob/main/examples/customize-extractor-error/src/main.rs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12818,"byte_end":12940,"line_start":391,"line_end":391,"column_start":1,"column_end":123}},{"value":"/ [axum-macros]: https://docs.rs/axum-macros","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12941,"byte_end":12987,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/ [`debug_handler`]: https://docs.rs/axum-macros/latest/axum_macros/attr.debug_handler.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":12988,"byte_end":13081,"line_start":393,"line_end":393,"column_start":1,"column_end":94}},{"value":"/ [`Handler`]: crate::handler::Handler","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":13082,"byte_end":13122,"line_start":394,"line_end":394,"column_start":1,"column_end":41}},{"value":"/ [`Infallible`]: std::convert::Infallible","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":13123,"byte_end":13167,"line_start":395,"line_end":395,"column_start":1,"column_end":45}},{"value":"/ [load shed]: tower::load_shed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":13168,"byte_end":13201,"line_start":396,"line_end":396,"column_start":1,"column_end":34}},{"value":"/ [`axum-core`]: http://crates.io/crates/axum-core","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":13202,"byte_end":13254,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ [`State`]: crate::extract::State","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":13255,"byte_end":13291,"line_start":398,"line_end":398,"column_start":1,"column_end":37}},{"value":"warn(clippy :: all, clippy :: todo, clippy :: empty_enum, clippy ::\nenum_glob_use, clippy :: mem_forget, clippy :: unused_self, clippy ::\nfilter_map_next, clippy :: needless_continue, clippy :: needless_borrow,\nclippy :: match_wildcard_for_single_variants, clippy :: if_let_mutex, clippy\n:: mismatched_target_os, clippy :: await_holding_lock, clippy ::\nmatch_on_vec_items, clippy :: imprecise_flops, clippy :: suboptimal_flops,\nclippy :: lossy_float_literal, clippy :: rest_pat_in_fully_bound_structs,\nclippy :: fn_params_excessive_bools, clippy :: exit, clippy ::\ninefficient_to_string, clippy :: linkedlist, clippy :: macro_use_imports,\nclippy :: option_option, clippy :: verbose_file_reads, clippy ::\nunnested_or_patterns, clippy :: str_to_string, rust_2018_idioms,\nfuture_incompatible, nonstandard_style, missing_debug_implementations,\nmissing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":13293,"byte_end":14226,"line_start":400,"line_end":433,"column_start":1,"column_end":3}},{"value":"deny(unreachable_pub, private_in_public)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14227,"byte_end":14271,"line_start":434,"line_end":434,"column_start":1,"column_end":45}},{"value":"allow(elided_lifetimes_in_paths, clippy :: type_complexity)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14272,"byte_end":14333,"line_start":435,"line_end":435,"column_start":1,"column_end":62}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14334,"byte_end":14357,"line_start":436,"line_end":436,"column_start":1,"column_end":24}},{"value":"warn(clippy :: print_stdout, clippy :: dbg_macro)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14479,"byte_end":14524,"line_start":439,"line_end":439,"column_start":24,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24518,"byte_end":24527,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"Extension","qualname":"::extension::Extension","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor and response for extensions.","sig":null,"attributes":[{"value":"/ Extractor and response for extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23144,"byte_end":23186,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23187,"byte_end":23190,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # As extractor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23191,"byte_end":23209,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23210,"byte_end":23213,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is commonly used to share state across handlers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23214,"byte_end":23271,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23272,"byte_end":23275,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23276,"byte_end":23294,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23295,"byte_end":23310,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23311,"byte_end":23326,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     Extension,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23327,"byte_end":23345,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23346,"byte_end":23367,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23368,"byte_end":23374,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23375,"byte_end":23398,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23399,"byte_end":23402,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Some shared state used throughout our application","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23403,"byte_end":23459,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ struct State {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23460,"byte_end":23478,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23479,"byte_end":23493,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23494,"byte_end":23499,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23500,"byte_end":23503,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ async fn handler(state: Extension<Arc<State>>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23504,"byte_end":23556,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23557,"byte_end":23571,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23572,"byte_end":23577,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23578,"byte_end":23581,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let state = Arc::new(State { /* ... */ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23582,"byte_end":23628,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23629,"byte_end":23632,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23633,"byte_end":23685,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/     // Add middleware that inserts the state into all incoming request's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23686,"byte_end":23762,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     // extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23763,"byte_end":23785,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/     .layer(Extension(state));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23786,"byte_end":23819,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23820,"byte_end":23833,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23834,"byte_end":23927,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23928,"byte_end":23936,"line_start":45,"line_end":45,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23937,"byte_end":23944,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23945,"byte_end":23948,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ If the extension is missing it will reject the request with a `500 Internal","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":23949,"byte_end":24028,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ Server Error` response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24029,"byte_end":24056,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24057,"byte_end":24060,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # As response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24061,"byte_end":24078,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24079,"byte_end":24082,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Response extensions can be used to share state with middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24083,"byte_end":24150,"line_start":53,"line_end":53,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24151,"byte_end":24154,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24155,"byte_end":24166,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24167,"byte_end":24182,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     Extension,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24183,"byte_end":24201,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/     response::IntoResponse,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24202,"byte_end":24233,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24234,"byte_end":24240,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24241,"byte_end":24244,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ async fn handler() -> (Extension<Foo>, &'static str) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24245,"byte_end":24303,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/     (","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24304,"byte_end":24313,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/         Extension(Foo(\"foo\")),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24314,"byte_end":24348,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/         \"Hello, World!\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24349,"byte_end":24376,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/     )","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24377,"byte_end":24386,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24387,"byte_end":24392,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24393,"byte_end":24396,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24397,"byte_end":24417,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/ struct Foo(&'static str);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24418,"byte_end":24447,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24448,"byte_end":24455,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24495,"byte_end":24506,"line_start":72,"line_end":72,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24531,"byte_end":24536,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"name":"0","qualname":"::extension::Extension::0","value":"T","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24724,"byte_end":24742,"line_start":83,"line_end":83,"column_start":14,"column_end":32},"name":"from_request_parts","qualname":"<Extension<T> as axum_core::extract::FromRequestParts>::from_request_parts","value":"fn from_request_parts<'life0, 'life1,\n'async_trait>(&'life0 mut Parts, &'life1 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1680},"children":[],"decl_id":{"krate":56,"index":1683},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24540,"byte_end":24554,"line_start":75,"line_end":75,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25384,"byte_end":25403,"line_start":107,"line_end":107,"column_start":8,"column_end":27},"name":"into_response_parts","qualname":"<Extension<T> as axum_core::response::IntoResponseParts>::into_response_parts","value":"fn into_response_parts(Self, ResponseParts)\n-> Result<ResponseParts, Self::Error>","parent":{"krate":56,"index":570},"children":[],"decl_id":{"krate":56,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25627,"byte_end":25640,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"into_response","qualname":"<Extension<T> as axum_core::response::IntoResponse>::into_response","value":"fn into_response(Self) -> Response","parent":{"krate":56,"index":440},"children":[],"decl_id":{"krate":56,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25912,"byte_end":25917,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"layer","qualname":"<Extension<T> as tower::Layer>::layer","value":"fn layer<'_>(&'_ Self, S) -> Self::Service","parent":{"krate":25,"index":240},"children":[],"decl_id":{"krate":25,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26353,"byte_end":26365,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"AddExtension","qualname":"::extension::AddExtension","value":"AddExtension {  }","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911}],"decl_id":null,"docs":" Middleware for adding some shareable value to [request extensions].","sig":null,"attributes":[{"value":"/ Middleware for adding some shareable value to [request extensions].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26050,"byte_end":26121,"line_start":138,"line_end":138,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26122,"byte_end":26125,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ See [Sharing state with handlers](index.html#sharing-state-with-handlers)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26126,"byte_end":26203,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26204,"byte_end":26225,"line_start":141,"line_end":141,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26226,"byte_end":26229,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [request extensions]: https://docs.rs/http/latest/http/struct.Extensions.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26230,"byte_end":26311,"line_start":143,"line_end":143,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26687,"byte_end":26697,"line_start":160,"line_end":160,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<AddExtension<S, T> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26670,"byte_end":26679,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26814,"byte_end":26818,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"call","qualname":"<AddExtension<S, T> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<ResBody>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":210},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27207,"byte_end":27217,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"ServiceExt","qualname":"::service_ext::ServiceExt","value":"ServiceExt<R>: Service<R> + Sized","parent":null,"children":[{"krate":0,"index":212}],"decl_id":null,"docs":" Extension trait that adds additional methods to any [`Service`].\n","sig":null,"attributes":[{"value":"/ Extension trait that adds additional methods to any [`Service`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27128,"byte_end":27196,"line_start":6,"line_end":6,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27725,"byte_end":27742,"line_start":17,"line_end":17,"column_start":8,"column_end":25},"name":"into_make_service","qualname":"::service_ext::ServiceExt::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<Self>","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Convert this service into a [`MakeService`], that is a [`Service`] whose\n response is another service.","sig":null,"attributes":[{"value":"/ Convert this service into a [`MakeService`], that is a [`Service`] whose","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27247,"byte_end":27323,"line_start":8,"line_end":8,"column_start":5,"column_end":81}},{"value":"/ response is another service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27328,"byte_end":27360,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27365,"byte_end":27368,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ This is commonly used when applying middleware around an entire [`Router`]. See [\"Rewriting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27373,"byte_end":27468,"line_start":11,"line_end":11,"column_start":5,"column_end":100}},{"value":"/ request URI in middleware\"] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27473,"byte_end":27522,"line_start":12,"line_end":12,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27527,"byte_end":27530,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27535,"byte_end":27580,"line_start":14,"line_end":14,"column_start":5,"column_end":50}},{"value":"/ [\"Rewriting request URI in middleware\"]: crate::middleware#rewriting-request-uri-in-middleware","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27585,"byte_end":27683,"line_start":15,"line_end":15,"column_start":5,"column_end":103}},{"value":"/ [`Router`]: crate::Router","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27688,"byte_end":27717,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":28656,"byte_end":28673,"line_start":39,"line_end":39,"column_start":8,"column_end":25},"name":"into_make_service","qualname":"<S as service_ext::ServiceExt>::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<Self>","parent":{"krate":0,"index":210},"children":[],"decl_id":{"krate":0,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":240},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":343}],"decl_id":null,"docs":" HTTP body utilities.\n","sig":null,"attributes":[{"value":"/ HTTP body utilities.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/mod.rs","byte_start":30247,"byte_end":30271,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32042,"byte_end":32052,"line_start":56,"line_end":56,"column_start":16,"column_end":26},"name":"StreamBody","qualname":"::body::stream_body::StreamBody","value":"StreamBody {  }","parent":null,"children":[{"krate":0,"index":2980}],"decl_id":null,"docs":" An [`http_body::Body`] created from a [`Stream`].","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13111531,"byte_end":13111540,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32252,"byte_end":32256,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"from","qualname":"<StreamBody<S> as std::convert::From>::from","value":"fn from(S) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32458,"byte_end":32461,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamBody<S>>::new","value":"fn new(S) -> Self where S: TryStream + Send + 'static, S::Ok: Into<Bytes>,\nS::Error: Into<BoxError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StreamBody` from a [`Stream`].","sig":null,"attributes":[{"value":"/ Create a new `StreamBody` from a [`Stream`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32341,"byte_end":32389,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32394,"byte_end":32397,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_util::stream::Stream","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32402,"byte_end":32446,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32821,"byte_end":32834,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"into_response","qualname":"<StreamBody<S> as axum_core::response::IntoResponse>::into_response","value":"fn into_response(Self) -> Response","parent":{"krate":56,"index":440},"children":[],"decl_id":{"krate":56,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32993,"byte_end":33000,"line_start":101,"line_end":101,"column_start":8,"column_end":15},"name":"default","qualname":"<StreamBody<futures_util::stream::Empty<Result<Bytes, Error>>> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33103,"byte_end":33106,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<StreamBody<S> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33383,"byte_end":33392,"line_start":121,"line_end":121,"column_start":8,"column_end":17},"name":"poll_data","qualname":"<StreamBody<S> as http_body::Body>::poll_data","value":"fn poll_data<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Result<Self::Data, Self::Error>>>","parent":{"krate":57,"index":470},"children":[],"decl_id":{"krate":57,"index":473},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33820,"byte_end":33833,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_trailers","qualname":"<StreamBody<S> as http_body::Body>::poll_trailers","value":"fn poll_trailers<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<Option<HeaderMap>, Self::Error>>","parent":{"krate":57,"index":470},"children":[],"decl_id":{"krate":57,"index":474},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":346},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error_handling","qualname":"::error_handling","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":413},{"krate":0,"index":420},{"krate":0,"index":425},{"krate":0,"index":430},{"krate":0,"index":435},{"krate":0,"index":447},{"krate":0,"index":3011},{"krate":0,"index":3024},{"krate":0,"index":3038},{"krate":0,"index":3053},{"krate":0,"index":3069},{"krate":0,"index":3086},{"krate":0,"index":3104},{"krate":0,"index":3123},{"krate":0,"index":3143},{"krate":0,"index":3164},{"krate":0,"index":3186},{"krate":0,"index":3209},{"krate":0,"index":3233},{"krate":0,"index":3258},{"krate":0,"index":3284},{"krate":0,"index":3311},{"krate":0,"index":448}],"decl_id":null,"docs":"Error handling model and utilities","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34880,"byte_end":34896,"line_start":23,"line_end":23,"column_start":12,"column_end":28},"name":"HandleErrorLayer","qualname":"::error_handling::HandleErrorLayer","value":"HandleErrorLayer {  }","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" [`Layer`] that applies [`HandleError`] which is a [`Service`] adapter\n that handles errors by converting them into responses.","sig":null,"attributes":[{"value":"/ [`Layer`] that applies [`HandleError`] which is a [`Service`] adapter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34655,"byte_end":34728,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ that handles errors by converting them into responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34729,"byte_end":34787,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34788,"byte_end":34791,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See [module docs](self) for more details on axum's error handling model.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34792,"byte_end":34868,"line_start":22,"line_end":22,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35046,"byte_end":35049,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<HandleErrorLayer<F, T>>::new","value":"fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `HandleErrorLayer`.\n","sig":null,"attributes":[{"value":"/ Create a new `HandleErrorLayer`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34998,"byte_end":35034,"line_start":29,"line_end":29,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35225,"byte_end":35230,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<HandleErrorLayer<F, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35408,"byte_end":35411,"line_start":51,"line_end":51,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HandleErrorLayer<F, E> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35732,"byte_end":35737,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"layer","qualname":"<HandleErrorLayer<F, T> as tower::Layer>::layer","value":"fn layer<'_>(&'_ Self, S) -> Self::Service","parent":{"krate":25,"index":240},"children":[],"decl_id":{"krate":25,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":413},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36004,"byte_end":36015,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"HandleError","qualname":"::error_handling::HandleError","value":"HandleError {  }","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"decl_id":null,"docs":" A [`Service`] adapter that handles errors by converting them into responses.","sig":null,"attributes":[{"value":"/ A [`Service`] adapter that handles errors by converting them into responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35831,"byte_end":35911,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35912,"byte_end":35915,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ See [module docs](self) for more details on axum's error handling model.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35916,"byte_end":35992,"line_start":71,"line_end":71,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36178,"byte_end":36181,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<HandleError<S, F, T>>::new","value":"fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `HandleError`.\n","sig":null,"attributes":[{"value":"/ Create a new `HandleError`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36135,"byte_end":36166,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36401,"byte_end":36406,"line_start":94,"line_end":94,"column_start":8,"column_end":13},"name":"clone","qualname":"<HandleError<S, F, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36649,"byte_end":36652,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HandleError<S, F, E> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":37351,"byte_end":37361,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<HandleError<S, F, ()> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":37471,"byte_end":37475,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"call","qualname":"<HandleError<S, F, ()> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":40713,"byte_end":40719,"line_start":224,"line_end":224,"column_start":9,"column_end":15},"name":"future","qualname":"::error_handling::future","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":472}],"decl_id":null,"docs":" Future types.\n","sig":null,"attributes":[{"value":"/ Future types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":40726,"byte_end":40743,"line_start":225,"line_end":225,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":41031,"byte_end":41048,"line_start":238,"line_end":238,"column_start":20,"column_end":37},"name":"HandleErrorFuture","qualname":"::error_handling::future::HandleErrorFuture","value":"HandleErrorFuture {  }","parent":null,"children":[{"krate":0,"index":3340}],"decl_id":null,"docs":" Response future for [`HandleError`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":41345,"byte_end":41349,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"poll","qualname":"<HandleErrorFuture as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":475},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extract","qualname":"::extract","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":745},{"krate":0,"index":760},{"krate":0,"index":790},{"krate":0,"index":829},{"krate":0,"index":842},{"krate":0,"index":914},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":989}],"decl_id":null,"docs":"Types and traits for extracting data from requests.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":483},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::extract::path","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":3550},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":3578},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":714},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":716},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3619},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":3627},{"krate":0,"index":3631},{"krate":0,"index":733},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" Extractor that will get captures from the URL and parse them using\n [`serde`].\n","sig":null,"attributes":[{"value":"/ Extractor that will get captures from the URL and parse them using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44129,"byte_end":44199,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ [`serde`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44200,"byte_end":44214,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48209,"byte_end":48213,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"Path","qualname":"::extract::path::Path","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that will get captures from the URL and parse them using\n [`serde`].","sig":null,"attributes":[{"value":"/ Extractor that will get captures from the URL and parse them using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44535,"byte_end":44605,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ [`serde`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44606,"byte_end":44620,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44621,"byte_end":44624,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Any percent encoded parameters will be automatically decoded. The decoded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44625,"byte_end":44702,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ parameters must be valid UTF-8, otherwise `Path` will fail and return a `400","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44703,"byte_end":44783,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ Bad Request` response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44784,"byte_end":44810,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44811,"byte_end":44814,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44815,"byte_end":44828,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44829,"byte_end":44832,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ These examples assume the `serde` feature of the [`uuid`] crate is enabled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44833,"byte_end":44912,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44913,"byte_end":44916,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`uuid`]: https://crates.io/crates/uuid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44917,"byte_end":44960,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44961,"byte_end":44964,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44965,"byte_end":44983,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":44984,"byte_end":44999,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     extract::Path,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45000,"byte_end":45022,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45023,"byte_end":45044,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45045,"byte_end":45060,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45061,"byte_end":45067,"line_start":35,"line_end":35,"column_start":1,"column_end":7}},{"value":"/ use uuid::Uuid;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45068,"byte_end":45087,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45088,"byte_end":45091,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ async fn users_teams_show(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45092,"byte_end":45122,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/     Path((user_id, team_id)): Path<(Uuid, Uuid)>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45123,"byte_end":45176,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45177,"byte_end":45184,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45185,"byte_end":45199,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45200,"byte_end":45205,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45206,"byte_end":45209,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/users/:user_id/team/:team_id\", get(users_teams_show));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45210,"byte_end":45300,"line_start":44,"line_end":44,"column_start":1,"column_end":91}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45301,"byte_end":45314,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45315,"byte_end":45408,"line_start":46,"line_end":46,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45409,"byte_end":45417,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45418,"byte_end":45425,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45426,"byte_end":45429,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ If the path contains only one parameter, then you can omit the tuple.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45430,"byte_end":45503,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45504,"byte_end":45507,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45508,"byte_end":45526,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45527,"byte_end":45542,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     extract::Path,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45543,"byte_end":45565,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45566,"byte_end":45587,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45588,"byte_end":45603,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45604,"byte_end":45610,"line_start":57,"line_end":57,"column_start":1,"column_end":7}},{"value":"/ use uuid::Uuid;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45611,"byte_end":45630,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45631,"byte_end":45634,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ async fn user_info(Path(user_id): Path<Uuid>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45635,"byte_end":45686,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45687,"byte_end":45701,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45702,"byte_end":45707,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45708,"byte_end":45711,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/users/:user_id\", get(user_info));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45712,"byte_end":45781,"line_start":64,"line_end":64,"column_start":1,"column_end":70}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45782,"byte_end":45795,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45796,"byte_end":45889,"line_start":66,"line_end":66,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45890,"byte_end":45898,"line_start":67,"line_end":67,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45899,"byte_end":45906,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45907,"byte_end":45910,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Path segments also can be deserialized into any type that implements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45911,"byte_end":45983,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/ [`serde::Deserialize`]. This includes tuples and structs:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":45984,"byte_end":46045,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46046,"byte_end":46049,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46050,"byte_end":46068,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46069,"byte_end":46084,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/     extract::Path,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46085,"byte_end":46107,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46108,"byte_end":46129,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46130,"byte_end":46145,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46146,"byte_end":46152,"line_start":78,"line_end":78,"column_start":1,"column_end":7}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46153,"byte_end":46180,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ use uuid::Uuid;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46181,"byte_end":46200,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46201,"byte_end":46204,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Path segment labels will be matched with struct field names","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46205,"byte_end":46271,"line_start":82,"line_end":82,"column_start":1,"column_end":67}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46272,"byte_end":46298,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/ struct Params {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46299,"byte_end":46318,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/     user_id: Uuid,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46319,"byte_end":46341,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/     team_id: Uuid,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46342,"byte_end":46364,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46365,"byte_end":46370,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46371,"byte_end":46374,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ async fn users_teams_show(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46375,"byte_end":46405,"line_start":89,"line_end":89,"column_start":1,"column_end":31}},{"value":"/     Path(Params { user_id, team_id }): Path<Params>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46406,"byte_end":46462,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46463,"byte_end":46470,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46471,"byte_end":46485,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46486,"byte_end":46491,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46492,"byte_end":46495,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // When using tuples the path segments will be matched by their position in the route","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46496,"byte_end":46585,"line_start":95,"line_end":95,"column_start":1,"column_end":90}},{"value":"/ async fn users_teams_create(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46586,"byte_end":46618,"line_start":96,"line_end":96,"column_start":1,"column_end":33}},{"value":"/     Path((user_id, team_id)): Path<(String, String)>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46619,"byte_end":46676,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46677,"byte_end":46684,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46685,"byte_end":46699,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46700,"byte_end":46705,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46706,"byte_end":46709,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46710,"byte_end":46744,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/     \"/users/:user_id/team/:team_id\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46745,"byte_end":46785,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/     get(users_teams_show).post(users_teams_create),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46786,"byte_end":46841,"line_start":104,"line_end":104,"column_start":1,"column_end":56}},{"value":"/ );","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46842,"byte_end":46848,"line_start":105,"line_end":105,"column_start":1,"column_end":7}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46849,"byte_end":46862,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46863,"byte_end":46956,"line_start":107,"line_end":107,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46957,"byte_end":46965,"line_start":108,"line_end":108,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46966,"byte_end":46973,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46974,"byte_end":46977,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ If you wish to capture all path parameters you can use `HashMap` or `Vec`:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":46978,"byte_end":47056,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47057,"byte_end":47060,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47061,"byte_end":47079,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47080,"byte_end":47095,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/     extract::Path,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47096,"byte_end":47118,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47119,"byte_end":47140,"line_start":116,"line_end":116,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47141,"byte_end":47156,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47157,"byte_end":47163,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47164,"byte_end":47198,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47199,"byte_end":47202,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ async fn params_map(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47203,"byte_end":47227,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/     Path(params): Path<HashMap<String, String>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47228,"byte_end":47280,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47281,"byte_end":47288,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47289,"byte_end":47303,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47304,"byte_end":47309,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47310,"byte_end":47313,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ async fn params_vec(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47314,"byte_end":47338,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/     Path(params): Path<Vec<(String, String)>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47339,"byte_end":47389,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47390,"byte_end":47397,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47398,"byte_end":47412,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47413,"byte_end":47418,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47419,"byte_end":47422,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47423,"byte_end":47450,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/     .route(\"/users/:user_id/team/:team_id\", get(params_map).post(params_vec));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47451,"byte_end":47533,"line_start":134,"line_end":134,"column_start":1,"column_end":83}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47534,"byte_end":47547,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47548,"byte_end":47641,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47642,"byte_end":47650,"line_start":137,"line_end":137,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47651,"byte_end":47658,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47659,"byte_end":47662,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Providing detailed rejection output","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47663,"byte_end":47704,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47705,"byte_end":47708,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ If the URI cannot be deserialized into the target type the request will be rejected and an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47709,"byte_end":47803,"line_start":142,"line_end":142,"column_start":1,"column_end":95}},{"value":"/ error response will be returned. See [`customize-path-rejection`] for an example of how to customize that error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47804,"byte_end":47920,"line_start":143,"line_end":143,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47921,"byte_end":47924,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`serde`]: https://crates.io/crates/serde","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47925,"byte_end":47970,"line_start":145,"line_end":145,"column_start":1,"column_end":46}},{"value":"/ [`serde::Deserialize`]: https://docs.rs/serde/1.0.127/serde/trait.Deserialize.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":47971,"byte_end":48057,"line_start":146,"line_end":146,"column_start":1,"column_end":87}},{"value":"/ [`customize-path-rejection`]: https://github.com/tokio-rs/axum/blob/main/examples/customize-path-rejection/src/main.rs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48058,"byte_end":48180,"line_start":147,"line_end":147,"column_start":1,"column_end":123}}]},{"kind":"Field","id":{"krate":0,"index":3553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48217,"byte_end":48222,"line_start":149,"line_end":149,"column_start":20,"column_end":25},"name":"0","qualname":"::extract::path::Path::0","value":"T","parent":{"krate":0,"index":3550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48427,"byte_end":48445,"line_start":161,"line_end":161,"column_start":14,"column_end":32},"name":"from_request_parts","qualname":"<Path<T> as axum_core::extract::FromRequestParts>::from_request_parts","value":"fn from_request_parts<'life0, 'life1,\n'async_trait>(&'life0 mut Parts, &'life1 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1680},"children":[],"decl_id":{"krate":56,"index":1683},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48259,"byte_end":48273,"line_start":153,"line_end":153,"column_start":1,"column_end":15}}]},{"kind":"StructVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51354,"byte_end":51377,"line_start":257,"line_end":257,"column_start":5,"column_end":28},"name":"WrongNumberOfParameters","qualname":"::extract::path::ErrorKind::WrongNumberOfParameters","value":"ErrorKind::WrongNumberOfParameters { got, expected }","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" The URI contained the wrong number of parameters.\n","sig":null,"attributes":[{"value":"/ The URI contained the wrong number of parameters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51296,"byte_end":51349,"line_start":256,"line_end":256,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51444,"byte_end":51447,"line_start":259,"line_end":259,"column_start":9,"column_end":12},"name":"got","qualname":"::extract::path::ErrorKind::WrongNumberOfParameters::got","value":"usize","parent":{"krate":0,"index":3579},"children":[],"decl_id":null,"docs":" The number of actual parameters in the URI.\n","sig":null,"attributes":[{"value":"/ The number of actual parameters in the URI.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51388,"byte_end":51435,"line_start":258,"line_end":258,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3581},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51511,"byte_end":51519,"line_start":261,"line_end":261,"column_start":9,"column_end":17},"name":"expected","qualname":"::extract::path::ErrorKind::WrongNumberOfParameters::expected","value":"usize","parent":{"krate":0,"index":3579},"children":[],"decl_id":null,"docs":" The number of expected parameters.\n","sig":null,"attributes":[{"value":"/ The number of expected parameters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51464,"byte_end":51502,"line_start":260,"line_end":260,"column_start":9,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51724,"byte_end":51739,"line_start":267,"line_end":267,"column_start":5,"column_end":20},"name":"ParseErrorAtKey","qualname":"::extract::path::ErrorKind::ParseErrorAtKey","value":"ErrorKind::ParseErrorAtKey { key, value, expected_type }","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" Failed to parse the value at a specific key into the expected type.","sig":null,"attributes":[{"value":"/ Failed to parse the value at a specific key into the expected type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51540,"byte_end":51611,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51616,"byte_end":51619,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This variant is used when deserializing into types that have named fields, such as structs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51624,"byte_end":51719,"line_start":266,"line_end":266,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51802,"byte_end":51805,"line_start":269,"line_end":269,"column_start":9,"column_end":12},"name":"key","qualname":"::extract::path::ErrorKind::ParseErrorAtKey::key","value":"std::string::String","parent":{"krate":0,"index":3582},"children":[],"decl_id":null,"docs":" The key at which the value was located.\n","sig":null,"attributes":[{"value":"/ The key at which the value was located.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51750,"byte_end":51793,"line_start":268,"line_end":268,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51859,"byte_end":51864,"line_start":271,"line_end":271,"column_start":9,"column_end":14},"name":"value","qualname":"::extract::path::ErrorKind::ParseErrorAtKey::value","value":"std::string::String","parent":{"krate":0,"index":3582},"children":[],"decl_id":null,"docs":" The value from the URI.\n","sig":null,"attributes":[{"value":"/ The value from the URI.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51823,"byte_end":51850,"line_start":270,"line_end":270,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51926,"byte_end":51939,"line_start":273,"line_end":273,"column_start":9,"column_end":22},"name":"expected_type","qualname":"::extract::path::ErrorKind::ParseErrorAtKey::expected_type","value":"&'static str","parent":{"krate":0,"index":3582},"children":[],"decl_id":null,"docs":" The expected type of the value.\n","sig":null,"attributes":[{"value":"/ The expected type of the value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51882,"byte_end":51917,"line_start":272,"line_end":272,"column_start":9,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52138,"byte_end":52155,"line_start":279,"line_end":279,"column_start":5,"column_end":22},"name":"ParseErrorAtIndex","qualname":"::extract::path::ErrorKind::ParseErrorAtIndex","value":"ErrorKind::ParseErrorAtIndex { index, value, expected_type }","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" Failed to parse the value at a specific index into the expected type.","sig":null,"attributes":[{"value":"/ Failed to parse the value at a specific index into the expected type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51967,"byte_end":52040,"line_start":276,"line_end":276,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52045,"byte_end":52048,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This variant is used when deserializing into sequence types, such as tuples.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52053,"byte_end":52133,"line_start":278,"line_end":278,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3587},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52220,"byte_end":52225,"line_start":281,"line_end":281,"column_start":9,"column_end":14},"name":"index","qualname":"::extract::path::ErrorKind::ParseErrorAtIndex::index","value":"usize","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":" The index at which the value was located.\n","sig":null,"attributes":[{"value":"/ The index at which the value was located.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52166,"byte_end":52211,"line_start":280,"line_end":280,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3588},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52278,"byte_end":52283,"line_start":283,"line_end":283,"column_start":9,"column_end":14},"name":"value","qualname":"::extract::path::ErrorKind::ParseErrorAtIndex::value","value":"std::string::String","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":" The value from the URI.\n","sig":null,"attributes":[{"value":"/ The value from the URI.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52242,"byte_end":52269,"line_start":282,"line_end":282,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3589},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52345,"byte_end":52358,"line_start":285,"line_end":285,"column_start":9,"column_end":22},"name":"expected_type","qualname":"::extract::path::ErrorKind::ParseErrorAtIndex::expected_type","value":"&'static str","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":" The expected type of the value.\n","sig":null,"attributes":[{"value":"/ The expected type of the value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52301,"byte_end":52336,"line_start":284,"line_end":284,"column_start":9,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52550,"byte_end":52560,"line_start":291,"line_end":291,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::extract::path::ErrorKind::ParseError","value":"ErrorKind::ParseError { value, expected_type }","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" Failed to parse a value into the expected type.","sig":null,"attributes":[{"value":"/ Failed to parse a value into the expected type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52386,"byte_end":52437,"line_start":288,"line_end":288,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52442,"byte_end":52445,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This variant is used when deserializing into a primitive type (such as `String` and `u32`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52450,"byte_end":52545,"line_start":290,"line_end":290,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":3591},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52607,"byte_end":52612,"line_start":293,"line_end":293,"column_start":9,"column_end":14},"name":"value","qualname":"::extract::path::ErrorKind::ParseError::value","value":"std::string::String","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" The value from the URI.\n","sig":null,"attributes":[{"value":"/ The value from the URI.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52571,"byte_end":52598,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52674,"byte_end":52687,"line_start":295,"line_end":295,"column_start":9,"column_end":22},"name":"expected_type","qualname":"::extract::path::ErrorKind::ParseError::expected_type","value":"&'static str","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" The expected type of the value.\n","sig":null,"attributes":[{"value":"/ The expected type of the value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52630,"byte_end":52665,"line_start":294,"line_end":294,"column_start":9,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52798,"byte_end":52820,"line_start":299,"line_end":299,"column_start":5,"column_end":27},"name":"InvalidUtf8InPathParam","qualname":"::extract::path::ErrorKind::InvalidUtf8InPathParam","value":"ErrorKind::InvalidUtf8InPathParam { key }","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" A parameter contained text that, once percent decoded, wasn't valid UTF-8.\n","sig":null,"attributes":[{"value":"/ A parameter contained text that, once percent decoded, wasn't valid UTF-8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52715,"byte_end":52793,"line_start":298,"line_end":298,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52891,"byte_end":52894,"line_start":301,"line_end":301,"column_start":9,"column_end":12},"name":"key","qualname":"::extract::path::ErrorKind::InvalidUtf8InPathParam::key","value":"std::string::String","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" The key at which the invalid value was located.\n","sig":null,"attributes":[{"value":"/ The key at which the invalid value was located.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52831,"byte_end":52882,"line_start":300,"line_end":300,"column_start":9,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53129,"byte_end":53144,"line_start":308,"line_end":308,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::extract::path::ErrorKind::UnsupportedType","value":"ErrorKind::UnsupportedType { name }","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" Tried to serialize into an unsupported type such as nested maps.","sig":null,"attributes":[{"value":"/ Tried to serialize into an unsupported type such as nested maps.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52916,"byte_end":52984,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52989,"byte_end":52992,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This error kind is caused by programmer errors and thus gets converted into a `500 Internal","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":52997,"byte_end":53092,"line_start":306,"line_end":306,"column_start":5,"column_end":100}},{"value":"/ Server Error` response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53097,"byte_end":53124,"line_start":307,"line_end":307,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53201,"byte_end":53205,"line_start":310,"line_end":310,"column_start":9,"column_end":13},"name":"name","qualname":"::extract::path::ErrorKind::UnsupportedType::name","value":"&'static str","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":" The name of the unsupported type.\n","sig":null,"attributes":[{"value":"/ The name of the unsupported type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53155,"byte_end":53192,"line_start":309,"line_end":309,"column_start":9,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53304,"byte_end":53311,"line_start":314,"line_end":314,"column_start":5,"column_end":12},"name":"Message","qualname":"::extract::path::ErrorKind::Message","value":"ErrorKind::Message(String)","parent":{"krate":0,"index":3578},"children":[],"decl_id":null,"docs":" Catch-all variant for errors that don't fit any other variant.\n","sig":null,"attributes":[{"value":"/ Catch-all variant for errors that don't fit any other variant.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53233,"byte_end":53299,"line_start":313,"line_end":313,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53312,"byte_end":53318,"line_start":314,"line_end":314,"column_start":13,"column_end":19},"name":"0","qualname":"::extract::path::ErrorKind::Message::0","value":"std::string::String","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51280,"byte_end":51289,"line_start":255,"line_end":255,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::extract::path::ErrorKind","value":"enum ErrorKind {\n    WrongNumberOfParameters {\n            got: usize,\n            expected: usize,\n        },\n    ParseErrorAtKey {\n            key: String,\n            value: String,\n            expected_type: &'static str,\n        },\n    ParseErrorAtIndex {\n            index: usize,\n            value: String,\n            expected_type: &'static str,\n        },\n    ParseError {\n            value: String,\n            expected_type: &'static str,\n        },\n    InvalidUtf8InPathParam {\n            key: String,\n        },\n    UnsupportedType {\n            name: &'static str,\n        },\n    Message(String),\n}","parent":null,"children":[{"krate":0,"index":3579},{"krate":0,"index":3582},{"krate":0,"index":3586},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3597}],"decl_id":null,"docs":" The kinds of errors that can happen we deserializing into a [`Path`].","sig":null,"attributes":[{"value":"/ The kinds of errors that can happen we deserializing into a [`Path`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50957,"byte_end":51030,"line_start":248,"line_end":248,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51031,"byte_end":51034,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ This type is obtained through [`FailedToDeserializePathParams::kind`] or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51035,"byte_end":51111,"line_start":250,"line_end":250,"column_start":1,"column_end":77}},{"value":"/ [`FailedToDeserializePathParams::into_kind`] and is useful for building","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51112,"byte_end":51187,"line_start":251,"line_end":251,"column_start":1,"column_end":76}},{"value":"/ more precise error messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51188,"byte_end":51220,"line_start":252,"line_end":252,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":51253,"byte_end":51270,"line_start":254,"line_end":254,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53365,"byte_end":53368,"line_start":318,"line_end":318,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ErrorKind as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55040,"byte_end":55069,"line_start":362,"line_end":362,"column_start":12,"column_end":41},"name":"FailedToDeserializePathParams","qualname":"::extract::path::FailedToDeserializePathParams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type for [`Path`](super::Path) if the captured routes params couldn't be deserialized\n into the expected type.\n","sig":null,"attributes":[{"value":"/ Rejection type for [`Path`](super::Path) if the captured routes params couldn't be deserialized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":54884,"byte_end":54983,"line_start":359,"line_end":359,"column_start":1,"column_end":100}},{"value":"/ into the expected type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":54984,"byte_end":55011,"line_start":360,"line_end":360,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55200,"byte_end":55204,"line_start":366,"line_end":366,"column_start":12,"column_end":16},"name":"kind","qualname":"<FailedToDeserializePathParams>::kind","value":"fn kind<'_>(&'_ Self) -> &'_ ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the underlying error kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to the underlying error kind.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55139,"byte_end":55188,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55326,"byte_end":55335,"line_start":371,"line_end":371,"column_start":12,"column_end":21},"name":"into_kind","qualname":"<FailedToDeserializePathParams>::into_kind","value":"fn into_kind(Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Convert this error into the underlying error kind.\n","sig":null,"attributes":[{"value":"/ Convert this error into the underlying error kind.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55260,"byte_end":55314,"line_start":370,"line_end":370,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55455,"byte_end":55464,"line_start":376,"line_end":376,"column_start":12,"column_end":21},"name":"body_text","qualname":"<FailedToDeserializePathParams>::body_text","value":"fn body_text<'_>(&'_ Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the response body text used for this rejection.\n","sig":null,"attributes":[{"value":"/ Get the response body text used for this rejection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55388,"byte_end":55443,"line_start":375,"line_end":375,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56016,"byte_end":56022,"line_start":390,"line_end":390,"column_start":12,"column_end":18},"name":"status","qualname":"<FailedToDeserializePathParams>::status","value":"fn status<'_>(&'_ Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the status code used for this rejection.\n","sig":null,"attributes":[{"value":"/ Get the status code used for this rejection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55956,"byte_end":56004,"line_start":389,"line_end":389,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56571,"byte_end":56584,"line_start":405,"line_end":405,"column_start":8,"column_end":21},"name":"into_response","qualname":"<FailedToDeserializePathParams as axum_core::response::IntoResponse>::into_response","value":"fn into_response(Self) -> Response","parent":{"krate":56,"index":440},"children":[],"decl_id":{"krate":56,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56894,"byte_end":56897,"line_start":416,"line_end":416,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FailedToDeserializePathParams as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57974,"byte_end":57987,"line_start":451,"line_end":451,"column_start":12,"column_end":25},"name":"RawPathParams","qualname":"::extract::path::RawPathParams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that will get captures from the URL without deserializing them.","sig":null,"attributes":[{"value":"/ Extractor that will get captures from the URL without deserializing them.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57042,"byte_end":57119,"line_start":423,"line_end":423,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57120,"byte_end":57123,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ In general you should prefer to use [`Path`] as it is higher level, however `RawPathParams` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57124,"byte_end":57222,"line_start":425,"line_end":425,"column_start":1,"column_end":99}},{"value":"/ suitable if just want the raw params without deserializing them and thus saving some","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57223,"byte_end":57311,"line_start":426,"line_end":426,"column_start":1,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57312,"byte_end":57328,"line_start":427,"line_end":427,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57329,"byte_end":57332,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ Any percent encoded parameters will be automatically decoded. The decoded parameters must be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57333,"byte_end":57429,"line_start":429,"line_end":429,"column_start":1,"column_end":97}},{"value":"/ valid UTF-8, otherwise `RawPathParams` will fail and return a `400 Bad Request` response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57430,"byte_end":57523,"line_start":430,"line_end":430,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57524,"byte_end":57527,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57528,"byte_end":57541,"line_start":432,"line_end":432,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57542,"byte_end":57545,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57546,"byte_end":57564,"line_start":434,"line_end":434,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57565,"byte_end":57580,"line_start":435,"line_end":435,"column_start":1,"column_end":16}},{"value":"/     extract::RawPathParams,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57581,"byte_end":57612,"line_start":436,"line_end":436,"column_start":1,"column_end":32}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57613,"byte_end":57634,"line_start":437,"line_end":437,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57635,"byte_end":57650,"line_start":438,"line_end":438,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57651,"byte_end":57657,"line_start":439,"line_end":439,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57658,"byte_end":57661,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ async fn users_teams_show(params: RawPathParams) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57662,"byte_end":57716,"line_start":441,"line_end":441,"column_start":1,"column_end":55}},{"value":"/     for (key, value) in &params {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57717,"byte_end":57754,"line_start":442,"line_end":442,"column_start":1,"column_end":38}},{"value":"/         println!(\"{key:?} = {value:?}\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57755,"byte_end":57799,"line_start":443,"line_end":443,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57800,"byte_end":57809,"line_start":444,"line_end":444,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57810,"byte_end":57815,"line_start":445,"line_end":445,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57816,"byte_end":57819,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/users/:user_id/team/:team_id\", get(users_teams_show));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57820,"byte_end":57910,"line_start":447,"line_end":447,"column_start":1,"column_end":91}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57911,"byte_end":57937,"line_start":448,"line_end":448,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57938,"byte_end":57945,"line_start":449,"line_end":449,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58174,"byte_end":58192,"line_start":460,"line_end":460,"column_start":14,"column_end":32},"name":"from_request_parts","qualname":"<RawPathParams as axum_core::extract::FromRequestParts>::from_request_parts","value":"fn from_request_parts<'life0, 'life1,\n'async_trait>(&'life0 mut Parts, &'life1 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1680},"children":[],"decl_id":{"krate":56,"index":1683},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58026,"byte_end":58040,"line_start":453,"line_end":453,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58822,"byte_end":58826,"line_start":480,"line_end":480,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawPathParams>::iter","value":"fn iter<'_>(&'_ Self) -> RawPathParamsIter","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the path parameters.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the path parameters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58765,"byte_end":58810,"line_start":479,"line_end":479,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59028,"byte_end":59037,"line_start":489,"line_end":489,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a RawPathParams as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3627},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59230,"byte_end":59247,"line_start":498,"line_end":498,"column_start":12,"column_end":29},"name":"RawPathParamsIter","qualname":"::extract::path::RawPathParamsIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over raw path parameters.","sig":null,"attributes":[{"value":"/ An iterator over raw path parameters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59114,"byte_end":59155,"line_start":494,"line_end":494,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59156,"byte_end":59159,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ Created with [`RawPathParams::iter`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59160,"byte_end":59201,"line_start":496,"line_end":496,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59397,"byte_end":59401,"line_start":503,"line_end":503,"column_start":8,"column_end":12},"name":"next","qualname":"<RawPathParamsIter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3634},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59678,"byte_end":59700,"line_start":512,"line_end":512,"column_start":12,"column_end":34},"name":"InvalidUtf8InPathParam","qualname":"::extract::path::InvalidUtf8InPathParam","value":"InvalidUtf8InPathParam {  }","parent":null,"children":[{"krate":0,"index":3635}],"decl_id":null,"docs":" Rejection used by [`RawPathParams`] if a parameter contained text that, once percent decoded,\n wasn't valid UTF-8.\n","sig":null,"attributes":[{"value":"/ Rejection used by [`RawPathParams`] if a parameter contained text that, once percent decoded,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59528,"byte_end":59625,"line_start":509,"line_end":509,"column_start":1,"column_end":98}},{"value":"/ wasn't valid UTF-8.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59626,"byte_end":59649,"line_start":510,"line_end":510,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59826,"byte_end":59835,"line_start":518,"line_end":518,"column_start":12,"column_end":21},"name":"body_text","qualname":"<InvalidUtf8InPathParam>::body_text","value":"fn body_text<'_>(&'_ Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the response body text used for this rejection.\n","sig":null,"attributes":[{"value":"/ Get the response body text used for this rejection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59759,"byte_end":59814,"line_start":517,"line_end":517,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59951,"byte_end":59957,"line_start":523,"line_end":523,"column_start":12,"column_end":18},"name":"status","qualname":"<InvalidUtf8InPathParam>::status","value":"fn status<'_>(&'_ Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the status code used for this rejection.\n","sig":null,"attributes":[{"value":"/ Get the status code used for this rejection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59891,"byte_end":59939,"line_start":522,"line_end":522,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60076,"byte_end":60079,"line_start":529,"line_end":529,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidUtf8InPathParam as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60302,"byte_end":60315,"line_start":537,"line_end":537,"column_start":8,"column_end":21},"name":"into_response","qualname":"<InvalidUtf8InPathParam as axum_core::response::IntoResponse>::into_response","value":"fn into_response(Self) -> Response","parent":{"krate":56,"index":440},"children":[],"decl_id":{"krate":56,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":745},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rejection","qualname":"::extract::rejection","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3679},{"krate":0,"index":3681},{"krate":0,"index":3669},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3693},{"krate":0,"index":3695},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3707},{"krate":0,"index":3726},{"krate":0,"index":3729},{"krate":0,"index":3714},{"krate":0,"index":3717},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3741},{"krate":0,"index":3759},{"krate":0,"index":3763},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3753},{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":3782},{"krate":0,"index":3795},{"krate":0,"index":3765},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3810},{"krate":0,"index":3817},{"krate":0,"index":3797},{"krate":0,"index":3799},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3830},{"krate":0,"index":3834},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3849},{"krate":0,"index":3856},{"krate":0,"index":3836},{"krate":0,"index":3838},{"krate":0,"index":3841},{"krate":0,"index":3843},{"krate":0,"index":3845},{"krate":0,"index":3847},{"krate":0,"index":3871},{"krate":0,"index":3878},{"krate":0,"index":3858},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3865},{"krate":0,"index":3867},{"krate":0,"index":3869},{"krate":0,"index":3891},{"krate":0,"index":3895},{"krate":0,"index":3880},{"krate":0,"index":3882},{"krate":0,"index":3885},{"krate":0,"index":3887},{"krate":0,"index":3889}],"decl_id":null,"docs":" Rejection response types.\n","sig":null,"attributes":[{"value":"/ Rejection response types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":97287,"byte_end":97316,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":98964,"byte_end":98980,"line_start":47,"line_end":47,"column_start":16,"column_end":32},"name":"MissingExtension","qualname":"::extract::rejection::MissingExtension","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type for [`Extension`](super::Extension) if an expected\n request extension was not found.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":99318,"byte_end":99335,"line_start":56,"line_end":56,"column_start":16,"column_end":33},"name":"MissingPathParams","qualname":"::extract::rejection::MissingPathParams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used if axum's internal representation of path parameters\n is missing. This is commonly caused by extracting `Request<_>`. `Path`\n must be extracted first.\n","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13009302,"byte_end":13009319,"line_start":36,"line_end":36,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3679},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":99702,"byte_end":99724,"line_start":65,"line_end":65,"column_start":16,"column_end":38},"name":"InvalidFormContentType","qualname":"::extract::rejection::InvalidFormContentType","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type for [`Form`](super::Form) or [`RawForm`](super::RawForm)\n used if the `Content-Type` header is missing\n or its value is not `application/x-www-form-urlencoded`.\n","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13009302,"byte_end":13009319,"line_start":36,"line_end":36,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":99937,"byte_end":99956,"line_start":73,"line_end":73,"column_start":16,"column_end":35},"name":"FailedToResolveHost","qualname":"::extract::rejection::FailedToResolveHost","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used if the [`Host`](super::Host) extractor is unable to\n resolve a host.\n","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13009302,"byte_end":13009319,"line_start":36,"line_end":36,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":100198,"byte_end":100221,"line_start":81,"line_end":81,"column_start":16,"column_end":39},"name":"FailedToDeserializeForm","qualname":"::extract::rejection::FailedToDeserializeForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used if the [`Form`](super::Form) extractor is unable to\n deserialize the form into the target type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3726},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":100489,"byte_end":100516,"line_start":89,"line_end":89,"column_start":16,"column_end":43},"name":"FailedToDeserializeFormBody","qualname":"::extract::rejection::FailedToDeserializeFormBody","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used if the [`Form`](super::Form) extractor is unable to\n deserialize the form body into the target type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3743},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":100775,"byte_end":100805,"line_start":97,"line_end":97,"column_start":16,"column_end":46},"name":"FailedToDeserializeQueryString","qualname":"::extract::rejection::FailedToDeserializeQueryString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used if the [`Query`](super::Query) extractor is unable to\n deserialize the form into the target type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101036,"byte_end":101066,"line_start":106,"line_end":106,"column_start":9,"column_end":39},"name":"FailedToDeserializeQueryString","qualname":"::extract::rejection::QueryRejection::FailedToDeserializeQueryString","value":"QueryRejection::FailedToDeserializeQueryString(FailedToDeserializeQueryString)","parent":{"krate":0,"index":3759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101011,"byte_end":101025,"line_start":105,"line_end":105,"column_start":14,"column_end":28},"name":"QueryRejection","qualname":"::extract::rejection::QueryRejection","value":"enum QueryRejection {\n    FailedToDeserializeQueryString(FailedToDeserializeQueryString),\n}","parent":null,"children":[{"krate":0,"index":3760}],"decl_id":null,"docs":" Rejection used for [`Query`](super::Query).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3783},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101291,"byte_end":101313,"line_start":116,"line_end":116,"column_start":9,"column_end":31},"name":"InvalidFormContentType","qualname":"::extract::rejection::FormRejection::InvalidFormContentType","value":"FormRejection::InvalidFormContentType(InvalidFormContentType)","parent":{"krate":0,"index":3782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101323,"byte_end":101346,"line_start":117,"line_end":117,"column_start":9,"column_end":32},"name":"FailedToDeserializeForm","qualname":"::extract::rejection::FormRejection::FailedToDeserializeForm","value":"FormRejection::FailedToDeserializeForm(FailedToDeserializeForm)","parent":{"krate":0,"index":3782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3789},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101356,"byte_end":101383,"line_start":118,"line_end":118,"column_start":9,"column_end":36},"name":"FailedToDeserializeFormBody","qualname":"::extract::rejection::FormRejection::FailedToDeserializeFormBody","value":"FormRejection::FailedToDeserializeFormBody(FailedToDeserializeFormBody)","parent":{"krate":0,"index":3782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3792},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101393,"byte_end":101407,"line_start":119,"line_end":119,"column_start":9,"column_end":23},"name":"BytesRejection","qualname":"::extract::rejection::FormRejection::BytesRejection","value":"FormRejection::BytesRejection(BytesRejection)","parent":{"krate":0,"index":3782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101267,"byte_end":101280,"line_start":115,"line_end":115,"column_start":14,"column_end":27},"name":"FormRejection","qualname":"::extract::rejection::FormRejection","value":"enum FormRejection {\n    InvalidFormContentType(InvalidFormContentType),\n    FailedToDeserializeForm(FailedToDeserializeForm),\n    FailedToDeserializeFormBody(FailedToDeserializeFormBody),\n    BytesRejection(BytesRejection),\n}","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3792}],"decl_id":null,"docs":" Rejection used for [`Form`](super::Form).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101647,"byte_end":101669,"line_start":129,"line_end":129,"column_start":9,"column_end":31},"name":"InvalidFormContentType","qualname":"::extract::rejection::RawFormRejection::InvalidFormContentType","value":"RawFormRejection::InvalidFormContentType(InvalidFormContentType)","parent":{"krate":0,"index":3810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101679,"byte_end":101693,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"BytesRejection","qualname":"::extract::rejection::RawFormRejection::BytesRejection","value":"RawFormRejection::BytesRejection(BytesRejection)","parent":{"krate":0,"index":3810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3810},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":101620,"byte_end":101636,"line_start":128,"line_end":128,"column_start":14,"column_end":30},"name":"RawFormRejection","qualname":"::extract::rejection::RawFormRejection","value":"enum RawFormRejection {\n    InvalidFormContentType(InvalidFormContentType),\n    BytesRejection(BytesRejection),\n}","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3814}],"decl_id":null,"docs":" Rejection used for [`RawForm`](super::RawForm).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3831},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102339,"byte_end":102355,"line_start":155,"line_end":155,"column_start":9,"column_end":25},"name":"MissingExtension","qualname":"::extract::rejection::ExtensionRejection::MissingExtension","value":"ExtensionRejection::MissingExtension(MissingExtension)","parent":{"krate":0,"index":3830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3830},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102310,"byte_end":102328,"line_start":154,"line_end":154,"column_start":14,"column_end":32},"name":"ExtensionRejection","qualname":"::extract::rejection::ExtensionRejection","value":"enum ExtensionRejection { MissingExtension(MissingExtension), }","parent":null,"children":[{"krate":0,"index":3831}],"decl_id":null,"docs":" Rejection used for [`Extension`](super::Extension).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102580,"byte_end":102609,"line_start":165,"line_end":165,"column_start":9,"column_end":38},"name":"FailedToDeserializePathParams","qualname":"::extract::rejection::PathRejection::FailedToDeserializePathParams","value":"PathRejection::FailedToDeserializePathParams(FailedToDeserializePathParams)","parent":{"krate":0,"index":3849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102619,"byte_end":102636,"line_start":166,"line_end":166,"column_start":9,"column_end":26},"name":"MissingPathParams","qualname":"::extract::rejection::PathRejection::MissingPathParams","value":"PathRejection::MissingPathParams(MissingPathParams)","parent":{"krate":0,"index":3849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102556,"byte_end":102569,"line_start":164,"line_end":164,"column_start":14,"column_end":27},"name":"PathRejection","qualname":"::extract::rejection::PathRejection","value":"enum PathRejection {\n    FailedToDeserializePathParams(FailedToDeserializePathParams),\n    MissingPathParams(MissingPathParams),\n}","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3853}],"decl_id":null,"docs":" Rejection used for [`Path`](super::Path).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102906,"byte_end":102928,"line_start":176,"line_end":176,"column_start":9,"column_end":31},"name":"InvalidUtf8InPathParam","qualname":"::extract::rejection::RawPathParamsRejection::InvalidUtf8InPathParam","value":"RawPathParamsRejection::InvalidUtf8InPathParam(InvalidUtf8InPathParam)","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102938,"byte_end":102955,"line_start":177,"line_end":177,"column_start":9,"column_end":26},"name":"MissingPathParams","qualname":"::extract::rejection::RawPathParamsRejection::MissingPathParams","value":"RawPathParamsRejection::MissingPathParams(MissingPathParams)","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":102873,"byte_end":102895,"line_start":175,"line_end":175,"column_start":14,"column_end":36},"name":"RawPathParamsRejection","qualname":"::extract::rejection::RawPathParamsRejection","value":"enum RawPathParamsRejection {\n    InvalidUtf8InPathParam(InvalidUtf8InPathParam),\n    MissingPathParams(MissingPathParams),\n}","parent":null,"children":[{"krate":0,"index":3872},{"krate":0,"index":3875}],"decl_id":null,"docs":" Rejection used for [`RawPathParams`](super::RawPathParams).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3892},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":103180,"byte_end":103199,"line_start":187,"line_end":187,"column_start":9,"column_end":28},"name":"FailedToResolveHost","qualname":"::extract::rejection::HostRejection::FailedToResolveHost","value":"HostRejection::FailedToResolveHost(FailedToResolveHost)","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012464,"byte_end":13012486,"line_start":149,"line_end":149,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/rejection.rs","byte_start":103156,"byte_end":103169,"line_start":186,"line_end":186,"column_start":14,"column_end":27},"name":"HostRejection","qualname":"::extract::rejection::HostRejection","value":"enum HostRejection { FailedToResolveHost(FailedToResolveHost), }","parent":null,"children":[{"krate":0,"index":3892}],"decl_id":null,"docs":" Rejection used for [`Host`](super::Host).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.3.4/src/macros.rs","byte_start":13012390,"byte_end":13012407,"line_start":146,"line_end":146,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104597,"byte_end":104601,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Host","qualname":"::extract::host::Host","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that resolves the hostname of the request.","sig":null,"attributes":[{"value":"/ Extractor that resolves the hostname of the request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104183,"byte_end":104239,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104240,"byte_end":104243,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Hostname is resolved through the following, in order:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104244,"byte_end":104301,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ - `Forwarded` header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104302,"byte_end":104326,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/ - `X-Forwarded-Host` header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104327,"byte_end":104358,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/ - `Host` header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104359,"byte_end":104378,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ - request target / URI","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104379,"byte_end":104405,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104406,"byte_end":104409,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that user agents can set `X-Forwarded-Host` and `Host` headers to arbitrary values so make","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104410,"byte_end":104509,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ sure to validate them to avoid security issues.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104510,"byte_end":104561,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104602,"byte_end":104612,"line_start":24,"line_end":24,"column_start":17,"column_end":27},"name":"0","qualname":"::extract::host::Host::0","value":"std::string::String","parent":{"krate":0,"index":3897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104746,"byte_end":104764,"line_start":33,"line_end":33,"column_start":14,"column_end":32},"name":"from_request_parts","qualname":"<Host as axum_core::extract::FromRequestParts>::from_request_parts","value":"fn from_request_parts<'life0, 'life1,\n'async_trait>(&'life0 mut Parts, &'life1 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1680},"children":[],"decl_id":{"krate":56,"index":1683},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104616,"byte_end":104630,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110134,"byte_end":110141,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"RawForm","qualname":"::extract::raw_form::RawForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that extracts raw form requests.","sig":null,"attributes":[{"value":"/ Extractor that extracts raw form requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109539,"byte_end":109585,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109586,"byte_end":109589,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For `GET` requests it will extract the raw query. For other methods it extracts the raw","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109590,"byte_end":109681,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ `application/x-www-form-urlencoded` encoded request body.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109682,"byte_end":109743,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109744,"byte_end":109747,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109748,"byte_end":109761,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109762,"byte_end":109765,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109766,"byte_end":109784,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109785,"byte_end":109800,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/     extract::RawForm,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109801,"byte_end":109826,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109827,"byte_end":109848,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/     Router","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109849,"byte_end":109863,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109864,"byte_end":109870,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109871,"byte_end":109874,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ async fn handler(RawForm(form): RawForm) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109875,"byte_end":109922,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109923,"byte_end":109926,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/\", get(handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109927,"byte_end":109980,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109981,"byte_end":109994,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":109995,"byte_end":110088,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110089,"byte_end":110097,"line_start":32,"line_end":32,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110098,"byte_end":110105,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110142,"byte_end":110151,"line_start":35,"line_end":35,"column_start":20,"column_end":29},"name":"0","qualname":"::extract::raw_form::RawForm::0","value":"bytes::Bytes","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110375,"byte_end":110387,"line_start":47,"line_end":47,"column_start":14,"column_end":26},"name":"from_request","qualname":"<RawForm as axum_core::extract::FromRequest>::from_request","value":"fn from_request<'life0, 'async_trait>(Request<B>, &'life0 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1687},"children":[],"decl_id":{"krate":56,"index":1692},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110155,"byte_end":110169,"line_start":37,"line_end":37,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3927},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113199,"byte_end":113207,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"RawQuery","qualname":"::extract::raw_query::RawQuery","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that extracts the raw query string, without parsing it.","sig":null,"attributes":[{"value":"/ Extractor that extracts the raw query string, without parsing it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112676,"byte_end":112745,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112746,"byte_end":112749,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112750,"byte_end":112763,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112764,"byte_end":112767,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112768,"byte_end":112786,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112787,"byte_end":112802,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     extract::RawQuery,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112803,"byte_end":112829,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112830,"byte_end":112851,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112852,"byte_end":112867,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112868,"byte_end":112874,"line_start":15,"line_end":15,"column_start":1,"column_end":7}},{"value":"/ use futures_util::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112875,"byte_end":112907,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112908,"byte_end":112911,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ async fn handler(RawQuery(query): RawQuery) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112912,"byte_end":112961,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112962,"byte_end":112976,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112977,"byte_end":112982,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112983,"byte_end":112986,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/users\", get(handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":112987,"byte_end":113045,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113046,"byte_end":113059,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113060,"byte_end":113153,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113154,"byte_end":113162,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113163,"byte_end":113170,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3929},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113208,"byte_end":113226,"line_start":28,"line_end":28,"column_start":21,"column_end":39},"name":"0","qualname":"::extract::raw_query::RawQuery::0","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113361,"byte_end":113379,"line_start":37,"line_end":37,"column_start":14,"column_end":32},"name":"from_request_parts","qualname":"<RawQuery as axum_core::extract::FromRequestParts>::from_request_parts","value":"fn from_request_parts<'life0, 'life1,\n'async_trait>(&'life0 mut Parts, &'life1 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1680},"children":[],"decl_id":{"krate":56,"index":1683},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113230,"byte_end":113244,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117646,"byte_end":117656,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"BodyStream","qualname":"::extract::request_parts::BodyStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that extracts the request body as a [`Stream`].","sig":null,"attributes":[{"value":"/ Extractor that extracts the request body as a [`Stream`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116674,"byte_end":116735,"line_start":107,"line_end":107,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116736,"byte_end":116739,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Since extracting the request body requires consuming it, the `BodyStream` extractor must be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116740,"byte_end":116835,"line_start":109,"line_end":109,"column_start":1,"column_end":96}},{"value":"/ *last* if there are multiple extractors in a handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116836,"byte_end":116893,"line_start":110,"line_end":110,"column_start":1,"column_end":58}},{"value":"/ See [\"the order of extractors\"][order-of-extractors]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116894,"byte_end":116950,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116951,"byte_end":116954,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [order-of-extractors]: crate::extract#the-order-of-extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":116955,"byte_end":117020,"line_start":113,"line_end":113,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117021,"byte_end":117024,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117025,"byte_end":117038,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117039,"byte_end":117042,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117043,"byte_end":117061,"line_start":117,"line_end":117,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117062,"byte_end":117077,"line_start":118,"line_end":118,"column_start":1,"column_end":16}},{"value":"/     extract::BodyStream,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117078,"byte_end":117106,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117107,"byte_end":117128,"line_start":120,"line_end":120,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117129,"byte_end":117144,"line_start":121,"line_end":121,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117145,"byte_end":117151,"line_start":122,"line_end":122,"column_start":1,"column_end":7}},{"value":"/ use futures_util::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117152,"byte_end":117184,"line_start":123,"line_end":123,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117185,"byte_end":117188,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ async fn handler(mut stream: BodyStream) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117189,"byte_end":117235,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/     while let Some(chunk) = stream.next().await {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117236,"byte_end":117289,"line_start":126,"line_end":126,"column_start":1,"column_end":54}},{"value":"/         // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117290,"byte_end":117308,"line_start":127,"line_end":127,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117309,"byte_end":117318,"line_start":128,"line_end":128,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117319,"byte_end":117324,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117325,"byte_end":117328,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/users\", get(handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117329,"byte_end":117387,"line_start":131,"line_end":131,"column_start":1,"column_end":59}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117388,"byte_end":117401,"line_start":132,"line_end":132,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117402,"byte_end":117495,"line_start":133,"line_end":133,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117496,"byte_end":117504,"line_start":134,"line_end":134,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117505,"byte_end":117512,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117513,"byte_end":117516,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117517,"byte_end":117596,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ [`body::Body`]: crate::body::Body","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117597,"byte_end":117634,"line_start":138,"line_end":138,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117824,"byte_end":117833,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BodyStream as futures_util::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":26,"index":96},"children":[],"decl_id":{"krate":26,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118194,"byte_end":118206,"line_start":161,"line_end":161,"column_start":14,"column_end":26},"name":"from_request","qualname":"<BodyStream as axum_core::extract::FromRequest>::from_request","value":"fn from_request<'life0, 'async_trait>(Request<B>, &'life0 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1687},"children":[],"decl_id":{"krate":56,"index":1692},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117970,"byte_end":117984,"line_start":151,"line_end":151,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118540,"byte_end":118543,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BodyStream as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119634,"byte_end":119641,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"RawBody","qualname":"::extract::request_parts::RawBody","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor that extracts the raw request body.","sig":null,"attributes":[{"value":"/ Extractor that extracts the raw request body.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118795,"byte_end":118844,"line_start":183,"line_end":183,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118845,"byte_end":118848,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Since extracting the raw request body requires consuming it, the `RawBody` extractor must be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118849,"byte_end":118945,"line_start":185,"line_end":185,"column_start":1,"column_end":97}},{"value":"/ *last* if there are multiple extractors in a handler. See [\"the order of extractors\"][order-of-extractors]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118946,"byte_end":119056,"line_start":186,"line_end":186,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119057,"byte_end":119060,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [order-of-extractors]: crate::extract#the-order-of-extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119061,"byte_end":119126,"line_start":188,"line_end":188,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119127,"byte_end":119130,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119131,"byte_end":119144,"line_start":190,"line_end":190,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119145,"byte_end":119148,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119149,"byte_end":119167,"line_start":192,"line_end":192,"column_start":1,"column_end":19}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119168,"byte_end":119183,"line_start":193,"line_end":193,"column_start":1,"column_end":16}},{"value":"/     extract::RawBody,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119184,"byte_end":119209,"line_start":194,"line_end":194,"column_start":1,"column_end":26}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119210,"byte_end":119231,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119232,"byte_end":119247,"line_start":196,"line_end":196,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119248,"byte_end":119254,"line_start":197,"line_end":197,"column_start":1,"column_end":7}},{"value":"/ use futures_util::StreamExt;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119255,"byte_end":119287,"line_start":198,"line_end":198,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119288,"byte_end":119291,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ async fn handler(RawBody(body): RawBody) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119292,"byte_end":119338,"line_start":200,"line_end":200,"column_start":1,"column_end":47}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119339,"byte_end":119353,"line_start":201,"line_end":201,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119354,"byte_end":119359,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119360,"byte_end":119363,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new().route(\"/users\", get(handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119364,"byte_end":119422,"line_start":204,"line_end":204,"column_start":1,"column_end":59}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119423,"byte_end":119436,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119437,"byte_end":119530,"line_start":206,"line_end":206,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119531,"byte_end":119539,"line_start":207,"line_end":207,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119540,"byte_end":119547,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119548,"byte_end":119551,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`body::Body`]: crate::body::Body","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119552,"byte_end":119589,"line_start":210,"line_end":210,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3953},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119652,"byte_end":119657,"line_start":212,"line_end":212,"column_start":30,"column_end":35},"name":"0","qualname":"::extract::request_parts::RawBody::0","value":"B","parent":{"krate":0,"index":3950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119808,"byte_end":119820,"line_start":222,"line_end":222,"column_start":14,"column_end":26},"name":"from_request","qualname":"<RawBody<B> as axum_core::extract::FromRequest>::from_request","value":"fn from_request<'life0, 'async_trait>(Request<B>, &'life0 S)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1687},"children":[],"decl_id":{"krate":56,"index":1692},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119661,"byte_end":119675,"line_start":214,"line_end":214,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130420,"byte_end":130425,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"State","qualname":"::extract::state::State","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extractor for state.","sig":null,"attributes":[{"value":"/ Extractor for state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":120942,"byte_end":120966,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":120967,"byte_end":120970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [\"Accessing state in middleware\"][state-from-middleware] for how to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":120971,"byte_end":121046,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ access state in middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121047,"byte_end":121078,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121079,"byte_end":121082,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [state-from-middleware]: crate::middleware#accessing-state-in-middleware","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121083,"byte_end":121159,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121160,"byte_end":121163,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # With `Router`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121164,"byte_end":121183,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121184,"byte_end":121187,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121188,"byte_end":121195,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use axum::{Router, routing::get, extract::State};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121196,"byte_end":121249,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121250,"byte_end":121253,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // the application state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121254,"byte_end":121282,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ //","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121283,"byte_end":121289,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/ // here you can put configuration, database connection pools, or whatever","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121290,"byte_end":121367,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ // state you need","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121368,"byte_end":121389,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ //","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121390,"byte_end":121396,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/ // see \"When states need to implement `Clone`\" for more details on why we need","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121397,"byte_end":121479,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/ // `#[derive(Clone)]` here.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121480,"byte_end":121511,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121512,"byte_end":121532,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121533,"byte_end":121555,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121556,"byte_end":121559,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let state = AppState {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121560,"byte_end":121588,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121589,"byte_end":121592,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // create a `Router` that holds our state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121593,"byte_end":121638,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121639,"byte_end":121666,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121667,"byte_end":121700,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/     // provide the state so the router can access it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121701,"byte_end":121757,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121758,"byte_end":121785,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121786,"byte_end":121789,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ async fn handler(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121790,"byte_end":121811,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     // access the state via the `State` extractor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121812,"byte_end":121865,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/     // extracting a state of the wrong type results in a compile error","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121866,"byte_end":121940,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/     State(state): State<AppState>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121941,"byte_end":121979,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121980,"byte_end":121987,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/     // use `state`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":121988,"byte_end":122013,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122014,"byte_end":122019,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # let _: axum::Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122020,"byte_end":122052,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122053,"byte_end":122060,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122061,"byte_end":122064,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Note that `State` is an extractor, so be sure to put it before any body","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122065,"byte_end":122140,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ extractors, see [\"the order of extractors\"][order-of-extractors].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122141,"byte_end":122210,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122211,"byte_end":122214,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [order-of-extractors]: crate::extract#the-order-of-extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122215,"byte_end":122280,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122281,"byte_end":122284,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Combining stateful routers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122285,"byte_end":122318,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122319,"byte_end":122322,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Multiple [`Router`]s can be combined with [`Router::nest`] or [`Router::merge`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122323,"byte_end":122406,"line_start":56,"line_end":56,"column_start":1,"column_end":84}},{"value":"/ When combining [`Router`]s with one of these methods, the [`Router`]s must have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122407,"byte_end":122490,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ the same state type. Generally, this can be inferred automatically:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122491,"byte_end":122562,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122563,"byte_end":122566,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122567,"byte_end":122574,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ use axum::{Router, routing::get, extract::State};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122575,"byte_end":122628,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122629,"byte_end":122632,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122633,"byte_end":122653,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122654,"byte_end":122676,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122677,"byte_end":122680,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let state = AppState {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122681,"byte_end":122709,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122710,"byte_end":122713,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // create a `Router` that will be nested within another","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122714,"byte_end":122773,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ let api = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122774,"byte_end":122801,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     .route(\"/posts\", get(posts_handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122802,"byte_end":122847,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122848,"byte_end":122851,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122852,"byte_end":122879,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/     .nest(\"/api\", api)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122880,"byte_end":122906,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122907,"byte_end":122934,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122935,"byte_end":122938,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn posts_handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122939,"byte_end":122998,"line_start":76,"line_end":76,"column_start":1,"column_end":60}},{"value":"/     // use `state`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":122999,"byte_end":123024,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123025,"byte_end":123030,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ # let _: axum::Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123031,"byte_end":123063,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123064,"byte_end":123071,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123072,"byte_end":123075,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ However, if you are composing [`Router`]s that are defined in separate scopes,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123076,"byte_end":123158,"line_start":82,"line_end":82,"column_start":1,"column_end":83}},{"value":"/ you may need to annotate the [`State`] type explicitly:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123159,"byte_end":123218,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123219,"byte_end":123222,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123223,"byte_end":123230,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use axum::{Router, routing::get, extract::State};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123231,"byte_end":123284,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123285,"byte_end":123288,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123289,"byte_end":123309,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123310,"byte_end":123332,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123333,"byte_end":123336,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ fn make_app() -> Router {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123337,"byte_end":123366,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/     let state = AppState {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123367,"byte_end":123399,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123400,"byte_end":123403,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123404,"byte_end":123425,"line_start":94,"line_end":94,"column_start":1,"column_end":22}},{"value":"/         .nest(\"/api\", make_api())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123426,"byte_end":123463,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/         .with_state(state) // the outer Router's state is inferred","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123464,"byte_end":123534,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123535,"byte_end":123540,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123541,"byte_end":123544,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // the inner Router must specify its state type to compose with the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123545,"byte_end":123616,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ // outer router","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123617,"byte_end":123636,"line_start":100,"line_end":100,"column_start":1,"column_end":20}},{"value":"/ fn make_api() -> Router<AppState> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123637,"byte_end":123676,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"/     Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123677,"byte_end":123698,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/         .route(\"/posts\", get(posts_handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123699,"byte_end":123747,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123748,"byte_end":123753,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123754,"byte_end":123757,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ async fn posts_handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123758,"byte_end":123817,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/     // use `state`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123818,"byte_end":123843,"line_start":107,"line_end":107,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123844,"byte_end":123849,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # let _: axum::Router = make_app();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123850,"byte_end":123889,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123890,"byte_end":123897,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123898,"byte_end":123901,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ In short, a [`Router`]'s generic state type defaults to `()`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123902,"byte_end":123966,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/ (no state) unless [`Router::with_state`] is called or the value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":123967,"byte_end":124034,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/ of the generic type is given explicitly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124035,"byte_end":124079,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124080,"byte_end":124083,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`Router`]: crate::Router","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124084,"byte_end":124113,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"/ [`Router::merge`]: crate::Router::merge","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124114,"byte_end":124157,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"/ [`Router::nest`]: crate::Router::nest","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124158,"byte_end":124199,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ [`Router::with_state`]: crate::Router::with_state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124200,"byte_end":124253,"line_start":119,"line_end":119,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124254,"byte_end":124257,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # With `MethodRouter`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124258,"byte_end":124283,"line_start":121,"line_end":121,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124284,"byte_end":124287,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124288,"byte_end":124295,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ use axum::{routing::get, extract::State};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124296,"byte_end":124341,"line_start":124,"line_end":124,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124342,"byte_end":124345,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124346,"byte_end":124366,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124367,"byte_end":124389,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124390,"byte_end":124393,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ let state = AppState {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124394,"byte_end":124422,"line_start":129,"line_end":129,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124423,"byte_end":124426,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let method_router_with_state = get(handler)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124427,"byte_end":124474,"line_start":131,"line_end":131,"column_start":1,"column_end":48}},{"value":"/     // provide the state so the handler can access it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124475,"byte_end":124532,"line_start":132,"line_end":132,"column_start":1,"column_end":58}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124533,"byte_end":124560,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124561,"byte_end":124564,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ async fn handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124565,"byte_end":124618,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/     // use `state`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124619,"byte_end":124644,"line_start":136,"line_end":136,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124645,"byte_end":124650,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124651,"byte_end":124664,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(method_router_with_state.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124665,"byte_end":124779,"line_start":139,"line_end":139,"column_start":1,"column_end":115}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124780,"byte_end":124788,"line_start":140,"line_end":140,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124789,"byte_end":124796,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124797,"byte_end":124800,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # With `Handler`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124801,"byte_end":124821,"line_start":143,"line_end":143,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124822,"byte_end":124825,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124826,"byte_end":124833,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ use axum::{routing::get, handler::Handler, extract::State};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124834,"byte_end":124897,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124898,"byte_end":124901,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124902,"byte_end":124922,"line_start":148,"line_end":148,"column_start":1,"column_end":21}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124923,"byte_end":124945,"line_start":149,"line_end":149,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124946,"byte_end":124949,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ let state = AppState {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124950,"byte_end":124978,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124979,"byte_end":124982,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ async fn handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":124983,"byte_end":125036,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"/     // use `state`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125037,"byte_end":125062,"line_start":154,"line_end":154,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125063,"byte_end":125068,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125069,"byte_end":125072,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // provide the state so the handler can access it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125073,"byte_end":125126,"line_start":157,"line_end":157,"column_start":1,"column_end":54}},{"value":"/ let handler_with_state = handler.with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125127,"byte_end":125182,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125183,"byte_end":125186,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125187,"byte_end":125200,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/ axum::Server::bind(&\"0.0.0.0:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125201,"byte_end":125257,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/     .serve(handler_with_state.into_make_service())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125258,"byte_end":125312,"line_start":162,"line_end":162,"column_start":1,"column_end":55}},{"value":"/     .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125313,"byte_end":125327,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/     .expect(\"server failed\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125328,"byte_end":125361,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125362,"byte_end":125370,"line_start":165,"line_end":165,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125371,"byte_end":125378,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125379,"byte_end":125382,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # Substates","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125383,"byte_end":125398,"line_start":168,"line_end":168,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125399,"byte_end":125402,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [`State`] only allows a single state type but you can use [`FromRef`] to extract \"substates\":","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125403,"byte_end":125500,"line_start":170,"line_end":170,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125501,"byte_end":125504,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125505,"byte_end":125512,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use axum::{Router, routing::get, extract::{State, FromRef}};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125513,"byte_end":125577,"line_start":173,"line_end":173,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125578,"byte_end":125581,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ // the application state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125582,"byte_end":125610,"line_start":175,"line_end":175,"column_start":1,"column_end":29}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125611,"byte_end":125631,"line_start":176,"line_end":176,"column_start":1,"column_end":21}},{"value":"/ struct AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125632,"byte_end":125653,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     // that holds some api specific state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125654,"byte_end":125699,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/     api_state: ApiState,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125700,"byte_end":125728,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125729,"byte_end":125734,"line_start":180,"line_end":180,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125735,"byte_end":125738,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ // the api specific state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125739,"byte_end":125768,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125769,"byte_end":125789,"line_start":183,"line_end":183,"column_start":1,"column_end":21}},{"value":"/ struct ApiState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125790,"byte_end":125812,"line_start":184,"line_end":184,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125813,"byte_end":125816,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ // support converting an `AppState` in an `ApiState`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125817,"byte_end":125873,"line_start":186,"line_end":186,"column_start":1,"column_end":57}},{"value":"/ impl FromRef<AppState> for ApiState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125874,"byte_end":125915,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/     fn from_ref(app_state: &AppState) -> ApiState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125916,"byte_end":125971,"line_start":188,"line_end":188,"column_start":1,"column_end":56}},{"value":"/         app_state.api_state.clone()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":125972,"byte_end":126011,"line_start":189,"line_end":189,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126012,"byte_end":126021,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126022,"byte_end":126027,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126028,"byte_end":126031,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let state = AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126032,"byte_end":126058,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"/     api_state: ApiState {},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126059,"byte_end":126090,"line_start":194,"line_end":194,"column_start":1,"column_end":32}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126091,"byte_end":126097,"line_start":195,"line_end":195,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126098,"byte_end":126101,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126102,"byte_end":126129,"line_start":197,"line_end":197,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126130,"byte_end":126163,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/     .route(\"/api/users\", get(api_users))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126164,"byte_end":126208,"line_start":199,"line_end":199,"column_start":1,"column_end":45}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126209,"byte_end":126236,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126237,"byte_end":126240,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ async fn api_users(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126241,"byte_end":126264,"line_start":202,"line_end":202,"column_start":1,"column_end":24}},{"value":"/     // access the api specific state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126265,"byte_end":126305,"line_start":203,"line_end":203,"column_start":1,"column_end":41}},{"value":"/     State(api_state): State<ApiState>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126306,"byte_end":126348,"line_start":204,"line_end":204,"column_start":1,"column_end":43}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126349,"byte_end":126356,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126357,"byte_end":126362,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126363,"byte_end":126366,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ async fn handler(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126367,"byte_end":126388,"line_start":208,"line_end":208,"column_start":1,"column_end":22}},{"value":"/     // we can still access to top level state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126389,"byte_end":126438,"line_start":209,"line_end":209,"column_start":1,"column_end":50}},{"value":"/     State(state): State<AppState>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126439,"byte_end":126477,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"/ ) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126478,"byte_end":126485,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126486,"byte_end":126491,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # let _: axum::Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126492,"byte_end":126524,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126525,"byte_end":126532,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126533,"byte_end":126536,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ For convenience `FromRef` can also be derived using `#[derive(FromRef)]`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126537,"byte_end":126614,"line_start":216,"line_end":216,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126615,"byte_end":126618,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # For library authors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126619,"byte_end":126644,"line_start":218,"line_end":218,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126645,"byte_end":126648,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ If you're writing a library that has an extractor that needs state, this is the recommended way","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126649,"byte_end":126748,"line_start":220,"line_end":220,"column_start":1,"column_end":100}},{"value":"/ to do it:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126749,"byte_end":126762,"line_start":221,"line_end":221,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126763,"byte_end":126766,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126767,"byte_end":126778,"line_start":223,"line_end":223,"column_start":1,"column_end":12}},{"value":"/ use axum_core::extract::{FromRequestParts, FromRef};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126779,"byte_end":126835,"line_start":224,"line_end":224,"column_start":1,"column_end":57}},{"value":"/ use http::request::Parts;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126836,"byte_end":126865,"line_start":225,"line_end":225,"column_start":1,"column_end":30}},{"value":"/ use async_trait::async_trait;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126866,"byte_end":126899,"line_start":226,"line_end":226,"column_start":1,"column_end":34}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126900,"byte_end":126933,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126934,"byte_end":126937,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ // the extractor your library provides","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126938,"byte_end":126980,"line_start":229,"line_end":229,"column_start":1,"column_end":43}},{"value":"/ struct MyLibraryExtractor;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":126981,"byte_end":127011,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127012,"byte_end":127015,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ #[async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127016,"byte_end":127034,"line_start":232,"line_end":232,"column_start":1,"column_end":19}},{"value":"/ impl<S> FromRequestParts<S> for MyLibraryExtractor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127035,"byte_end":127089,"line_start":233,"line_end":233,"column_start":1,"column_end":55}},{"value":"/ where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127090,"byte_end":127099,"line_start":234,"line_end":234,"column_start":1,"column_end":10}},{"value":"/     // keep `S` generic but require that it can produce a `MyLibraryState`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127100,"byte_end":127178,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/     // this means users will have to implement `FromRef<UserState> for MyLibraryState`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127179,"byte_end":127269,"line_start":236,"line_end":236,"column_start":1,"column_end":91}},{"value":"/     MyLibraryState: FromRef<S>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127270,"byte_end":127305,"line_start":237,"line_end":237,"column_start":1,"column_end":36}},{"value":"/     S: Send + Sync,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127306,"byte_end":127329,"line_start":238,"line_end":238,"column_start":1,"column_end":24}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127330,"byte_end":127335,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/     type Rejection = Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127336,"byte_end":127372,"line_start":240,"line_end":240,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127373,"byte_end":127376,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/     async fn from_request_parts(parts: &mut Parts, state: &S) -> Result<Self, Self::Rejection> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127377,"byte_end":127477,"line_start":242,"line_end":242,"column_start":1,"column_end":101}},{"value":"/         // get a `MyLibraryState` from a reference to the state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127478,"byte_end":127545,"line_start":243,"line_end":243,"column_start":1,"column_end":68}},{"value":"/         let state = MyLibraryState::from_ref(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127546,"byte_end":127602,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127603,"byte_end":127606,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/         // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127607,"byte_end":127625,"line_start":246,"line_end":246,"column_start":1,"column_end":19}},{"value":"/         # todo!()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127626,"byte_end":127647,"line_start":247,"line_end":247,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127648,"byte_end":127657,"line_start":248,"line_end":248,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127658,"byte_end":127663,"line_start":249,"line_end":249,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127664,"byte_end":127667,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ // the state your library needs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127668,"byte_end":127703,"line_start":251,"line_end":251,"column_start":1,"column_end":36}},{"value":"/ struct MyLibraryState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127704,"byte_end":127731,"line_start":252,"line_end":252,"column_start":1,"column_end":28}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127732,"byte_end":127746,"line_start":253,"line_end":253,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127747,"byte_end":127752,"line_start":254,"line_end":254,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127753,"byte_end":127760,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127761,"byte_end":127764,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # When states need to implement `Clone`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127765,"byte_end":127808,"line_start":257,"line_end":257,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127809,"byte_end":127812,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Your top level state type must implement `Clone` to be extractable with `State`:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127813,"byte_end":127897,"line_start":259,"line_end":259,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127898,"byte_end":127901,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127902,"byte_end":127909,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/ use axum::extract::State;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127910,"byte_end":127939,"line_start":262,"line_end":262,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127940,"byte_end":127943,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ // no substates, so to extract to `State<AppState>` we must implement `Clone` for `AppState`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":127944,"byte_end":128040,"line_start":264,"line_end":264,"column_start":1,"column_end":97}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128041,"byte_end":128061,"line_start":265,"line_end":265,"column_start":1,"column_end":21}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128062,"byte_end":128084,"line_start":266,"line_end":266,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128085,"byte_end":128088,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ async fn handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128089,"byte_end":128142,"line_start":268,"line_end":268,"column_start":1,"column_end":54}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128143,"byte_end":128157,"line_start":269,"line_end":269,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128158,"byte_end":128163,"line_start":270,"line_end":270,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128164,"byte_end":128171,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128172,"byte_end":128175,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ This works because of [`impl<S> FromRef<S> for S where S: Clone`][`FromRef`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128176,"byte_end":128257,"line_start":273,"line_end":273,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128258,"byte_end":128261,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ This is also true if you're extracting substates, unless you _never_ extract the top level","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128262,"byte_end":128356,"line_start":275,"line_end":275,"column_start":1,"column_end":95}},{"value":"/ state itself:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128357,"byte_end":128374,"line_start":276,"line_end":276,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128375,"byte_end":128378,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128379,"byte_end":128386,"line_start":278,"line_end":278,"column_start":1,"column_end":8}},{"value":"/ use axum::extract::{State, FromRef};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128387,"byte_end":128427,"line_start":279,"line_end":279,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128428,"byte_end":128431,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ // we never extract `State<AppState>`, just `State<InnerState>`. So `AppState` doesn't need to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128432,"byte_end":128530,"line_start":281,"line_end":281,"column_start":1,"column_end":99}},{"value":"/ // implement `Clone`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128531,"byte_end":128555,"line_start":282,"line_end":282,"column_start":1,"column_end":25}},{"value":"/ struct AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128556,"byte_end":128577,"line_start":283,"line_end":283,"column_start":1,"column_end":22}},{"value":"/     inner: InnerState,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128578,"byte_end":128604,"line_start":284,"line_end":284,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128605,"byte_end":128610,"line_start":285,"line_end":285,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128611,"byte_end":128614,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128615,"byte_end":128635,"line_start":287,"line_end":287,"column_start":1,"column_end":21}},{"value":"/ struct InnerState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128636,"byte_end":128660,"line_start":288,"line_end":288,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128661,"byte_end":128664,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ impl FromRef<AppState> for InnerState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128665,"byte_end":128708,"line_start":290,"line_end":290,"column_start":1,"column_end":44}},{"value":"/     fn from_ref(app_state: &AppState) -> InnerState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128709,"byte_end":128766,"line_start":291,"line_end":291,"column_start":1,"column_end":58}},{"value":"/         app_state.inner.clone()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128767,"byte_end":128802,"line_start":292,"line_end":292,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128803,"byte_end":128812,"line_start":293,"line_end":293,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128813,"byte_end":128818,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128819,"byte_end":128822,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ async fn api_users(State(inner): State<InnerState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128823,"byte_end":128880,"line_start":296,"line_end":296,"column_start":1,"column_end":58}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128881,"byte_end":128895,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128896,"byte_end":128901,"line_start":298,"line_end":298,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128902,"byte_end":128909,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128910,"byte_end":128913,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ In general however we recommend you implement `Clone` for all your state types to avoid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":128914,"byte_end":129005,"line_start":301,"line_end":301,"column_start":1,"column_end":92}},{"value":"/ potential type errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129006,"byte_end":129032,"line_start":302,"line_end":302,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129033,"byte_end":129036,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ # Shared mutable state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129037,"byte_end":129063,"line_start":304,"line_end":304,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129064,"byte_end":129067,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ [As state is global within a `Router`][global] you can't directly get a mutable reference to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129068,"byte_end":129164,"line_start":306,"line_end":306,"column_start":1,"column_end":97}},{"value":"/ the state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129165,"byte_end":129179,"line_start":307,"line_end":307,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129180,"byte_end":129183,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ The most basic solution is to use an `Arc<Mutex<_>>`. Which kind of mutex you need depends on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129184,"byte_end":129281,"line_start":309,"line_end":309,"column_start":1,"column_end":98}},{"value":"/ your use case. See [the tokio docs] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129282,"byte_end":129339,"line_start":310,"line_end":310,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129340,"byte_end":129343,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ Note that holding a locked `std::sync::Mutex` across `.await` points will result in `!Send`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129344,"byte_end":129439,"line_start":312,"line_end":312,"column_start":1,"column_end":96}},{"value":"/ futures which are incompatible with axum. If you need to hold a mutex across `.await` points,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129440,"byte_end":129537,"line_start":313,"line_end":313,"column_start":1,"column_end":98}},{"value":"/ consider using a `tokio::sync::Mutex` instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129538,"byte_end":129588,"line_start":314,"line_end":314,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129589,"byte_end":129592,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129593,"byte_end":129607,"line_start":316,"line_end":316,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129608,"byte_end":129611,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129612,"byte_end":129619,"line_start":318,"line_end":318,"column_start":1,"column_end":8}},{"value":"/ use axum::{Router, routing::get, extract::State};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129620,"byte_end":129673,"line_start":319,"line_end":319,"column_start":1,"column_end":54}},{"value":"/ use std::sync::{Arc, Mutex};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129674,"byte_end":129706,"line_start":320,"line_end":320,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129707,"byte_end":129710,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129711,"byte_end":129731,"line_start":322,"line_end":322,"column_start":1,"column_end":21}},{"value":"/ struct AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129732,"byte_end":129753,"line_start":323,"line_end":323,"column_start":1,"column_end":22}},{"value":"/     data: Arc<Mutex<String>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129754,"byte_end":129787,"line_start":324,"line_end":324,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129788,"byte_end":129793,"line_start":325,"line_end":325,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129794,"byte_end":129797,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ async fn handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129798,"byte_end":129851,"line_start":327,"line_end":327,"column_start":1,"column_end":54}},{"value":"/     let mut data = state.data.lock().expect(\"mutex was poisoned\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129852,"byte_end":129922,"line_start":328,"line_end":328,"column_start":1,"column_end":71}},{"value":"/     *data = \"updated foo\".to_owned();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129923,"byte_end":129964,"line_start":329,"line_end":329,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129965,"byte_end":129968,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129969,"byte_end":129983,"line_start":331,"line_end":331,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129984,"byte_end":129989,"line_start":332,"line_end":332,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129990,"byte_end":129993,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ let state = AppState {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":129994,"byte_end":130020,"line_start":334,"line_end":334,"column_start":1,"column_end":27}},{"value":"/     data: Arc::new(Mutex::new(\"foo\".to_owned())),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130021,"byte_end":130074,"line_start":335,"line_end":335,"column_start":1,"column_end":54}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130075,"byte_end":130081,"line_start":336,"line_end":336,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130082,"byte_end":130085,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130086,"byte_end":130113,"line_start":338,"line_end":338,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130114,"byte_end":130147,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130148,"byte_end":130175,"line_start":340,"line_end":340,"column_start":1,"column_end":28}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130176,"byte_end":130202,"line_start":341,"line_end":341,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130203,"byte_end":130210,"line_start":342,"line_end":342,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130211,"byte_end":130214,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ [global]: crate::Router::with_state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130215,"byte_end":130254,"line_start":344,"line_end":344,"column_start":1,"column_end":40}},{"value":"/ [the tokio docs]: https://docs.rs/tokio/1.25.0/tokio/sync/struct.Mutex.html#which-kind-of-mutex-should-you-use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130255,"byte_end":130369,"line_start":345,"line_end":345,"column_start":1,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":3981},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130429,"byte_end":130434,"line_start":347,"line_end":347,"column_start":21,"column_end":26},"name":"0","qualname":"::extract::state::State::0","value":"S","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130654,"byte_end":130672,"line_start":357,"line_end":357,"column_start":14,"column_end":32},"name":"from_request_parts","qualname":"<State<InnerState> as axum_core::extract::FromRequestParts>::from_request_parts","value":"fn from_request_parts<'life0, 'life1,\n'async_trait>(&'life0 mut Parts, &'life1 OuterState)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":56,"index":1680},"children":[],"decl_id":{"krate":56,"index":1683},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: async_yields_async, clippy :: let_unit_value, clippy ::\nno_effect_underscore_binding, clippy :: shadow_same, clippy ::\ntype_complexity, clippy :: type_repetition_in_bounds, clippy ::\nused_underscore_binding)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130438,"byte_end":130452,"line_start":349,"line_end":349,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130923,"byte_end":130928,"line_start":369,"line_end":369,"column_start":8,"column_end":13},"name":"deref","qualname":"<State<S> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":131019,"byte_end":131028,"line_start":375,"line_end":375,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<State<S> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":990},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handler","qualname":"::handler","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1081},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1173},{"krate":0,"index":1182},{"krate":0,"index":4086},{"krate":0,"index":4097},{"krate":0,"index":4109},{"krate":0,"index":4122},{"krate":0,"index":4136},{"krate":0,"index":4151},{"krate":0,"index":4167},{"krate":0,"index":4184},{"krate":0,"index":4202},{"krate":0,"index":4221},{"krate":0,"index":4241},{"krate":0,"index":4262},{"krate":0,"index":4284},{"krate":0,"index":4307},{"krate":0,"index":4331},{"krate":0,"index":4356},{"krate":0,"index":1183},{"krate":0,"index":1193},{"krate":0,"index":1201},{"krate":0,"index":1209},{"krate":0,"index":1226},{"krate":0,"index":1231}],"decl_id":null,"docs":" Async functions that can be used to handle requests.","sig":null,"attributes":[{"value":"/ Async functions that can be used to handle requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131092,"byte_end":131148,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131149,"byte_end":131152,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131205,"byte_end":131208,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Some examples of handlers:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131209,"byte_end":131239,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131240,"byte_end":131243,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131244,"byte_end":131255,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ use axum::{body::Bytes, http::StatusCode};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131256,"byte_end":131302,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131303,"byte_end":131306,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // Handler that immediately returns an empty `200 OK` response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131307,"byte_end":131374,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ async fn unit_handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131375,"byte_end":131405,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131406,"byte_end":131409,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // Handler that immediately returns an empty `200 OK` response with a plain","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131410,"byte_end":131489,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ // text body.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131490,"byte_end":131507,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/ async fn string_handler() -> String {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131508,"byte_end":131549,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/     \"Hello, World!\".to_string()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131550,"byte_end":131585,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131586,"byte_end":131591,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131592,"byte_end":131595,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Handler that buffers the request body and returns it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131596,"byte_end":131656,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131657,"byte_end":131663,"line_start":20,"line_end":20,"column_start":1,"column_end":7}},{"value":"/ // This works because `Bytes` implements `FromRequest`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131664,"byte_end":131722,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/ // and therefore can be used as an extractor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131723,"byte_end":131772,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/ //","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131773,"byte_end":131779,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ // `String` and `StatusCode` both implement `IntoResponse` and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131780,"byte_end":131846,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ // therefore `Result<String, StatusCode>` also implements `IntoResponse`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131847,"byte_end":131923,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ async fn echo(body: Bytes) -> Result<String, StatusCode> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131924,"byte_end":131986,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/     if let Ok(string) = String::from_utf8(body.to_vec()) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":131987,"byte_end":132049,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/         Ok(string)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132050,"byte_end":132072,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132073,"byte_end":132089,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/         Err(StatusCode::BAD_REQUEST)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132090,"byte_end":132130,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132131,"byte_end":132140,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132141,"byte_end":132146,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132147,"byte_end":132154,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132155,"byte_end":132158,"line_start":34,"line_end":34,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::handler::future","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4002},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4045},{"krate":0,"index":4049},{"krate":0,"index":1072},{"krate":0,"index":1076}],"decl_id":null,"docs":" Handler future types.\n","sig":null,"attributes":[{"value":"/ Handler future types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":143487,"byte_end":143512,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":143857,"byte_end":143874,"line_start":13,"line_end":13,"column_start":14,"column_end":31},"name":"IntoServiceFuture","qualname":"::handler::future::IntoServiceFuture","value":"IntoServiceFuture {  }","parent":null,"children":[{"krate":0,"index":4014}],"decl_id":null,"docs":" The response future for [`IntoService`](super::IntoService).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144071,"byte_end":144084,"line_start":22,"line_end":22,"column_start":16,"column_end":29},"name":"LayeredFuture","qualname":"::handler::future::LayeredFuture","value":"LayeredFuture {  }","parent":null,"children":[{"krate":0,"index":4048}],"decl_id":null,"docs":" The response future for [`Layered`](super::Layered).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144611,"byte_end":144615,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"poll","qualname":"<LayeredFuture<B, S> as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> std::task::Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144594,"byte_end":144603,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145325,"byte_end":145339,"line_start":20,"line_end":20,"column_start":12,"column_end":26},"name":"HandlerService","qualname":"::handler::service::HandlerService","value":"HandlerService {  }","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"decl_id":null,"docs":" An adapter that makes a [`Handler`] into a [`Service`].","sig":null,"attributes":[{"value":"/ An adapter that makes a [`Handler`] into a [`Service`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145070,"byte_end":145129,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145130,"byte_end":145133,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Created with [`Handler::with_state`] or [`HandlerWithoutStateExt::into_service`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145134,"byte_end":145219,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145220,"byte_end":145223,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`HandlerWithoutStateExt::into_service`]: super::HandlerWithoutStateExt::into_service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145224,"byte_end":145313,"line_start":19,"line_end":19,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145524,"byte_end":145529,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"state","qualname":"<HandlerService<H, T, S, B>>::state","value":"fn state<'_>(&'_ Self) -> &'_ S","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the state.\n","sig":null,"attributes":[{"value":"/ Get a reference to the state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145479,"byte_end":145512,"line_start":27,"line_end":27,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146448,"byte_end":146465,"line_start":64,"line_end":64,"column_start":12,"column_end":29},"name":"into_make_service","qualname":"<HandlerService<H, T, S, B>>::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<HandlerService<H, T, S, B>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the handler into a [`MakeService`].","sig":null,"attributes":[{"value":"/ Convert the handler into a [`MakeService`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145576,"byte_end":145623,"line_start":32,"line_end":32,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145628,"byte_end":145631,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This allows you to serve a single handler if you don't need any routing:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145636,"byte_end":145712,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145717,"byte_end":145720,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145725,"byte_end":145736,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145741,"byte_end":145756,"line_start":37,"line_end":37,"column_start":5,"column_end":20}},{"value":"/     Server,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145761,"byte_end":145776,"line_start":38,"line_end":38,"column_start":5,"column_end":20}},{"value":"/     handler::Handler,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145781,"byte_end":145806,"line_start":39,"line_end":39,"column_start":5,"column_end":30}},{"value":"/     extract::State,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145811,"byte_end":145834,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/     http::{Uri, Method},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145839,"byte_end":145867,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/     response::IntoResponse,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145872,"byte_end":145903,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145908,"byte_end":145914,"line_start":43,"line_end":43,"column_start":5,"column_end":11}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145919,"byte_end":145948,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145953,"byte_end":145956,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145961,"byte_end":145981,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/ struct AppState {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145986,"byte_end":146008,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146013,"byte_end":146016,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ async fn handler(State(state): State<AppState>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146021,"byte_end":146074,"line_start":49,"line_end":49,"column_start":5,"column_end":58}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146079,"byte_end":146093,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146098,"byte_end":146103,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146108,"byte_end":146111,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ let app = handler.with_state(AppState {});","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146116,"byte_end":146162,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146167,"byte_end":146170,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146175,"byte_end":146188,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/ Server::bind(&SocketAddr::from(([127, 0, 0, 1], 3000)))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146193,"byte_end":146252,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/     .serve(app.into_make_service())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146257,"byte_end":146296,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/     .await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146301,"byte_end":146317,"line_start":58,"line_end":58,"column_start":5,"column_end":21}},{"value":"/ # Ok::<_, hyper::Error>(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146322,"byte_end":146353,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146358,"byte_end":146366,"line_start":60,"line_end":60,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146371,"byte_end":146378,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146383,"byte_end":146386,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":146391,"byte_end":146436,"line_start":63,"line_end":63,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148430,"byte_end":148433,"line_start":130,"line_end":130,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HandlerService<H, T, S, B> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148654,"byte_end":148659,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"clone","qualname":"<HandlerService<H, T, S, B> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":149148,"byte_end":149158,"line_start":160,"line_end":160,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<HandlerService<H, T, S, B> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":149131,"byte_end":149140,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":149486,"byte_end":149490,"line_start":167,"line_end":167,"column_start":8,"column_end":12},"name":"call","qualname":"<HandlerService<H, T, S, B> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134188,"byte_end":134195,"line_start":102,"line_end":102,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler<T, S, B = Body>: Clone + Send + Sized + 'static","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1172}],"decl_id":null,"docs":" Trait for async functions that can be used to handle requests.","sig":null,"attributes":[{"value":"/ Trait for async functions that can be used to handle requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132716,"byte_end":132782,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132783,"byte_end":132786,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ You shouldn't need to depend on this trait directly. It is automatically","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132787,"byte_end":132863,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ implemented to closures of the right types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132864,"byte_end":132911,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132912,"byte_end":132915,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ See the [module docs](crate::handler) for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132916,"byte_end":132975,"line_start":61,"line_end":61,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132976,"byte_end":132979,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Converting `Handler`s into [`Service`]s","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132980,"byte_end":133025,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133026,"byte_end":133029,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To convert `Handler`s into [`Service`]s you have to call either","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133030,"byte_end":133097,"line_start":65,"line_end":65,"column_start":1,"column_end":68}},{"value":"/ [`HandlerWithoutStateExt::into_service`] or [`Handler::with_state`]:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133098,"byte_end":133170,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133171,"byte_end":133174,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133175,"byte_end":133182,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tower::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133183,"byte_end":133206,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133207,"byte_end":133222,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/     extract::State,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133223,"byte_end":133246,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/     body::Body,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133247,"byte_end":133266,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133267,"byte_end":133289,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/     handler::{HandlerWithoutStateExt, Handler},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133290,"byte_end":133341,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133342,"byte_end":133348,"line_start":75,"line_end":75,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133349,"byte_end":133352,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // this handler doesn't require any state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133353,"byte_end":133398,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/ async fn one() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133399,"byte_end":133420,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ // so it can be converted to a service with `HandlerWithoutStateExt::into_service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133421,"byte_end":133507,"line_start":79,"line_end":79,"column_start":1,"column_end":87}},{"value":"/ assert_service(one.into_service());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133508,"byte_end":133547,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133548,"byte_end":133551,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // this handler requires state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133552,"byte_end":133586,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ async fn two(_: State<String>) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133587,"byte_end":133624,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ // so we have to provide it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133625,"byte_end":133656,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ let handler_with_state = two.with_state(String::new());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133657,"byte_end":133716,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ // which gives us a `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133717,"byte_end":133750,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ assert_service(handler_with_state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133751,"byte_end":133790,"line_start":87,"line_end":87,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133791,"byte_end":133794,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // helper to check that a value implements `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133795,"byte_end":133851,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ fn assert_service<S>(service: S)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133852,"byte_end":133888,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133889,"byte_end":133898,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/     S: Service<Request<Body>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133899,"byte_end":133933,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/ {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133934,"byte_end":133940,"line_start":93,"line_end":93,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":133941,"byte_end":133948,"line_start":94,"line_end":94,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134312,"byte_end":134318,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Future","qualname":"::handler::Handler::Future","value":"type Future: Future<Output = Response> + Send + 'static;","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" The type of future calling this handler returns.\n","sig":null,"attributes":[{"value":"/ The type of future calling this handler returns.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134250,"byte_end":134302,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134421,"byte_end":134425,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"call","qualname":"::handler::Handler::call","value":"fn call(Self, Request<B>, S) -> Self::Future","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Call the handler with the given request.\n","sig":null,"attributes":[{"value":"/ Call the handler with the given request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134369,"byte_end":134413,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135799,"byte_end":135804,"line_start":145,"line_end":145,"column_start":8,"column_end":13},"name":"layer","qualname":"::handler::Handler::layer","value":"fn layer<L, NewReqBody>(Self, L) -> Layered<L, Self, T, S, B, NewReqBody>\nwhere L: Layer<HandlerService<Self, T, S, B>> + Clone,\nL::Service: Service<Request<NewReqBody>>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Apply a [`tower::Layer`] to the handler.","sig":null,"attributes":[{"value":"/ Apply a [`tower::Layer`] to the handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134481,"byte_end":134525,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134530,"byte_end":134533,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ All requests to the handler will be processed by the layer's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134538,"byte_end":134602,"line_start":111,"line_end":111,"column_start":5,"column_end":69}},{"value":"/ corresponding middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134607,"byte_end":134636,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134641,"byte_end":134644,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This can be used to add additional processing to a request for a single","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134649,"byte_end":134724,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134729,"byte_end":134741,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134746,"byte_end":134749,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note this differs from [`routing::Router::layer`](crate::routing::Router::layer)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134754,"byte_end":134838,"line_start":117,"line_end":117,"column_start":5,"column_end":89}},{"value":"/ which adds a middleware to a group of routes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134843,"byte_end":134892,"line_start":118,"line_end":118,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134897,"byte_end":134900,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If you're applying middleware that produces errors you have to handle the errors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134905,"byte_end":134989,"line_start":120,"line_end":120,"column_start":5,"column_end":89}},{"value":"/ so they're converted into responses. You can learn more about doing that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134994,"byte_end":135070,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ [here](crate::error_handling).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135075,"byte_end":135109,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135114,"byte_end":135117,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135122,"byte_end":135135,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135140,"byte_end":135143,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Adding the [`tower::limit::ConcurrencyLimit`] middleware to a handler","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135148,"byte_end":135221,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ can be done like so:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135226,"byte_end":135250,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135255,"byte_end":135258,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135263,"byte_end":135274,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135279,"byte_end":135294,"line_start":130,"line_end":130,"column_start":5,"column_end":20}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135299,"byte_end":135320,"line_start":131,"line_end":131,"column_start":5,"column_end":26}},{"value":"/     handler::Handler,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135325,"byte_end":135350,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135355,"byte_end":135370,"line_start":133,"line_end":133,"column_start":5,"column_end":20}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135375,"byte_end":135381,"line_start":134,"line_end":134,"column_start":5,"column_end":11}},{"value":"/ use tower::limit::{ConcurrencyLimitLayer, ConcurrencyLimit};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135386,"byte_end":135450,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135455,"byte_end":135458,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ async fn handler() { /* ... */ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135463,"byte_end":135499,"line_start":137,"line_end":137,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135504,"byte_end":135507,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let layered_handler = handler.layer(ConcurrencyLimitLayer::new(64));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135512,"byte_end":135584,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ let app = Router::new().route(\"/\", get(layered_handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135589,"byte_end":135650,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135655,"byte_end":135668,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135673,"byte_end":135766,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135771,"byte_end":135779,"line_start":143,"line_end":143,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":135784,"byte_end":135791,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":136192,"byte_end":136202,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"with_state","qualname":"::handler::Handler::with_state","value":"fn with_state(Self, S) -> HandlerService<Self, T, S, B>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Convert the handler into a [`Service`] by providing the state\n","sig":null,"attributes":[{"value":"/ Convert the handler into a [`Service`] by providing the state","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":136119,"byte_end":136184,"line_start":157,"line_end":157,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":136570,"byte_end":136574,"line_start":172,"line_end":172,"column_start":8,"column_end":12},"name":"call","qualname":"<F as handler::Handler>::call","value":"fn call(Self, Request<B>, S) -> Self::Future","parent":{"krate":0,"index":1163},"children":[],"decl_id":{"krate":0,"index":1168},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138476,"byte_end":138483,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"Layered","qualname":"::handler::Layered","value":"Layered {  }","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" A [`Service`] created from a [`Handler`] by applying a Tower middleware.","sig":null,"attributes":[{"value":"/ A [`Service`] created from a [`Handler`] by applying a Tower middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138313,"byte_end":138389,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138390,"byte_end":138393,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Created with [`Handler::layer`]. See that method for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138394,"byte_end":138464,"line_start":226,"line_end":226,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138687,"byte_end":138690,"line_start":237,"line_end":237,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Layered<L, H, T, S, B, B2> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138953,"byte_end":138958,"line_start":249,"line_end":249,"column_start":8,"column_end":13},"name":"clone","qualname":"<Layered<L, H, T, S, B, B2> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":139648,"byte_end":139652,"line_start":272,"line_end":272,"column_start":8,"column_end":12},"name":"call","qualname":"<Layered<L, H, T, S, B, B2> as handler::Handler>::call","value":"fn call(Self, Request<B2>, S) -> Self::Future","parent":{"krate":0,"index":1163},"children":[],"decl_id":{"krate":0,"index":1168},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140534,"byte_end":140556,"line_start":300,"line_end":300,"column_start":11,"column_end":33},"name":"HandlerWithoutStateExt","qualname":"::handler::HandlerWithoutStateExt","value":"HandlerWithoutStateExt<T, B>: Handler<T, (), B>","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230}],"decl_id":null,"docs":" Extension trait for [`Handler`]s that don't have state.","sig":null,"attributes":[{"value":"/ Extension trait for [`Handler`]s that don't have state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140306,"byte_end":140365,"line_start":295,"line_end":295,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140366,"byte_end":140369,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This provides convenience methods to convert the [`Handler`] into a [`Service`] or [`MakeService`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140370,"byte_end":140473,"line_start":297,"line_end":297,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140474,"byte_end":140477,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140478,"byte_end":140523,"line_start":299,"line_end":299,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140652,"byte_end":140664,"line_start":302,"line_end":302,"column_start":8,"column_end":20},"name":"into_service","qualname":"::handler::HandlerWithoutStateExt::into_service","value":"fn into_service(Self) -> HandlerService<Self, T, (), B>","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Convert the handler into a [`Service`] and no state.\n","sig":null,"attributes":[{"value":"/ Convert the handler into a [`Service`] and no state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140588,"byte_end":140644,"line_start":301,"line_end":301,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140913,"byte_end":140930,"line_start":309,"line_end":309,"column_start":8,"column_end":25},"name":"into_make_service","qualname":"::handler::HandlerWithoutStateExt::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<HandlerService<Self, T, (), B>>","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Convert the handler into a [`MakeService`] and no state.","sig":null,"attributes":[{"value":"/ Convert the handler into a [`MakeService`] and no state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140711,"byte_end":140771,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140776,"byte_end":140779,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ See [`HandlerService::into_make_service`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140784,"byte_end":140847,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140852,"byte_end":140855,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140860,"byte_end":140905,"line_start":308,"line_end":308,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":141534,"byte_end":141546,"line_start":327,"line_end":327,"column_start":8,"column_end":20},"name":"into_service","qualname":"<H as handler::HandlerWithoutStateExt>::into_service","value":"fn into_service(Self) -> HandlerService<Self, T, (), B>","parent":{"krate":0,"index":1226},"children":[],"decl_id":{"krate":0,"index":1229},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":141631,"byte_end":141648,"line_start":331,"line_end":331,"column_start":8,"column_end":25},"name":"into_make_service","qualname":"<H as handler::HandlerWithoutStateExt>::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<HandlerService<Self, T, (), B>>","parent":{"krate":0,"index":1226},"children":[],"decl_id":{"krate":0,"index":1230},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"middleware","qualname":"::middleware","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1349},{"krate":0,"index":1490},{"krate":0,"index":1628},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798}],"decl_id":null,"docs":" Utilities for writing middleware","sig":null,"attributes":[{"value":"/ Utilities for writing middleware","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":149803,"byte_end":149839,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":149840,"byte_end":149843,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153437,"byte_end":153451,"line_start":93,"line_end":93,"column_start":8,"column_end":22},"name":"from_extractor","qualname":"::middleware::from_extractor::from_extractor","value":"fn from_extractor<E>() -> FromExtractorLayer<E, ()>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an extractor.","sig":null,"attributes":[{"value":"/ Create a middleware from an extractor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151128,"byte_end":151170,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151171,"byte_end":151174,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the extractor succeeds the value will be discarded and the inner service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151175,"byte_end":151254,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will be called. If the extractor fails the rejection will be returned and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151255,"byte_end":151332,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ the inner service will _not_ be called.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151333,"byte_end":151376,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151377,"byte_end":151380,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This can be used to perform validation of requests if the validation doesn't","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151381,"byte_end":151461,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ produce any useful output, and run the extractor for several handlers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151462,"byte_end":151535,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ without repeating it in the function signature.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151536,"byte_end":151587,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151588,"byte_end":151591,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that if the extractor consumes the request body, as `String` or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151592,"byte_end":151664,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ [`Bytes`] does, an empty body will be left in its place. Thus wont be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151665,"byte_end":151738,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ accessible to subsequent extractors or handlers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151739,"byte_end":151791,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151792,"byte_end":151795,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151796,"byte_end":151809,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151810,"byte_end":151813,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151814,"byte_end":151825,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151826,"byte_end":151841,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/     extract::FromRequestParts,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151842,"byte_end":151876,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/     middleware::from_extractor,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151877,"byte_end":151912,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/     routing::{get, post},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151913,"byte_end":151942,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151943,"byte_end":151958,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     http::{header, StatusCode, request::Parts},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":151959,"byte_end":152010,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152011,"byte_end":152017,"line_start":41,"line_end":41,"column_start":1,"column_end":7}},{"value":"/ use async_trait::async_trait;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152018,"byte_end":152051,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152052,"byte_end":152055,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // An extractor that performs authorization.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152056,"byte_end":152104,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/ struct RequireAuth;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152105,"byte_end":152128,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152129,"byte_end":152132,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152133,"byte_end":152151,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ impl<S> FromRequestParts<S> for RequireAuth","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152152,"byte_end":152199,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152200,"byte_end":152209,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     S: Send + Sync,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152210,"byte_end":152233,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152234,"byte_end":152239,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     type Rejection = StatusCode;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152240,"byte_end":152276,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152277,"byte_end":152280,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     async fn from_request_parts(parts: &mut Parts, state: &S) -> Result<Self, Self::Rejection> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152281,"byte_end":152381,"line_start":54,"line_end":54,"column_start":1,"column_end":101}},{"value":"/         let auth_header = parts","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152382,"byte_end":152417,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/             .headers","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152418,"byte_end":152442,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/             .get(header::AUTHORIZATION)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152443,"byte_end":152486,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/             .and_then(|value| value.to_str().ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152487,"byte_end":152542,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152543,"byte_end":152546,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         match auth_header {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152547,"byte_end":152578,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/             Some(auth_header) if token_is_valid(auth_header) => {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152579,"byte_end":152648,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/                 Ok(Self)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152649,"byte_end":152677,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152678,"byte_end":152695,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/             _ => Err(StatusCode::UNAUTHORIZED),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152696,"byte_end":152747,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152748,"byte_end":152761,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152762,"byte_end":152771,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152772,"byte_end":152777,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152778,"byte_end":152781,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn token_is_valid(token: &str) -> bool {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152782,"byte_end":152826,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152827,"byte_end":152841,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/     # false","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152842,"byte_end":152857,"line_start":71,"line_end":71,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152858,"byte_end":152863,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152864,"byte_end":152867,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ async fn handler() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152868,"byte_end":152892,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/     // If we get here the request has been authorized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152893,"byte_end":152950,"line_start":75,"line_end":75,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152951,"byte_end":152956,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152957,"byte_end":152960,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ async fn other_handler() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152961,"byte_end":152991,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     // If we get here the request has been authorized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":152992,"byte_end":153049,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153050,"byte_end":153055,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153056,"byte_end":153059,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153060,"byte_end":153087,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153088,"byte_end":153121,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/     .route(\"/foo\", post(other_handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153122,"byte_end":153165,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     // The extractor will run before all routes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153166,"byte_end":153217,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/     .route_layer(from_extractor::<RequireAuth>());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153218,"byte_end":153272,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153273,"byte_end":153286,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153287,"byte_end":153380,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153381,"byte_end":153389,"line_start":89,"line_end":89,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153390,"byte_end":153397,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153398,"byte_end":153401,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153402,"byte_end":153429,"line_start":92,"line_end":92,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153681,"byte_end":153706,"line_start":100,"line_end":100,"column_start":8,"column_end":33},"name":"from_extractor_with_state","qualname":"::middleware::from_extractor::from_extractor_with_state","value":"fn from_extractor_with_state<E, S>(S) -> FromExtractorLayer<E, S>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an extractor with the given state.","sig":null,"attributes":[{"value":"/ Create a middleware from an extractor with the given state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153525,"byte_end":153588,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153589,"byte_end":153592,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ See [`State`](crate::extract::State) for more details about accessing state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153593,"byte_end":153673,"line_start":99,"line_end":99,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154032,"byte_end":154050,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"FromExtractorLayer","qualname":"::middleware::from_extractor::FromExtractorLayer","value":"FromExtractorLayer {  }","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":" [`Layer`] that applies [`FromExtractor`] that runs an extractor and\n discards the value.","sig":null,"attributes":[{"value":"/ [`Layer`] that applies [`FromExtractor`] that runs an extractor and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153832,"byte_end":153903,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/ discards the value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153904,"byte_end":153927,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153928,"byte_end":153931,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ See [`from_extractor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153932,"byte_end":153976,"line_start":110,"line_end":110,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153977,"byte_end":153980,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower::Layer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":153981,"byte_end":154008,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154009,"byte_end":154020,"line_start":113,"line_end":113,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154188,"byte_end":154193,"line_start":123,"line_end":123,"column_start":8,"column_end":13},"name":"clone","qualname":"<FromExtractorLayer<E, S> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154403,"byte_end":154406,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FromExtractorLayer<E, S> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154782,"byte_end":154787,"line_start":149,"line_end":149,"column_start":8,"column_end":13},"name":"layer","qualname":"<FromExtractorLayer<E, S> as tower::Layer>::layer","value":"fn layer<'_>(&'_ Self, T) -> Self::Service","parent":{"krate":25,"index":240},"children":[],"decl_id":{"krate":25,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155084,"byte_end":155097,"line_start":161,"line_end":161,"column_start":12,"column_end":25},"name":"FromExtractor","qualname":"::middleware::from_extractor::FromExtractor","value":"FromExtractor {  }","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" Middleware that runs an extractor and discards the value.","sig":null,"attributes":[{"value":"/ Middleware that runs an extractor and discards the value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154962,"byte_end":155023,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155024,"byte_end":155027,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ See [`from_extractor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155028,"byte_end":155072,"line_start":160,"line_end":160,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155441,"byte_end":155446,"line_start":179,"line_end":179,"column_start":8,"column_end":13},"name":"clone","qualname":"<FromExtractor<T, E, S> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155718,"byte_end":155721,"line_start":193,"line_end":193,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FromExtractor<T, E, S> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":156371,"byte_end":156381,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FromExtractor<T, E, S> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":156354,"byte_end":156363,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":156498,"byte_end":156502,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"call","qualname":"<FromExtractor<T, E, S> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":157171,"byte_end":157185,"line_start":240,"line_end":240,"column_start":16,"column_end":30},"name":"ResponseFuture","qualname":"::middleware::from_extractor::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4387},{"krate":0,"index":4388}],"decl_id":null,"docs":" Response future for [`FromExtractor`].\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13111531,"byte_end":13111540,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":157876,"byte_end":157880,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture<B, T, E, S> as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164176,"byte_end":164183,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::middleware::from_fn::from_fn","value":"fn from_fn<F, T>(F) -> FromFnLayer<F, (), T>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an async function.","sig":null,"attributes":[{"value":"/ Create a middleware from an async function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":161924,"byte_end":161971,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":161972,"byte_end":161975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `from_fn` requires the function given to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":161976,"byte_end":162020,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162021,"byte_end":162024,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ 1. Be an `async fn`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162025,"byte_end":162049,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/ 2. Take one or more [extractors] as the first arguments.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162050,"byte_end":162110,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ 3. Take [`Next<B>`](Next) as the final argument.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162111,"byte_end":162163,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ 4. Return something that implements [`IntoResponse`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162164,"byte_end":162221,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162222,"byte_end":162225,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function doesn't support extracting [`State`]. For that, use [`from_fn_with_state`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162226,"byte_end":162329,"line_start":27,"line_end":27,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162330,"byte_end":162333,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162334,"byte_end":162347,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162348,"byte_end":162351,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162352,"byte_end":162363,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162364,"byte_end":162379,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162380,"byte_end":162395,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/     http::{self, Request},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162396,"byte_end":162426,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162427,"byte_end":162448,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/     response::Response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162449,"byte_end":162476,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/     middleware::{self, Next},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162477,"byte_end":162510,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162511,"byte_end":162517,"line_start":38,"line_end":38,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162518,"byte_end":162521,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ async fn my_middleware<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162522,"byte_end":162552,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/     request: Request<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162553,"byte_end":162581,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/     next: Next<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162582,"byte_end":162604,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ ) -> Response {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162605,"byte_end":162624,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/     // do something with `request`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162625,"byte_end":162666,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162667,"byte_end":162670,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     let response = next.run(request).await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162671,"byte_end":162718,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162719,"byte_end":162722,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     // do something with `response`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162723,"byte_end":162765,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162766,"byte_end":162769,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162770,"byte_end":162786,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162787,"byte_end":162792,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162793,"byte_end":162796,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162797,"byte_end":162824,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162825,"byte_end":162873,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/     .layer(middleware::from_fn(my_middleware));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162874,"byte_end":162925,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/ # let app: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162926,"byte_end":162954,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162955,"byte_end":162962,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162963,"byte_end":162966,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Running extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162967,"byte_end":162991,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162992,"byte_end":162995,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":162996,"byte_end":163007,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163008,"byte_end":163023,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163024,"byte_end":163039,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/     extract::TypedHeader,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163040,"byte_end":163069,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/     http::StatusCode,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163070,"byte_end":163095,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     headers::authorization::{Authorization, Bearer},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163096,"byte_end":163152,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163153,"byte_end":163175,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/     middleware::{self, Next},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163176,"byte_end":163209,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/     response::Response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163210,"byte_end":163237,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163238,"byte_end":163259,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163260,"byte_end":163266,"line_start":71,"line_end":71,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163267,"byte_end":163270,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ async fn auth<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163271,"byte_end":163292,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     // run the `TypedHeader` extractor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163293,"byte_end":163335,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/     TypedHeader(auth): TypedHeader<Authorization<Bearer>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163336,"byte_end":163398,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/     // you can also add more extractors here but the last","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163399,"byte_end":163460,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/     // extractor must implement `FromRequest` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163461,"byte_end":163516,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/     // `Request` does","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163517,"byte_end":163542,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"/     request: Request<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163543,"byte_end":163571,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/     next: Next<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163572,"byte_end":163594,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ ) -> Result<Response, StatusCode> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163595,"byte_end":163634,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/     if token_is_valid(auth.token()) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163635,"byte_end":163676,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/         let response = next.run(request).await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163677,"byte_end":163728,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/         Ok(response)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163729,"byte_end":163753,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163754,"byte_end":163770,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/         Err(StatusCode::UNAUTHORIZED)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163771,"byte_end":163812,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163813,"byte_end":163822,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163823,"byte_end":163828,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163829,"byte_end":163832,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ fn token_is_valid(token: &str) -> bool {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163833,"byte_end":163877,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163878,"byte_end":163892,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/     # false","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163893,"byte_end":163908,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163909,"byte_end":163914,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163915,"byte_end":163918,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163919,"byte_end":163946,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163947,"byte_end":163995,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     .route_layer(middleware::from_fn(auth));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":163996,"byte_end":164044,"line_start":97,"line_end":97,"column_start":1,"column_end":49}},{"value":"/ # let app: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164045,"byte_end":164073,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164074,"byte_end":164081,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164082,"byte_end":164085,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [extractors]: crate::extract::FromRequest","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164086,"byte_end":164131,"line_start":101,"line_end":101,"column_start":1,"column_end":46}},{"value":"/ [`State`]: crate::extract::State","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164132,"byte_end":164168,"line_start":102,"line_end":102,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165440,"byte_end":165458,"line_start":151,"line_end":151,"column_start":8,"column_end":26},"name":"from_fn_with_state","qualname":"::middleware::from_fn::from_fn_with_state","value":"fn from_fn_with_state<F, S, T>(S, F) -> FromFnLayer<F, S, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an async function with the given state.","sig":null,"attributes":[{"value":"/ Create a middleware from an async function with the given state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164256,"byte_end":164324,"line_start":107,"line_end":107,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164325,"byte_end":164328,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ See [`State`](crate::extract::State) for more details about accessing state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164329,"byte_end":164409,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164410,"byte_end":164413,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164414,"byte_end":164427,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164428,"byte_end":164431,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164432,"byte_end":164443,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164444,"byte_end":164459,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164460,"byte_end":164475,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/     http::{Request, StatusCode},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164476,"byte_end":164512,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164513,"byte_end":164534,"line_start":117,"line_end":117,"column_start":1,"column_end":22}},{"value":"/     response::{IntoResponse, Response},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164535,"byte_end":164578,"line_start":118,"line_end":118,"column_start":1,"column_end":44}},{"value":"/     middleware::{self, Next},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164579,"byte_end":164612,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/     extract::State,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164613,"byte_end":164636,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164637,"byte_end":164643,"line_start":121,"line_end":121,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164644,"byte_end":164647,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164648,"byte_end":164668,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/ struct AppState { /* ... */ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164669,"byte_end":164702,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164703,"byte_end":164706,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ async fn my_middleware<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164707,"byte_end":164737,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/     State(state): State<AppState>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164738,"byte_end":164776,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/     // you can add more extractors here but the last","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164777,"byte_end":164833,"line_start":128,"line_end":128,"column_start":1,"column_end":57}},{"value":"/     // extractor must implement `FromRequest` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164834,"byte_end":164889,"line_start":129,"line_end":129,"column_start":1,"column_end":56}},{"value":"/     // `Request` does","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164890,"byte_end":164915,"line_start":130,"line_end":130,"column_start":1,"column_end":26}},{"value":"/     request: Request<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164916,"byte_end":164944,"line_start":131,"line_end":131,"column_start":1,"column_end":29}},{"value":"/     next: Next<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164945,"byte_end":164967,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/ ) -> Response {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164968,"byte_end":164987,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/     // do something with `request`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":164988,"byte_end":165029,"line_start":134,"line_end":134,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165030,"byte_end":165033,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     let response = next.run(request).await;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165034,"byte_end":165081,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165082,"byte_end":165085,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     // do something with `response`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165086,"byte_end":165128,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165129,"byte_end":165132,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165133,"byte_end":165149,"line_start":140,"line_end":140,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165150,"byte_end":165155,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165156,"byte_end":165159,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ let state = AppState { /* ... */ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165160,"byte_end":165199,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165200,"byte_end":165203,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165204,"byte_end":165231,"line_start":145,"line_end":145,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165232,"byte_end":165280,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/     .route_layer(middleware::from_fn_with_state(state.clone(), my_middleware))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165281,"byte_end":165363,"line_start":147,"line_end":147,"column_start":1,"column_end":83}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165364,"byte_end":165391,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"/ # let _: axum::Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165392,"byte_end":165424,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165425,"byte_end":165432,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165821,"byte_end":165832,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"FromFnLayer","qualname":"::middleware::from_fn::FromFnLayer","value":"FromFnLayer {  }","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422}],"decl_id":null,"docs":" A [`tower::Layer`] from an async function.","sig":null,"attributes":[{"value":"/ A [`tower::Layer`] from an async function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165596,"byte_end":165642,"line_start":159,"line_end":159,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165643,"byte_end":165646,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [`tower::Layer`] is used to apply middleware to [`Router`](crate::Router)'s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165647,"byte_end":165727,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165728,"byte_end":165731,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Created with [`from_fn`]. See that function for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165732,"byte_end":165797,"line_start":163,"line_end":163,"column_start":1,"column_end":66}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165798,"byte_end":165809,"line_start":164,"line_end":164,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165999,"byte_end":166004,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"clone","qualname":"<FromFnLayer<F, S, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166301,"byte_end":166306,"line_start":192,"line_end":192,"column_start":8,"column_end":13},"name":"layer","qualname":"<FromFnLayer<F, S, T> as tower::Layer>::layer","value":"fn layer<'_>(&'_ Self, I) -> Self::Service","parent":{"krate":25,"index":240},"children":[],"decl_id":{"krate":25,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166589,"byte_end":166592,"line_start":206,"line_end":206,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FromFnLayer<F, S, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":167036,"byte_end":167042,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::middleware::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":" A middleware created from an async function.","sig":null,"attributes":[{"value":"/ A middleware created from an async function.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166906,"byte_end":166954,"line_start":215,"line_end":215,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166955,"byte_end":166958,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Created with [`from_fn`]. See that function for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166959,"byte_end":167024,"line_start":217,"line_end":217,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":167241,"byte_end":167246,"line_start":231,"line_end":231,"column_start":8,"column_end":13},"name":"clone","qualname":"<FromFn<F, S, I, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170133,"byte_end":170136,"line_start":318,"line_end":318,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FromFn<F, S, I, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170478,"byte_end":170482,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"Next","qualname":"::middleware::from_fn::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":1464}],"decl_id":null,"docs":" The remainder of a middleware stack, including the handler.\n","sig":null,"attributes":[{"value":"/ The remainder of a middleware stack, including the handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170403,"byte_end":170466,"line_start":327,"line_end":327,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170636,"byte_end":170639,"line_start":334,"line_end":334,"column_start":18,"column_end":21},"name":"run","qualname":"<Next<B>>::run","value":"async fn run(Self, Request<B>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Execute the remaining middleware stack.\n","sig":null,"attributes":[{"value":"/ Execute the remaining middleware stack.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170575,"byte_end":170618,"line_start":333,"line_end":333,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170849,"byte_end":170852,"line_start":343,"line_end":343,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Next<B> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171050,"byte_end":171055,"line_start":351,"line_end":351,"column_start":8,"column_end":13},"name":"clone","qualname":"<Next<B> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171348,"byte_end":171358,"line_start":363,"line_end":363,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Next<B> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171475,"byte_end":171479,"line_start":367,"line_end":367,"column_start":8,"column_end":12},"name":"call","qualname":"<Next<B> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171611,"byte_end":171625,"line_start":373,"line_end":373,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::middleware::from_fn::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1484}],"decl_id":null,"docs":" Response future for [`FromFn`].\n","sig":null,"attributes":[{"value":"/ Response future for [`FromFn`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171564,"byte_end":171599,"line_start":372,"line_end":372,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171761,"byte_end":171765,"line_start":380,"line_end":380,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171936,"byte_end":171939,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ResponseFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175976,"byte_end":175987,"line_start":115,"line_end":115,"column_start":8,"column_end":19},"name":"map_request","qualname":"::middleware::map_request::map_request","value":"fn map_request<F, T>(F) -> MapRequestLayer<F, (), T>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an async function that transforms a request.","sig":null,"attributes":[{"value":"/ Create a middleware from an async function that transforms a request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173398,"byte_end":173471,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173472,"byte_end":173475,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This differs from [`tower::util::MapRequest`] in that it allows you to easily run axum-specific","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173476,"byte_end":173575,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ extractors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173576,"byte_end":173591,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173592,"byte_end":173595,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173596,"byte_end":173609,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173610,"byte_end":173613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173614,"byte_end":173621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173622,"byte_end":173637,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173638,"byte_end":173653,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173654,"byte_end":173675,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/     middleware::map_request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173676,"byte_end":173708,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173709,"byte_end":173731,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173732,"byte_end":173738,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173739,"byte_end":173742,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ async fn set_header<B>(mut request: Request<B>) -> Request<B> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173743,"byte_end":173810,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/     request.headers_mut().insert(\"x-foo\", \"foo\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173811,"byte_end":173881,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/     request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173882,"byte_end":173897,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173898,"byte_end":173903,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173904,"byte_end":173907,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ async fn handler<B>(request: Request<B>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173908,"byte_end":173954,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/     // `request` will have an `x-foo` header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":173955,"byte_end":174003,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174004,"byte_end":174009,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174010,"byte_end":174013,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174014,"byte_end":174041,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(handler))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174042,"byte_end":174075,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/     .layer(map_request(set_header));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174076,"byte_end":174116,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174117,"byte_end":174143,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174144,"byte_end":174151,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174152,"byte_end":174155,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Rejecting the request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174156,"byte_end":174183,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174184,"byte_end":174187,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The function given to `map_request` is allowed to also return a `Result` which can be used to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174188,"byte_end":174285,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ reject the request and return a response immediately, without calling the remaining","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174286,"byte_end":174373,"line_start":50,"line_end":50,"column_start":1,"column_end":88}},{"value":"/ middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174374,"byte_end":174389,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174390,"byte_end":174393,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Specifically the valid return types are:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174394,"byte_end":174438,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174439,"byte_end":174442,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `Request<B>`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174443,"byte_end":174461,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ - `Result<Request<B>, E> where E:  IntoResponse`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174462,"byte_end":174514,"line_start":56,"line_end":56,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174515,"byte_end":174518,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174519,"byte_end":174526,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174527,"byte_end":174542,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174543,"byte_end":174558,"line_start":60,"line_end":60,"column_start":1,"column_end":16}},{"value":"/     http::{Request, StatusCode},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174559,"byte_end":174595,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174596,"byte_end":174617,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/     middleware::map_request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174618,"byte_end":174650,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174651,"byte_end":174657,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174658,"byte_end":174661,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ async fn auth<B>(request: Request<B>) -> Result<Request<B>, StatusCode> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174662,"byte_end":174739,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/     let auth_header = request.headers()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174740,"byte_end":174783,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/         .get(http::header::AUTHORIZATION)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174784,"byte_end":174829,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"/         .and_then(|header| header.to_str().ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174830,"byte_end":174883,"line_start":69,"line_end":69,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174884,"byte_end":174887,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     match auth_header {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174888,"byte_end":174915,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/         Some(auth_header) if token_is_valid(auth_header) => Ok(request),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174916,"byte_end":174992,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/         _ => Err(StatusCode::UNAUTHORIZED),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":174993,"byte_end":175040,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175041,"byte_end":175050,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175051,"byte_end":175056,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175057,"byte_end":175060,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ fn token_is_valid(token: &str) -> bool {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175061,"byte_end":175105,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175106,"byte_end":175120,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/     # false","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175121,"byte_end":175136,"line_start":79,"line_end":79,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175137,"byte_end":175142,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175143,"byte_end":175146,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175147,"byte_end":175174,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175175,"byte_end":175223,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"/     .route_layer(map_request(auth));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175224,"byte_end":175264,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/ # let app: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175265,"byte_end":175293,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175294,"byte_end":175301,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175302,"byte_end":175305,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Running extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175306,"byte_end":175330,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175331,"byte_end":175334,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175335,"byte_end":175342,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175343,"byte_end":175358,"line_start":91,"line_end":91,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175359,"byte_end":175374,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175375,"byte_end":175396,"line_start":93,"line_end":93,"column_start":1,"column_end":22}},{"value":"/     middleware::map_request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175397,"byte_end":175429,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/     extract::Path,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175430,"byte_end":175452,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175453,"byte_end":175475,"line_start":96,"line_end":96,"column_start":1,"column_end":23}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175476,"byte_end":175482,"line_start":97,"line_end":97,"column_start":1,"column_end":7}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175483,"byte_end":175517,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175518,"byte_end":175521,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ async fn log_path_params<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175522,"byte_end":175554,"line_start":100,"line_end":100,"column_start":1,"column_end":33}},{"value":"/     Path(path_params): Path<HashMap<String, String>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175555,"byte_end":175612,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/     request: Request<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175613,"byte_end":175641,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/ ) -> Request<B> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175642,"byte_end":175663,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/     tracing::debug!(?path_params);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175664,"byte_end":175702,"line_start":104,"line_end":104,"column_start":1,"column_end":39}},{"value":"/     request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175703,"byte_end":175718,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175719,"byte_end":175724,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175725,"byte_end":175728,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175729,"byte_end":175756,"line_start":108,"line_end":108,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175757,"byte_end":175805,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"/     .layer(map_request(log_path_params));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175806,"byte_end":175851,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175852,"byte_end":175878,"line_start":111,"line_end":111,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175879,"byte_end":175886,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175887,"byte_end":175890,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that to access state you must use either [`map_request_with_state`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":175891,"byte_end":175968,"line_start":114,"line_end":114,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177156,"byte_end":177178,"line_start":157,"line_end":157,"column_start":8,"column_end":30},"name":"map_request_with_state","qualname":"::middleware::map_request::map_request_with_state","value":"fn map_request_with_state<F, S, T>(S, F) -> MapRequestLayer<F, S, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an async function that transforms a request, with the given state.","sig":null,"attributes":[{"value":"/ Create a middleware from an async function that transforms a request, with the given state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176068,"byte_end":176163,"line_start":119,"line_end":119,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176164,"byte_end":176167,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ See [`State`](crate::extract::State) for more details about accessing state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176168,"byte_end":176248,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176249,"byte_end":176252,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176253,"byte_end":176266,"line_start":123,"line_end":123,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176267,"byte_end":176270,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176271,"byte_end":176282,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176283,"byte_end":176298,"line_start":126,"line_end":126,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176299,"byte_end":176314,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"/     http::{Request, StatusCode},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176315,"byte_end":176351,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176352,"byte_end":176373,"line_start":129,"line_end":129,"column_start":1,"column_end":22}},{"value":"/     response::IntoResponse,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176374,"byte_end":176405,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/     middleware::map_request_with_state,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176406,"byte_end":176449,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/     extract::State,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176450,"byte_end":176473,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176474,"byte_end":176480,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176481,"byte_end":176484,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176485,"byte_end":176505,"line_start":135,"line_end":135,"column_start":1,"column_end":21}},{"value":"/ struct AppState { /* ... */ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176506,"byte_end":176539,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176540,"byte_end":176543,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ async fn my_middleware<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176544,"byte_end":176574,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/     State(state): State<AppState>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176575,"byte_end":176613,"line_start":139,"line_end":139,"column_start":1,"column_end":39}},{"value":"/     // you can add more extractors here but the last","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176614,"byte_end":176670,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/     // extractor must implement `FromRequest` which","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176671,"byte_end":176726,"line_start":141,"line_end":141,"column_start":1,"column_end":56}},{"value":"/     // `Request` does","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176727,"byte_end":176752,"line_start":142,"line_end":142,"column_start":1,"column_end":26}},{"value":"/     request: Request<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176753,"byte_end":176781,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ ) -> Request<B> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176782,"byte_end":176803,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/     // do something with `state` and `request`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176804,"byte_end":176857,"line_start":145,"line_end":145,"column_start":1,"column_end":54}},{"value":"/     request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176858,"byte_end":176873,"line_start":146,"line_end":146,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176874,"byte_end":176879,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176880,"byte_end":176883,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let state = AppState { /* ... */ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176884,"byte_end":176923,"line_start":149,"line_end":149,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176924,"byte_end":176927,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176928,"byte_end":176955,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":176956,"byte_end":177004,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .route_layer(map_request_with_state(state.clone(), my_middleware))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177005,"byte_end":177079,"line_start":153,"line_end":153,"column_start":1,"column_end":75}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177080,"byte_end":177107,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/ # let _: axum::Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177108,"byte_end":177140,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177141,"byte_end":177148,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177494,"byte_end":177509,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"MapRequestLayer","qualname":"::middleware::map_request::MapRequestLayer","value":"MapRequestLayer {  }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"decl_id":null,"docs":" A [`tower::Layer`] from an async function that transforms a request.","sig":null,"attributes":[{"value":"/ A [`tower::Layer`] from an async function that transforms a request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177324,"byte_end":177396,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177397,"byte_end":177400,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Created with [`map_request`]. See that function for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177401,"byte_end":177470,"line_start":167,"line_end":167,"column_start":1,"column_end":70}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177471,"byte_end":177482,"line_start":168,"line_end":168,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177680,"byte_end":177685,"line_start":180,"line_end":180,"column_start":8,"column_end":13},"name":"clone","qualname":"<MapRequestLayer<F, S, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177990,"byte_end":177995,"line_start":196,"line_end":196,"column_start":8,"column_end":13},"name":"layer","qualname":"<MapRequestLayer<F, S, T> as tower::Layer>::layer","value":"fn layer<'_>(&'_ Self, I) -> Self::Service","parent":{"krate":25,"index":240},"children":[],"decl_id":{"krate":25,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178286,"byte_end":178289,"line_start":210,"line_end":210,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MapRequestLayer<F, S, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178767,"byte_end":178777,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"MapRequest","qualname":"::middleware::map_request::MapRequest","value":"MapRequest {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"decl_id":null,"docs":" A middleware created from an async function that transforms a request.","sig":null,"attributes":[{"value":"/ A middleware created from an async function that transforms a request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178607,"byte_end":178681,"line_start":219,"line_end":219,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178682,"byte_end":178685,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Created with [`map_request`]. See that function for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178686,"byte_end":178755,"line_start":221,"line_end":221,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178980,"byte_end":178985,"line_start":235,"line_end":235,"column_start":8,"column_end":13},"name":"clone","qualname":"<MapRequest<F, S, I, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":181892,"byte_end":181895,"line_start":323,"line_end":323,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MapRequest<F, S, I, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182212,"byte_end":182226,"line_start":333,"line_end":333,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::middleware::map_request::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1597}],"decl_id":null,"docs":" Response future for [`MapRequest`].\n","sig":null,"attributes":[{"value":"/ Response future for [`MapRequest`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182161,"byte_end":182200,"line_start":332,"line_end":332,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182362,"byte_end":182366,"line_start":340,"line_end":340,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182537,"byte_end":182540,"line_start":346,"line_end":346,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ResponseFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182737,"byte_end":182743,"line_start":354,"line_end":354,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::middleware::map_request::private::Sealed","value":"Sealed<B>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183069,"byte_end":183089,"line_start":363,"line_end":363,"column_start":11,"column_end":31},"name":"IntoMapRequestResult","qualname":"::middleware::map_request::IntoMapRequestResult","value":"IntoMapRequestResult<B>: private::Sealed<B>","parent":null,"children":[{"krate":0,"index":1620}],"decl_id":null,"docs":" Trait implemented by types that can be returned from [`map_request`],\n [`map_request_with_state`].","sig":null,"attributes":[{"value":"/ Trait implemented by types that can be returned from [`map_request`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182869,"byte_end":182942,"line_start":359,"line_end":359,"column_start":1,"column_end":74}},{"value":"/ [`map_request_with_state`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182943,"byte_end":182974,"line_start":360,"line_end":360,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182975,"byte_end":182978,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed such that it cannot be implemented outside this crate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182979,"byte_end":183058,"line_start":362,"line_end":362,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183154,"byte_end":183177,"line_start":365,"line_end":365,"column_start":8,"column_end":31},"name":"into_map_request_result","qualname":"::middleware::map_request::IntoMapRequestResult::into_map_request_result","value":"fn into_map_request_result(Self) -> Result<Request<B>, Response>","parent":{"krate":0,"index":1618},"children":[],"decl_id":null,"docs":" Perform the conversion.\n","sig":null,"attributes":[{"value":"/ Perform the conversion.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183119,"byte_end":183146,"line_start":364,"line_end":364,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183317,"byte_end":183340,"line_start":372,"line_end":372,"column_start":8,"column_end":31},"name":"into_map_request_result","qualname":"<Result<Request<B>, E> as middleware::map_request::IntoMapRequestResult>::into_map_request_result","value":"fn into_map_request_result(Self) -> Result<Request<B>, Response>","parent":{"krate":0,"index":1618},"children":[],"decl_id":{"krate":0,"index":1620},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183496,"byte_end":183519,"line_start":378,"line_end":378,"column_start":8,"column_end":31},"name":"into_map_request_result","qualname":"<Request<B> as middleware::map_request::IntoMapRequestResult>::into_map_request_result","value":"fn into_map_request_result(Self) -> Result<Request<B>, Response>","parent":{"krate":0,"index":1618},"children":[],"decl_id":{"krate":0,"index":1620},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187579,"byte_end":187591,"line_start":99,"line_end":99,"column_start":8,"column_end":20},"name":"map_response","qualname":"::middleware::map_response::map_response","value":"fn map_response<F, T>(F) -> MapResponseLayer<F, (), T>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an async function that transforms a response.","sig":null,"attributes":[{"value":"/ Create a middleware from an async function that transforms a response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185464,"byte_end":185538,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185539,"byte_end":185542,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This differs from [`tower::util::MapResponse`] in that it allows you to easily run axum-specific","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185543,"byte_end":185643,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/ extractors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185644,"byte_end":185659,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185660,"byte_end":185663,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185664,"byte_end":185677,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185678,"byte_end":185681,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185682,"byte_end":185689,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185690,"byte_end":185705,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185706,"byte_end":185721,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185722,"byte_end":185743,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/     middleware::map_response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185744,"byte_end":185777,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/     response::Response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185778,"byte_end":185805,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185806,"byte_end":185812,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185813,"byte_end":185816,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ async fn set_header<B>(mut response: Response<B>) -> Response<B> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185817,"byte_end":185887,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/     response.headers_mut().insert(\"x-foo\", \"foo\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185888,"byte_end":185959,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/     response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185960,"byte_end":185976,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185977,"byte_end":185982,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185983,"byte_end":185986,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":185987,"byte_end":186014,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186015,"byte_end":186063,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/     .layer(map_response(set_header));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186064,"byte_end":186105,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186106,"byte_end":186132,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186133,"byte_end":186140,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186141,"byte_end":186144,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Running extractors","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186145,"byte_end":186169,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186170,"byte_end":186173,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ It is also possible to run extractors that implement [`FromRequestParts`]. These will be run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186174,"byte_end":186270,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ before calling the handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186271,"byte_end":186302,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186303,"byte_end":186306,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186307,"byte_end":186314,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186315,"byte_end":186330,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186331,"byte_end":186346,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186347,"byte_end":186368,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     middleware::map_response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186369,"byte_end":186402,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     extract::Path,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186403,"byte_end":186425,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/     response::Response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186426,"byte_end":186453,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186454,"byte_end":186460,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186461,"byte_end":186495,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186496,"byte_end":186499,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ async fn log_path_params<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186500,"byte_end":186532,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/     Path(path_params): Path<HashMap<String, String>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186533,"byte_end":186590,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/     response: Response<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186591,"byte_end":186621,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ ) -> Response<B> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186622,"byte_end":186644,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/     tracing::debug!(?path_params);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186645,"byte_end":186683,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186684,"byte_end":186700,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186701,"byte_end":186706,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186707,"byte_end":186710,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186711,"byte_end":186738,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186739,"byte_end":186787,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/     .layer(map_response(log_path_params));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186788,"byte_end":186834,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186835,"byte_end":186861,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186862,"byte_end":186869,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186870,"byte_end":186873,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Note that to access state you must use either [`map_response_with_state`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186874,"byte_end":186952,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186953,"byte_end":186956,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Returning any `impl IntoResponse`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186957,"byte_end":186996,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":186997,"byte_end":187000,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ It is also possible to return anything that implements [`IntoResponse`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187001,"byte_end":187076,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187077,"byte_end":187080,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187081,"byte_end":187088,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187089,"byte_end":187104,"line_start":79,"line_end":79,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187105,"byte_end":187120,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187121,"byte_end":187142,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     middleware::map_response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187143,"byte_end":187176,"line_start":82,"line_end":82,"column_start":1,"column_end":34}},{"value":"/     response::{Response, IntoResponse},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187177,"byte_end":187220,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187221,"byte_end":187227,"line_start":84,"line_end":84,"column_start":1,"column_end":7}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187228,"byte_end":187262,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187263,"byte_end":187266,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ async fn set_header(response: Response) -> impl IntoResponse {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187267,"byte_end":187333,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/     (","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187334,"byte_end":187343,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/         [(\"x-foo\", \"foo\")],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187344,"byte_end":187375,"line_start":89,"line_end":89,"column_start":1,"column_end":32}},{"value":"/         response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187376,"byte_end":187397,"line_start":90,"line_end":90,"column_start":1,"column_end":22}},{"value":"/     )","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187398,"byte_end":187407,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187408,"byte_end":187413,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187414,"byte_end":187417,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187418,"byte_end":187445,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187446,"byte_end":187494,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/     .layer(map_response(set_header));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187495,"byte_end":187536,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ # let _: Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187537,"byte_end":187563,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187564,"byte_end":187571,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188758,"byte_end":188781,"line_start":141,"line_end":141,"column_start":8,"column_end":31},"name":"map_response_with_state","qualname":"::middleware::map_response::map_response_with_state","value":"fn map_response_with_state<F, S, T>(S, F) -> MapResponseLayer<F, S, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a middleware from an async function that transforms a response, with the given state.","sig":null,"attributes":[{"value":"/ Create a middleware from an async function that transforms a response, with the given state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187674,"byte_end":187770,"line_start":103,"line_end":103,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187771,"byte_end":187774,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ See [`State`](crate::extract::State) for more details about accessing state.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187775,"byte_end":187855,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187856,"byte_end":187859,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187860,"byte_end":187873,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187874,"byte_end":187877,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187878,"byte_end":187889,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187890,"byte_end":187905,"line_start":110,"line_end":110,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187906,"byte_end":187921,"line_start":111,"line_end":111,"column_start":1,"column_end":16}},{"value":"/     http::StatusCode,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187922,"byte_end":187947,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187948,"byte_end":187969,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/     response::Response,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187970,"byte_end":187997,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/     middleware::map_response_with_state,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":187998,"byte_end":188042,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/     extract::State,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188043,"byte_end":188066,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188067,"byte_end":188073,"line_start":117,"line_end":117,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188074,"byte_end":188077,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188078,"byte_end":188098,"line_start":119,"line_end":119,"column_start":1,"column_end":21}},{"value":"/ struct AppState { /* ... */ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188099,"byte_end":188132,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188133,"byte_end":188136,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ async fn my_middleware<B>(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188137,"byte_end":188167,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/     State(state): State<AppState>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188168,"byte_end":188206,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/     // you can add more extractors here but they must","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188207,"byte_end":188264,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/     // all implement `FromRequestParts`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188265,"byte_end":188308,"line_start":125,"line_end":125,"column_start":1,"column_end":44}},{"value":"/     // `FromRequest` is not allowed","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188309,"byte_end":188348,"line_start":126,"line_end":126,"column_start":1,"column_end":40}},{"value":"/     response: Response<B>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188349,"byte_end":188379,"line_start":127,"line_end":127,"column_start":1,"column_end":31}},{"value":"/ ) -> Response<B> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188380,"byte_end":188402,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"/     // do something with `state` and `response`...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188403,"byte_end":188457,"line_start":129,"line_end":129,"column_start":1,"column_end":55}},{"value":"/     response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188458,"byte_end":188474,"line_start":130,"line_end":130,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188475,"byte_end":188480,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188481,"byte_end":188484,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let state = AppState { /* ... */ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188485,"byte_end":188524,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188525,"byte_end":188528,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188529,"byte_end":188556,"line_start":135,"line_end":135,"column_start":1,"column_end":28}},{"value":"/     .route(\"/\", get(|| async { /* ... */ }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188557,"byte_end":188605,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/     .route_layer(map_response_with_state(state.clone(), my_middleware))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188606,"byte_end":188681,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/     .with_state(state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188682,"byte_end":188709,"line_start":138,"line_end":138,"column_start":1,"column_end":28}},{"value":"/ # let _: axum::Router = app;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188710,"byte_end":188742,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188743,"byte_end":188750,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189101,"byte_end":189117,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"MapResponseLayer","qualname":"::middleware::map_response::MapResponseLayer","value":"MapResponseLayer {  }","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690}],"decl_id":null,"docs":" A [`tower::Layer`] from an async function that transforms a response.","sig":null,"attributes":[{"value":"/ A [`tower::Layer`] from an async function that transforms a response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":188929,"byte_end":189002,"line_start":149,"line_end":149,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189003,"byte_end":189006,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Created with [`map_response`]. See that function for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189007,"byte_end":189077,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189078,"byte_end":189089,"line_start":152,"line_end":152,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189289,"byte_end":189294,"line_start":164,"line_end":164,"column_start":8,"column_end":13},"name":"clone","qualname":"<MapResponseLayer<F, S, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189601,"byte_end":189606,"line_start":180,"line_end":180,"column_start":8,"column_end":13},"name":"layer","qualname":"<MapResponseLayer<F, S, T> as tower::Layer>::layer","value":"fn layer<'_>(&'_ Self, I) -> Self::Service","parent":{"krate":25,"index":240},"children":[],"decl_id":{"krate":25,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189899,"byte_end":189902,"line_start":194,"line_end":194,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MapResponseLayer<F, S, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190383,"byte_end":190394,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"MapResponse","qualname":"::middleware::map_response::MapResponse","value":"MapResponse {  }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"decl_id":null,"docs":" A middleware created from an async function that transforms a response.","sig":null,"attributes":[{"value":"/ A middleware created from an async function that transforms a response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190221,"byte_end":190296,"line_start":203,"line_end":203,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190297,"byte_end":190300,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ Created with [`map_response`]. See that function for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190301,"byte_end":190371,"line_start":205,"line_end":205,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190598,"byte_end":190603,"line_start":219,"line_end":219,"column_start":8,"column_end":13},"name":"clone","qualname":"<MapResponse<F, S, I, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":193980,"byte_end":193983,"line_start":316,"line_end":316,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MapResponse<F, S, I, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194302,"byte_end":194316,"line_start":326,"line_end":326,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::middleware::map_response::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1731}],"decl_id":null,"docs":" Response future for [`MapResponse`].\n","sig":null,"attributes":[{"value":"/ Response future for [`MapResponse`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194250,"byte_end":194290,"line_start":325,"line_end":325,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194452,"byte_end":194456,"line_start":333,"line_end":333,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194627,"byte_end":194630,"line_start":339,"line_end":339,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ResponseFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150440,"byte_end":150446,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"future","qualname":"::middleware::future","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","parent":null,"children":[{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808}],"decl_id":null,"docs":" Future types.\n","sig":null,"attributes":[{"value":"/ Future types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/mod.rs","byte_start":150453,"byte_end":150470,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response","qualname":"::response","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":5529},{"krate":0,"index":5533},{"krate":0,"index":5536},{"krate":0,"index":5538},{"krate":0,"index":1879},{"krate":0,"index":1882}],"decl_id":null,"docs":"Types and traits for generating responses.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5522},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202392,"byte_end":202400,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"Redirect","qualname":"::response::redirect::Redirect","value":"Redirect {  }","parent":null,"children":[{"krate":0,"index":5523},{"krate":0,"index":5524}],"decl_id":null,"docs":" Response that redirects the request to another location.","sig":null,"attributes":[{"value":"/ Response that redirects the request to another location.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201792,"byte_end":201852,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201853,"byte_end":201856,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201857,"byte_end":201870,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201871,"byte_end":201874,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201875,"byte_end":201886,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201887,"byte_end":201902,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201903,"byte_end":201924,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/     response::Redirect,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201925,"byte_end":201952,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201953,"byte_end":201968,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201969,"byte_end":201975,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201976,"byte_end":201979,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let app = Router::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":201980,"byte_end":202007,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/     .route(\"/old\", get(|| async { Redirect::permanent(\"/new\") }))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202008,"byte_end":202077,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/     .route(\"/new\", get(|| async { \"Hello!\" }));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202078,"byte_end":202129,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202130,"byte_end":202143,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # hyper::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202144,"byte_end":202238,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202239,"byte_end":202247,"line_start":20,"line_end":20,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202248,"byte_end":202255,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"must_use =\n\"needs to be returned from a handler or otherwise turned into a Response to be useful\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202256,"byte_end":202356,"line_start":22,"line_end":22,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203177,"byte_end":203179,"line_start":43,"line_end":43,"column_start":12,"column_end":14},"name":"to","qualname":"<Redirect>::to","value":"fn to<'_>(&'_ str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Redirect`] that uses a [`303 See Other`][mdn] status code.","sig":null,"attributes":[{"value":"/ Create a new [`Redirect`] that uses a [`303 See Other`][mdn] status code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202482,"byte_end":202559,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202564,"byte_end":202567,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This redirect instructs the client to change the method to GET for the subsequent request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202572,"byte_end":202665,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ to the given `uri`, which is useful after successful form submission, file upload or when","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202670,"byte_end":202763,"line_start":33,"line_end":33,"column_start":5,"column_end":98}},{"value":"/ you generally don't want the redirected-to page to observe the original request method and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202768,"byte_end":202862,"line_start":34,"line_end":34,"column_start":5,"column_end":99}},{"value":"/ body (if non-empty). If you want to preserve the request method and body,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202867,"byte_end":202944,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ [`Redirect::temporary`] should be used instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202949,"byte_end":203000,"line_start":36,"line_end":36,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203005,"byte_end":203008,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203013,"byte_end":203025,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203030,"byte_end":203033,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ If `uri` isn't a valid [`HeaderValue`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203038,"byte_end":203081,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203086,"byte_end":203089,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/303","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203094,"byte_end":203165,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203665,"byte_end":203674,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"temporary","qualname":"<Redirect>::temporary","value":"fn temporary<'_>(&'_ str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Redirect`] that uses a [`307 Temporary Redirect`][mdn] status code.","sig":null,"attributes":[{"value":"/ Create a new [`Redirect`] that uses a [`307 Temporary Redirect`][mdn] status code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203271,"byte_end":203357,"line_start":47,"line_end":47,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203362,"byte_end":203365,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This has the same behavior as [`Redirect::to`], except it will preserve the original HTTP","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203370,"byte_end":203463,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/ method and body.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203468,"byte_end":203488,"line_start":50,"line_end":50,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203493,"byte_end":203496,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203501,"byte_end":203513,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203518,"byte_end":203521,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If `uri` isn't a valid [`HeaderValue`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203526,"byte_end":203569,"line_start":54,"line_end":54,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203574,"byte_end":203577,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/307","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203582,"byte_end":203653,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":204038,"byte_end":204047,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"permanent","qualname":"<Redirect>::permanent","value":"fn permanent<'_>(&'_ str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Redirect`] that uses a [`308 Permanent Redirect`][mdn] status code.","sig":null,"attributes":[{"value":"/ Create a new [`Redirect`] that uses a [`308 Permanent Redirect`][mdn] status code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203775,"byte_end":203861,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203866,"byte_end":203869,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203874,"byte_end":203886,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203891,"byte_end":203894,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If `uri` isn't a valid [`HeaderValue`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203899,"byte_end":203942,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203947,"byte_end":203950,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":203955,"byte_end":204026,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":204750,"byte_end":204763,"line_start":90,"line_end":90,"column_start":8,"column_end":21},"name":"into_response","qualname":"<Redirect as axum_core::response::IntoResponse>::into_response","value":"fn into_response(Self) -> Response","parent":{"krate":56,"index":440},"children":[],"decl_id":{"krate":56,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5529},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196111,"byte_end":196115,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"Html","qualname":"::response::Html","value":"","parent":null,"children":[],"decl_id":null,"docs":" An HTML response.","sig":null,"attributes":[{"value":"/ An HTML response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":195978,"byte_end":195999,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196000,"byte_end":196003,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Will automatically get `Content-Type: text/html`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196004,"byte_end":196057,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196088,"byte_end":196099,"line_start":42,"line_end":42,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":5532},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196119,"byte_end":196124,"line_start":43,"line_end":43,"column_start":20,"column_end":25},"name":"0","qualname":"::response::Html::0","value":"T","parent":{"krate":0,"index":5529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196202,"byte_end":196215,"line_start":49,"line_end":49,"column_start":8,"column_end":21},"name":"into_response","qualname":"<Html<T> as axum_core::response::IntoResponse>::into_response","value":"fn into_response(Self) -> Response","parent":{"krate":56,"index":440},"children":[],"decl_id":{"krate":56,"index":441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196501,"byte_end":196505,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"from","qualname":"<Html<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"routing","qualname":"::routing","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1958},{"krate":0,"index":2200},{"krate":0,"index":2229},{"krate":0,"index":2255},{"krate":0,"index":2293},{"krate":0,"index":2428},{"krate":0,"index":2568},{"krate":0,"index":2620},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6005},{"krate":0,"index":6006},{"krate":0,"index":6008},{"krate":0,"index":6009},{"krate":0,"index":6012},{"krate":0,"index":6013},{"krate":0,"index":6015},{"krate":0,"index":6017},{"krate":0,"index":6019},{"krate":0,"index":2718},{"krate":0,"index":2727},{"krate":0,"index":2731},{"krate":0,"index":2735},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2781},{"krate":0,"index":2794},{"krate":0,"index":2806},{"krate":0,"index":2811},{"krate":0,"index":2816},{"krate":0,"index":2825},{"krate":0,"index":2831},{"krate":0,"index":2835},{"krate":0,"index":2839}],"decl_id":null,"docs":" Routing between [`Service`]s and handlers.\n","sig":null,"attributes":[{"value":"/ Routing between [`Service`]s and handlers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":204865,"byte_end":204911,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::routing::future","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/future.rs","parent":null,"children":[{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1955}],"decl_id":null,"docs":" Future types.\n","sig":null,"attributes":[{"value":"/ Future types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/future.rs","byte_start":222466,"byte_end":222483,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"method_routing","qualname":"::routing::method_routing","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":5541},{"krate":0,"index":5545},{"krate":0,"index":5549},{"krate":0,"index":5553},{"krate":0,"index":5557},{"krate":0,"index":5561},{"krate":0,"index":5565},{"krate":0,"index":5569},{"krate":0,"index":2053},{"krate":0,"index":2057},{"krate":0,"index":5573},{"krate":0,"index":5578},{"krate":0,"index":5583},{"krate":0,"index":5588},{"krate":0,"index":5593},{"krate":0,"index":5598},{"krate":0,"index":5603},{"krate":0,"index":5608},{"krate":0,"index":2061},{"krate":0,"index":2066},{"krate":0,"index":2071},{"krate":0,"index":5613},{"krate":0,"index":5621},{"krate":0,"index":5623},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2092},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2148},{"krate":0,"index":2153},{"krate":0,"index":2165},{"krate":0,"index":2177},{"krate":0,"index":2182},{"krate":0,"index":2187},{"krate":0,"index":2195}],"decl_id":null,"docs":" Route to services and handlers based on HTTP methods.\n","sig":null,"attributes":[{"value":"/ Route to services and handlers based on HTTP methods.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":222601,"byte_end":222658,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":5541},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231354,"byte_end":231368,"line_start":291,"line_end":291,"column_start":23,"column_end":37},"name":"delete_service","qualname":"::routing::method_routing::delete_service","value":"fn delete_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `DELETE` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5545},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231401,"byte_end":231412,"line_start":292,"line_end":292,"column_start":23,"column_end":34},"name":"get_service","qualname":"::routing::method_routing::get_service","value":"fn get_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Route `GET` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5549},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231442,"byte_end":231454,"line_start":293,"line_end":293,"column_start":23,"column_end":35},"name":"head_service","qualname":"::routing::method_routing::head_service","value":"fn head_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `HEAD` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231485,"byte_end":231500,"line_start":294,"line_end":294,"column_start":23,"column_end":38},"name":"options_service","qualname":"::routing::method_routing::options_service","value":"fn options_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `OPTIONS` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231534,"byte_end":231547,"line_start":295,"line_end":295,"column_start":23,"column_end":36},"name":"patch_service","qualname":"::routing::method_routing::patch_service","value":"fn patch_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `PATCH` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5561},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231579,"byte_end":231591,"line_start":296,"line_end":296,"column_start":23,"column_end":35},"name":"post_service","qualname":"::routing::method_routing::post_service","value":"fn post_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `POST` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5565},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231622,"byte_end":231633,"line_start":297,"line_end":297,"column_start":23,"column_end":34},"name":"put_service","qualname":"::routing::method_routing::put_service","value":"fn put_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `PUT` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5569},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231663,"byte_end":231676,"line_start":298,"line_end":298,"column_start":23,"column_end":36},"name":"trace_service","qualname":"::routing::method_routing::trace_service","value":"fn trace_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":"Route `TRACE` requests to the given service.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232391,"byte_end":232401,"line_start":325,"line_end":325,"column_start":8,"column_end":18},"name":"on_service","qualname":"::routing::method_routing::on_service","value":"fn on_service<T, S, B>(MethodFilter, T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Route requests with the given method to the service.","sig":null,"attributes":[{"value":"/ Route requests with the given method to the service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231687,"byte_end":231743,"line_start":300,"line_end":300,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231744,"byte_end":231747,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231748,"byte_end":231761,"line_start":302,"line_end":302,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231762,"byte_end":231765,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231766,"byte_end":231777,"line_start":304,"line_end":304,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231778,"byte_end":231793,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231794,"byte_end":231816,"line_start":306,"line_end":306,"column_start":1,"column_end":23}},{"value":"/     routing::on,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231817,"byte_end":231837,"line_start":307,"line_end":307,"column_start":1,"column_end":21}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231838,"byte_end":231853,"line_start":308,"line_end":308,"column_start":1,"column_end":16}},{"value":"/     routing::{MethodFilter, on_service},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231854,"byte_end":231898,"line_start":309,"line_end":309,"column_start":1,"column_end":45}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231899,"byte_end":231905,"line_start":310,"line_end":310,"column_start":1,"column_end":7}},{"value":"/ use http::Response;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231906,"byte_end":231929,"line_start":311,"line_end":311,"column_start":1,"column_end":24}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231930,"byte_end":231963,"line_start":312,"line_end":312,"column_start":1,"column_end":34}},{"value":"/ use hyper::Body;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231964,"byte_end":231984,"line_start":313,"line_end":313,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231985,"byte_end":231988,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ let service = tower::service_fn(|request: Request<Body>| async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231989,"byte_end":232057,"line_start":315,"line_end":315,"column_start":1,"column_end":69}},{"value":"/     Ok::<_, Infallible>(Response::new(Body::empty()))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232058,"byte_end":232115,"line_start":316,"line_end":316,"column_start":1,"column_end":58}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232116,"byte_end":232123,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232124,"byte_end":232127,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ // Requests to `POST /` will go to `service`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232128,"byte_end":232177,"line_start":319,"line_end":319,"column_start":1,"column_end":50}},{"value":"/ let app = Router::new().route(\"/\", on_service(MethodFilter::POST, service));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232178,"byte_end":232258,"line_start":320,"line_end":320,"column_start":1,"column_end":81}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232259,"byte_end":232272,"line_start":321,"line_end":321,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232273,"byte_end":232366,"line_start":322,"line_end":322,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232367,"byte_end":232375,"line_start":323,"line_end":323,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232376,"byte_end":232383,"line_start":324,"line_end":324,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234211,"byte_end":234222,"line_start":389,"line_end":389,"column_start":8,"column_end":19},"name":"any_service","qualname":"::routing::method_routing::any_service","value":"fn any_service<T, S, B>(T) -> MethodRouter<S, B, T::Error> where\nT: Service<Request<B>> + Clone + Send + 'static, T::Response: IntoResponse +\n'static, T::Future: Send + 'static, B: HttpBody + Send + 'static, S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Route requests to the given service regardless of its method.","sig":null,"attributes":[{"value":"/ Route requests to the given service regardless of its method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232705,"byte_end":232770,"line_start":336,"line_end":336,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232771,"byte_end":232774,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232775,"byte_end":232788,"line_start":338,"line_end":338,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232789,"byte_end":232792,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232793,"byte_end":232804,"line_start":340,"line_end":340,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232805,"byte_end":232820,"line_start":341,"line_end":341,"column_start":1,"column_end":16}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232821,"byte_end":232843,"line_start":342,"line_end":342,"column_start":1,"column_end":23}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232844,"byte_end":232859,"line_start":343,"line_end":343,"column_start":1,"column_end":16}},{"value":"/     routing::any_service,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232860,"byte_end":232889,"line_start":344,"line_end":344,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232890,"byte_end":232896,"line_start":345,"line_end":345,"column_start":1,"column_end":7}},{"value":"/ use http::Response;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232897,"byte_end":232920,"line_start":346,"line_end":346,"column_start":1,"column_end":24}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232921,"byte_end":232954,"line_start":347,"line_end":347,"column_start":1,"column_end":34}},{"value":"/ use hyper::Body;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232955,"byte_end":232975,"line_start":348,"line_end":348,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232976,"byte_end":232979,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ let service = tower::service_fn(|request: Request<Body>| async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":232980,"byte_end":233048,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/     Ok::<_, Infallible>(Response::new(Body::empty()))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233049,"byte_end":233106,"line_start":351,"line_end":351,"column_start":1,"column_end":58}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233107,"byte_end":233114,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233115,"byte_end":233118,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ // All requests to `/` will go to `service`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233119,"byte_end":233167,"line_start":354,"line_end":354,"column_start":1,"column_end":49}},{"value":"/ let app = Router::new().route(\"/\", any_service(service));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233168,"byte_end":233229,"line_start":355,"line_end":355,"column_start":1,"column_end":62}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233230,"byte_end":233243,"line_start":356,"line_end":356,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233244,"byte_end":233337,"line_start":357,"line_end":357,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233338,"byte_end":233346,"line_start":358,"line_end":358,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233347,"byte_end":233354,"line_start":359,"line_end":359,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233355,"byte_end":233358,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ Additional methods can still be chained:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233359,"byte_end":233403,"line_start":361,"line_end":361,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233404,"byte_end":233407,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233408,"byte_end":233419,"line_start":363,"line_end":363,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233420,"byte_end":233435,"line_start":364,"line_end":364,"column_start":1,"column_end":16}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233436,"byte_end":233458,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233459,"byte_end":233474,"line_start":366,"line_end":366,"column_start":1,"column_end":16}},{"value":"/     routing::any_service,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233475,"byte_end":233504,"line_start":367,"line_end":367,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233505,"byte_end":233511,"line_start":368,"line_end":368,"column_start":1,"column_end":7}},{"value":"/ use http::Response;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233512,"byte_end":233535,"line_start":369,"line_end":369,"column_start":1,"column_end":24}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233536,"byte_end":233569,"line_start":370,"line_end":370,"column_start":1,"column_end":34}},{"value":"/ use hyper::Body;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233570,"byte_end":233590,"line_start":371,"line_end":371,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233591,"byte_end":233594,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ let service = tower::service_fn(|request: Request<Body>| async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233595,"byte_end":233663,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/     # Ok::<_, Infallible>(Response::new(Body::empty()))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233664,"byte_end":233723,"line_start":374,"line_end":374,"column_start":1,"column_end":60}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233724,"byte_end":233738,"line_start":375,"line_end":375,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233739,"byte_end":233746,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233747,"byte_end":233750,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ let other_service = tower::service_fn(|request: Request<Body>| async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233751,"byte_end":233825,"line_start":378,"line_end":378,"column_start":1,"column_end":75}},{"value":"/     # Ok::<_, Infallible>(Response::new(Body::empty()))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233826,"byte_end":233885,"line_start":379,"line_end":379,"column_start":1,"column_end":60}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233886,"byte_end":233900,"line_start":380,"line_end":380,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233901,"byte_end":233908,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233909,"byte_end":233912,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ // `POST /` goes to `other_service`. All other requests go to `service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233913,"byte_end":233988,"line_start":383,"line_end":383,"column_start":1,"column_end":76}},{"value":"/ let app = Router::new().route(\"/\", any_service(service).post_service(other_service));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":233989,"byte_end":234078,"line_start":384,"line_end":384,"column_start":1,"column_end":90}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234079,"byte_end":234092,"line_start":385,"line_end":385,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234093,"byte_end":234186,"line_start":386,"line_end":386,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234187,"byte_end":234195,"line_start":387,"line_end":387,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234196,"byte_end":234203,"line_start":388,"line_end":388,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5573},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234562,"byte_end":234568,"line_start":402,"line_end":402,"column_start":23,"column_end":29},"name":"delete","qualname":"::routing::method_routing::delete","value":"fn delete<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `DELETE` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5578},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234601,"byte_end":234604,"line_start":403,"line_end":403,"column_start":23,"column_end":26},"name":"get","qualname":"::routing::method_routing::get","value":"fn get<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Route `GET` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5583},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234634,"byte_end":234638,"line_start":404,"line_end":404,"column_start":23,"column_end":27},"name":"head","qualname":"::routing::method_routing::head","value":"fn head<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `HEAD` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5588},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234669,"byte_end":234676,"line_start":405,"line_end":405,"column_start":23,"column_end":30},"name":"options","qualname":"::routing::method_routing::options","value":"fn options<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `OPTIONS` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234710,"byte_end":234715,"line_start":406,"line_end":406,"column_start":23,"column_end":28},"name":"patch","qualname":"::routing::method_routing::patch","value":"fn patch<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `PATCH` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234747,"byte_end":234751,"line_start":407,"line_end":407,"column_start":23,"column_end":27},"name":"post","qualname":"::routing::method_routing::post","value":"fn post<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `POST` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5603},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234782,"byte_end":234785,"line_start":408,"line_end":408,"column_start":23,"column_end":26},"name":"put","qualname":"::routing::method_routing::put","value":"fn put<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `PUT` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5608},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234815,"byte_end":234820,"line_start":409,"line_end":409,"column_start":23,"column_end":28},"name":"trace","qualname":"::routing::method_routing::trace","value":"fn trace<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Route `TRACE` requests to the given handler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235302,"byte_end":235304,"line_start":430,"line_end":430,"column_start":8,"column_end":10},"name":"on","qualname":"::routing::method_routing::on","value":"fn on<H, T, S, B>(MethodFilter, H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Route requests with the given method to the handler.","sig":null,"attributes":[{"value":"/ Route requests with the given method to the handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234831,"byte_end":234887,"line_start":411,"line_end":411,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234888,"byte_end":234891,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234892,"byte_end":234905,"line_start":413,"line_end":413,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234906,"byte_end":234909,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234910,"byte_end":234921,"line_start":415,"line_end":415,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234922,"byte_end":234937,"line_start":416,"line_end":416,"column_start":1,"column_end":16}},{"value":"/     routing::on,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234938,"byte_end":234958,"line_start":417,"line_end":417,"column_start":1,"column_end":21}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234959,"byte_end":234974,"line_start":418,"line_end":418,"column_start":1,"column_end":16}},{"value":"/     routing::MethodFilter,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":234975,"byte_end":235005,"line_start":419,"line_end":419,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235006,"byte_end":235012,"line_start":420,"line_end":420,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235013,"byte_end":235016,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ async fn handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235017,"byte_end":235042,"line_start":422,"line_end":422,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235043,"byte_end":235046,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ // Requests to `POST /` will go to `handler`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235047,"byte_end":235096,"line_start":424,"line_end":424,"column_start":1,"column_end":50}},{"value":"/ let app = Router::new().route(\"/\", on(MethodFilter::POST, handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235097,"byte_end":235169,"line_start":425,"line_end":425,"column_start":1,"column_end":73}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235170,"byte_end":235183,"line_start":426,"line_end":426,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235184,"byte_end":235277,"line_start":427,"line_end":427,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235278,"byte_end":235286,"line_start":428,"line_end":428,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235287,"byte_end":235294,"line_start":429,"line_end":429,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236456,"byte_end":236459,"line_start":477,"line_end":477,"column_start":8,"column_end":11},"name":"any","qualname":"::routing::method_routing::any","value":"fn any<H, T, S, B>(H) -> MethodRouter<S, B, Infallible> where\nH: Handler<T, S, B>, B: HttpBody + Send + 'static, T: 'static, S: Clone +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Route requests with the given handler regardless of the method.","sig":null,"attributes":[{"value":"/ Route requests with the given handler regardless of the method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235553,"byte_end":235620,"line_start":440,"line_end":440,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235621,"byte_end":235624,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235625,"byte_end":235638,"line_start":442,"line_end":442,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235639,"byte_end":235642,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235643,"byte_end":235654,"line_start":444,"line_end":444,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235655,"byte_end":235670,"line_start":445,"line_end":445,"column_start":1,"column_end":16}},{"value":"/     routing::any,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235671,"byte_end":235692,"line_start":446,"line_end":446,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235693,"byte_end":235708,"line_start":447,"line_end":447,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235709,"byte_end":235715,"line_start":448,"line_end":448,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235716,"byte_end":235719,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ async fn handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235720,"byte_end":235745,"line_start":450,"line_end":450,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235746,"byte_end":235749,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ // All requests to `/` will go to `handler`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235750,"byte_end":235798,"line_start":452,"line_end":452,"column_start":1,"column_end":49}},{"value":"/ let app = Router::new().route(\"/\", any(handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235799,"byte_end":235852,"line_start":453,"line_end":453,"column_start":1,"column_end":54}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235853,"byte_end":235866,"line_start":454,"line_end":454,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235867,"byte_end":235960,"line_start":455,"line_end":455,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235961,"byte_end":235969,"line_start":456,"line_end":456,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235970,"byte_end":235977,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235978,"byte_end":235981,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ Additional methods can still be chained:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":235982,"byte_end":236026,"line_start":459,"line_end":459,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236027,"byte_end":236030,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236031,"byte_end":236042,"line_start":461,"line_end":461,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236043,"byte_end":236058,"line_start":462,"line_end":462,"column_start":1,"column_end":16}},{"value":"/     routing::any,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236059,"byte_end":236080,"line_start":463,"line_end":463,"column_start":1,"column_end":22}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236081,"byte_end":236096,"line_start":464,"line_end":464,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236097,"byte_end":236103,"line_start":465,"line_end":465,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236104,"byte_end":236107,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ async fn handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236108,"byte_end":236133,"line_start":467,"line_end":467,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236134,"byte_end":236137,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ async fn other_handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236138,"byte_end":236169,"line_start":469,"line_end":469,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236170,"byte_end":236173,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ // `POST /` goes to `other_handler`. All other requests go to `handler`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236174,"byte_end":236249,"line_start":471,"line_end":471,"column_start":1,"column_end":76}},{"value":"/ let app = Router::new().route(\"/\", any(handler).post(other_handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236250,"byte_end":236323,"line_start":472,"line_end":472,"column_start":1,"column_end":74}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236324,"byte_end":236337,"line_start":473,"line_end":473,"column_start":1,"column_end":14}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236338,"byte_end":236431,"line_start":474,"line_end":474,"column_start":1,"column_end":94}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236432,"byte_end":236440,"line_start":475,"line_end":475,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236441,"byte_end":236448,"line_start":476,"line_end":476,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237827,"byte_end":237839,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"name":"MethodRouter","qualname":"::routing::method_routing::MethodRouter","value":"MethodRouter {  }","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084}],"decl_id":null,"docs":" A [`Service`] that accepts requests based on a [`MethodFilter`] and\n allows chaining additional handlers and services.","sig":null,"attributes":[{"value":"/ A [`Service`] that accepts requests based on a [`MethodFilter`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236704,"byte_end":236775,"line_start":487,"line_end":487,"column_start":1,"column_end":72}},{"value":"/ allows chaining additional handlers and services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236776,"byte_end":236829,"line_start":488,"line_end":488,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236830,"byte_end":236833,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ # When does `MethodRouter` implement [`Service`]?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236834,"byte_end":236887,"line_start":490,"line_end":490,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236888,"byte_end":236891,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ Whether or not `MethodRouter` implements [`Service`] depends on the state type it requires.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236892,"byte_end":236987,"line_start":492,"line_end":492,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236988,"byte_end":236991,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":236992,"byte_end":236999,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/ use tower::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237000,"byte_end":237023,"line_start":495,"line_end":495,"column_start":1,"column_end":24}},{"value":"/ use axum::{routing::get, extract::State, body::Body, http::Request};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237024,"byte_end":237096,"line_start":496,"line_end":496,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237097,"byte_end":237100,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ // this `MethodRouter` doesn't require any state, i.e. the state is `()`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237101,"byte_end":237178,"line_start":498,"line_end":498,"column_start":1,"column_end":78}},{"value":"/ let method_router = get(|| async {});","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237179,"byte_end":237220,"line_start":499,"line_end":499,"column_start":1,"column_end":42}},{"value":"/ // and thus it implements `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237221,"byte_end":237260,"line_start":500,"line_end":500,"column_start":1,"column_end":40}},{"value":"/ assert_service(method_router);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237261,"byte_end":237295,"line_start":501,"line_end":501,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237296,"byte_end":237299,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ // this requires a `String` and doesn't implement `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237300,"byte_end":237363,"line_start":503,"line_end":503,"column_start":1,"column_end":64}},{"value":"/ let method_router = get(|_: State<String>| async {});","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237364,"byte_end":237421,"line_start":504,"line_end":504,"column_start":1,"column_end":58}},{"value":"/ // until you provide the `String` with `.with_state(...)`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237422,"byte_end":237483,"line_start":505,"line_end":505,"column_start":1,"column_end":62}},{"value":"/ let method_router_with_state = method_router.with_state(String::new());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237484,"byte_end":237559,"line_start":506,"line_end":506,"column_start":1,"column_end":76}},{"value":"/ // and then it implements `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237560,"byte_end":237599,"line_start":507,"line_end":507,"column_start":1,"column_end":40}},{"value":"/ assert_service(method_router_with_state);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237600,"byte_end":237645,"line_start":508,"line_end":508,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237646,"byte_end":237649,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ // helper to check that a value implements `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237650,"byte_end":237706,"line_start":510,"line_end":510,"column_start":1,"column_end":57}},{"value":"/ fn assert_service<S>(service: S)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237707,"byte_end":237743,"line_start":511,"line_end":511,"column_start":1,"column_end":37}},{"value":"/ where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237744,"byte_end":237753,"line_start":512,"line_end":512,"column_start":1,"column_end":10}},{"value":"/     S: Service<Request<Body>>,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237754,"byte_end":237788,"line_start":513,"line_end":513,"column_start":1,"column_end":35}},{"value":"/ {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237789,"byte_end":237795,"line_start":514,"line_end":514,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237796,"byte_end":237803,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":237804,"byte_end":237815,"line_start":516,"line_end":516,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239238,"byte_end":239241,"line_start":557,"line_end":557,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MethodRouter<S, B, E> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240617,"byte_end":240619,"line_start":602,"line_end":602,"column_start":12,"column_end":14},"name":"on","qualname":"<MethodRouter<S, B, Infallible>>::on","value":"fn on<H, T>(Self, MethodFilter, H) -> Self where H: Handler<T, S, B>,\nT: 'static, S: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Chain an additional handler that will accept requests matching the given\n `MethodFilter`.","sig":null,"attributes":[{"value":"/ Chain an additional handler that will accept requests matching the given","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239890,"byte_end":239966,"line_start":578,"line_end":578,"column_start":5,"column_end":81}},{"value":"/ `MethodFilter`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239971,"byte_end":239990,"line_start":579,"line_end":579,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239995,"byte_end":239998,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240003,"byte_end":240016,"line_start":581,"line_end":581,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240021,"byte_end":240024,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240029,"byte_end":240040,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240045,"byte_end":240060,"line_start":584,"line_end":584,"column_start":5,"column_end":20}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240065,"byte_end":240086,"line_start":585,"line_end":585,"column_start":5,"column_end":26}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240091,"byte_end":240106,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/     routing::MethodFilter","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240111,"byte_end":240140,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240145,"byte_end":240151,"line_start":588,"line_end":588,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240156,"byte_end":240159,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ async fn handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240164,"byte_end":240189,"line_start":590,"line_end":590,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240194,"byte_end":240197,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ async fn other_handler() {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240202,"byte_end":240233,"line_start":592,"line_end":592,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240238,"byte_end":240241,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ // Requests to `GET /` will go to `handler` and `DELETE /` will go to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240246,"byte_end":240319,"line_start":594,"line_end":594,"column_start":5,"column_end":78}},{"value":"/ // `other_handler`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240324,"byte_end":240346,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/ let app = Router::new().route(\"/\", get(handler).on(MethodFilter::DELETE, other_handler));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240351,"byte_end":240444,"line_start":596,"line_end":596,"column_start":5,"column_end":98}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240449,"byte_end":240462,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240467,"byte_end":240560,"line_start":598,"line_end":598,"column_start":5,"column_end":98}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240565,"byte_end":240573,"line_start":599,"line_end":599,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240578,"byte_end":240585,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240590,"byte_end":240605,"line_start":601,"line_end":601,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240941,"byte_end":240947,"line_start":614,"line_end":614,"column_start":25,"column_end":31},"name":"delete","qualname":"<MethodRouter<S, B, Infallible>>::delete","value":"fn delete<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `DELETE` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":240982,"byte_end":240985,"line_start":615,"line_end":615,"column_start":25,"column_end":28},"name":"get","qualname":"<MethodRouter<S, B, Infallible>>::get","value":"fn get<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static, S: Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Chain an additional handler that will only accept `GET` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241017,"byte_end":241021,"line_start":616,"line_end":616,"column_start":25,"column_end":29},"name":"head","qualname":"<MethodRouter<S, B, Infallible>>::head","value":"fn head<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `HEAD` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241054,"byte_end":241061,"line_start":617,"line_end":617,"column_start":25,"column_end":32},"name":"options","qualname":"<MethodRouter<S, B, Infallible>>::options","value":"fn options<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `OPTIONS` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241097,"byte_end":241102,"line_start":618,"line_end":618,"column_start":25,"column_end":30},"name":"patch","qualname":"<MethodRouter<S, B, Infallible>>::patch","value":"fn patch<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `PATCH` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5640},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241136,"byte_end":241140,"line_start":619,"line_end":619,"column_start":25,"column_end":29},"name":"post","qualname":"<MethodRouter<S, B, Infallible>>::post","value":"fn post<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `POST` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5643},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241173,"byte_end":241176,"line_start":620,"line_end":620,"column_start":25,"column_end":28},"name":"put","qualname":"<MethodRouter<S, B, Infallible>>::put","value":"fn put<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static, S: Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `PUT` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241208,"byte_end":241213,"line_start":621,"line_end":621,"column_start":25,"column_end":30},"name":"trace","qualname":"<MethodRouter<S, B, Infallible>>::trace","value":"fn trace<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional handler that will only accept `TRACE` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":231072,"byte_end":231087,"line_start":279,"line_end":279,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241285,"byte_end":241293,"line_start":624,"line_end":624,"column_start":12,"column_end":20},"name":"fallback","qualname":"<MethodRouter<S, B, Infallible>>::fallback","value":"fn fallback<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static,\nS: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a fallback [`Handler`] to the router.\n","sig":null,"attributes":[{"value":"/ Add a fallback [`Handler`] to the router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241228,"byte_end":241273,"line_start":623,"line_end":623,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242511,"byte_end":242528,"line_start":668,"line_end":668,"column_start":12,"column_end":29},"name":"into_make_service","qualname":"<MethodRouter<(), B, Infallible>>::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert the handler into a [`MakeService`].","sig":null,"attributes":[{"value":"/ Convert the handler into a [`MakeService`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241624,"byte_end":241671,"line_start":639,"line_end":639,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241676,"byte_end":241679,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This allows you to serve a single handler if you don't need any routing:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241684,"byte_end":241760,"line_start":641,"line_end":641,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241765,"byte_end":241768,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241773,"byte_end":241784,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241789,"byte_end":241804,"line_start":644,"line_end":644,"column_start":5,"column_end":20}},{"value":"/     Server,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241809,"byte_end":241824,"line_start":645,"line_end":645,"column_start":5,"column_end":20}},{"value":"/     handler::Handler,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241829,"byte_end":241854,"line_start":646,"line_end":646,"column_start":5,"column_end":30}},{"value":"/     http::{Uri, Method},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241859,"byte_end":241887,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/     response::IntoResponse,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241892,"byte_end":241923,"line_start":648,"line_end":648,"column_start":5,"column_end":36}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241928,"byte_end":241949,"line_start":649,"line_end":649,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241954,"byte_end":241960,"line_start":650,"line_end":650,"column_start":5,"column_end":11}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241965,"byte_end":241994,"line_start":651,"line_end":651,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241999,"byte_end":242002,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ async fn handler(method: Method, uri: Uri, body: String) -> String {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242007,"byte_end":242079,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/     format!(\"received `{} {}` with body `{:?}`\", method, uri, body)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242084,"byte_end":242155,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242160,"byte_end":242165,"line_start":655,"line_end":655,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242170,"byte_end":242173,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let router = get(handler).post(handler);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242178,"byte_end":242222,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242227,"byte_end":242230,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242235,"byte_end":242248,"line_start":659,"line_end":659,"column_start":5,"column_end":18}},{"value":"/ Server::bind(&SocketAddr::from(([127, 0, 0, 1], 3000)))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242253,"byte_end":242312,"line_start":660,"line_end":660,"column_start":5,"column_end":64}},{"value":"/     .serve(router.into_make_service())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242317,"byte_end":242359,"line_start":661,"line_end":661,"column_start":5,"column_end":47}},{"value":"/     .await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242364,"byte_end":242380,"line_start":662,"line_end":662,"column_start":5,"column_end":21}},{"value":"/ # Ok::<_, hyper::Error>(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242385,"byte_end":242416,"line_start":663,"line_end":663,"column_start":5,"column_end":36}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242421,"byte_end":242429,"line_start":664,"line_end":664,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242434,"byte_end":242441,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242446,"byte_end":242449,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":242454,"byte_end":242499,"line_start":667,"line_end":667,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":244095,"byte_end":244098,"line_start":716,"line_end":716,"column_start":12,"column_end":15},"name":"new","qualname":"<MethodRouter<S, B, E>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a default `MethodRouter` that will respond with `405 Method Not Allowed` to all\n requests.\n","sig":null,"attributes":[{"value":"/ Create a default `MethodRouter` that will respond with `405 Method Not Allowed` to all","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":243975,"byte_end":244065,"line_start":714,"line_end":714,"column_start":5,"column_end":95}},{"value":"/ requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":244070,"byte_end":244083,"line_start":715,"line_end":715,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":244763,"byte_end":244773,"line_start":736,"line_end":736,"column_start":12,"column_end":22},"name":"with_state","qualname":"<MethodRouter<S, B, E>>::with_state","value":"fn with_state<S2>(Self, S) -> MethodRouter<S2, B, E>","parent":null,"children":[],"decl_id":null,"docs":" Provide the state for the router.\n","sig":null,"attributes":[{"value":"/ Provide the state for the router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":244714,"byte_end":244751,"line_start":735,"line_end":735,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":246206,"byte_end":246216,"line_start":777,"line_end":777,"column_start":12,"column_end":22},"name":"on_service","qualname":"<MethodRouter<S, B, E>>::on_service","value":"fn on_service<T>(Self, MethodFilter, T) -> Self where T: Service<Request<B>,\nError = E> + Clone + Send + 'static, T::Response: IntoResponse + 'static,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Chain an additional service that will accept requests matching the given\n `MethodFilter`.","sig":null,"attributes":[{"value":"/ Chain an additional service that will accept requests matching the given","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245360,"byte_end":245436,"line_start":751,"line_end":751,"column_start":5,"column_end":81}},{"value":"/ `MethodFilter`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245441,"byte_end":245460,"line_start":752,"line_end":752,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245465,"byte_end":245468,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245473,"byte_end":245486,"line_start":754,"line_end":754,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245491,"byte_end":245494,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245499,"byte_end":245510,"line_start":756,"line_end":756,"column_start":5,"column_end":16}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245515,"byte_end":245530,"line_start":757,"line_end":757,"column_start":5,"column_end":20}},{"value":"/     http::Request,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245535,"byte_end":245557,"line_start":758,"line_end":758,"column_start":5,"column_end":27}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245562,"byte_end":245577,"line_start":759,"line_end":759,"column_start":5,"column_end":20}},{"value":"/     routing::{MethodFilter, on_service},","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245582,"byte_end":245626,"line_start":760,"line_end":760,"column_start":5,"column_end":49}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245631,"byte_end":245637,"line_start":761,"line_end":761,"column_start":5,"column_end":11}},{"value":"/ use http::Response;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245642,"byte_end":245665,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245670,"byte_end":245703,"line_start":763,"line_end":763,"column_start":5,"column_end":38}},{"value":"/ use hyper::Body;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245708,"byte_end":245728,"line_start":764,"line_end":764,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245733,"byte_end":245736,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let service = tower::service_fn(|request: Request<Body>| async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245741,"byte_end":245809,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/     Ok::<_, Infallible>(Response::new(Body::empty()))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245814,"byte_end":245871,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245876,"byte_end":245883,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245888,"byte_end":245891,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ // Requests to `DELETE /` will go to `service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245896,"byte_end":245946,"line_start":770,"line_end":770,"column_start":5,"column_end":55}},{"value":"/ let app = Router::new().route(\"/\", on_service(MethodFilter::DELETE, service));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":245951,"byte_end":246033,"line_start":771,"line_end":771,"column_start":5,"column_end":87}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":246038,"byte_end":246051,"line_start":772,"line_end":772,"column_start":5,"column_end":18}},{"value":"/ # axum::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":246056,"byte_end":246149,"line_start":773,"line_end":773,"column_start":5,"column_end":98}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":246154,"byte_end":246162,"line_start":774,"line_end":774,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":246167,"byte_end":246174,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":246179,"byte_end":246194,"line_start":776,"line_end":776,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5649},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249403,"byte_end":249417,"line_start":899,"line_end":899,"column_start":25,"column_end":39},"name":"delete_service","qualname":"<MethodRouter<S, B, E>>::delete_service","value":"fn delete_service<T>(Self, T) -> Self where T: Service<Request<B>, Error =\nE> + Clone + Send + 'static, T::Response: IntoResponse + 'static,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `DELETE` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5651},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249452,"byte_end":249463,"line_start":900,"line_end":900,"column_start":25,"column_end":36},"name":"get_service","qualname":"<MethodRouter<S, B, E>>::get_service","value":"fn get_service<T>(Self, T) -> Self where T: Service<Request<B>, Error = E> +\nClone + Send + 'static, T::Response: IntoResponse + 'static, T::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Chain an additional service that will only accept `GET` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5653},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249495,"byte_end":249507,"line_start":901,"line_end":901,"column_start":25,"column_end":37},"name":"head_service","qualname":"<MethodRouter<S, B, E>>::head_service","value":"fn head_service<T>(Self, T) -> Self where T: Service<Request<B>, Error = E> +\nClone + Send + 'static, T::Response: IntoResponse + 'static, T::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `HEAD` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5655},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249540,"byte_end":249555,"line_start":902,"line_end":902,"column_start":25,"column_end":40},"name":"options_service","qualname":"<MethodRouter<S, B, E>>::options_service","value":"fn options_service<T>(Self, T) -> Self where T: Service<Request<B>, Error =\nE> + Clone + Send + 'static, T::Response: IntoResponse + 'static,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `OPTIONS` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5657},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249591,"byte_end":249604,"line_start":903,"line_end":903,"column_start":25,"column_end":38},"name":"patch_service","qualname":"<MethodRouter<S, B, E>>::patch_service","value":"fn patch_service<T>(Self, T) -> Self where T: Service<Request<B>, Error = E> +\nClone + Send + 'static, T::Response: IntoResponse + 'static, T::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `PATCH` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5659},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249638,"byte_end":249650,"line_start":904,"line_end":904,"column_start":25,"column_end":37},"name":"post_service","qualname":"<MethodRouter<S, B, E>>::post_service","value":"fn post_service<T>(Self, T) -> Self where T: Service<Request<B>, Error = E> +\nClone + Send + 'static, T::Response: IntoResponse + 'static, T::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `POST` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5661},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249683,"byte_end":249694,"line_start":905,"line_end":905,"column_start":25,"column_end":36},"name":"put_service","qualname":"<MethodRouter<S, B, E>>::put_service","value":"fn put_service<T>(Self, T) -> Self where T: Service<Request<B>, Error = E> +\nClone + Send + 'static, T::Response: IntoResponse + 'static, T::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `PUT` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5663},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249726,"byte_end":249739,"line_start":906,"line_end":906,"column_start":25,"column_end":38},"name":"trace_service","qualname":"<MethodRouter<S, B, E>>::trace_service","value":"fn trace_service<T>(Self, T) -> Self where T: Service<Request<B>, Error = E> +\nClone + Send + 'static, T::Response: IntoResponse + 'static, T::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":"Chain an additional service that will only accept `TRACE` requests.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":229166,"byte_end":229181,"line_start":215,"line_end":215,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":249825,"byte_end":249841,"line_start":909,"line_end":909,"column_start":12,"column_end":28},"name":"fallback_service","qualname":"<MethodRouter<S, B, E>>::fallback_service","value":"fn fallback_service<T>(Self, T) -> Self where T: Service<Request<B>, Error =\nE> + Clone + Send + 'static, T::Response: IntoResponse + 'static,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"Add a fallback service to the router.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":250187,"byte_end":250192,"line_start":920,"line_end":920,"column_start":12,"column_end":17},"name":"layer","qualname":"<MethodRouter<S, B, E>>::layer","value":"fn layer<L, NewReqBody, NewError>(Self, L)\n-> MethodRouter<S, NewReqBody, NewError> where L: Layer<Route<B, E>> + Clone +\nSend + 'static, L::Service: Service<Request<NewReqBody>> + Clone + Send +\n'static,\n<L::Service as Service<Request<NewReqBody>>>::Response: IntoResponse +\n'static, <L::Service as Service<Request<NewReqBody>>>::Error: Into<NewError> +\n'static, <L::Service as Service<Request<NewReqBody>>>::Future: Send + 'static,\nE: 'static, S: 'static, NewReqBody: HttpBody + 'static, NewError: 'static","parent":null,"children":[],"decl_id":null,"docs":"Apply a [`tower::Layer`] to all routes in the router.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":251512,"byte_end":251523,"line_start":950,"line_end":950,"column_start":12,"column_end":23},"name":"route_layer","qualname":"<MethodRouter<S, B, E>>::route_layer","value":"fn route_layer<L>(Self, L) -> MethodRouter<S, B, E> where\nL: Layer<Route<B, E>> + Clone + Send + 'static,\nL::Service: Service<Request<B>, Error = E> + Clone + Send + 'static,\n<L::Service as Service<Request<B>>>::Response: IntoResponse + 'static,\n<L::Service as Service<Request<B>>>::Future: Send + 'static, E: 'static,\nS: 'static","parent":null,"children":[],"decl_id":null,"docs":"Apply a [`tower::Layer`] to the router that will only run if the request matches\na route.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":251485,"byte_end":251500,"line_start":949,"line_end":949,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":255160,"byte_end":255165,"line_start":1045,"line_end":1045,"column_start":12,"column_end":17},"name":"merge","qualname":"<MethodRouter<S, B, E>>::merge","value":"fn merge(Self, MethodRouter<S, B, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Merge two routers into one.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":255133,"byte_end":255148,"line_start":1044,"line_end":1044,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":255404,"byte_end":255416,"line_start":1052,"line_end":1052,"column_start":12,"column_end":24},"name":"handle_error","qualname":"<MethodRouter<S, B, E>>::handle_error","value":"fn handle_error<F, T>(Self, F) -> MethodRouter<S, B, Infallible> where\nF: Clone + Send + Sync + 'static,\nHandleError<Route<B, E>, F, T>: Service<Request<B>, Error = Infallible>,\n<HandleError<Route<B, E>, F, T> as Service<Request<B>>>::Future: Send,\n<HandleError<Route<B, E>, F, T> as\nService<Request<B>>>::Response: IntoResponse + Send, T: 'static, E: 'static,\nB: 'static, S: 'static","parent":null,"children":[],"decl_id":null,"docs":" Apply a [`HandleErrorLayer`].","sig":null,"attributes":[{"value":"/ Apply a [`HandleErrorLayer`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":255264,"byte_end":255297,"line_start":1049,"line_end":1049,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":255302,"byte_end":255305,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for doing `self.layer(HandleErrorLayer::new(f))`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":255310,"byte_end":255392,"line_start":1051,"line_end":1051,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":258913,"byte_end":258918,"line_start":1153,"line_end":1153,"column_start":8,"column_end":13},"name":"clone","qualname":"<MethodRouter<S, B, E> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":259485,"byte_end":259492,"line_start":1174,"line_end":1174,"column_start":8,"column_end":15},"name":"default","qualname":"<MethodRouter<S, B, E> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261618,"byte_end":261628,"line_start":1253,"line_end":1253,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<MethodRouter<(), B, E> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261601,"byte_end":261610,"line_start":1252,"line_end":1252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261754,"byte_end":261758,"line_start":1258,"line_end":1258,"column_start":8,"column_end":12},"name":"call","qualname":"<MethodRouter<(), B, E> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261737,"byte_end":261746,"line_start":1257,"line_end":1257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":262022,"byte_end":262026,"line_start":1270,"line_end":1270,"column_start":8,"column_end":12},"name":"call","qualname":"<MethodRouter<S, B> as handler::Handler>::call","value":"fn call(Self, Request<B>, S) -> Self::Future","parent":{"krate":0,"index":1163},"children":[],"decl_id":{"krate":0,"index":1168},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272830,"byte_end":272845,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"IntoMakeService","qualname":"::routing::into_make_service::IntoMakeService","value":"IntoMakeService {  }","parent":null,"children":[{"krate":0,"index":5667}],"decl_id":null,"docs":" A [`MakeService`] that produces axum router services.","sig":null,"attributes":[{"value":"/ A [`MakeService`] that produces axum router services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272687,"byte_end":272744,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272745,"byte_end":272748,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272749,"byte_end":272794,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":273150,"byte_end":273160,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<IntoMakeService<S> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":273133,"byte_end":273142,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":273272,"byte_end":273276,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"call","qualname":"<IntoMakeService<S> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, T) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":273470,"byte_end":273491,"line_start":42,"line_end":42,"column_start":14,"column_end":35},"name":"IntoMakeServiceFuture","qualname":"::routing::into_make_service::IntoMakeServiceFuture","value":"IntoMakeServiceFuture {  }","parent":null,"children":[{"krate":0,"index":5686}],"decl_id":null,"docs":" Response future for [`IntoMakeService`].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5717},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":273924,"byte_end":273936,"line_start":10,"line_end":10,"column_start":16,"column_end":28},"name":"MethodFilter","qualname":"::routing::method_filter::MethodFilter","value":"MethodFilter {  }","parent":null,"children":[{"krate":0,"index":5718}],"decl_id":null,"docs":" A filter that matches one or more HTTP methods.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5757},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":273995,"byte_end":274001,"line_start":12,"line_end":12,"column_start":15,"column_end":21},"name":"DELETE","qualname":"::routing::method_filter::MethodFilter::DELETE","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `DELETE` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5758},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274066,"byte_end":274069,"line_start":14,"line_end":14,"column_start":15,"column_end":18},"name":"GET","qualname":"::routing::method_filter::MethodFilter::GET","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `GET` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5759},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274138,"byte_end":274142,"line_start":16,"line_end":16,"column_start":15,"column_end":19},"name":"HEAD","qualname":"::routing::method_filter::MethodFilter::HEAD","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `HEAD` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5760},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274213,"byte_end":274220,"line_start":18,"line_end":18,"column_start":15,"column_end":22},"name":"OPTIONS","qualname":"::routing::method_filter::MethodFilter::OPTIONS","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `OPTIONS` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5761},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274286,"byte_end":274291,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"PATCH","qualname":"::routing::method_filter::MethodFilter::PATCH","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `PATCH` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5762},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274358,"byte_end":274362,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"name":"POST","qualname":"::routing::method_filter::MethodFilter::POST","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `POST` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5763},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274429,"byte_end":274432,"line_start":24,"line_end":24,"column_start":15,"column_end":18},"name":"PUT","qualname":"::routing::method_filter::MethodFilter::PUT","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `PUT` requests.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5764},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274502,"byte_end":274507,"line_start":26,"line_end":26,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::routing::method_filter::MethodFilter::TRACE","value":"Self","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Match `TRACE` requests.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5839},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274640,"byte_end":274662,"line_start":32,"line_end":32,"column_start":12,"column_end":34},"name":"NoMatchingMethodFilter","qualname":"::routing::method_filter::NoMatchingMethodFilter","value":"NoMatchingMethodFilter {  }","parent":null,"children":[{"krate":0,"index":5840}],"decl_id":null,"docs":" Error type used when converting a [`Method`] to a [`MethodFilter`] fails.\n","sig":null,"attributes":[{"value":"/ Error type used when converting a [`Method`] to a [`MethodFilter`] fails.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274534,"byte_end":274611,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274806,"byte_end":274812,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"method","qualname":"<NoMatchingMethodFilter>::method","value":"fn method<'_>(&'_ Self) -> &'_ Method","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Method`] that couldn't be converted to a [`MethodFilter`].\n","sig":null,"attributes":[{"value":"/ Get the [`Method`] that couldn't be converted to a [`MethodFilter`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274722,"byte_end":274794,"line_start":37,"line_end":37,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274917,"byte_end":274920,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NoMatchingMethodFilter as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":275190,"byte_end":275198,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MethodFilter as std::convert::TryFrom>::try_from","value":"fn try_from(Method) -> Result<Self, NoMatchingMethodFilter>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":293189,"byte_end":293194,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Route","qualname":"::routing::route::Route","value":"","parent":null,"children":[],"decl_id":null,"docs":" How routes are stored inside a [`Router`](super::Router).","sig":null,"attributes":[{"value":"/ How routes are stored inside a [`Router`](super::Router).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":292997,"byte_end":293058,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":293059,"byte_end":293062,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ You normally shouldn't need to care about this type. It's used in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":293063,"byte_end":293132,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ [`Router::layer`](super::Router::layer).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":293133,"byte_end":293177,"line_start":29,"line_end":29,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294641,"byte_end":294646,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"clone","qualname":"<Route<B, E> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294749,"byte_end":294752,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Route<B, E> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295036,"byte_end":295046,"line_start":92,"line_end":92,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Route<B, E> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295019,"byte_end":295028,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295172,"byte_end":295176,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"call","qualname":"<Route<B, E> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295155,"byte_end":295164,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5858},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295359,"byte_end":295370,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"RouteFuture","qualname":"::routing::route::RouteFuture","value":"RouteFuture {  }","parent":null,"children":[{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863}],"decl_id":null,"docs":" Response future for [`Route`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":296542,"byte_end":296546,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"poll","qualname":"<RouteFuture<B, E> as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":296525,"byte_end":296534,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":298560,"byte_end":298581,"line_start":220,"line_end":220,"column_start":16,"column_end":37},"name":"InfallibleRouteFuture","qualname":"::routing::route::InfallibleRouteFuture","value":"InfallibleRouteFuture {  }","parent":null,"children":[{"krate":0,"index":5947}],"decl_id":null,"docs":" A [`RouteFuture`] that always yields a [`Response`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":298896,"byte_end":298900,"line_start":238,"line_end":238,"column_start":8,"column_end":12},"name":"poll","qualname":"<InfallibleRouteFuture<B> as futures_util::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206338,"byte_end":206344,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Router","qualname":"::routing::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2726}],"decl_id":null,"docs":" The router type for composing handlers and services.\n","sig":null,"attributes":[{"value":"/ The router type for composing handlers and services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206258,"byte_end":206314,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206315,"byte_end":206326,"line_start":58,"line_end":58,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206566,"byte_end":206571,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"clone","qualname":"<Router<S, B> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206974,"byte_end":206981,"line_start":82,"line_end":82,"column_start":8,"column_end":15},"name":"default","qualname":"<Router<S, B> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207071,"byte_end":207074,"line_start":88,"line_end":88,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Router<S, B> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207925,"byte_end":207928,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<Router<S, B>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Router`.","sig":null,"attributes":[{"value":"/ Create a new `Router`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207774,"byte_end":207800,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207805,"byte_end":207808,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Unless you add additional routes this will respond with `404 Not Found` to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207813,"byte_end":207891,"line_start":109,"line_end":109,"column_start":5,"column_end":83}},{"value":"/ all requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207896,"byte_end":207913,"line_start":110,"line_end":110,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":208269,"byte_end":208274,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"route","qualname":"<Router<S, B>>::route","value":"fn route<'_>(Self, &'_ str, MethodRouter<S, B>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Add another route to the router.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":208242,"byte_end":208257,"line_start":121,"line_end":121,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":208503,"byte_end":208516,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"route_service","qualname":"<Router<S, B>>::route_service","value":"fn route_service<T, '_>(Self, &'_ str, T) -> Self where T: Service<Request<B>,\nError = Infallible> + Clone + Send + 'static, T::Response: IntoResponse,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"Add another route to the router that calls a [`Service`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":209241,"byte_end":209245,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"nest","qualname":"<Router<S, B>>::nest","value":"fn nest<'_>(Self, &'_ str, Router<S, B>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Nest a [`Router`] at some path.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":209214,"byte_end":209229,"line_start":149,"line_end":149,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":210034,"byte_end":210046,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"nest_service","qualname":"<Router<S, B>>::nest_service","value":"fn nest_service<T, '_>(Self, &'_ str, T) -> Self where T: Service<Request<B>,\nError = Infallible> + Clone + Send + 'static, T::Response: IntoResponse,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Like [`nest`](Self::nest), but accepts an arbitrary `Service`.\n","sig":null,"attributes":[{"value":"/ Like [`nest`](Self::nest), but accepts an arbitrary `Service`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":209936,"byte_end":210002,"line_start":170,"line_end":170,"column_start":5,"column_end":71}},{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":210007,"byte_end":210022,"line_start":171,"line_end":171,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":210429,"byte_end":210434,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"merge","qualname":"<Router<S, B>>::merge","value":"fn merge<R>(Self, R) -> Self where R: Into<Router<S, B>>","parent":null,"children":[],"decl_id":null,"docs":"Merge two routers into one.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":210402,"byte_end":210417,"line_start":183,"line_end":183,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":211821,"byte_end":211826,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"layer","qualname":"<Router<S, B>>::layer","value":"fn layer<L, NewReqBody>(Self, L) -> Router<S, NewReqBody> where\nL: Layer<Route<B>> + Clone + Send + 'static,\nL::Service: Service<Request<NewReqBody>> + Clone + Send + 'static,\n<L::Service as Service<Request<NewReqBody>>>::Response: IntoResponse +\n'static,\n<L::Service as Service<Request<NewReqBody>>>::Error: Into<Infallible> +\n'static, <L::Service as Service<Request<NewReqBody>>>::Future: Send + 'static,\nNewReqBody: HttpBody + 'static","parent":null,"children":[],"decl_id":null,"docs":"Apply a [`tower::Layer`] to all routes in the router.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":212725,"byte_end":212736,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"route_layer","qualname":"<Router<S, B>>::route_layer","value":"fn route_layer<L>(Self, L) -> Self where L: Layer<Route<B>> + Clone + Send +\n'static, L::Service: Service<Request<B>> + Clone + Send + 'static,\n<L::Service as Service<Request<B>>>::Response: IntoResponse + 'static,\n<L::Service as Service<Request<B>>>::Error: Into<Infallible> + 'static,\n<L::Service as Service<Request<B>>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"Apply a [`tower::Layer`] to the router that will only run if the request matches\na route.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":212698,"byte_end":212713,"line_start":244,"line_end":244,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":213472,"byte_end":213480,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"fallback","qualname":"<Router<S, B>>::fallback","value":"fn fallback<H, T>(Self, H) -> Self where H: Handler<T, S, B>, T: 'static","parent":null,"children":[],"decl_id":null,"docs":"Add a fallback [`Handler`] to the router.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":213388,"byte_end":213403,"line_start":261,"line_end":261,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":213895,"byte_end":213911,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"fallback_service","qualname":"<Router<S, B>>::fallback_service","value":"fn fallback_service<T>(Self, T) -> Self where T: Service<Request<B>, Error =\nInfallible> + Clone + Send + 'static, T::Response: IntoResponse,\nT::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a fallback [`Service`] to the router.","sig":null,"attributes":[{"value":"/ Add a fallback [`Service`] to the router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":213779,"byte_end":213824,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":213829,"byte_end":213832,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ See [`Router::fallback`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":213837,"byte_end":213883,"line_start":275,"line_end":275,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":214532,"byte_end":214542,"line_start":294,"line_end":294,"column_start":12,"column_end":22},"name":"with_state","qualname":"<Router<S, B>>::with_state","value":"fn with_state<S2>(Self, S) -> Router<S2, B>","parent":null,"children":[],"decl_id":null,"docs":"Provide the state for the router.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217086,"byte_end":217103,"line_start":369,"line_end":369,"column_start":12,"column_end":29},"name":"into_make_service","qualname":"<Router<(), B>>::into_make_service","value":"fn into_make_service(Self) -> IntoMakeService<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert this router into a [`MakeService`], that is a [`Service`] whose\n response is another service.","sig":null,"attributes":[{"value":"/ Convert this router into a [`MakeService`], that is a [`Service`] whose","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216400,"byte_end":216475,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ response is another service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216480,"byte_end":216512,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216517,"byte_end":216520,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This is useful when running your application with hyper's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216525,"byte_end":216586,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Server`](hyper::server::Server):","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216591,"byte_end":216629,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216634,"byte_end":216637,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216642,"byte_end":216649,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216654,"byte_end":216669,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/     routing::get,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216674,"byte_end":216695,"line_start":354,"line_end":354,"column_start":5,"column_end":26}},{"value":"/     Router,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216700,"byte_end":216715,"line_start":355,"line_end":355,"column_start":5,"column_end":20}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216720,"byte_end":216726,"line_start":356,"line_end":356,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216731,"byte_end":216734,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let app = Router::new().route(\"/\", get(|| async { \"Hi!\" }));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216739,"byte_end":216803,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216808,"byte_end":216811,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216816,"byte_end":216829,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/ axum::Server::bind(&\"0.0.0.0:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216834,"byte_end":216890,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/     .serve(app.into_make_service())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216895,"byte_end":216934,"line_start":362,"line_end":362,"column_start":5,"column_end":44}},{"value":"/     .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216939,"byte_end":216953,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/     .expect(\"server failed\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216958,"byte_end":216991,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216996,"byte_end":217004,"line_start":365,"line_end":365,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217009,"byte_end":217016,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217021,"byte_end":217024,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [`MakeService`]: tower::make::MakeService","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217029,"byte_end":217074,"line_start":368,"line_end":368,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217968,"byte_end":217978,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Router<(), B> as tower::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217951,"byte_end":217960,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":218102,"byte_end":218106,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"call","qualname":"<Router<(), B> as tower::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<B>) -> Self::Future","parent":{"krate":28,"index":13},"children":[],"decl_id":{"krate":28,"index":19},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":218085,"byte_end":218094,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":18247,"byte_end":18261,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":18680,"byte_end":18694,"line_start":33,"line_end":33,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19227,"byte_end":19241,"line_start":54,"line_end":54,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19354,"byte_end":19368,"line_start":60,"line_end":60,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19950,"byte_end":19967,"line_start":79,"line_end":79,"column_start":53,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":20494,"byte_end":20511,"line_start":102,"line_end":102,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":20883,"byte_end":20899,"line_start":119,"line_end":119,"column_start":50,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":21428,"byte_end":21444,"line_start":141,"line_end":141,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":21827,"byte_end":21830,"line_start":158,"line_end":158,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":22631,"byte_end":22632,"line_start":186,"line_end":186,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24590,"byte_end":24599,"line_start":76,"line_end":76,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25296,"byte_end":25305,"line_start":101,"line_end":101,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25569,"byte_end":25578,"line_start":113,"line_end":113,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25806,"byte_end":25815,"line_start":124,"line_end":124,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26477,"byte_end":26489,"line_start":150,"line_end":150,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":28612,"byte_end":28613,"line_start":35,"line_end":35,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/util.rs","byte_start":29103,"byte_end":29120,"line_start":7,"line_end":7,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/util.rs","byte_start":29536,"byte_end":29553,"line_start":27,"line_end":27,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32134,"byte_end":32144,"line_start":62,"line_end":62,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32321,"byte_end":32331,"line_start":73,"line_end":73,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32703,"byte_end":32713,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32922,"byte_end":32932,"line_start":100,"line_end":100,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33080,"byte_end":33090,"line_start":106,"line_end":106,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33234,"byte_end":33244,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34969,"byte_end":34985,"line_start":28,"line_end":28,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35173,"byte_end":35189,"line_start":38,"line_end":38,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35376,"byte_end":35392,"line_start":50,"line_end":50,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35638,"byte_end":35654,"line_start":58,"line_end":58,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36108,"byte_end":36119,"line_start":78,"line_end":78,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36337,"byte_end":36348,"line_start":89,"line_end":89,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36594,"byte_end":36605,"line_start":103,"line_end":103,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36936,"byte_end":36947,"line_start":115,"line_end":115,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":41261,"byte_end":41278,"line_start":247,"line_end":247,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":71591,"byte_end":71607,"line_start":49,"line_end":49,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":71792,"byte_end":71808,"line_start":56,"line_end":56,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":3364},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":3381},{"krate":0,"index":3384},{"krate":0,"index":3387},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3402},{"krate":0,"index":3405},{"krate":0,"index":3408},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":76637,"byte_end":76652,"line_start":224,"line_end":224,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":77984,"byte_end":77999,"line_start":274,"line_end":274,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":585},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":80027,"byte_end":80044,"line_start":334,"line_end":334,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":3487},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3494},{"krate":0,"index":3497},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":82635,"byte_end":82651,"line_start":423,"line_end":423,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":85556,"byte_end":85572,"line_start":527,"line_end":527,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":85972,"byte_end":85983,"line_start":544,"line_end":544,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":87006,"byte_end":87021,"line_start":588,"line_end":588,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48309,"byte_end":48313,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":49622,"byte_end":49646,"line_start":193,"line_end":193,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50077,"byte_end":50100,"line_start":212,"line_end":212,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50268,"byte_end":50291,"line_start":219,"line_end":219,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50551,"byte_end":50575,"line_start":228,"line_end":228,"column_start":27,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50777,"byte_end":50801,"line_start":240,"line_end":240,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50928,"byte_end":50952,"line_start":246,"line_end":246,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53346,"byte_end":53355,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55103,"byte_end":55132,"line_start":364,"line_end":364,"column_start":6,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56532,"byte_end":56561,"line_start":404,"line_end":404,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56855,"byte_end":56884,"line_start":415,"line_end":415,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57008,"byte_end":57037,"line_start":421,"line_end":421,"column_start":28,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58073,"byte_end":58086,"line_start":454,"line_end":454,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58745,"byte_end":58758,"line_start":478,"line_end":478,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59329,"byte_end":59346,"line_start":500,"line_end":500,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59730,"byte_end":59752,"line_start":516,"line_end":516,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60044,"byte_end":60066,"line_start":528,"line_end":528,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60221,"byte_end":60243,"line_start":534,"line_end":534,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60270,"byte_end":60292,"line_start":536,"line_end":536,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104663,"byte_end":104667,"line_start":27,"line_end":27,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3907}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110203,"byte_end":110210,"line_start":38,"line_end":38,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3922},{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113277,"byte_end":113285,"line_start":31,"line_end":31,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3934},{"krate":0,"index":3935}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117765,"byte_end":117775,"line_start":143,"line_end":143,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118018,"byte_end":118028,"line_start":152,"line_end":152,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118520,"byte_end":118530,"line_start":171,"line_end":171,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119709,"byte_end":119716,"line_start":215,"line_end":215,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130515,"byte_end":130520,"line_start":350,"line_end":350,"column_start":63,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3996},{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130883,"byte_end":130888,"line_start":366,"line_end":366,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":131001,"byte_end":131006,"line_start":374,"line_end":374,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144265,"byte_end":144278,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144505,"byte_end":144518,"line_start":42,"line_end":42,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145446,"byte_end":145460,"line_start":26,"line_end":26,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148171,"byte_end":148185,"line_start":119,"line_end":119,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148394,"byte_end":148408,"line_start":129,"line_end":129,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148584,"byte_end":148598,"line_start":135,"line_end":135,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148868,"byte_end":148882,"line_start":149,"line_end":149,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":136353,"byte_end":136354,"line_start":163,"line_end":163,"column_start":50,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138626,"byte_end":138633,"line_start":233,"line_end":233,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138883,"byte_end":138890,"line_start":244,"line_end":244,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":139172,"byte_end":139179,"line_start":258,"line_end":258,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":141491,"byte_end":141492,"line_start":323,"line_end":323,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154134,"byte_end":154152,"line_start":119,"line_end":119,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154344,"byte_end":154362,"line_start":131,"line_end":131,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154684,"byte_end":154702,"line_start":143,"line_end":143,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155375,"byte_end":155388,"line_start":174,"line_end":174,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155642,"byte_end":155655,"line_start":188,"line_end":188,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":156049,"byte_end":156062,"line_start":202,"line_end":202,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":157700,"byte_end":157714,"line_start":265,"line_end":265,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165935,"byte_end":165946,"line_start":171,"line_end":171,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166197,"byte_end":166208,"line_start":185,"line_end":185,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166534,"byte_end":166545,"line_start":202,"line_end":202,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":167165,"byte_end":167171,"line_start":225,"line_end":225,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170061,"byte_end":170067,"line_start":313,"line_end":313,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170561,"byte_end":170565,"line_start":332,"line_end":332,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170832,"byte_end":170836,"line_start":342,"line_end":342,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171033,"byte_end":171037,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171178,"byte_end":171182,"line_start":358,"line_end":358,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171688,"byte_end":171702,"line_start":377,"line_end":377,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171912,"byte_end":171926,"line_start":385,"line_end":385,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177612,"byte_end":177627,"line_start":175,"line_end":175,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177878,"byte_end":177893,"line_start":189,"line_end":189,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178227,"byte_end":178242,"line_start":206,"line_end":206,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178900,"byte_end":178910,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":181816,"byte_end":181826,"line_start":318,"line_end":318,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182289,"byte_end":182303,"line_start":337,"line_end":337,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182513,"byte_end":182527,"line_start":345,"line_end":345,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182779,"byte_end":182785,"line_start":355,"line_end":355,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182852,"byte_end":182859,"line_start":356,"line_end":356,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183259,"byte_end":183265,"line_start":368,"line_end":368,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183476,"byte_end":183483,"line_start":377,"line_end":377,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189220,"byte_end":189236,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189487,"byte_end":189503,"line_start":173,"line_end":173,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189839,"byte_end":189855,"line_start":190,"line_end":190,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190517,"byte_end":190528,"line_start":213,"line_end":213,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":193903,"byte_end":193914,"line_start":311,"line_end":311,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194379,"byte_end":194393,"line_start":330,"line_end":330,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194603,"byte_end":194617,"line_start":338,"line_end":338,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202467,"byte_end":202475,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":204732,"byte_end":204740,"line_start":89,"line_end":89,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196153,"byte_end":196157,"line_start":45,"line_end":45,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196484,"byte_end":196488,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":238540,"byte_end":238551,"line_start":540,"line_end":540,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239207,"byte_end":239219,"line_start":556,"line_end":556,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239799,"byte_end":239811,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":5631},{"krate":0,"index":5634},{"krate":0,"index":5637},{"krate":0,"index":5640},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241546,"byte_end":241558,"line_start":635,"line_end":635,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":243893,"byte_end":243905,"line_start":709,"line_end":709,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":5649},{"krate":0,"index":5651},{"krate":0,"index":5653},{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5659},{"krate":0,"index":5661},{"krate":0,"index":5663},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":258882,"byte_end":258894,"line_start":1152,"line_end":1152,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":259400,"byte_end":259412,"line_start":1169,"line_end":1169,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":259659,"byte_end":259673,"line_start":1185,"line_end":1185,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":260796,"byte_end":260810,"line_start":1224,"line_end":1224,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261097,"byte_end":261111,"line_start":1234,"line_end":1234,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261444,"byte_end":261456,"line_start":1244,"line_end":1244,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261885,"byte_end":261897,"line_start":1263,"line_end":1263,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272874,"byte_end":272889,"line_start":16,"line_end":16,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272991,"byte_end":273006,"line_start":22,"line_end":22,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274693,"byte_end":274715,"line_start":36,"line_end":36,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274885,"byte_end":274907,"line_start":43,"line_end":43,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":275074,"byte_end":275096,"line_start":49,"line_end":49,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":275126,"byte_end":275138,"line_start":51,"line_end":51,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/not_found.rs","byte_start":277494,"byte_end":277502,"line_start":18,"line_end":18,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":278520,"byte_end":278530,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":279034,"byte_end":279044,"line_start":37,"line_end":37,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":289975,"byte_end":289985,"line_start":372,"line_end":372,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":290236,"byte_end":290246,"line_start":382,"line_end":382,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":290527,"byte_end":290537,"line_start":391,"line_end":391,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":291007,"byte_end":291011,"line_start":409,"line_end":409,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":291597,"byte_end":291601,"line_start":434,"line_end":434,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":293276,"byte_end":293281,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294620,"byte_end":294625,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294728,"byte_end":294733,"line_start":77,"line_end":77,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294890,"byte_end":294895,"line_start":83,"line_end":83,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295854,"byte_end":295865,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":296438,"byte_end":296449,"line_start":150,"line_end":150,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":298663,"byte_end":298684,"line_start":226,"line_end":226,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":298810,"byte_end":298831,"line_start":232,"line_end":232,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/strip_prefix.rs","byte_start":299556,"byte_end":299567,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/strip_prefix.rs","byte_start":299988,"byte_end":299999,"line_start":33,"line_end":33,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206544,"byte_end":206550,"line_start":66,"line_end":66,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206874,"byte_end":206880,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207049,"byte_end":207055,"line_start":87,"line_end":87,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207677,"byte_end":207683,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216340,"byte_end":216346,"line_start":342,"line_end":342,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217785,"byte_end":217791,"line_start":384,"line_end":384,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":218350,"byte_end":218358,"line_start":409,"line_end":409,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2803},{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":219991,"byte_end":219999,"line_start":458,"line_end":458,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":220318,"byte_end":220326,"line_start":468,"line_end":468,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":220818,"byte_end":220826,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":221695,"byte_end":221703,"line_start":507,"line_end":507,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":221946,"byte_end":221954,"line_start":516,"line_end":516,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2838}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14743,"byte_end":14747,"line_start":455,"line_end":455,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":240}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14757,"byte_end":14771,"line_start":456,"line_end":456,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":346}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14781,"byte_end":14788,"line_start":457,"line_end":457,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":475}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":41788,"byte_end":41792,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":483}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/mod.rs","byte_start":41802,"byte_end":41811,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":745}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14798,"byte_end":14805,"line_start":458,"line_end":458,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":990}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":132654,"byte_end":132660,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1040}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14815,"byte_end":14825,"line_start":459,"line_end":459,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1237}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14835,"byte_end":14843,"line_start":460,"line_end":460,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1811}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/lib.rs","byte_start":14853,"byte_end":14860,"line_start":461,"line_end":461,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1885}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205438,"byte_end":205444,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1946}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":205454,"byte_end":205468,"line_start":24,"line_end":24,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":1958}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":18247,"byte_end":18261,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":18680,"byte_end":18694,"line_start":33,"line_end":33,"column_start":15,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19227,"byte_end":19241,"line_start":54,"line_end":54,"column_start":25,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19354,"byte_end":19368,"line_start":60,"line_end":60,"column_start":30,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19544,"byte_end":19548,"line_start":66,"line_end":66,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":19950,"byte_end":19967,"line_start":79,"line_end":79,"column_start":53,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":75},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":20494,"byte_end":20511,"line_start":102,"line_end":102,"column_start":25,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":20883,"byte_end":20899,"line_start":119,"line_end":119,"column_start":50,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":21428,"byte_end":21444,"line_start":141,"line_end":141,"column_start":22,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":21827,"byte_end":21830,"line_start":158,"line_end":158,"column_start":54,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":108},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":22475,"byte_end":22481,"line_start":182,"line_end":182,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3519},"to":{"krate":0,"index":125}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":22514,"byte_end":22518,"line_start":182,"line_end":182,"column_start":80,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":125}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/boxed.rs","byte_start":22631,"byte_end":22632,"line_start":186,"line_end":186,"column_start":49,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":125}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":24590,"byte_end":24599,"line_start":76,"line_end":76,"column_start":36,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2874},"to":{"krate":56,"index":1680}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25296,"byte_end":25305,"line_start":101,"line_end":101,"column_start":31,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2874},"to":{"krate":56,"index":570}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25569,"byte_end":25578,"line_start":113,"line_end":113,"column_start":26,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2874},"to":{"krate":56,"index":440}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":25806,"byte_end":25815,"line_start":124,"line_end":124,"column_start":38,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2874},"to":{"krate":25,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extension.rs","byte_start":26477,"byte_end":26489,"line_start":150,"line_end":150,"column_start":51,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2907},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27222,"byte_end":27229,"line_start":7,"line_end":7,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":28,"index":13},"to":{"krate":0,"index":210}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":27235,"byte_end":27240,"line_start":7,"line_end":7,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3268},"to":{"krate":0,"index":210}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/service_ext.rs","byte_start":28612,"byte_end":28613,"line_start":35,"line_end":35,"column_start":30,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":210}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/util.rs","byte_start":29103,"byte_end":29120,"line_start":7,"line_end":7,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/util.rs","byte_start":29536,"byte_end":29553,"line_start":27,"line_end":27,"column_start":16,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32134,"byte_end":32144,"line_start":62,"line_end":62,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2978},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32321,"byte_end":32331,"line_start":73,"line_end":73,"column_start":9,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32703,"byte_end":32713,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2978},"to":{"krate":56,"index":440}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":32922,"byte_end":32932,"line_start":100,"line_end":100,"column_start":18,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2978},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33080,"byte_end":33090,"line_start":106,"line_end":106,"column_start":24,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2978},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/body/stream_body.rs","byte_start":33234,"byte_end":33244,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2978},"to":{"krate":57,"index":470}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":34969,"byte_end":34985,"line_start":28,"line_end":28,"column_start":12,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35173,"byte_end":35189,"line_start":38,"line_end":38,"column_start":22,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35376,"byte_end":35392,"line_start":50,"line_end":50,"column_start":27,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":35638,"byte_end":35654,"line_start":58,"line_end":58,"column_start":28,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":390},"to":{"krate":25,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36108,"byte_end":36119,"line_start":78,"line_end":78,"column_start":15,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36337,"byte_end":36348,"line_start":89,"line_end":89,"column_start":25,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36594,"byte_end":36605,"line_start":103,"line_end":103,"column_start":30,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":36936,"byte_end":36947,"line_start":115,"line_end":115,"column_start":49,"column_end":60},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":413},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/error_handling/mod.rs","byte_start":41261,"byte_end":41278,"line_start":247,"line_end":247,"column_start":21,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3339},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":71591,"byte_end":71607,"line_start":49,"line_end":49,"column_start":11,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":71792,"byte_end":71808,"line_start":56,"line_end":56,"column_start":33,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":536},"to":{"krate":67,"index":1610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":76637,"byte_end":76652,"line_start":224,"line_end":224,"column_start":30,"column_end":45},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":567},"to":{"krate":67,"index":1748}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":77984,"byte_end":77999,"line_start":274,"line_end":274,"column_start":33,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":579},"to":{"krate":67,"index":1610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":80027,"byte_end":80044,"line_start":334,"line_end":334,"column_start":33,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3480},"to":{"krate":67,"index":1610}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":82635,"byte_end":82651,"line_start":423,"line_end":423,"column_start":38,"column_end":54},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":607},"to":{"krate":67,"index":1730}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":85556,"byte_end":85572,"line_start":527,"line_end":527,"column_start":31,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":627},"to":{"krate":67,"index":1786}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":85972,"byte_end":85983,"line_start":544,"line_end":544,"column_start":34,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":635},"to":{"krate":67,"index":1794}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/de.rs","byte_start":87006,"byte_end":87021,"line_start":588,"line_end":588,"column_start":30,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":647},"to":{"krate":67,"index":1730}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":48309,"byte_end":48313,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3550},"to":{"krate":56,"index":1680}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":49622,"byte_end":49646,"line_start":193,"line_end":193,"column_start":6,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50077,"byte_end":50100,"line_start":212,"line_end":212,"column_start":9,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50268,"byte_end":50291,"line_start":219,"line_end":219,"column_start":6,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50551,"byte_end":50575,"line_start":228,"line_end":228,"column_start":27,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3574},"to":{"krate":67,"index":9056}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50777,"byte_end":50801,"line_start":240,"line_end":240,"column_start":23,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3574},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":50928,"byte_end":50952,"line_start":246,"line_end":246,"column_start":28,"column_end":52},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3574},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":53346,"byte_end":53355,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3578},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":55103,"byte_end":55132,"line_start":364,"line_end":364,"column_start":6,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56532,"byte_end":56561,"line_start":404,"line_end":404,"column_start":23,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3609},"to":{"krate":56,"index":440}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":56855,"byte_end":56884,"line_start":415,"line_end":415,"column_start":23,"column_end":52},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":57008,"byte_end":57037,"line_start":421,"line_end":421,"column_start":28,"column_end":57},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3609},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58073,"byte_end":58086,"line_start":454,"line_end":454,"column_start":33,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3614},"to":{"krate":56,"index":1680}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":58745,"byte_end":58758,"line_start":478,"line_end":478,"column_start":6,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59329,"byte_end":59346,"line_start":500,"line_end":500,"column_start":23,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3627},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":59730,"byte_end":59752,"line_start":516,"line_end":516,"column_start":6,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60044,"byte_end":60066,"line_start":528,"line_end":528,"column_start":23,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60221,"byte_end":60243,"line_start":534,"line_end":534,"column_start":28,"column_end":50},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3634},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/path/mod.rs","byte_start":60270,"byte_end":60292,"line_start":536,"line_end":536,"column_start":23,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3634},"to":{"krate":56,"index":440}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/host.rs","byte_start":104663,"byte_end":104667,"line_start":27,"line_end":27,"column_start":33,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3897},"to":{"krate":56,"index":1680}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_form.rs","byte_start":110203,"byte_end":110210,"line_start":38,"line_end":38,"column_start":34,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3914},"to":{"krate":56,"index":1687}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/raw_query.rs","byte_start":113277,"byte_end":113285,"line_start":31,"line_end":31,"column_start":33,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3927},"to":{"krate":56,"index":1680}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":117765,"byte_end":117775,"line_start":143,"line_end":143,"column_start":17,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":906},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118018,"byte_end":118028,"line_start":152,"line_end":152,"column_start":34,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":906},"to":{"krate":56,"index":1687}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":118520,"byte_end":118530,"line_start":171,"line_end":171,"column_start":21,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/request_parts.rs","byte_start":119709,"byte_end":119716,"line_start":215,"line_end":215,"column_start":34,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3950},"to":{"krate":56,"index":1687}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130515,"byte_end":130520,"line_start":350,"line_end":350,"column_start":63,"column_end":68},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3978},"to":{"krate":56,"index":1680}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":130883,"byte_end":130888,"line_start":366,"line_end":366,"column_start":19,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/extract/state.rs","byte_start":131001,"byte_end":131006,"line_start":374,"line_end":374,"column_start":22,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144265,"byte_end":144278,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/future.rs","byte_start":144505,"byte_end":144518,"line_start":42,"line_end":42,"column_start":23,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4045},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":145446,"byte_end":145460,"line_start":26,"line_end":26,"column_start":18,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148171,"byte_end":148185,"line_start":119,"line_end":119,"column_start":18,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148394,"byte_end":148408,"line_start":129,"line_end":129,"column_start":33,"column_end":47},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148584,"byte_end":148598,"line_start":135,"line_end":135,"column_start":28,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/service.rs","byte_start":148868,"byte_end":148882,"line_start":149,"line_end":149,"column_start":42,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1114},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134213,"byte_end":134218,"line_start":102,"line_end":102,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2882},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134221,"byte_end":134225,"line_start":102,"line_end":102,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":134228,"byte_end":134233,"line_start":102,"line_end":102,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":3268},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":136353,"byte_end":136354,"line_start":163,"line_end":163,"column_start":50,"column_end":51},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1174},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138626,"byte_end":138633,"line_start":233,"line_end":233,"column_start":40,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":138883,"byte_end":138890,"line_start":244,"line_end":244,"column_start":35,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":139172,"byte_end":139179,"line_start":258,"line_end":258,"column_start":47,"column_end":54},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":140564,"byte_end":140571,"line_start":300,"line_end":300,"column_start":41,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":1163},"to":{"krate":0,"index":1226}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/handler/mod.rs","byte_start":141491,"byte_end":141492,"line_start":323,"line_end":323,"column_start":48,"column_end":49},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":1226}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154134,"byte_end":154152,"line_start":119,"line_end":119,"column_start":22,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154344,"byte_end":154362,"line_start":131,"line_end":131,"column_start":27,"column_end":45},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":154684,"byte_end":154702,"line_start":143,"line_end":143,"column_start":28,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1294},"to":{"krate":25,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155375,"byte_end":155388,"line_start":174,"line_end":174,"column_start":25,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":155642,"byte_end":155655,"line_start":188,"line_end":188,"column_start":30,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":156049,"byte_end":156062,"line_start":202,"line_end":202,"column_start":42,"column_end":55},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1313},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_extractor.rs","byte_start":157700,"byte_end":157714,"line_start":265,"line_end":265,"column_start":29,"column_end":43},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4382},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":165935,"byte_end":165946,"line_start":171,"line_end":171,"column_start":25,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166197,"byte_end":166208,"line_start":185,"line_end":185,"column_start":31,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1416},"to":{"krate":25,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":166534,"byte_end":166545,"line_start":202,"line_end":202,"column_start":30,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":167165,"byte_end":167171,"line_start":225,"line_end":225,"column_start":28,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170061,"byte_end":170067,"line_start":313,"line_end":313,"column_start":33,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170561,"byte_end":170565,"line_start":332,"line_end":332,"column_start":9,"column_end":13},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":170832,"byte_end":170836,"line_start":342,"line_end":342,"column_start":24,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1462},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171033,"byte_end":171037,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1462},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171178,"byte_end":171182,"line_start":358,"line_end":358,"column_start":33,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1462},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171688,"byte_end":171702,"line_start":377,"line_end":377,"column_start":17,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1483},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/from_fn.rs","byte_start":171912,"byte_end":171926,"line_start":385,"line_end":385,"column_start":21,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1483},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177612,"byte_end":177627,"line_start":175,"line_end":175,"column_start":25,"column_end":40},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":177878,"byte_end":177893,"line_start":189,"line_end":189,"column_start":31,"column_end":46},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1550},"to":{"krate":25,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178227,"byte_end":178242,"line_start":206,"line_end":206,"column_start":30,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":178900,"byte_end":178910,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":181816,"byte_end":181826,"line_start":318,"line_end":318,"column_start":33,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182289,"byte_end":182303,"line_start":337,"line_end":337,"column_start":17,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182513,"byte_end":182527,"line_start":345,"line_end":345,"column_start":21,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182779,"byte_end":182785,"line_start":355,"line_end":355,"column_start":30,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":2,"index":40991},"to":{"krate":0,"index":1611}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":182852,"byte_end":182859,"line_start":356,"line_end":356,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":20,"index":1367},"to":{"krate":0,"index":1611}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183103,"byte_end":183109,"line_start":363,"line_end":363,"column_start":45,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":1611},"to":{"krate":0,"index":1618}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183259,"byte_end":183265,"line_start":368,"line_end":368,"column_start":40,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":2,"index":40991},"to":{"krate":0,"index":1618}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_request.rs","byte_start":183476,"byte_end":183483,"line_start":377,"line_end":377,"column_start":37,"column_end":44},"kind":{"Impl":{"id":111}},"from":{"krate":20,"index":1367},"to":{"krate":0,"index":1618}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189220,"byte_end":189236,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1684},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189487,"byte_end":189503,"line_start":173,"line_end":173,"column_start":31,"column_end":47},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1684},"to":{"krate":25,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":189839,"byte_end":189855,"line_start":190,"line_end":190,"column_start":30,"column_end":46},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1684},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":190517,"byte_end":190528,"line_start":213,"line_end":213,"column_start":28,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":193903,"byte_end":193914,"line_start":311,"line_end":311,"column_start":33,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194379,"byte_end":194393,"line_start":330,"line_end":330,"column_start":17,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/middleware/map_response.rs","byte_start":194603,"byte_end":194617,"line_start":338,"line_end":338,"column_start":21,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":202467,"byte_end":202475,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/redirect.rs","byte_start":204732,"byte_end":204740,"line_start":89,"line_end":89,"column_start":23,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5522},"to":{"krate":56,"index":440}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196153,"byte_end":196157,"line_start":45,"line_end":45,"column_start":26,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5529},"to":{"krate":56,"index":440}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/response/mod.rs","byte_start":196484,"byte_end":196488,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5529},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":238540,"byte_end":238551,"line_start":540,"line_end":540,"column_start":6,"column_end":17},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239207,"byte_end":239219,"line_start":556,"line_end":556,"column_start":30,"column_end":42},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":239799,"byte_end":239811,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":241546,"byte_end":241558,"line_start":635,"line_end":635,"column_start":9,"column_end":21},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":243893,"byte_end":243905,"line_start":709,"line_end":709,"column_start":15,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":258882,"byte_end":258894,"line_start":1152,"line_end":1152,"column_start":25,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":259400,"byte_end":259412,"line_start":1169,"line_end":1169,"column_start":27,"column_end":39},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":259659,"byte_end":259673,"line_start":1185,"line_end":1185,"column_start":15,"column_end":29},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":260796,"byte_end":260810,"line_start":1224,"line_end":1224,"column_start":25,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2153},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261097,"byte_end":261111,"line_start":1234,"line_end":1234,"column_start":30,"column_end":44},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2153},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261444,"byte_end":261456,"line_start":1244,"line_end":1244,"column_start":36,"column_end":48},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2071},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_routing.rs","byte_start":261885,"byte_end":261897,"line_start":1263,"line_end":1263,"column_start":34,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2071},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272874,"byte_end":272889,"line_start":16,"line_end":16,"column_start":9,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/into_make_service.rs","byte_start":272991,"byte_end":273006,"line_start":22,"line_end":22,"column_start":27,"column_end":42},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5665},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274693,"byte_end":274715,"line_start":36,"line_end":36,"column_start":6,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":274885,"byte_end":274907,"line_start":43,"line_end":43,"column_start":23,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5839},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":275074,"byte_end":275096,"line_start":49,"line_end":49,"column_start":28,"column_end":50},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5839},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/method_filter.rs","byte_start":275126,"byte_end":275138,"line_start":51,"line_end":51,"column_start":26,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5717},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/not_found.rs","byte_start":277494,"byte_end":277502,"line_start":18,"line_end":18,"column_start":33,"column_end":41},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5843},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":278520,"byte_end":278530,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":279034,"byte_end":279044,"line_start":37,"line_end":37,"column_start":37,"column_end":47},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":289975,"byte_end":289985,"line_start":372,"line_end":372,"column_start":49,"column_end":59},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":290236,"byte_end":290246,"line_start":382,"line_end":382,"column_start":52,"column_end":62},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":290527,"byte_end":290537,"line_start":391,"line_end":391,"column_start":47,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":291007,"byte_end":291011,"line_start":409,"line_end":409,"column_start":6,"column_end":10},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/path_router.rs","byte_start":291597,"byte_end":291601,"line_start":434,"line_end":434,"column_start":21,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5850},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":293276,"byte_end":293281,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294620,"byte_end":294625,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2515},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294728,"byte_end":294733,"line_start":77,"line_end":77,"column_start":27,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2515},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":294890,"byte_end":294895,"line_start":83,"line_end":83,"column_start":36,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2515},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":295854,"byte_end":295865,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":296438,"byte_end":296449,"line_start":150,"line_end":150,"column_start":23,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5858},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":298663,"byte_end":298684,"line_start":226,"line_end":226,"column_start":9,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/route.rs","byte_start":298810,"byte_end":298831,"line_start":232,"line_end":232,"column_start":20,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5945},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/strip_prefix.rs","byte_start":299556,"byte_end":299567,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/strip_prefix.rs","byte_start":299988,"byte_end":299999,"line_start":33,"line_end":33,"column_start":36,"column_end":47},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5978},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206544,"byte_end":206550,"line_start":66,"line_end":66,"column_start":22,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":206874,"byte_end":206880,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207049,"byte_end":207055,"line_start":87,"line_end":87,"column_start":27,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":207677,"byte_end":207683,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":216340,"byte_end":216346,"line_start":342,"line_end":342,"column_start":9,"column_end":15},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":217785,"byte_end":217791,"line_start":384,"line_end":384,"column_start":33,"column_end":39},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2718},"to":{"krate":28,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":218350,"byte_end":218358,"line_start":409,"line_end":409,"column_start":15,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":219991,"byte_end":219999,"line_start":458,"line_end":458,"column_start":25,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2781},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":220318,"byte_end":220326,"line_start":468,"line_end":468,"column_start":30,"column_end":38},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2781},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":220818,"byte_end":220826,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":221695,"byte_end":221703,"line_start":507,"line_end":507,"column_start":22,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2816},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.18/src/routing/mod.rs","byte_start":221946,"byte_end":221954,"line_start":516,"line_end":516,"column_start":27,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2816},"to":{"krate":2,"index":10295}}]}