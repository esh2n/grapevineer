{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2","program":"/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tonic","--edition=2021","/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"channel\"","--cfg","feature=\"codegen\"","--cfg","feature=\"default\"","--cfg","feature=\"prost\"","--cfg","feature=\"transport\"","-C","metadata=b4140374a008ed9f","-C","extra-filename=-b4140374a008ed9f","--out-dir","/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","-L","dependency=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps","--extern","async_trait=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libasync_trait-e765ceb80a31bcae.dylib","--extern","axum=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libaxum-37dbe9c0464ab39e.rmeta","--extern","base64=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbase64-37b313386cecaa39.rmeta","--extern","bytes=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libbytes-e80fde13cfdaa1ed.rmeta","--extern","futures_core=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_core-8be431a497bc3c9f.rmeta","--extern","futures_util=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libfutures_util-b494cf234e0f07f9.rmeta","--extern","h2=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libh2-b2af92ddbc331d28.rmeta","--extern","http=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhttp-e26953804186d5d7.rmeta","--extern","http_body=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhttp_body-5d4b542c8e32da69.rmeta","--extern","hyper=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhyper-4fb1bc73701e1ff6.rmeta","--extern","hyper_timeout=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libhyper_timeout-5e16244d8d5f3233.rmeta","--extern","percent_encoding=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpercent_encoding-d7c911d16cb8d19c.rmeta","--extern","pin_project=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libpin_project-eb1ff049ca3f6cf1.rmeta","--extern","prost=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libprost-1f3cf5eeb9f35abb.rmeta","--extern","tokio=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtokio-c13d8bc08def2e00.rmeta","--extern","tokio_stream=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtokio_stream-2705589c36ab849c.rmeta","--extern","tower=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtower-809c23d938735dd8.rmeta","--extern","tower_layer=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtower_layer-bd1df33e337ced1e.rmeta","--extern","tower_service=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtower_service-c1891b78c9faf521.rmeta","--extern","tracing=/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtracing-a8da7cfd09967aa9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/es/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/es/go/github.com/esh2n/grapevineer/target/rls/debug/deps/libtonic-b4140374a008ed9f.rmeta"},"prelude":{"crate_id":{"name":"tonic","disambiguator":[18375962576324703126,0]},"crate_root":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src","external_crates":[{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16128539464339909492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5119190964148522055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10836880961308110442,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9122960886372739080,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16262469955255852816,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6458319553461162962,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12001007181761242293,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17631836945948346775,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[14397519445266417684,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8668729914222175237,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6081650140881955662,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5498968616666872476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2537156866219993108,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16178185567501436822,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3784531562979233881,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17755498883195052578,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11111166150786070161,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[518337477295170700,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6962753159787162907,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","num":20,"id":{"name":"http_body","disambiguator":[12136940658047001828,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","num":21,"id":{"name":"bytes","disambiguator":[5441976563651757446,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","num":22,"id":{"name":"http","disambiguator":[6804580725505175404,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","num":23,"id":{"name":"fnv","disambiguator":[15040427873531084151,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","num":24,"id":{"name":"itoa","disambiguator":[13428814949081963950,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[6971910164290660896,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","num":26,"id":{"name":"futures_core","disambiguator":[9123476880726111055,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","num":27,"id":{"name":"futures_util","disambiguator":[7694453814300953793,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","num":28,"id":{"name":"pin_utils","disambiguator":[568644568986885198,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","num":29,"id":{"name":"futures_task","disambiguator":[15761437803434426678,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","num":30,"id":{"name":"tower_service","disambiguator":[16303854971109284847,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","num":31,"id":{"name":"tracing","disambiguator":[10640532649317078379,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","num":32,"id":{"name":"tracing_core","disambiguator":[1421309024311854827,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","num":33,"id":{"name":"once_cell","disambiguator":[3105578953040151470,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","num":34,"id":{"name":"tracing_attributes","disambiguator":[15682539678954689692,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","num":35,"id":{"name":"cfg_if","disambiguator":[8037730387315135600,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/util.rs","num":36,"id":{"name":"pin_project","disambiguator":[265330023949537341,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/util.rs","num":37,"id":{"name":"pin_project_internal","disambiguator":[588734385584158946,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","num":38,"id":{"name":"prost","disambiguator":[15285855434092549117,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","num":39,"id":{"name":"prost_derive","disambiguator":[13805543166489788830,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","num":40,"id":{"name":"base64","disambiguator":[3840190102876181564,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","num":41,"id":{"name":"tower_layer","disambiguator":[14743386033049793810,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":42,"id":{"name":"tower","disambiguator":[18395068276203530557,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":43,"id":{"name":"rand","disambiguator":[2227364008512732492,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":44,"id":{"name":"rand_core","disambiguator":[280784899682975382,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":45,"id":{"name":"getrandom","disambiguator":[15959646280991551733,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":46,"id":{"name":"libc","disambiguator":[3878213621847001735,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":47,"id":{"name":"rand_chacha","disambiguator":[16789050008323027929,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":48,"id":{"name":"ppv_lite86","disambiguator":[11911600870120059369,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":49,"id":{"name":"tokio","disambiguator":[2164534071916540129,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":50,"id":{"name":"mio","disambiguator":[8424425407149752286,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":51,"id":{"name":"log","disambiguator":[12996859001740394752,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":52,"id":{"name":"tokio_macros","disambiguator":[15899561400381894157,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":53,"id":{"name":"socket2","disambiguator":[4013541389436397340,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":54,"id":{"name":"slab","disambiguator":[4481325763050722982,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":55,"id":{"name":"tokio_util","disambiguator":[17083992789186825057,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":56,"id":{"name":"futures_sink","disambiguator":[16918135308039601362,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":57,"id":{"name":"indexmap","disambiguator":[6638787429486228540,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":58,"id":{"name":"hashbrown","disambiguator":[13571119530625034222,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":59,"id":{"name":"hyper","disambiguator":[2232558708335651732,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":60,"id":{"name":"httpdate","disambiguator":[10536693048113369124,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":61,"id":{"name":"futures_channel","disambiguator":[14150896857860075213,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","num":62,"id":{"name":"h2","disambiguator":[3924981800782476062,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":63,"id":{"name":"httparse","disambiguator":[4022596938561856078,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":64,"id":{"name":"want","disambiguator":[3315397095608833603,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","num":65,"id":{"name":"try_lock","disambiguator":[15130702162584555777,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","num":66,"id":{"name":"tokio_stream","disambiguator":[4585657869128861670,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","num":67,"id":{"name":"percent_encoding","disambiguator":[5112896467010261535,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","num":68,"id":{"name":"async_trait","disambiguator":[5200532413426772501,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":69,"id":{"name":"hyper_timeout","disambiguator":[8319122735618721999,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","num":70,"id":{"name":"tokio_io_timeout","disambiguator":[6299049550047634257,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":71,"id":{"name":"axum","disambiguator":[9053848852422097261,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":72,"id":{"name":"axum_core","disambiguator":[16473010957615913463,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":73,"id":{"name":"mime","disambiguator":[16993739840941636744,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":74,"id":{"name":"sync_wrapper","disambiguator":[15295030364843232476,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":75,"id":{"name":"serde","disambiguator":[615399658882494608,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":76,"id":{"name":"bitflags","disambiguator":[9570617667018167498,0]}},{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","num":77,"id":{"name":"matchit","disambiguator":[10383918701971444776,0]}}],"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":0,"byte_end":5481,"line_start":1,"line_end":136,"column_start":1,"column_end":60}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6972,"byte_end":6976,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":7001,"byte_end":7012,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"alias_span":null,"name":"GrpcService","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3641},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24247,"byte_end":24256,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"DecodeBuf","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":0,"index":3648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24258,"byte_end":24267,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"alias_span":null,"name":"EncodeBuf","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24298,"byte_end":24317,"line_start":19,"line_end":19,"column_start":29,"column_end":48},"alias_span":null,"name":"CompressionEncoding","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24319,"byte_end":24346,"line_start":19,"line_end":19,"column_start":50,"column_end":77},"alias_span":null,"name":"EnabledCompressionEncodings","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24371,"byte_end":24380,"line_start":20,"line_end":20,"column_start":23,"column_end":32},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24478,"byte_end":24488,"line_start":23,"line_end":23,"column_start":22,"column_end":32},"alias_span":null,"name":"ProstCodec","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":0,"index":3888},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67283,"byte_end":67288,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"alias_span":null,"name":"Ascii","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3902},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67314,"byte_end":67320,"line_start":9,"line_end":9,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67341,"byte_end":67357,"line_start":10,"line_end":10,"column_start":20,"column_end":36},"alias_span":null,"name":"AsciiMetadataKey","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67378,"byte_end":67395,"line_start":11,"line_end":11,"column_start":20,"column_end":37},"alias_span":null,"name":"BinaryMetadataKey","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67416,"byte_end":67427,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataKey","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4083},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67448,"byte_end":67453,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4074},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67474,"byte_end":67480,"line_start":14,"line_end":14,"column_start":20,"column_end":26},"alias_span":null,"name":"GetAll","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67501,"byte_end":67505,"line_start":15,"line_end":15,"column_start":20,"column_end":24},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3990},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67526,"byte_end":67533,"line_start":16,"line_end":16,"column_start":20,"column_end":27},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3977},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67554,"byte_end":67571,"line_start":17,"line_end":17,"column_start":20,"column_end":37},"alias_span":null,"name":"KeyAndMutValueRef","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67592,"byte_end":67606,"line_start":18,"line_end":18,"column_start":20,"column_end":34},"alias_span":null,"name":"KeyAndValueRef","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4011},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67627,"byte_end":67633,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"alias_span":null,"name":"KeyRef","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4005},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67654,"byte_end":67658,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67679,"byte_end":67690,"line_start":21,"line_end":21,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataMap","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67711,"byte_end":67724,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4096},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67745,"byte_end":67756,"line_start":23,"line_end":23,"column_start":20,"column_end":31},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3996},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67777,"byte_end":67787,"line_start":24,"line_end":24,"column_start":20,"column_end":30},"alias_span":null,"name":"ValueDrain","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67808,"byte_end":67817,"line_start":25,"line_end":25,"column_start":20,"column_end":29},"alias_span":null,"name":"ValueIter","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4028},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67838,"byte_end":67846,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67867,"byte_end":67878,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"alias_span":null,"name":"ValueRefMut","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4022},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67899,"byte_end":67905,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4039},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67926,"byte_end":67935,"line_start":29,"line_end":29,"column_start":20,"column_end":29},"alias_span":null,"name":"ValuesMut","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67958,"byte_end":67976,"line_start":30,"line_end":30,"column_start":22,"column_end":40},"alias_span":null,"name":"AsciiMetadataValue","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67999,"byte_end":68018,"line_start":31,"line_end":31,"column_start":22,"column_end":41},"alias_span":null,"name":"BinaryMetadataValue","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":4114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68041,"byte_end":68054,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"alias_span":null,"name":"MetadataValue","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":3881},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68265,"byte_end":68285,"line_start":39,"line_end":39,"column_start":30,"column_end":50},"alias_span":null,"name":"InvalidMetadataValue","value":"","parent":{"krate":0,"index":1489}},{"kind":"Use","ref_id":{"krate":0,"index":3916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68316,"byte_end":68341,"line_start":40,"line_end":40,"column_start":30,"column_end":55},"alias_span":null,"name":"InvalidMetadataValueBytes","value":"","parent":{"krate":0,"index":1489}},{"kind":"Use","ref_id":{"krate":0,"index":3946},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68367,"byte_end":68385,"line_start":41,"line_end":41,"column_start":25,"column_end":43},"alias_span":null,"name":"InvalidMetadataKey","value":"","parent":{"krate":0,"index":1489}},{"kind":"Use","ref_id":{"krate":0,"index":4121},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68413,"byte_end":68423,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"alias_span":null,"name":"ToStrError","value":"","parent":{"krate":0,"index":1489}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203780,"byte_end":203784,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":1502}},{"kind":"Use","ref_id":{"krate":0,"index":1679},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203815,"byte_end":203837,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"alias_span":null,"name":"ClientStreamingService","value":"","parent":{"krate":0,"index":1502}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203839,"byte_end":203861,"line_start":16,"line_end":16,"column_start":29,"column_end":51},"alias_span":null,"name":"ServerStreamingService","value":"","parent":{"krate":0,"index":1502}},{"kind":"Use","ref_id":{"krate":0,"index":1691},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203863,"byte_end":203879,"line_start":16,"line_end":16,"column_start":53,"column_end":69},"alias_span":null,"name":"StreamingService","value":"","parent":{"krate":0,"index":1502}},{"kind":"Use","ref_id":{"krate":0,"index":1652},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203881,"byte_end":203893,"line_start":16,"line_end":16,"column_start":71,"column_end":83},"alias_span":null,"name":"UnaryService","value":"","parent":{"krate":0,"index":1502}},{"kind":"Use","ref_id":{"krate":0,"index":1774},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","byte_start":223456,"byte_end":223467,"line_start":7,"line_end":7,"column_start":29,"column_end":40},"alias_span":null,"name":"interceptor","value":"","parent":{"krate":0,"index":1724}},{"kind":"Use","ref_id":{"krate":0,"index":1776},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","byte_start":223469,"byte_end":223483,"line_start":7,"line_end":7,"column_start":42,"column_end":56},"alias_span":null,"name":"interceptor_fn","value":"","parent":{"krate":0,"index":1724}},{"kind":"Use","ref_id":{"krate":0,"index":1769},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","byte_start":223485,"byte_end":223496,"line_start":7,"line_end":7,"column_start":58,"column_end":69},"alias_span":null,"name":"Interceptor","value":"","parent":{"krate":0,"index":1724}},{"kind":"Use","ref_id":{"krate":0,"index":4252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":238208,"byte_end":238216,"line_start":8,"line_end":8,"column_start":19,"column_end":27},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1831}},{"kind":"Use","ref_id":{"krate":0,"index":4858},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261415,"byte_end":261421,"line_start":12,"line_end":12,"column_start":25,"column_end":31},"alias_span":null,"name":"Routes","value":"","parent":{"krate":0,"index":2075}},{"kind":"Use","ref_id":{"krate":0,"index":1722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261446,"byte_end":261458,"line_start":13,"line_end":13,"column_start":24,"column_end":36},"alias_span":null,"name":"NamedService","value":"","parent":{"krate":0,"index":2075}},{"kind":"Use","ref_id":{"krate":0,"index":2086},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261475,"byte_end":261484,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"alias_span":null,"name":"Connected","value":"","parent":{"krate":0,"index":2075}},{"kind":"Use","ref_id":{"krate":0,"index":4276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261486,"byte_end":261500,"line_start":14,"line_end":14,"column_start":27,"column_end":41},"alias_span":null,"name":"TcpConnectInfo","value":"","parent":{"krate":0,"index":2075}},{"kind":"Use","ref_id":{"krate":0,"index":4376},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261698,"byte_end":261712,"line_start":25,"line_end":25,"column_start":15,"column_end":29},"alias_span":null,"name":"UdsConnectInfo","value":"","parent":{"krate":0,"index":2075}},{"kind":"Use","ref_id":{"krate":0,"index":4283},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261733,"byte_end":261744,"line_start":27,"line_end":27,"column_start":19,"column_end":30},"alias_span":null,"name":"TcpIncoming","value":"","parent":{"krate":0,"index":2075}},{"kind":"Use","ref_id":{"krate":0,"index":4858},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/mod.rs","byte_start":308029,"byte_end":308035,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Routes","value":"","parent":{"krate":0,"index":2530}},{"kind":"Use","ref_id":{"krate":0,"index":4272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237295,"byte_end":237302,"line_start":99,"line_end":99,"column_start":25,"column_end":32},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":0,"index":4252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237304,"byte_end":237312,"line_start":99,"line_end":99,"column_start":34,"column_end":42},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":0,"index":2509},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237336,"byte_end":237341,"line_start":100,"line_end":100,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":0,"index":4383},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237380,"byte_end":237386,"line_start":102,"line_end":102,"column_start":23,"column_end":29},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":0,"index":4553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237440,"byte_end":237454,"line_start":104,"line_end":104,"column_start":38,"column_end":52},"alias_span":null,"name":"TimeoutExpired","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":0,"index":4906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237475,"byte_end":237486,"line_start":105,"line_end":105,"column_start":20,"column_end":31},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":0,"index":1722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237526,"byte_end":237538,"line_start":107,"line_end":107,"column_start":24,"column_end":36},"alias_span":null,"name":"NamedService","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":59,"index":547},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237556,"byte_end":237560,"line_start":108,"line_end":108,"column_start":17,"column_end":21},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":22,"index":3248},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237562,"byte_end":237565,"line_start":108,"line_end":108,"column_start":23,"column_end":26},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":1830}},{"kind":"Use","ref_id":{"krate":68,"index":511},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4842,"byte_end":4853,"line_start":118,"line_end":118,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4886,"byte_end":4895,"line_start":121,"line_end":121,"column_start":16,"column_end":25},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4912},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4918,"byte_end":4928,"line_start":122,"line_end":122,"column_start":22,"column_end":32},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4930,"byte_end":4940,"line_start":122,"line_end":122,"column_start":34,"column_end":44},"alias_span":null,"name":"GrpcMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4961,"byte_end":4972,"line_start":123,"line_end":123,"column_start":19,"column_end":30},"alias_span":null,"name":"IntoRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3259},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4974,"byte_end":4994,"line_start":123,"line_end":123,"column_start":32,"column_end":52},"alias_span":null,"name":"IntoStreamingRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4996,"byte_end":5003,"line_start":123,"line_end":123,"column_start":54,"column_end":61},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4929},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5024,"byte_end":5032,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5051,"byte_end":5055,"line_start":125,"line_end":125,"column_start":18,"column_end":22},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4937},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5057,"byte_end":5063,"line_start":125,"line_end":125,"column_start":24,"column_end":30},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":511},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408654,"byte_end":408665,"line_start":3,"line_end":3,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":26,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408675,"byte_end":408687,"line_start":4,"line_end":4,"column_start":9,"column_end":21},"alias_span":null,"name":"futures_core","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":27,"index":931},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408720,"byte_end":408722,"line_start":5,"line_end":5,"column_start":32,"column_end":34},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":27,"index":828},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408724,"byte_end":408731,"line_start":5,"line_end":5,"column_start":36,"column_end":43},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":27,"index":8426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408733,"byte_end":408738,"line_start":5,"line_end":5,"column_start":45,"column_end":50},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":2,"index":13770},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408763,"byte_end":408769,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":2,"index":40983},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408789,"byte_end":408792,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":5,"index":6652},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408813,"byte_end":408816,"line_start":9,"line_end":9,"column_start":20,"column_end":23},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":2,"index":14072},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408838,"byte_end":408845,"line_start":10,"line_end":10,"column_start":21,"column_end":28},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":2,"index":43815},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408847,"byte_end":408851,"line_start":10,"line_end":10,"column_start":30,"column_end":34},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":30,"index":13},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408877,"byte_end":408884,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408981,"byte_end":409000,"line_start":13,"line_end":13,"column_start":24,"column_end":43},"alias_span":null,"name":"CompressionEncoding","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409002,"byte_end":409029,"line_start":13,"line_end":13,"column_start":45,"column_end":72},"alias_span":null,"name":"EnabledCompressionEncodings","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":0,"index":4916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409059,"byte_end":409069,"line_start":14,"line_end":14,"column_start":28,"column_end":38},"alias_span":null,"name":"GrpcMethod","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":0,"index":4152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409108,"byte_end":409126,"line_start":15,"line_end":15,"column_start":38,"column_end":56},"alias_span":null,"name":"InterceptedService","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":21,"index":557},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409143,"byte_end":409148,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409158,"byte_end":409162,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":20,"index":470},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409183,"byte_end":409187,"line_start":18,"line_end":18,"column_start":20,"column_end":24},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":3571}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409433,"byte_end":409443,"line_start":24,"line_end":24,"column_start":22,"column_end":32},"alias_span":null,"name":"empty_body","value":"","parent":{"krate":0,"index":3571}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":0,"byte_end":5481,"line_start":1,"line_end":136,"column_start":1,"column_end":60},"name":"","qualname":"::","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":200},{"krate":0,"index":628},{"krate":0,"index":1502},{"krate":0,"index":1724},{"krate":0,"index":1830},{"krate":0,"index":3199},{"krate":0,"index":3222},{"krate":0,"index":3225},{"krate":0,"index":3327},{"krate":0,"index":3352},{"krate":0,"index":3515},{"krate":0,"index":3537},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3638}],"decl_id":null,"docs":" A Rust implementation of [gRPC], a high performance, open source, general\n RPC framework that puts mobile and HTTP/2 first.","sig":null,"attributes":[{"value":"/ A Rust implementation of [gRPC], a high performance, open source, general","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ RPC framework that puts mobile and HTTP/2 first.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":78,"byte_end":130,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":131,"byte_end":134,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`tonic`] is a gRPC over HTTP/2 implementation focused on **high","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":135,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ performance**, **interoperability**, and **flexibility**. This library was","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":204,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ created to have first class support of async/await and to act as a core building","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":283,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ block for production systems written in Rust.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":368,"byte_end":417,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":418,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":422,"byte_end":436,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":437,"byte_end":440,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Examples can be found in the [`tonic-examples`] crate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":441,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":500,"byte_end":503,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":504,"byte_end":525,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":526,"byte_end":529,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Follow the instructions in the [`tonic-build`] crate documentation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":530,"byte_end":601,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":602,"byte_end":605,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Feature Flags","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":606,"byte_end":625,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":626,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - `transport`: Enables the fully featured, batteries included client and server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":630,"byte_end":713,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/     implementation based on [`hyper`], [`tower`] and [`tokio`]. Enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":714,"byte_end":801,"line_start":20,"line_end":20,"column_start":1,"column_end":88}},{"value":"/ - `channel`: Enables just the full featured channel/client portion of the `transport`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":802,"byte_end":891,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/     feature.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":892,"byte_end":908,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/ - `codegen`: Enables all the required exports and optional dependencies required","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":909,"byte_end":993,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ for [`tonic-build`]. Enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":994,"byte_end":1038,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ - `tls`: Enables the `rustls` based TLS options for the `transport` feature. Not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1039,"byte_end":1123,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/ enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1124,"byte_end":1147,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ - `tls-roots`: Adds system trust roots to `rustls`-based gRPC clients using the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1148,"byte_end":1231,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ `rustls-native-certs` crate. Not enabled by default. `tls` must be enabled to use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1232,"byte_end":1317,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ `tls-roots`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1318,"byte_end":1334,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ - `tls-webpki-roots`: Add the standard trust roots from the `webpki-roots` crate to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1335,"byte_end":1422,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/ `rustls`-based gRPC clients. Not enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1423,"byte_end":1479,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ - `prost`: Enables the [`prost`] based gRPC [`Codec`] implementation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1480,"byte_end":1553,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ - `gzip`: Enables compressing requests, responses, and streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1554,"byte_end":1621,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ Depends on [flate2]. Not enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1622,"byte_end":1670,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/ Replaces the `compression` flag from earlier versions of `tonic` (<= 0.7).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1671,"byte_end":1749,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1750,"byte_end":1753,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Structure","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1754,"byte_end":1769,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1770,"byte_end":1773,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Generic implementation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1774,"byte_end":1803,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1804,"byte_end":1807,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The main goal of [`tonic`] is to provide a generic gRPC implementation over HTTP/2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1808,"byte_end":1894,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ framing. This means at the lowest level this library provides the ability to use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1895,"byte_end":1979,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ a generic HTTP/2 implementation with different types of gRPC encodings formats. Generally,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":1980,"byte_end":2074,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ some form of codegen should be used instead of interacting directly with the items in","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2075,"byte_end":2164,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/ [`client`] and [`server`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2165,"byte_end":2195,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2196,"byte_end":2199,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Transport","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2200,"byte_end":2216,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The [`transport`] module contains a fully featured HTTP/2.0 [`Channel`] (gRPC terminology)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2221,"byte_end":2315,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/ and [`Server`]. These implementations are built on top of [`tokio`], [`hyper`] and [`tower`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2316,"byte_end":2413,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ It also provides many of the features that the core gRPC libraries provide such as load balancing,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2414,"byte_end":2516,"line_start":51,"line_end":51,"column_start":1,"column_end":103}},{"value":"/ tls, timeouts, and many more. This implementation can also be used as a reference implementation","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2517,"byte_end":2617,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/ to build even more feature rich clients and servers. This module also provides the ability to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2618,"byte_end":2715,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ enable TLS using [`rustls`], via the `tls` feature flag.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2716,"byte_end":2776,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2777,"byte_end":2780,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Code generated client/server configuration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2781,"byte_end":2829,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2830,"byte_end":2833,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Max Message Size","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2834,"byte_end":2857,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2858,"byte_end":2861,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Currently, both servers and clients can be configured to set the max message encoding and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2862,"byte_end":2955,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ decoding size. This will ensure that an incoming gRPC message will not exahust the systems","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":2956,"byte_end":3050,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/ memory. By default, the decoding message limit is `4MB` and the encoding limit is `usize::MAX`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3051,"byte_end":3150,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3151,"byte_end":3154,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [gRPC]: https://grpc.io","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3155,"byte_end":3182,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ [`tonic`]: https://github.com/hyperium/tonic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3183,"byte_end":3231,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3232,"byte_end":3268,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ [`prost`]: https://docs.rs/prost","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3269,"byte_end":3305,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ [`hyper`]: https://docs.rs/hyper","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3306,"byte_end":3342,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/ [`tower`]: https://docs.rs/tower","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3343,"byte_end":3379,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/ [`tonic-build`]: https://docs.rs/tonic-build","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3380,"byte_end":3428,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/ [`tonic-examples`]: https://github.com/hyperium/tonic/tree/master/examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3429,"byte_end":3507,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ [`Codec`]: codec/trait.Codec.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3508,"byte_end":3545,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ [`Channel`]: transport/struct.Channel.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3546,"byte_end":3592,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/ [`Server`]: transport/struct.Server.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3593,"byte_end":3637,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ [`rustls`]: https://docs.rs/rustls","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3638,"byte_end":3676,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3677,"byte_end":3710,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/ [`transport`]: transport/index.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3711,"byte_end":3750,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ [flate2]: https://crates.io/crates/flate2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3751,"byte_end":3796,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3798,"byte_end":3825,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"allow(clippy :: inconsistent_struct_constructor)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3826,"byte_end":3876,"line_start":81,"line_end":81,"column_start":1,"column_end":51}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3877,"byte_end":3983,"line_start":82,"line_end":87,"column_start":1,"column_end":3}},{"value":"deny(rustdoc :: broken_intra_doc_links)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":3984,"byte_end":4025,"line_start":88,"line_end":88,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10}],"decl_id":null,"docs":" HTTP specific body utilities.\n","sig":null,"attributes":[{"value":"/ HTTP specific body utilities.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","byte_start":5483,"byte_end":5516,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":7},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","byte_start":5602,"byte_end":5609,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"BoxBody","qualname":"::body::BoxBody","value":"http_body::combinators::UnsyncBoxBody<bytes::Bytes, crate::Status>","parent":null,"children":[],"decl_id":null,"docs":" A type erased HTTP body used for tonic services.\n","sig":null,"attributes":[{"value":"/ A type erased HTTP body used for tonic services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","byte_start":5540,"byte_end":5592,"line_start":5,"line_end":5,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","byte_start":5980,"byte_end":5990,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"empty_body","qualname":"::body::empty_body","value":"fn empty_body() -> BoxBody","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `BoxBody`\n","sig":null,"attributes":[{"value":"/ Create an empty `BoxBody`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/body.rs","byte_start":5943,"byte_end":5972,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":161},{"krate":0,"index":194},{"krate":0,"index":197}],"decl_id":null,"docs":" Generic client implementation.","sig":null,"attributes":[{"value":"/ Generic client implementation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6098,"byte_end":6132,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6133,"byte_end":6136,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC client. It","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6137,"byte_end":6213,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC client dispatcher and a decorated tower","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6214,"byte_end":6288,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ service trait.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6289,"byte_end":6307,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6308,"byte_end":6311,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This client is generally used by some code generation tool to provide stubs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6312,"byte_end":6391,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ for the gRPC service. Thusly, they are a bit cumbersome to use by hand.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6392,"byte_end":6467,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6468,"byte_end":6471,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Concurrent usage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6472,"byte_end":6495,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6496,"byte_end":6499,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Upon using the your generated client, you will discover all the functions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6500,"byte_end":6577,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ corresponding to your rpc methods take `&mut self`, making concurrent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6578,"byte_end":6651,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ usage of the client difficult. The answer is simply to clone the client,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6652,"byte_end":6728,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ which is cheap as all client instances will share the same channel for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6729,"byte_end":6803,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ communication. For more details, see","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6804,"byte_end":6844,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ [transport::Channel](../transport/struct.Channel.html#multiplexing-requests).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/mod.rs","byte_start":6845,"byte_end":6926,"line_start":17,"line_end":17,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":96},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8177,"byte_end":8181,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::client::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" A gRPC client dispatcher.","sig":null,"attributes":[{"value":"/ A gRPC client dispatcher.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7489,"byte_end":7518,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7519,"byte_end":7522,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`GrpcService`] and will encode/decode","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7523,"byte_end":7591,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ messages via the provided codec.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7592,"byte_end":7628,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7629,"byte_end":7632,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Each request method takes a [`Request`], a [`PathAndQuery`], and a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7633,"byte_end":7703,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ [`Codec`]. The request contains the message to send via the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7704,"byte_end":7767,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ [`Codec::encoder`]. The path determines the fully qualified path","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7768,"byte_end":7836,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ that will be append to the outgoing uri. The path must follow","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7837,"byte_end":7902,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ the conventions explained in the [gRPC protocol definition] under `Path →`. An","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7903,"byte_end":7987,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ example of this path could look like `/greeter.Greeter/SayHello`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":7988,"byte_end":8057,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8058,"byte_end":8061,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [gRPC protocol definition]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8062,"byte_end":8165,"line_start":30,"line_end":30,"column_start":1,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8818,"byte_end":8821,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8742,"byte_end":8806,"line_start":49,"line_end":49,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9133,"byte_end":9144,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"with_origin","qualname":"<Grpc<T>>::with_origin","value":"fn with_origin(T, Uri) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`] and `Uri`.","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`] and `Uri`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8902,"byte_end":8976,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8981,"byte_end":8984,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The provided Uri will use only the scheme and authority parts as the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8989,"byte_end":9061,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ path_and_query portion will be set for each method.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9066,"byte_end":9121,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10443,"byte_end":10458,"line_start":97,"line_end":97,"column_start":12,"column_end":27},"name":"send_compressed","qualname":"<Grpc<T>>::send_compressed","value":"fn send_compressed(Self, CompressionEncoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compress requests with the provided encoding.","sig":null,"attributes":[{"value":"/ Compress requests with the provided encoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9539,"byte_end":9588,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9593,"byte_end":9596,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Requires the server to accept the specified encoding, otherwise it might return an error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9601,"byte_end":9694,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9699,"byte_end":9702,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9707,"byte_end":9720,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9725,"byte_end":9728,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a client generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9733,"byte_end":9816,"line_start":77,"line_end":77,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9821,"byte_end":9824,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9829,"byte_end":9840,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ use tonic::transport::Channel;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9845,"byte_end":9879,"line_start":80,"line_end":80,"column_start":5,"column_end":39}},{"value":"/ # enum CompressionEncoding { Gzip }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9884,"byte_end":9923,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ # struct TestClient<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9928,"byte_end":9958,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ # impl<T> TestClient<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9963,"byte_end":9992,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/ #     fn new(channel: T) -> Self { Self(channel) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":9997,"byte_end":10051,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/ #     fn send_compressed(self, _: CompressionEncoding) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10056,"byte_end":10131,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10136,"byte_end":10143,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10148,"byte_end":10151,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10156,"byte_end":10169,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ let channel = Channel::builder(\"127.0.0.1:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10174,"byte_end":10243,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/     .connect()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10248,"byte_end":10266,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/     .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10271,"byte_end":10285,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/     .unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10290,"byte_end":10308,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10313,"byte_end":10316,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let client = TestClient::new(channel).send_compressed(CompressionEncoding::Gzip);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10321,"byte_end":10406,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10411,"byte_end":10419,"line_start":95,"line_end":95,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10424,"byte_end":10431,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11476,"byte_end":11493,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"accept_compressed","qualname":"<Grpc<T>>::accept_compressed","value":"fn accept_compressed(Self, CompressionEncoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable accepting compressed responses.","sig":null,"attributes":[{"value":"/ Enable accepting compressed responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10599,"byte_end":10641,"line_start":102,"line_end":102,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10646,"byte_end":10649,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Requires the server to also support sending compressed responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10654,"byte_end":10723,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10728,"byte_end":10731,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10736,"byte_end":10749,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10754,"byte_end":10757,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a client generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10762,"byte_end":10845,"line_start":108,"line_end":108,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10850,"byte_end":10853,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10858,"byte_end":10869,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ use tonic::transport::Channel;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10874,"byte_end":10908,"line_start":111,"line_end":111,"column_start":5,"column_end":39}},{"value":"/ # enum CompressionEncoding { Gzip }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10913,"byte_end":10952,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/ # struct TestClient<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10957,"byte_end":10987,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ # impl<T> TestClient<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":10992,"byte_end":11021,"line_start":114,"line_end":114,"column_start":5,"column_end":34}},{"value":"/ #     fn new(channel: T) -> Self { Self(channel) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11026,"byte_end":11080,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/ #     fn accept_compressed(self, _: CompressionEncoding) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11085,"byte_end":11162,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11167,"byte_end":11174,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11179,"byte_end":11182,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11187,"byte_end":11200,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ let channel = Channel::builder(\"127.0.0.1:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11205,"byte_end":11274,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/     .connect()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11279,"byte_end":11297,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/     .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11302,"byte_end":11316,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/     .unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11321,"byte_end":11339,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11344,"byte_end":11347,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let client = TestClient::new(channel).accept_compressed(CompressionEncoding::Gzip);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11352,"byte_end":11439,"line_start":125,"line_end":125,"column_start":5,"column_end":92}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11444,"byte_end":11452,"line_start":126,"line_end":126,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11457,"byte_end":11464,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12463,"byte_end":12488,"line_start":158,"line_end":158,"column_start":12,"column_end":37},"name":"max_decoding_message_size","qualname":"<Grpc<T>>::max_decoding_message_size","value":"fn max_decoding_message_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limits the maximum size of a decoded message.","sig":null,"attributes":[{"value":"/ Limits the maximum size of a decoded message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11636,"byte_end":11685,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11690,"byte_end":11693,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11698,"byte_end":11711,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11716,"byte_end":11719,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a client generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11724,"byte_end":11807,"line_start":137,"line_end":137,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11812,"byte_end":11815,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11820,"byte_end":11831,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/ use tonic::transport::Channel;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11836,"byte_end":11870,"line_start":140,"line_end":140,"column_start":5,"column_end":39}},{"value":"/ # struct TestClient<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11875,"byte_end":11905,"line_start":141,"line_end":141,"column_start":5,"column_end":35}},{"value":"/ # impl<T> TestClient<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11910,"byte_end":11939,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/ #     fn new(channel: T) -> Self { Self(channel) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":11944,"byte_end":11998,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ #     fn max_decoding_message_size(self, _: usize) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12003,"byte_end":12074,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12079,"byte_end":12086,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12091,"byte_end":12094,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12099,"byte_end":12112,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ let channel = Channel::builder(\"127.0.0.1:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12117,"byte_end":12186,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/     .connect()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12191,"byte_end":12209,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/     .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12214,"byte_end":12228,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/     .unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12233,"byte_end":12251,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12256,"byte_end":12259,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ // Set the limit to 2MB, Defaults to 4MB.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12264,"byte_end":12309,"line_start":153,"line_end":153,"column_start":5,"column_end":50}},{"value":"/ let limit = 2 * 1024 * 1024;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12314,"byte_end":12346,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/ let client = TestClient::new(channel).max_decoding_message_size(limit);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12351,"byte_end":12426,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12431,"byte_end":12439,"line_start":156,"line_end":156,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12444,"byte_end":12451,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13435,"byte_end":13460,"line_start":188,"line_end":188,"column_start":12,"column_end":37},"name":"max_encoding_message_size","qualname":"<Grpc<T>>::max_encoding_message_size","value":"fn max_encoding_message_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limits the maximum size of an ecoded message.","sig":null,"attributes":[{"value":"/ Limits the maximum size of an ecoded message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12608,"byte_end":12657,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12662,"byte_end":12665,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12670,"byte_end":12683,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12688,"byte_end":12691,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a client generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12696,"byte_end":12779,"line_start":167,"line_end":167,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12784,"byte_end":12787,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12792,"byte_end":12803,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/ use tonic::transport::Channel;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12808,"byte_end":12842,"line_start":170,"line_end":170,"column_start":5,"column_end":39}},{"value":"/ # struct TestClient<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12847,"byte_end":12877,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/ # impl<T> TestClient<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12882,"byte_end":12911,"line_start":172,"line_end":172,"column_start":5,"column_end":34}},{"value":"/ #     fn new(channel: T) -> Self { Self(channel) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12916,"byte_end":12970,"line_start":173,"line_end":173,"column_start":5,"column_end":59}},{"value":"/ #     fn max_encoding_message_size(self, _: usize) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":12975,"byte_end":13046,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13051,"byte_end":13058,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13063,"byte_end":13066,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # async {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13071,"byte_end":13084,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ let channel = Channel::builder(\"127.0.0.1:3000\".parse().unwrap())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13089,"byte_end":13158,"line_start":178,"line_end":178,"column_start":5,"column_end":74}},{"value":"/     .connect()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13163,"byte_end":13181,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/     .await","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13186,"byte_end":13200,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/     .unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13205,"byte_end":13223,"line_start":181,"line_end":181,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13228,"byte_end":13231,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ // Set the limit to 2MB, Defaults to 4MB.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13236,"byte_end":13281,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ let limit = 2 * 1024 * 1024;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13286,"byte_end":13318,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"/ let client = TestClient::new(channel).max_encoding_message_size(limit);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13323,"byte_end":13398,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ # };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13403,"byte_end":13411,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13416,"byte_end":13423,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13866,"byte_end":13871,"line_start":198,"line_end":198,"column_start":18,"column_end":23},"name":"ready","qualname":"<Grpc<T>>::ready","value":"async fn ready<'_>(&'_ mut Self) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Check if the inner [`GrpcService`] is able to accept a  new request.","sig":null,"attributes":[{"value":"/ Check if the inner [`GrpcService`] is able to accept a  new request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13580,"byte_end":13652,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13657,"byte_end":13660,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This will call [`GrpcService::poll_ready`] until it returns ready or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13665,"byte_end":13737,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ an error. If this returns ready the inner [`GrpcService`] is ready to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13742,"byte_end":13815,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ accept one more request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":13820,"byte_end":13848,"line_start":197,"line_end":197,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":14084,"byte_end":14089,"line_start":206,"line_end":206,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"async fn unary<M1, M2, C, '_>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nSend + 'static, <T::ResponseBody as Body>::Error: Into<crate::Error>,\nC: Codec<Encode = M1, Decode = M2>, M1: Send + Sync + 'static, M2: Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a single unary gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":14029,"byte_end":14066,"line_start":205,"line_end":205,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":14712,"byte_end":14728,"line_start":225,"line_end":225,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"async fn client_streaming<S, M1, M2, C,\n'_>(&'_ mut Self, Request<S>, PathAndQuery, C) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>, T::ResponseBody: Body + Send + 'static,\n<T::ResponseBody as Body>::Error: Into<crate::Error>, S: Stream<Item = M1> +\nSend + 'static, C: Codec<Encode = M1, Decode = M2>, M1: Send + Sync + 'static,\nM2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a client side streaming gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":14648,"byte_end":14694,"line_start":224,"line_end":224,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":15882,"byte_end":15898,"line_start":262,"line_end":262,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"async fn server_streaming<M1, M2, C,\n'_>(&'_ mut Self, Request<M1>, PathAndQuery, C) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>, T::ResponseBody: Body + Send + 'static,\n<T::ResponseBody as Body>::Error: Into<crate::Error>, C: Codec<Encode = M1,\nDecode = M2>, M1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a server side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a server side streaming gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":15818,"byte_end":15864,"line_start":261,"line_end":261,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":16528,"byte_end":16537,"line_start":281,"line_end":281,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"async fn streaming<S, M1, M2, C,\n'_>(&'_ mut Self, Request<S>, PathAndQuery, C) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>, T::ResponseBody: Body + Send + 'static,\n<T::ResponseBody as Body>::Error: Into<crate::Error>, S: Stream<Item = M1> +\nSend + 'static, C: Codec<Encode = M1, Decode = M2>, M1: Send + Sync + 'static,\nM2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a bi-directional streaming gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":16461,"byte_end":16510,"line_start":280,"line_end":280,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":20915,"byte_end":20920,"line_start":425,"line_end":425,"column_start":8,"column_end":13},"name":"clone","qualname":"<Grpc<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":21499,"byte_end":21502,"line_start":440,"line_end":440,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Grpc<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22592,"byte_end":22603,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"GrpcService","qualname":"::client::service::GrpcService","value":"GrpcService<ReqBody>","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" Definition of the gRPC trait alias for [`tower_service`].","sig":null,"attributes":[{"value":"/ Definition of the gRPC trait alias for [`tower_service`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22314,"byte_end":22375,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22376,"byte_end":22379,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait enforces that all tower services provided to [`Grpc`] implements","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22380,"byte_end":22459,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ the correct traits.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22460,"byte_end":22483,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22484,"byte_end":22487,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Grpc`]: ../client/struct.Grpc.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22488,"byte_end":22528,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`tower_service`]: https://docs.rs/tower-service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22529,"byte_end":22581,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22669,"byte_end":22681,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"ResponseBody","qualname":"::client::service::GrpcService::ResponseBody","value":"type ResponseBody: Body;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Responses body given by the service.\n","sig":null,"attributes":[{"value":"/ Responses body given by the service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22619,"byte_end":22659,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22738,"byte_end":22743,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::client::service::GrpcService::Error","value":"type Error: Into<crate::Error>;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22693,"byte_end":22728,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":182},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22809,"byte_end":22815,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Future","qualname":"::client::service::GrpcService::Future","value":"type Future: Future<Output = Result<http::Response<Self::ResponseBody>, Self::Error>>;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22769,"byte_end":22799,"line_start":18,"line_end":18,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23020,"byte_end":23030,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::client::service::GrpcService::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Returns `Ready` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the service is able to process requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22896,"byte_end":22961,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22966,"byte_end":22969,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::poll_ready`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":22974,"byte_end":23012,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23219,"byte_end":23223,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"call","qualname":"::client::service::GrpcService::call","value":"fn call<'_>(&'_ mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23103,"byte_end":23166,"line_start":26,"line_end":26,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23171,"byte_end":23174,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::call`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23179,"byte_end":23211,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23625,"byte_end":23635,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<T as client::service::GrpcService>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":178},"children":[],"decl_id":{"krate":0,"index":183},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23756,"byte_end":23760,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"call","qualname":"<T as client::service::GrpcService>::call","value":"fn call<'_>(&'_ mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":178},"children":[],"decl_id":{"krate":0,"index":184},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":200},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":231},{"krate":0,"index":275},{"krate":0,"index":412},{"krate":0,"index":523},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":620},{"krate":0,"index":624}],"decl_id":null,"docs":" Generic encoding and decoding.","sig":null,"attributes":[{"value":"/ Generic encoding and decoding.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":23869,"byte_end":23903,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":23904,"byte_end":23907,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the generic `Codec`, `Encoder` and `Decoder` traits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":23908,"byte_end":23984,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ and a protobuf codec based on prost.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":23985,"byte_end":24025,"line_start":4,"line_end":4,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3641},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26494,"byte_end":26503,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DecodeBuf","qualname":"::codec::buffer::DecodeBuf","value":"DecodeBuf {  }","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":3644}],"decl_id":null,"docs":" A specialized buffer to decode gRPC messages from.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to decode gRPC messages from.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26411,"byte_end":26465,"line_start":4,"line_end":4,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26639,"byte_end":26648,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"EncodeBuf","qualname":"::codec::buffer::EncodeBuf","value":"EncodeBuf {  }","parent":null,"children":[{"krate":0,"index":3650}],"decl_id":null,"docs":" A specialized buffer to encode gRPC messages into.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to encode gRPC messages into.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26556,"byte_end":26610,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26867,"byte_end":26876,"line_start":25,"line_end":25,"column_start":8,"column_end":17},"name":"remaining","qualname":"<DecodeBuf as bytes::Buf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26850,"byte_end":26859,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26940,"byte_end":26945,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"chunk","qualname":"<DecodeBuf as bytes::Buf>::chunk","value":"fn chunk<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":44},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26923,"byte_end":26932,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27135,"byte_end":27142,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"advance","qualname":"<DecodeBuf as bytes::Buf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":47},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27118,"byte_end":27127,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27691,"byte_end":27698,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"reserve","qualname":"<EncodeBuf>::reserve","value":"fn reserve<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the buffer.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27407,"byte_end":27480,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ into the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27485,"byte_end":27505,"line_start":56,"line_end":56,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27510,"byte_end":27513,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27518,"byte_end":27593,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27598,"byte_end":27665,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27670,"byte_end":27679,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27838,"byte_end":27851,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"<EncodeBuf as bytes::BufMut>::remaining_mut","value":"fn remaining_mut<'_>(&'_ Self) -> usize","parent":{"krate":21,"index":152},"children":[],"decl_id":{"krate":21,"index":153},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27821,"byte_end":27830,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27938,"byte_end":27949,"line_start":73,"line_end":73,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"<EncodeBuf as bytes::BufMut>::advance_mut","value":"unsafe fn advance_mut<'_>(&'_ mut Self, usize)","parent":{"krate":21,"index":152},"children":[],"decl_id":{"krate":21,"index":154},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27914,"byte_end":27923,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":28037,"byte_end":28046,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"<EncodeBuf as bytes::BufMut>::chunk_mut","value":"fn chunk_mut<'_>(&'_ mut Self) -> &'_ mut UninitSlice","parent":{"krate":21,"index":152},"children":[],"decl_id":{"krate":21,"index":156},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":28020,"byte_end":28029,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29604,"byte_end":29631,"line_start":13,"line_end":13,"column_start":12,"column_end":39},"name":"EnabledCompressionEncodings","qualname":"::codec::compression::EnabledCompressionEncodings","value":"EnabledCompressionEncodings {  }","parent":null,"children":[],"decl_id":null,"docs":" Struct used to configure which encodings are enabled on a server or channel.\n","sig":null,"attributes":[{"value":"/ Struct used to configure which encodings are enabled on a server or channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29473,"byte_end":29553,"line_start":11,"line_end":11,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29794,"byte_end":29804,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<EnabledCompressionEncodings>::is_enabled","value":"fn is_enabled<'_>(&'_ Self, CompressionEncoding) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a [`CompressionEncoding`] is enabled.\n","sig":null,"attributes":[{"value":"/ Check if a [`CompressionEncoding`] is enabled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29732,"byte_end":29782,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":30037,"byte_end":30043,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"enable","qualname":"<EnabledCompressionEncodings>::enable","value":"fn enable<'_>(&'_ mut Self, CompressionEncoding)","parent":null,"children":[],"decl_id":null,"docs":" Enable a [`CompressionEncoding`].\n","sig":null,"attributes":[{"value":"/ Enable a [`CompressionEncoding`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29988,"byte_end":30025,"line_start":27,"line_end":27,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":30789,"byte_end":30808,"line_start":57,"line_end":57,"column_start":10,"column_end":29},"name":"CompressionEncoding","qualname":"::codec::compression::CompressionEncoding","value":"enum CompressionEncoding { }","parent":null,"children":[],"decl_id":null,"docs":" The compression encodings Tonic supports.\n","sig":null,"attributes":[{"value":"/ The compression encodings Tonic supports.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":30671,"byte_end":30716,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":30762,"byte_end":30779,"line_start":56,"line_end":56,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":33545,"byte_end":33548,"line_start":143,"line_end":143,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CompressionEncoding as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":33511,"byte_end":33537,"line_start":142,"line_end":142,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":36687,"byte_end":36696,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Streaming","qualname":"::codec::decode::Streaming","value":"Streaming {  }","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"decl_id":null,"docs":" Streaming requests and responses.","sig":null,"attributes":[{"value":"/ Streaming requests and responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":36500,"byte_end":36537,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":36538,"byte_end":36541,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Body`] and [`Decoder`] and provide an interface","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":36542,"byte_end":36621,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ to fetch the message stream and trailing metadata","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":36622,"byte_end":36675,"line_start":21,"line_end":21,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":38249,"byte_end":38260,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"new_request","qualname":"<Streaming<T>>::new_request","value":"fn new_request<B, D>(D, B, Option<CompressionEncoding>, Option<usize>) -> Self\nwhere B: Body + Send + 'static, B::Error: Into<crate::Error>, D: Decoder<Item\n= T, Error = Status> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47067,"byte_end":47074,"line_start":322,"line_end":322,"column_start":18,"column_end":25},"name":"message","qualname":"<Streaming<T>>::message","value":"async fn message<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the next message from this stream.","sig":null,"attributes":[{"value":"/ Fetch the next message from this stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":45964,"byte_end":46008,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46013,"byte_end":46016,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46021,"byte_end":46039,"line_start":296,"line_end":296,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46044,"byte_end":46047,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ - `Result::Err(val)` means a gRPC error was sent by the sender instead","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46052,"byte_end":46126,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ of a valid response message. Refer to [`Status::code`] and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46131,"byte_end":46193,"line_start":299,"line_end":299,"column_start":5,"column_end":67}},{"value":"/ [`Status::message`] to examine possible error causes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46198,"byte_end":46255,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46260,"byte_end":46263,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ - `Result::Ok(None)` means the stream was closed by the sender and no","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46268,"byte_end":46341,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ more messages will be delivered. Further attempts to call","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46346,"byte_end":46407,"line_start":303,"line_end":303,"column_start":5,"column_end":66}},{"value":"/ [`Streaming::message`] will result in the same return value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46412,"byte_end":46476,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46481,"byte_end":46484,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ - `Result::Ok(Some(val))` means the sender streamed a valid response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46489,"byte_end":46561,"line_start":306,"line_end":306,"column_start":5,"column_end":77}},{"value":"/ message `val`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46566,"byte_end":46584,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46589,"byte_end":46592,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46597,"byte_end":46608,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status, codec::Decoder};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46613,"byte_end":46666,"line_start":310,"line_end":310,"column_start":5,"column_end":58}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46671,"byte_end":46697,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46702,"byte_end":46787,"line_start":312,"line_end":312,"column_start":5,"column_end":90}},{"value":"/ # where T: Debug,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46792,"byte_end":46813,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/ # D: Decoder<Item = T, Error = Status> + Send  + 'static,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46818,"byte_end":46879,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ # {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46884,"byte_end":46891,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ if let Some(next_message) = request.message().await? {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46896,"byte_end":46954,"line_start":316,"line_end":316,"column_start":5,"column_end":63}},{"value":"/     println!(\"{:?}\", next_message);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":46959,"byte_end":46998,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47003,"byte_end":47008,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47013,"byte_end":47025,"line_start":319,"line_end":319,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47030,"byte_end":47037,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47042,"byte_end":47049,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47920,"byte_end":47928,"line_start":345,"line_end":345,"column_start":18,"column_end":26},"name":"trailers","qualname":"<Streaming<T>>::trailers","value":"async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trailing metadata.","sig":null,"attributes":[{"value":"/ Fetch the trailing metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47323,"byte_end":47355,"line_start":330,"line_end":330,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47360,"byte_end":47363,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This will drain the stream of all its messages to receive the trailing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47368,"byte_end":47442,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ metadata. If [`Streaming::message`] returns `None` then this function","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47447,"byte_end":47520,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ will not need to poll for trailers since the body was totally consumed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47525,"byte_end":47600,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47605,"byte_end":47608,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47613,"byte_end":47624,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47629,"byte_end":47666,"line_start":337,"line_end":337,"column_start":5,"column_end":42}},{"value":"/ # async fn trailers_ex<T>(mut request: Streaming<T>) -> Result<(), Status> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47671,"byte_end":47751,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ if let Some(metadata) = request.trailers().await? {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47756,"byte_end":47811,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/     println!(\"{:?}\", metadata);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47816,"byte_end":47851,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47856,"byte_end":47861,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47866,"byte_end":47878,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47883,"byte_end":47890,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":47895,"byte_end":47902,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":49434,"byte_end":49443,"line_start":387,"line_end":387,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Streaming<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":26,"index":96},"children":[],"decl_id":{"krate":26,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":50330,"byte_end":50333,"line_start":414,"line_end":414,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Streaming<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":57913,"byte_end":57923,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ProstCodec","qualname":"::codec::prost::ProstCodec","value":"ProstCodec {  }","parent":null,"children":[{"krate":0,"index":3846}],"decl_id":null,"docs":" A [`Codec`] that implements `application/grpc+proto` via the prost library..\n","sig":null,"attributes":[{"value":"/ A [`Codec`] that implements `application/grpc+proto` via the prost library..","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":57797,"byte_end":57877,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58014,"byte_end":58021,"line_start":14,"line_end":14,"column_start":8,"column_end":15},"name":"default","qualname":"<ProstCodec<T, U> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58322,"byte_end":58329,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"encoder","qualname":"<ProstCodec<T, U> as codec::Codec>::encoder","value":"fn encoder<'_>(&'_ mut Self) -> Self::Encoder","parent":{"krate":0,"index":613},"children":[],"decl_id":{"krate":0,"index":618},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58408,"byte_end":58415,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"decoder","qualname":"<ProstCodec<T, U> as codec::Codec>::decoder","value":"fn decoder<'_>(&'_ mut Self) -> Self::Decoder","parent":{"krate":0,"index":613},"children":[],"decl_id":{"krate":0,"index":619},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58581,"byte_end":58593,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"ProstEncoder","qualname":"::codec::prost::ProstEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Encoder`] that knows how to encode `T`.\n","sig":null,"attributes":[{"value":"/ A [`Encoder`] that knows how to encode `T`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58489,"byte_end":58536,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58714,"byte_end":58720,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"encode","qualname":"<ProstEncoder<T> as codec::Encoder>::encode","value":"fn encode<'_, '_, '_>(&'_ mut Self, Self::Item, &'_ mut EncodeBuf)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":620},"children":[],"decl_id":{"krate":0,"index":623},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":59010,"byte_end":59022,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"ProstDecoder","qualname":"::codec::prost::ProstDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Decoder`] that knows how to decode `U`.\n","sig":null,"attributes":[{"value":"/ A [`Decoder`] that knows how to decode `U`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58918,"byte_end":58965,"line_start":55,"line_end":55,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":59153,"byte_end":59159,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"decode","qualname":"<ProstDecoder<U> as codec::Decoder>::decode","value":"fn decode<'_, '_, '_>(&'_ mut Self, &'_ mut DecodeBuf)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":624},"children":[],"decl_id":{"krate":0,"index":627},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24910,"byte_end":24915,"line_start":37,"line_end":37,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" Trait that knows how to encode and decode gRPC messages.\n","sig":null,"attributes":[{"value":"/ Trait that knows how to encode and decode gRPC messages.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24839,"byte_end":24899,"line_start":36,"line_end":36,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":614},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24958,"byte_end":24964,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Encode","qualname":"::codec::Codec::Encode","value":"type Encode: Send + 'static;","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The encodable message.\n","sig":null,"attributes":[{"value":"/ The encodable message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24922,"byte_end":24948,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":615},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25022,"byte_end":25028,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Decode","qualname":"::codec::Codec::Decode","value":"type Decode: Send + 'static;","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The decodable message.\n","sig":null,"attributes":[{"value":"/ The decodable message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":24986,"byte_end":25012,"line_start":40,"line_end":40,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":616},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25103,"byte_end":25110,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codec::Codec::Encoder","value":"type Encoder: Encoder<Item = Self::Encode, Error = Status> + Send + 'static;","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The encoder that can encode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can encode a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25051,"byte_end":25093,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":617},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25231,"byte_end":25238,"line_start":46,"line_end":46,"column_start":10,"column_end":17},"name":"Decoder","qualname":"::codec::Codec::Decoder","value":"type Decoder: Decoder<Item = Self::Decode, Error = Status> + Send + 'static;","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The encoder that can decode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can decode a message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25179,"byte_end":25221,"line_start":45,"line_end":45,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25338,"byte_end":25345,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"encoder","qualname":"::codec::Codec::encoder","value":"fn encoder<'_>(&'_ mut Self) -> Self::Encoder","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Fetch the encoder.\n","sig":null,"attributes":[{"value":"/ Fetch the encoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25308,"byte_end":25330,"line_start":48,"line_end":48,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25409,"byte_end":25416,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"decoder","qualname":"::codec::Codec::decoder","value":"fn decoder<'_>(&'_ mut Self) -> Self::Decoder","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Fetch the decoder.\n","sig":null,"attributes":[{"value":"/ Fetch the decoder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25379,"byte_end":25401,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":620},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25490,"byte_end":25497,"line_start":55,"line_end":55,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" Encodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Encodes gRPC message types","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25449,"byte_end":25479,"line_start":54,"line_end":54,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":621},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25543,"byte_end":25547,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" The type that is encoded.\n","sig":null,"attributes":[{"value":"/ The type that is encoded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25504,"byte_end":25533,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":622},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25661,"byte_end":25666,"line_start":62,"line_end":62,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25554,"byte_end":25586,"line_start":59,"line_end":59,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25591,"byte_end":25594,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The type of unrecoverable frame encoding errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25599,"byte_end":25651,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25745,"byte_end":25751,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::Encoder::encode","value":"fn encode<'_, '_, '_>(&'_ mut Self, Self::Item, &'_ mut EncodeBuf)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Encodes a message into the provided buffer.\n","sig":null,"attributes":[{"value":"/ Encodes a message into the provided buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25690,"byte_end":25737,"line_start":64,"line_end":64,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25878,"byte_end":25885,"line_start":69,"line_end":69,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"decl_id":null,"docs":" Decodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Decodes gRPC message types","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25837,"byte_end":25867,"line_start":68,"line_end":68,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":625},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25931,"byte_end":25935,"line_start":71,"line_end":71,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" The type that is decoded.\n","sig":null,"attributes":[{"value":"/ The type that is decoded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25892,"byte_end":25921,"line_start":70,"line_end":70,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":626},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26004,"byte_end":26009,"line_start":74,"line_end":74,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.\n","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":25942,"byte_end":25994,"line_start":73,"line_end":73,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26255,"byte_end":26261,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::Decoder::decode","value":"fn decode<'_, '_, '_>(&'_ mut Self, &'_ mut DecodeBuf)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Decode a message from the buffer.","sig":null,"attributes":[{"value":"/ Decode a message from the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26033,"byte_end":26070,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26075,"byte_end":26078,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The buffer will contain exactly the bytes of a full message. There","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26083,"byte_end":26153,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ is no need to get the length from the bytes, gRPC framing is handled","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26158,"byte_end":26230,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ for you.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/mod.rs","byte_start":26235,"byte_end":26247,"line_start":80,"line_end":80,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":628},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":709},{"krate":0,"index":806},{"krate":0,"index":1196},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489}],"decl_id":null,"docs":" Contains data structures and utilities for handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ Contains data structures and utilities for handling gRPC custom metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":67136,"byte_end":67213,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":68683,"byte_end":68703,"line_start":11,"line_end":11,"column_start":12,"column_end":32},"name":"InvalidMetadataValue","qualname":"::metadata::encoding::InvalidMetadataValue","value":"InvalidMetadataValue {  }","parent":null,"children":[{"krate":0,"index":3882}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":68561,"byte_end":68637,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":68638,"byte_end":68648,"line_start":9,"line_end":9,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":661},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":68877,"byte_end":68883,"line_start":21,"line_end":21,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::encoding::value_encoding::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":68920,"byte_end":68928,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::metadata::encoding::value_encoding::Sealed::is_empty","value":"fn is_empty<'_>(&'_ [u8]) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":68987,"byte_end":68997,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"::metadata::encoding::value_encoding::Sealed::from_bytes","value":"fn from_bytes<'_>(&'_ [u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69098,"byte_end":69109,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"from_shared","qualname":"::metadata::encoding::value_encoding::Sealed::from_shared","value":"fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69210,"byte_end":69221,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"from_static","qualname":"::metadata::encoding::value_encoding::Sealed::from_static","value":"fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69294,"byte_end":69300,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"decode","qualname":"::metadata::encoding::value_encoding::Sealed::decode","value":"fn decode<'_>(&'_ [u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69395,"byte_end":69401,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"equals","qualname":"::metadata::encoding::value_encoding::Sealed::equals","value":"fn equals<'_, '_>(&'_ HeaderValue, &'_ [u8]) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69473,"byte_end":69485,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"values_equal","qualname":"::metadata::encoding::value_encoding::Sealed::values_equal","value":"fn values_equal<'_, '_>(&'_ HeaderValue, &'_ HeaderValue) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69564,"byte_end":69567,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"fmt","qualname":"::metadata::encoding::value_encoding::Sealed::fmt","value":"fn fmt<'_, '_, '_>(&'_ HeaderValue, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":670},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69652,"byte_end":69665,"line_start":48,"line_end":48,"column_start":11,"column_end":24},"name":"ValueEncoding","qualname":"::metadata::encoding::ValueEncoding","value":"ValueEncoding: Clone + Eq + PartialEq + Hash + self::value_encoding::Sealed","parent":null,"children":[{"krate":0,"index":671}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69922,"byte_end":69934,"line_start":52,"line_end":52,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"::metadata::encoding::ValueEncoding::is_valid_key","value":"fn is_valid_key<'_>(&'_ str) -> bool","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Returns true if the provided key is valid for this ValueEncoding type.\n For example, `Ascii::is_valid_key(\"a\") == true`,\n `Ascii::is_valid_key(\"a-bin\") == false`.\n","sig":null,"attributes":[{"value":"/ Returns true if the provided key is valid for this ValueEncoding type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69734,"byte_end":69808,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ For example, `Ascii::is_valid_key(\"a\") == true`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69813,"byte_end":69865,"line_start":50,"line_end":50,"column_start":5,"column_end":57}},{"value":"/ `Ascii::is_valid_key(\"a-bin\") == false`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69870,"byte_end":69914,"line_start":51,"line_end":51,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70474,"byte_end":70479,"line_start":65,"line_end":65,"column_start":10,"column_end":15},"name":"Ascii","qualname":"::metadata::encoding::Ascii","value":"enum Ascii { }","parent":null,"children":[],"decl_id":null,"docs":" gRPC metadata values can be either ASCII strings or binary. Note that only\n visible ASCII characters (32-127) are permitted.\n This type should never be instantiated -- in fact, it's impossible\n to, because there's no variants to instantiate. Instead, it's just used as\n a type parameter for [`MetadataKey`] and [`MetadataValue`].","sig":null,"attributes":[{"value":"/ gRPC metadata values can be either ASCII strings or binary. Note that only","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69958,"byte_end":70036,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ visible ASCII characters (32-127) are permitted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70037,"byte_end":70089,"line_start":56,"line_end":56,"column_start":1,"column_end":53}},{"value":"/ This type should never be instantiated -- in fact, it's impossible","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70090,"byte_end":70160,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ to, because there's no variants to instantiate. Instead, it's just used as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70161,"byte_end":70239,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ a type parameter for [`MetadataKey`] and [`MetadataValue`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70240,"byte_end":70303,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70304,"byte_end":70307,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`MetadataKey`]: struct.MetadataKey.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70308,"byte_end":70352,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/ [`MetadataValue`]: struct.MetadataValue.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70353,"byte_end":70401,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70447,"byte_end":70464,"line_start":64,"line_end":64,"column_start":1,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":3902},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70932,"byte_end":70938,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Binary","qualname":"::metadata::encoding::Binary","value":"enum Binary { }","parent":null,"children":[],"decl_id":null,"docs":" gRPC metadata values can be either ASCII strings or binary.\n This type should never be instantiated -- in fact, it's impossible\n to, because there's no variants to instantiate. Instead, it's just used as\n a type parameter for [`MetadataKey`] and [`MetadataValue`].","sig":null,"attributes":[{"value":"/ gRPC metadata values can be either ASCII strings or binary.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70484,"byte_end":70547,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ This type should never be instantiated -- in fact, it's impossible","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70548,"byte_end":70618,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ to, because there's no variants to instantiate. Instead, it's just used as","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70619,"byte_end":70697,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ a type parameter for [`MetadataKey`] and [`MetadataValue`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70698,"byte_end":70761,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70762,"byte_end":70765,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`MetadataKey`]: struct.MetadataKey.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70766,"byte_end":70810,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/ [`MetadataValue`]: struct.MetadataValue.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70811,"byte_end":70859,"line_start":73,"line_end":73,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":70905,"byte_end":70922,"line_start":75,"line_end":75,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71031,"byte_end":71039,"line_start":81,"line_end":81,"column_start":8,"column_end":16},"name":"is_empty","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::is_empty","value":"fn is_empty<'_>(&'_ [u8]) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":662},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71103,"byte_end":71113,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::from_bytes","value":"fn from_bytes<'_>(&'_ [u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":663},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71279,"byte_end":71290,"line_start":89,"line_end":89,"column_start":8,"column_end":19},"name":"from_shared","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::from_shared","value":"fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":664},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71463,"byte_end":71474,"line_start":93,"line_end":93,"column_start":8,"column_end":19},"name":"from_static","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::from_static","value":"fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":665},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71567,"byte_end":71573,"line_start":97,"line_end":97,"column_start":8,"column_end":14},"name":"decode","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::decode","value":"fn decode<'_>(&'_ [u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":666},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71690,"byte_end":71696,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"equals","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::equals","value":"fn equals<'_, '_>(&'_ HeaderValue, &'_ [u8]) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":667},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71774,"byte_end":71786,"line_start":105,"line_end":105,"column_start":8,"column_end":20},"name":"values_equal","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::values_equal","value":"fn values_equal<'_, '_>(&'_ HeaderValue, &'_ HeaderValue) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71860,"byte_end":71863,"line_start":109,"line_end":109,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Ascii as metadata::encoding::value_encoding::Sealed>::fmt","value":"fn fmt<'_, '_, '_>(&'_ HeaderValue, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72011,"byte_end":72023,"line_start":115,"line_end":115,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"<Ascii as metadata::encoding::ValueEncoding>::is_valid_key","value":"fn is_valid_key<'_>(&'_ str) -> bool","parent":{"krate":0,"index":670},"children":[],"decl_id":{"krate":0,"index":671},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72143,"byte_end":72151,"line_start":121,"line_end":121,"column_start":8,"column_end":16},"name":"is_empty","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::is_empty","value":"fn is_empty<'_>(&'_ [u8]) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":662},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72310,"byte_end":72320,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::from_bytes","value":"fn from_bytes<'_>(&'_ [u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":663},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72615,"byte_end":72626,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"from_shared","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::from_shared","value":"fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":664},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72748,"byte_end":72759,"line_start":140,"line_end":140,"column_start":8,"column_end":19},"name":"from_static","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::from_static","value":"fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":665},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":73221,"byte_end":73227,"line_start":151,"line_end":151,"column_start":8,"column_end":14},"name":"decode","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::decode","value":"fn decode<'_>(&'_ [u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":666},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":73473,"byte_end":73479,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"equals","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::equals","value":"fn equals<'_, '_>(&'_ HeaderValue, &'_ [u8]) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":667},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":73695,"byte_end":73707,"line_start":166,"line_end":166,"column_start":8,"column_end":20},"name":"values_equal","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::values_equal","value":"fn values_equal<'_, '_>(&'_ HeaderValue, &'_ HeaderValue) -> bool","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":73949,"byte_end":73952,"line_start":174,"line_end":174,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Binary as metadata::encoding::value_encoding::Sealed>::fmt","value":"fn fmt<'_, '_, '_>(&'_ HeaderValue, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":661},"children":[],"decl_id":{"krate":0,"index":669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74242,"byte_end":74254,"line_start":184,"line_end":184,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"<Binary as metadata::encoding::ValueEncoding>::is_valid_key","value":"fn is_valid_key<'_>(&'_ str) -> bool","parent":{"krate":0,"index":670},"children":[],"decl_id":{"krate":0,"index":671},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74523,"byte_end":74526,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidMetadataValue as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74804,"byte_end":74829,"line_start":208,"line_end":208,"column_start":12,"column_end":37},"name":"InvalidMetadataValueBytes","qualname":"::metadata::encoding::InvalidMetadataValueBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74682,"byte_end":74758,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74759,"byte_end":74769,"line_start":206,"line_end":206,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":75097,"byte_end":75100,"line_start":219,"line_end":219,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidMetadataValueBytes as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75710,"byte_end":75721,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"MetadataKey","qualname":"::metadata::key::MetadataKey","value":"MetadataKey {  }","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927}],"decl_id":null,"docs":" Represents a custom metadata field name.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75447,"byte_end":75491,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75492,"byte_end":75495,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MetadataKey` is used as the [`MetadataMap`] key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75496,"byte_end":75549,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75550,"byte_end":75553,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75554,"byte_end":75594,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75595,"byte_end":75639,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75678,"byte_end":75698,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3946},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76051,"byte_end":76069,"line_start":28,"line_end":28,"column_start":12,"column_end":30},"name":"InvalidMetadataKey","qualname":"::metadata::key::InvalidMetadataKey","value":"InvalidMetadataKey {  }","parent":null,"children":[{"krate":0,"index":3947}],"decl_id":null,"docs":" A possible error when converting a `MetadataKey` from another type.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataKey` from another type.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":75951,"byte_end":76022,"line_start":26,"line_end":26,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":741},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76126,"byte_end":76142,"line_start":33,"line_end":33,"column_start":10,"column_end":26},"name":"AsciiMetadataKey","qualname":"::metadata::key::AsciiMetadataKey","value":"MetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata key.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76090,"byte_end":76116,"line_start":32,"line_end":32,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":742},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76201,"byte_end":76218,"line_start":35,"line_end":35,"column_start":10,"column_end":27},"name":"BinaryMetadataKey","qualname":"::metadata::key::BinaryMetadataKey","value":"MetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata key.\n","sig":null,"attributes":[{"value":"/ A binary metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76165,"byte_end":76191,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76402,"byte_end":76412,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataKey<VE>>::from_bytes","value":"fn from_bytes<'_>(&'_ [u8]) -> Result<Self, InvalidMetadataKey>","parent":null,"children":[],"decl_id":null,"docs":" Converts a slice of bytes to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a slice of bytes to a `MetadataKey`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76289,"byte_end":76338,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76343,"byte_end":76346,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This function normalizes the input.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76351,"byte_end":76390,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78557,"byte_end":78568,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataKey<VE>>::from_static","value":"fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a static string to a `MetadataKey`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76881,"byte_end":76929,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76934,"byte_end":76937,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics when the static string is a invalid metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76942,"byte_end":77016,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77021,"byte_end":77024,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function requires the static string to only contain lowercase","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77029,"byte_end":77099,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ characters, numerals and symbols, as per the HTTP/2.0 specification","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77104,"byte_end":77175,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ and header names internal representation within this library.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77180,"byte_end":77245,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77250,"byte_end":77253,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77258,"byte_end":77261,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77266,"byte_end":77280,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77285,"byte_end":77288,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77293,"byte_end":77300,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77305,"byte_end":77334,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77339,"byte_end":77368,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/ let CUSTOM_KEY: &'static str = \"custom-key\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77373,"byte_end":77421,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77426,"byte_end":77429,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let a = AsciiMetadataKey::from_bytes(b\"custom-key\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77434,"byte_end":77499,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ let b = AsciiMetadataKey::from_static(CUSTOM_KEY);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77504,"byte_end":77558,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77563,"byte_end":77584,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77589,"byte_end":77596,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77601,"byte_end":77604,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77609,"byte_end":77628,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77633,"byte_end":77662,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid symbols(s):","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77667,"byte_end":77730,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ AsciiMetadataKey::from_static(\"content{}{}length\"); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77735,"byte_end":77811,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77816,"byte_end":77823,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77828,"byte_end":77831,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77836,"byte_end":77855,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77860,"byte_end":77889,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid uppercase characters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77894,"byte_end":77967,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ let a = AsciiMetadataKey::from_static(\"foobar\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":77972,"byte_end":78024,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/ let b = AsciiMetadataKey::from_static(\"FOOBAR\"); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78029,"byte_end":78102,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78107,"byte_end":78114,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78119,"byte_end":78122,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78127,"byte_end":78146,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78151,"byte_end":78180,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ // Parsing a -bin metadata key as an Ascii key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78185,"byte_end":78236,"line_start":93,"line_end":93,"column_start":5,"column_end":56}},{"value":"/ let b = AsciiMetadataKey::from_static(\"hello-bin\"); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78241,"byte_end":78317,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78322,"byte_end":78329,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78334,"byte_end":78337,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78342,"byte_end":78361,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78366,"byte_end":78395,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/ // Parsing a non-bin metadata key as an Binary key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78400,"byte_end":78455,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ let b = BinaryMetadataKey::from_static(\"hello\"); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78460,"byte_end":78533,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78538,"byte_end":78545,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78993,"byte_end":78999,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MetadataKey<VE>>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" Returns a `str` representation of the metadata key.","sig":null,"attributes":[{"value":"/ Returns a `str` representation of the metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78849,"byte_end":78904,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78909,"byte_end":78912,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned string will always be lower case.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78917,"byte_end":78967,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":78972,"byte_end":78981,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":79958,"byte_end":79966,"line_start":145,"line_end":145,"column_start":8,"column_end":16},"name":"from_str","qualname":"<MetadataKey<VE> as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, InvalidMetadataKey>","parent":{"krate":2,"index":12996},"children":[],"decl_id":{"krate":2,"index":12998},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80172,"byte_end":80178,"line_start":151,"line_end":151,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<MetadataKey<VE> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80292,"byte_end":80298,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<MetadataKey<VE> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80424,"byte_end":80430,"line_start":163,"line_end":163,"column_start":8,"column_end":14},"name":"borrow","qualname":"<MetadataKey<VE> as std::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ str","parent":{"krate":2,"index":2857},"children":[],"decl_id":{"krate":2,"index":2859},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80543,"byte_end":80546,"line_start":169,"line_end":169,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MetadataKey<VE> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80720,"byte_end":80723,"line_start":175,"line_end":175,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MetadataKey<VE> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80889,"byte_end":80892,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<InvalidMetadataKey>::new","value":"fn new() -> InvalidMetadataKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81052,"byte_end":81056,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"from","qualname":"<MetadataKey<VE> as std::convert::From>::from","value":"fn from(&'a MetadataKey<VE>) -> MetadataKey<VE>","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81212,"byte_end":81216,"line_start":195,"line_end":195,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as std::convert::From>::from","value":"fn from(MetadataKey<VE>) -> Bytes","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81195,"byte_end":81204,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81414,"byte_end":81416,"line_start":202,"line_end":202,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataKey<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ &'a MetadataKey<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81397,"byte_end":81406,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81599,"byte_end":81601,"line_start":209,"line_end":209,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'a MetadataKey<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataKey<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81582,"byte_end":81591,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82193,"byte_end":82195,"line_start":229,"line_end":229,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataKey<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ str) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Performs a case-insensitive comparison of the string against the header\n name","sig":null,"attributes":[{"value":"/ Performs a case-insensitive comparison of the string against the header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81742,"byte_end":81817,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81822,"byte_end":81830,"line_start":216,"line_end":216,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81835,"byte_end":81838,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81843,"byte_end":81857,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81862,"byte_end":81865,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81870,"byte_end":81877,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81882,"byte_end":81911,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ let content_length = AsciiMetadataKey::from_static(\"content-length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81916,"byte_end":81989,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81994,"byte_end":81997,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(content_length, \"content-length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82002,"byte_end":82051,"line_start":224,"line_end":224,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(content_length, \"Content-Length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82056,"byte_end":82105,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ assert_ne!(content_length, \"content length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82110,"byte_end":82159,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82164,"byte_end":82171,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82176,"byte_end":82185,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82780,"byte_end":82782,"line_start":249,"line_end":249,"column_start":8,"column_end":10},"name":"eq","qualname":"<str as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataKey<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Performs a case-insensitive comparison of the string against the header\n name","sig":null,"attributes":[{"value":"/ Performs a case-insensitive comparison of the string against the header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82329,"byte_end":82404,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82409,"byte_end":82417,"line_start":236,"line_end":236,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82422,"byte_end":82425,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82430,"byte_end":82444,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82449,"byte_end":82452,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82457,"byte_end":82464,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82469,"byte_end":82498,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ let content_length = AsciiMetadataKey::from_static(\"content-length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82503,"byte_end":82576,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82581,"byte_end":82584,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(content_length, \"content-length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82589,"byte_end":82638,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(content_length, \"Content-Length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82643,"byte_end":82692,"line_start":245,"line_end":245,"column_start":5,"column_end":54}},{"value":"/ assert_ne!(content_length, \"content length\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82697,"byte_end":82746,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82751,"byte_end":82758,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82763,"byte_end":82772,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83046,"byte_end":83048,"line_start":258,"line_end":258,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataKey<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ &'a str) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Performs a case-insensitive comparison of the string against the header\n name\n","sig":null,"attributes":[{"value":"/ Performs a case-insensitive comparison of the string against the header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82936,"byte_end":83011,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83016,"byte_end":83024,"line_start":256,"line_end":256,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83029,"byte_end":83038,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83300,"byte_end":83302,"line_start":267,"line_end":267,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'a str as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataKey<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Performs a case-insensitive comparison of the string against the header\n name\n","sig":null,"attributes":[{"value":"/ Performs a case-insensitive comparison of the string against the header","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83190,"byte_end":83265,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83270,"byte_end":83278,"line_start":265,"line_end":265,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83283,"byte_end":83292,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83428,"byte_end":83431,"line_start":273,"line_end":273,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidMetadataKey as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83592,"byte_end":83599,"line_start":279,"line_end":279,"column_start":8,"column_end":15},"name":"default","qualname":"<InvalidMetadataKey as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85505,"byte_end":85516,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"MetadataMap","qualname":"::metadata::map::MetadataMap","value":"MetadataMap {  }","parent":null,"children":[{"krate":0,"index":3951}],"decl_id":null,"docs":" A set of gRPC custom metadata entries.","sig":null,"attributes":[{"value":"/ A set of gRPC custom metadata entries.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84863,"byte_end":84905,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84906,"byte_end":84909,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84910,"byte_end":84924,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84925,"byte_end":84928,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84929,"byte_end":84944,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84945,"byte_end":84948,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84949,"byte_end":84956,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84957,"byte_end":84986,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":84987,"byte_end":85024,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85025,"byte_end":85028,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85029,"byte_end":85086,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85087,"byte_end":85138,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"[binary data]\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85139,"byte_end":85222,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85223,"byte_end":85226,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85227,"byte_end":85267,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ assert!(!map.contains_key(\"x-location\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85268,"byte_end":85313,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85314,"byte_end":85317,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85318,"byte_end":85376,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85377,"byte_end":85380,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ map.remove(\"x-host\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85381,"byte_end":85406,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85407,"byte_end":85410,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85411,"byte_end":85452,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85453,"byte_end":85460,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85751,"byte_end":85755,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Iter","qualname":"::metadata::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3960}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85552,"byte_end":85585,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85586,"byte_end":85589,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyAndValueRef` values. The same header name may be yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85590,"byte_end":85661,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85662,"byte_end":85722,"line_start":42,"line_end":42,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3966},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86049,"byte_end":86054,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndValueRef::Ascii","value":"KeyAndValueRef::Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3964},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86008,"byte_end":86044,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86055,"byte_end":86077,"line_start":53,"line_end":53,"column_start":11,"column_end":33},"name":"0","qualname":"::metadata::map::KeyAndValueRef::Ascii::0","value":"&'a metadata::key::MetadataKey<metadata::encoding::Ascii>","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86079,"byte_end":86103,"line_start":53,"line_end":53,"column_start":35,"column_end":59},"name":"1","qualname":"::metadata::map::KeyAndValueRef::Ascii::1","value":"&'a metadata::value::MetadataValue<metadata::encoding::Ascii>","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86151,"byte_end":86157,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndValueRef::Binary","value":"KeyAndValueRef::Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>)","parent":{"krate":0,"index":3964},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86110,"byte_end":86146,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86158,"byte_end":86181,"line_start":55,"line_end":55,"column_start":12,"column_end":35},"name":"0","qualname":"::metadata::map::KeyAndValueRef::Binary::0","value":"&'a metadata::key::MetadataKey<metadata::encoding::Binary>","parent":{"krate":0,"index":3970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86183,"byte_end":86208,"line_start":55,"line_end":55,"column_start":37,"column_end":62},"name":"1","qualname":"::metadata::map::KeyAndValueRef::Binary::1","value":"&'a metadata::value::MetadataValue<metadata::encoding::Binary>","parent":{"krate":0,"index":3970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85983,"byte_end":85997,"line_start":51,"line_end":51,"column_start":10,"column_end":24},"name":"KeyAndValueRef","qualname":"::metadata::map::KeyAndValueRef","value":"enum KeyAndValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":3970}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85827,"byte_end":85906,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":85907,"byte_end":85956,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86439,"byte_end":86444,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndMutValueRef::Ascii","value":"KeyAndMutValueRef::Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86398,"byte_end":86434,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3981},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86445,"byte_end":86467,"line_start":63,"line_end":63,"column_start":11,"column_end":33},"name":"0","qualname":"::metadata::map::KeyAndMutValueRef::Ascii::0","value":"&'a metadata::key::MetadataKey<metadata::encoding::Ascii>","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3982},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86469,"byte_end":86497,"line_start":63,"line_end":63,"column_start":35,"column_end":63},"name":"1","qualname":"::metadata::map::KeyAndMutValueRef::Ascii::1","value":"&'a mut metadata::value::MetadataValue<metadata::encoding::Ascii>","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3983},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86545,"byte_end":86551,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndMutValueRef::Binary","value":"KeyAndMutValueRef::Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86504,"byte_end":86540,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3985},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86552,"byte_end":86575,"line_start":65,"line_end":65,"column_start":12,"column_end":35},"name":"0","qualname":"::metadata::map::KeyAndMutValueRef::Binary::0","value":"&'a metadata::key::MetadataKey<metadata::encoding::Binary>","parent":{"krate":0,"index":3983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3986},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86577,"byte_end":86606,"line_start":65,"line_end":65,"column_start":37,"column_end":66},"name":"1","qualname":"::metadata::map::KeyAndMutValueRef::Binary::1","value":"&'a mut metadata::value::MetadataValue<metadata::encoding::Binary>","parent":{"krate":0,"index":3983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86370,"byte_end":86387,"line_start":61,"line_end":61,"column_start":10,"column_end":27},"name":"KeyAndMutValueRef","qualname":"::metadata::map::KeyAndMutValueRef","value":"enum KeyAndMutValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3983}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86214,"byte_end":86293,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86294,"byte_end":86343,"line_start":59,"line_end":59,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86823,"byte_end":86830,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::metadata::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3992}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86612,"byte_end":86645,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86646,"byte_end":86649,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Yields `(&MetadataKey, &mut value)` tuples. The same header name may be yielded","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86650,"byte_end":86733,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86734,"byte_end":86794,"line_start":71,"line_end":71,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87007,"byte_end":87017,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ValueDrain","qualname":"::metadata::map::ValueDrain","value":"ValueDrain {  }","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000}],"decl_id":null,"docs":" A drain iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ A drain iterator of all values associated with a single metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":86905,"byte_end":86978,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87335,"byte_end":87339,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Keys","qualname":"::metadata::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":4007}],"decl_id":null,"docs":" An iterator over `MetadataMap` keys.","sig":null,"attributes":[{"value":"/ An iterator over `MetadataMap` keys.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87144,"byte_end":87184,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87185,"byte_end":87188,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyRef` values. Each header name is yielded only once, even if it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87189,"byte_end":87266,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ has more than one associated value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87267,"byte_end":87306,"line_start":87,"line_end":87,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87601,"byte_end":87606,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyRef::Ascii","value":"KeyRef::Ascii(&'a MetadataKey<Ascii>)","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87560,"byte_end":87596,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4015},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87607,"byte_end":87629,"line_start":98,"line_end":98,"column_start":11,"column_end":33},"name":"0","qualname":"::metadata::map::KeyRef::Ascii::0","value":"&'a metadata::key::MetadataKey<metadata::encoding::Ascii>","parent":{"krate":0,"index":4013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87677,"byte_end":87683,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyRef::Binary","value":"KeyRef::Binary(&'a MetadataKey<Binary>)","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87636,"byte_end":87672,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87684,"byte_end":87707,"line_start":100,"line_end":100,"column_start":12,"column_end":35},"name":"0","qualname":"::metadata::map::KeyRef::Binary::0","value":"&'a metadata::key::MetadataKey<metadata::encoding::Binary>","parent":{"krate":0,"index":4016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4011},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87543,"byte_end":87549,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"KeyRef","qualname":"::metadata::map::KeyRef","value":"enum KeyRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>),\n    Binary(&'a MetadataKey<Binary>),\n}","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4016}],"decl_id":null,"docs":" Reference to a key in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key in a `MetadataMap`. It can point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87411,"byte_end":87466,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87467,"byte_end":87516,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87872,"byte_end":87878,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Values","qualname":"::metadata::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":4024}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87713,"byte_end":87746,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87747,"byte_end":87750,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Yields `ValueRef` values. Each value contained in the `MetadataMap` will be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87751,"byte_end":87830,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":87831,"byte_end":87843,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88272,"byte_end":88277,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRef::Ascii","value":"ValueRef::Ascii(&'a MetadataValue<Ascii>)","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88231,"byte_end":88267,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88278,"byte_end":88302,"line_start":119,"line_end":119,"column_start":11,"column_end":35},"name":"0","qualname":"::metadata::map::ValueRef::Ascii::0","value":"&'a metadata::value::MetadataValue<metadata::encoding::Ascii>","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4033},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88350,"byte_end":88356,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRef::Binary","value":"ValueRef::Binary(&'a MetadataValue<Binary>)","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88309,"byte_end":88345,"line_start":120,"line_end":120,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4035},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88357,"byte_end":88382,"line_start":121,"line_end":121,"column_start":12,"column_end":37},"name":"0","qualname":"::metadata::map::ValueRef::Binary::0","value":"&'a metadata::value::MetadataValue<metadata::encoding::Binary>","parent":{"krate":0,"index":4033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88212,"byte_end":88220,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::metadata::map::ValueRef","value":"enum ValueRef<'a> {\n    Ascii(&'a MetadataValue<Ascii>),\n    Binary(&'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4033}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88072,"byte_end":88129,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88130,"byte_end":88185,"line_start":115,"line_end":115,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4039},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88517,"byte_end":88526,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::metadata::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":4041}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88388,"byte_end":88421,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88422,"byte_end":88425,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Each value contained in the `MetadataMap` will be yielded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88426,"byte_end":88488,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4047},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88932,"byte_end":88937,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRefMut::Ascii","value":"ValueRefMut::Ascii(&'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":4045},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88891,"byte_end":88927,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4049},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88938,"byte_end":88966,"line_start":139,"line_end":139,"column_start":11,"column_end":39},"name":"0","qualname":"::metadata::map::ValueRefMut::Ascii::0","value":"&'a mut metadata::value::MetadataValue<metadata::encoding::Ascii>","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4050},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89014,"byte_end":89020,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRefMut::Binary","value":"ValueRefMut::Binary(&'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":4045},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88973,"byte_end":89009,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89021,"byte_end":89050,"line_start":141,"line_end":141,"column_start":12,"column_end":41},"name":"0","qualname":"::metadata::map::ValueRefMut::Binary::0","value":"&'a mut metadata::value::MetadataValue<metadata::encoding::Binary>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88869,"byte_end":88880,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"ValueRefMut","qualname":"::metadata::map::ValueRefMut","value":"enum ValueRefMut<'a> {\n    Ascii(&'a mut MetadataValue<Ascii>),\n    Binary(&'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":4047},{"krate":0,"index":4050}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88729,"byte_end":88786,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":88787,"byte_end":88842,"line_start":135,"line_end":135,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89153,"byte_end":89162,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"ValueIter","qualname":"::metadata::map::ValueIter","value":"ValueIter {  }","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4060}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89056,"byte_end":89124,"line_start":144,"line_end":144,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4065},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89393,"byte_end":89405,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"ValueIterMut","qualname":"::metadata::map::ValueIterMut","value":"ValueIterMut {  }","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4069}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89296,"byte_end":89364,"line_start":151,"line_end":151,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4074},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89707,"byte_end":89713,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"GetAll","qualname":"::metadata::map::GetAll","value":"GetAll {  }","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":4078}],"decl_id":null,"docs":" A view to all values stored in a single entry.","sig":null,"attributes":[{"value":"/ A view to all values stored in a single entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89534,"byte_end":89584,"line_start":158,"line_end":158,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89585,"byte_end":89588,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This struct is returned by `MetadataMap::get_all` and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89589,"byte_end":89646,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ `MetadataMap::get_all_bin`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89647,"byte_end":89678,"line_start":161,"line_end":161,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90022,"byte_end":90030,"line_start":173,"line_end":173,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::metadata::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":4083},"children":[],"decl_id":null,"docs":" An occupied entry\n","sig":null,"attributes":[{"value":"/ An occupied entry","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89996,"byte_end":90017,"line_start":172,"line_end":172,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":4088},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90031,"byte_end":90052,"line_start":173,"line_end":173,"column_start":14,"column_end":35},"name":"0","qualname":"::metadata::map::Entry::Occupied::0","value":"metadata::map::OccupiedEntry<'a, VE>","parent":{"krate":0,"index":4086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90083,"byte_end":90089,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::metadata::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":4083},"children":[],"decl_id":null,"docs":" A vacant entry\n","sig":null,"attributes":[{"value":"/ A vacant entry","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90060,"byte_end":90078,"line_start":175,"line_end":175,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90090,"byte_end":90109,"line_start":176,"line_end":176,"column_start":12,"column_end":31},"name":"0","qualname":"::metadata::map::Entry::Vacant::0","value":"metadata::map::VacantEntry<'a, VE>","parent":{"krate":0,"index":4089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4083},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89961,"byte_end":89966,"line_start":171,"line_end":171,"column_start":10,"column_end":15},"name":"Entry","qualname":"::metadata::map::Entry","value":"enum Entry<'a, VE> where VE: ValueEncoding {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4089}],"decl_id":null,"docs":" A view into a single location in a `MetadataMap`, which may be vacant or\n occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a `MetadataMap`, which may be vacant or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89844,"byte_end":89920,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ occupied.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":89921,"byte_end":89934,"line_start":169,"line_end":169,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4096},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90264,"byte_end":90275,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::metadata::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":4099},{"krate":0,"index":4100}],"decl_id":null,"docs":" A view into a single empty location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single empty location in a `MetadataMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90115,"byte_end":90174,"line_start":179,"line_end":179,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90175,"byte_end":90178,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90179,"byte_end":90235,"line_start":181,"line_end":181,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90555,"byte_end":90568,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::metadata::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4109}],"decl_id":null,"docs":" A view into a single occupied location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a `MetadataMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90403,"byte_end":90465,"line_start":188,"line_end":188,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90466,"byte_end":90469,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90470,"byte_end":90526,"line_start":190,"line_end":190,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91432,"byte_end":91435,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<MetadataMap>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap`.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91072,"byte_end":91106,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91111,"byte_end":91114,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The map will be created without any capacity. This function will not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91119,"byte_end":91191,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ allocate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91196,"byte_end":91209,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91214,"byte_end":91217,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91222,"byte_end":91236,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91241,"byte_end":91244,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91249,"byte_end":91256,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91261,"byte_end":91290,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91295,"byte_end":91328,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91333,"byte_end":91336,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91341,"byte_end":91369,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91374,"byte_end":91408,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91413,"byte_end":91420,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91555,"byte_end":91567,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"from_headers","qualname":"<MetadataMap>::from_headers","value":"fn from_headers(http::HeaderMap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP HeaderMap to a MetadataMap\n","sig":null,"attributes":[{"value":"/ Convert an HTTP HeaderMap to a MetadataMap","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91497,"byte_end":91543,"line_start":230,"line_end":230,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92030,"byte_end":92042,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"into_headers","qualname":"<MetadataMap>::into_headers","value":"fn into_headers(Self) -> http::HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Convert a MetadataMap into a HTTP HeaderMap","sig":null,"attributes":[{"value":"/ Convert a MetadataMap into a HTTP HeaderMap","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91647,"byte_end":91694,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91699,"byte_end":91702,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91707,"byte_end":91721,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91726,"byte_end":91729,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91734,"byte_end":91741,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91746,"byte_end":91775,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91780,"byte_end":91817,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91822,"byte_end":91879,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91884,"byte_end":91887,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let http_map = map.into_headers();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91892,"byte_end":91930,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91935,"byte_end":91938,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(http_map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":91943,"byte_end":92006,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92011,"byte_end":92018,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92982,"byte_end":92995,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MetadataMap>::with_capacity","value":"fn with_capacity(usize) -> MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap` with the specified capacity.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92297,"byte_end":92359,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92364,"byte_end":92367,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The returned map will allocate internal storage in order to hold about","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92372,"byte_end":92446,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ `capacity` elements without reallocating. However, this is a \"best","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92451,"byte_end":92521,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ effort\" as there are usage patterns that could cause additional","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92526,"byte_end":92593,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ allocations before `capacity` metadata entries are stored in the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92598,"byte_end":92671,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92676,"byte_end":92679,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ More capacity than requested may be allocated.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92684,"byte_end":92734,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92739,"byte_end":92742,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92747,"byte_end":92761,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92766,"byte_end":92769,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92774,"byte_end":92781,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92786,"byte_end":92815,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ let map: MetadataMap = MetadataMap::with_capacity(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92820,"byte_end":92878,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92883,"byte_end":92886,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92891,"byte_end":92919,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92924,"byte_end":92958,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":92963,"byte_end":92970,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93967,"byte_end":93970,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataMap>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of metadata entries (ascii and binary) stored in the\n map.","sig":null,"attributes":[{"value":"/ Returns the number of metadata entries (ascii and binary) stored in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93136,"byte_end":93211,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93216,"byte_end":93224,"line_start":284,"line_end":284,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93229,"byte_end":93232,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This number represents the total number of **values** stored in the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93237,"byte_end":93313,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ This number can be greater than or equal to the number of **keys**","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93318,"byte_end":93388,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ stored given that a single key may have more than one associated value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93393,"byte_end":93468,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93473,"byte_end":93476,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93481,"byte_end":93495,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93500,"byte_end":93503,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93508,"byte_end":93515,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93520,"byte_end":93549,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93554,"byte_end":93591,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93596,"byte_end":93599,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93604,"byte_end":93633,"line_start":296,"line_end":296,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93638,"byte_end":93641,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93646,"byte_end":93704,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93709,"byte_end":93788,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93793,"byte_end":93796,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93801,"byte_end":93830,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93835,"byte_end":93838,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93843,"byte_end":93901,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93906,"byte_end":93909,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(3, map.len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93914,"byte_end":93943,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":93948,"byte_end":93955,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94736,"byte_end":94744,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"keys_len","qualname":"<MetadataMap>::keys_len","value":"fn keys_len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of keys (ascii and binary) stored in the map.","sig":null,"attributes":[{"value":"/ Returns the number of keys (ascii and binary) stored in the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94027,"byte_end":94095,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94100,"byte_end":94103,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This number will be less than or equal to `len()` as each key may have","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94108,"byte_end":94182,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ more than one associated value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94187,"byte_end":94222,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94227,"byte_end":94230,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94235,"byte_end":94249,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94254,"byte_end":94257,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94262,"byte_end":94269,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94274,"byte_end":94303,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94308,"byte_end":94345,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94350,"byte_end":94353,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.keys_len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94358,"byte_end":94392,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94397,"byte_end":94400,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94405,"byte_end":94463,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94468,"byte_end":94547,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94552,"byte_end":94555,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94560,"byte_end":94594,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94599,"byte_end":94602,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94607,"byte_end":94665,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94670,"byte_end":94673,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94678,"byte_end":94712,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94717,"byte_end":94724,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95155,"byte_end":95163,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataMap>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94806,"byte_end":94855,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94860,"byte_end":94863,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94868,"byte_end":94882,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94887,"byte_end":94890,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94895,"byte_end":94902,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94907,"byte_end":94936,"line_start":342,"line_end":342,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94941,"byte_end":94978,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94983,"byte_end":94986,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":94991,"byte_end":95019,"line_start":345,"line_end":345,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95024,"byte_end":95027,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95032,"byte_end":95089,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95094,"byte_end":95097,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95102,"byte_end":95131,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95136,"byte_end":95143,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95627,"byte_end":95632,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"clear","qualname":"<MetadataMap>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95224,"byte_end":95300,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95305,"byte_end":95319,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95324,"byte_end":95327,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95332,"byte_end":95346,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95351,"byte_end":95354,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95359,"byte_end":95366,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95371,"byte_end":95400,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95405,"byte_end":95442,"line_start":362,"line_end":362,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95447,"byte_end":95504,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95509,"byte_end":95512,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ map.clear();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95517,"byte_end":95533,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95538,"byte_end":95566,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() > 0);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95571,"byte_end":95603,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95608,"byte_end":95615,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96243,"byte_end":96251,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MetadataMap>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of custom metadata entries the map can hold without\n reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of custom metadata entries the map can hold without","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95687,"byte_end":95761,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ reallocating.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95766,"byte_end":95783,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95788,"byte_end":95791,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This number is an approximation as certain usage patterns could cause","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95796,"byte_end":95869,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ additional allocations before the returned capacity is filled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95874,"byte_end":95940,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95945,"byte_end":95948,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95953,"byte_end":95967,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95972,"byte_end":95975,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95980,"byte_end":95987,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":95992,"byte_end":96021,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96026,"byte_end":96063,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96068,"byte_end":96071,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96076,"byte_end":96110,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96115,"byte_end":96118,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96123,"byte_end":96180,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(6, map.capacity());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96185,"byte_end":96219,"line_start":388,"line_end":388,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96224,"byte_end":96231,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97089,"byte_end":97096,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"reserve","qualname":"<MetadataMap>::reserve","value":"fn reserve<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more custom metadata to be\n inserted into the `MetadataMap`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more custom metadata to be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96313,"byte_end":96387,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ inserted into the `MetadataMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96392,"byte_end":96428,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96433,"byte_end":96436,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The metadata map may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96441,"byte_end":96517,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ Like with `with_capacity`, this will be a \"best effort\" to avoid","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96522,"byte_end":96590,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ allocations until `additional` more custom metadata is inserted. Certain","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96595,"byte_end":96671,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ usage patterns could cause additional allocations before the number is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96676,"byte_end":96750,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ reached.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96755,"byte_end":96767,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96772,"byte_end":96775,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96780,"byte_end":96792,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96797,"byte_end":96800,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96805,"byte_end":96861,"line_start":405,"line_end":405,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96866,"byte_end":96869,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96874,"byte_end":96888,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96893,"byte_end":96896,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96901,"byte_end":96908,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96913,"byte_end":96942,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96947,"byte_end":96984,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ map.reserve(10);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":96989,"byte_end":97009,"line_start":412,"line_end":412,"column_start":5,"column_end":25}},{"value":"/ # map.insert(\"x-host\", \"bar\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97014,"byte_end":97065,"line_start":413,"line_end":413,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97070,"byte_end":97077,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98738,"byte_end":98741,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"get","qualname":"<MetadataMap>::get","value":"fn get<K, '_>(&'_ Self, K) -> Option<&'_ MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value associated with the key. This method\n is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_bin.","sig":null,"attributes":[{"value":"/ Returns a reference to the value associated with the key. This method","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97182,"byte_end":97255,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97260,"byte_end":97327,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ \"-bin\"). For binary entries, use get_bin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97332,"byte_end":97377,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97382,"byte_end":97385,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97390,"byte_end":97466,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `get_all` to get all values associated with a given","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97471,"byte_end":97543,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97548,"byte_end":97619,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97624,"byte_end":97627,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97632,"byte_end":97646,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97651,"byte_end":97654,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97659,"byte_end":97666,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97671,"byte_end":97700,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97705,"byte_end":97742,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get(\"x-host\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97747,"byte_end":97788,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97793,"byte_end":97796,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97801,"byte_end":97852,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97857,"byte_end":97910,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97915,"byte_end":97968,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97973,"byte_end":97976,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":97981,"byte_end":98032,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98037,"byte_end":98090,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98095,"byte_end":98098,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98103,"byte_end":98165,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98170,"byte_end":98194,"line_start":442,"line_end":442,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98199,"byte_end":98267,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get(\"host-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98272,"byte_end":98315,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get(\"host-bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98320,"byte_end":98375,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98380,"byte_end":98438,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98443,"byte_end":98446,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98451,"byte_end":98511,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98516,"byte_end":98540,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get(\"host{}bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98545,"byte_end":98589,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ assert!(map.get(\"host{}bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98594,"byte_end":98650,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ assert!(map.get(&(\"host{}bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98655,"byte_end":98714,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98719,"byte_end":98726,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100156,"byte_end":100163,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"get_bin","qualname":"<MetadataMap>::get_bin","value":"fn get_bin<K, '_>(&'_ Self, K) -> Option<&'_ MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98875,"byte_end":98941,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98946,"byte_end":98949,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98954,"byte_end":98968,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98973,"byte_end":98976,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98981,"byte_end":98988,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":98993,"byte_end":99022,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99027,"byte_end":99064,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99069,"byte_end":99123,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99128,"byte_end":99131,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99136,"byte_end":99211,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99216,"byte_end":99282,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99287,"byte_end":99353,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99358,"byte_end":99361,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99366,"byte_end":99441,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99446,"byte_end":99512,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99517,"byte_end":99520,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99525,"byte_end":99587,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99592,"byte_end":99616,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99621,"byte_end":99670,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99675,"byte_end":99718,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get_bin(\"host\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99723,"byte_end":99778,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99783,"byte_end":99841,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99846,"byte_end":99849,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99854,"byte_end":99914,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99919,"byte_end":99943,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin(\"host{}-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":99948,"byte_end":99997,"line_start":486,"line_end":486,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100002,"byte_end":100063,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100068,"byte_end":100132,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100137,"byte_end":100144,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101720,"byte_end":101727,"line_start":528,"line_end":528,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetadataMap>::get_mut","value":"fn get_mut<K, '_>(&'_ mut Self, K) -> Option<&'_ mut MetadataValue<Ascii>>\nwhere K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value associated with the key. This\n method is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_mut_bin.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value associated with the key. This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100299,"byte_end":100373,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ method is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100378,"byte_end":100452,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ \"-bin\"). For binary entries, use get_mut_bin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100457,"byte_end":100506,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100511,"byte_end":100514,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100519,"byte_end":100595,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `entry` to get all values associated with a given","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100600,"byte_end":100670,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100675,"byte_end":100746,"line_start":503,"line_end":503,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100751,"byte_end":100754,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100759,"byte_end":100773,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100778,"byte_end":100781,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100786,"byte_end":100793,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100798,"byte_end":100827,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100832,"byte_end":100873,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100878,"byte_end":100929,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/ map.get_mut(\"x-host\").unwrap().set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100934,"byte_end":100989,"line_start":511,"line_end":511,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":100994,"byte_end":100997,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"x-host\").unwrap().is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101002,"byte_end":101057,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101062,"byte_end":101065,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101070,"byte_end":101132,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101137,"byte_end":101161,"line_start":516,"line_end":516,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101166,"byte_end":101234,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_mut(\"host-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101239,"byte_end":101286,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_mut(\"host-bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101291,"byte_end":101350,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_mut(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101355,"byte_end":101417,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101422,"byte_end":101425,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101430,"byte_end":101490,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101495,"byte_end":101519,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_mut(\"host{}\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101524,"byte_end":101569,"line_start":524,"line_end":524,"column_start":5,"column_end":50}},{"value":"/ assert!(map.get_mut(\"host{}\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101574,"byte_end":101631,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ assert!(map.get_mut(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101636,"byte_end":101696,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101701,"byte_end":101708,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102972,"byte_end":102983,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"get_bin_mut","qualname":"<MetadataMap>::get_bin_mut","value":"fn get_bin_mut<K, '_>(&'_ mut Self, K)\n-> Option<&'_ mut MetadataValue<Binary>> where K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101873,"byte_end":101943,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101948,"byte_end":101951,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101956,"byte_end":101970,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101975,"byte_end":101978,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101983,"byte_end":101990,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":101995,"byte_end":102024,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102029,"byte_end":102070,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102075,"byte_end":102150,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ map.get_bin_mut(\"trace-proto-bin\").unwrap().set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102155,"byte_end":102223,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102228,"byte_end":102231,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").unwrap().is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102236,"byte_end":102304,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102309,"byte_end":102312,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102317,"byte_end":102379,"line_start":547,"line_end":547,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102384,"byte_end":102408,"line_start":548,"line_end":548,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102413,"byte_end":102462,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin_mut(\"host\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102467,"byte_end":102514,"line_start":550,"line_end":550,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_bin_mut(\"host\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102519,"byte_end":102578,"line_start":551,"line_end":551,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_bin_mut(&(\"host\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102583,"byte_end":102645,"line_start":552,"line_end":552,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102650,"byte_end":102653,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102658,"byte_end":102718,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102723,"byte_end":102747,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102752,"byte_end":102805,"line_start":556,"line_end":556,"column_start":5,"column_end":58}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102810,"byte_end":102875,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert!(map.get_bin_mut(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102880,"byte_end":102948,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":102953,"byte_end":102960,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104878,"byte_end":104885,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"get_all","qualname":"<MetadataMap>::get_all","value":"fn get_all<K, '_>(&'_ Self, K) -> GetAll where K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a view of all values associated with a key. This method is for\n ascii metadata entries (those whose names don't end with \"-bin\"). For\n binary entries, use get_all_bin.","sig":null,"attributes":[{"value":"/ Returns a view of all values associated with a key. This method is for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103131,"byte_end":103205,"line_start":567,"line_end":567,"column_start":5,"column_end":79}},{"value":"/ ascii metadata entries (those whose names don't end with \"-bin\"). For","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103210,"byte_end":103283,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ binary entries, use get_all_bin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103288,"byte_end":103324,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103329,"byte_end":103332,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The returned view does not incur any allocations and allows iterating","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103337,"byte_end":103410,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ the values associated with the key.  See [`GetAll`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103415,"byte_end":103488,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ Returns `None` if there are no values associated with the key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103493,"byte_end":103559,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103564,"byte_end":103567,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ [`GetAll`]: struct.GetAll.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103572,"byte_end":103606,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103611,"byte_end":103614,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103619,"byte_end":103633,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103638,"byte_end":103641,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103646,"byte_end":103653,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103658,"byte_end":103687,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103692,"byte_end":103729,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103734,"byte_end":103737,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103742,"byte_end":103793,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-host\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103798,"byte_end":103851,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103856,"byte_end":103859,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103864,"byte_end":103869,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all(\"x-host\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103874,"byte_end":103915,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103920,"byte_end":103923,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103928,"byte_end":103963,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":103968,"byte_end":104019,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104024,"byte_end":104077,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104082,"byte_end":104121,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104126,"byte_end":104131,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104136,"byte_end":104139,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104144,"byte_end":104206,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104211,"byte_end":104235,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104240,"byte_end":104308,"line_start":597,"line_end":597,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_all(\"host-bin\").iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104313,"byte_end":104374,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all(\"host-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104379,"byte_end":104452,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all(&(\"host-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104457,"byte_end":104533,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104538,"byte_end":104541,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104546,"byte_end":104606,"line_start":602,"line_end":602,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104611,"byte_end":104635,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all(\"host{}\").iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104640,"byte_end":104699,"line_start":604,"line_end":604,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_all(\"host{}\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104704,"byte_end":104775,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ assert!(map.get_all(&(\"host{}\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104780,"byte_end":104854,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":104859,"byte_end":104866,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106492,"byte_end":106503,"line_start":651,"line_end":651,"column_start":12,"column_end":23},"name":"get_all_bin","qualname":"<MetadataMap>::get_all_bin","value":"fn get_all_bin<K, '_>(&'_ Self, K) -> GetAll where K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_all, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_all, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105084,"byte_end":105154,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105159,"byte_end":105162,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105167,"byte_end":105181,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105186,"byte_end":105189,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105194,"byte_end":105201,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105206,"byte_end":105235,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105240,"byte_end":105277,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105282,"byte_end":105285,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105290,"byte_end":105365,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"goodbye\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105370,"byte_end":105447,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105452,"byte_end":105455,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105460,"byte_end":105465,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105470,"byte_end":105524,"line_start":630,"line_end":630,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105529,"byte_end":105532,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105537,"byte_end":105572,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105577,"byte_end":105628,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105633,"byte_end":105686,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105691,"byte_end":105730,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105735,"byte_end":105740,"line_start":636,"line_end":636,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105745,"byte_end":105748,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105753,"byte_end":105815,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105820,"byte_end":105844,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105849,"byte_end":105898,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_all_bin(\"host\").iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105903,"byte_end":105964,"line_start":641,"line_end":641,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all_bin(\"host\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":105969,"byte_end":106042,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all_bin(&(\"host\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106047,"byte_end":106123,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106128,"byte_end":106131,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106136,"byte_end":106196,"line_start":645,"line_end":645,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106201,"byte_end":106225,"line_start":646,"line_end":646,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\").iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106230,"byte_end":106297,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106302,"byte_end":106381,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ assert!(map.get_all_bin(&(\"host{}-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106386,"byte_end":106468,"line_start":649,"line_end":649,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106473,"byte_end":106480,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107435,"byte_end":107447,"line_start":681,"line_end":681,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MetadataMap>::contains_key","value":"fn contains_key<K, '_>(&'_ Self, K) -> bool where\nK: AsEncodingAgnosticMetadataKey","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key. This\n method works for both ascii and binary entries.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key. This","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106704,"byte_end":106776,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ method works for both ascii and binary entries.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106781,"byte_end":106832,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106837,"byte_end":106840,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106845,"byte_end":106859,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106864,"byte_end":106867,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106872,"byte_end":106879,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106884,"byte_end":106913,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106918,"byte_end":106955,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":106960,"byte_end":107001,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107006,"byte_end":107009,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107014,"byte_end":107082,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ map.insert(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107087,"byte_end":107138,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107143,"byte_end":107146,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // contains_key works for both Binary and Ascii keys:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107151,"byte_end":107208,"line_start":674,"line_end":674,"column_start":5,"column_end":62}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107213,"byte_end":107253,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ assert!(map.contains_key(\"host-bin\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107258,"byte_end":107300,"line_start":676,"line_end":676,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107305,"byte_end":107308,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // contains_key returns false for invalid keys:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107313,"byte_end":107364,"line_start":678,"line_end":678,"column_start":5,"column_end":56}},{"value":"/ assert!(!map.contains_key(\"x{}host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107369,"byte_end":107411,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107416,"byte_end":107423,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108570,"byte_end":108574,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetadataMap>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs (both ascii and binary).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107574,"byte_end":107643,"line_start":688,"line_end":688,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107648,"byte_end":107651,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107656,"byte_end":107729,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded once per associated","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107734,"byte_end":107806,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ value. So, if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107811,"byte_end":107887,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107892,"byte_end":107895,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107900,"byte_end":107914,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107919,"byte_end":107922,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107927,"byte_end":107934,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107939,"byte_end":107968,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":107973,"byte_end":108010,"line_start":698,"line_end":698,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108015,"byte_end":108018,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108023,"byte_end":108074,"line_start":700,"line_end":700,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108079,"byte_end":108132,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108137,"byte_end":108188,"line_start":702,"line_end":702,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108193,"byte_end":108196,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108201,"byte_end":108238,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/     match key_and_value {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108243,"byte_end":108272,"line_start":705,"line_end":705,"column_start":5,"column_end":34}},{"value":"/         KeyAndValueRef::Ascii(ref key, ref value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108277,"byte_end":108333,"line_start":706,"line_end":706,"column_start":5,"column_end":61}},{"value":"/             println!(\"Ascii: {:?}: {:?}\", key, value),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108338,"byte_end":108396,"line_start":707,"line_end":707,"column_start":5,"column_end":63}},{"value":"/         KeyAndValueRef::Binary(ref key, ref value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108401,"byte_end":108458,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/             println!(\"Binary: {:?}: {:?}\", key, value),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108463,"byte_end":108522,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108527,"byte_end":108536,"line_start":710,"line_end":710,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108541,"byte_end":108546,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108551,"byte_end":108558,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109643,"byte_end":109651,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetadataMap>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs, with mutable value references.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs, with mutable value references.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108672,"byte_end":108748,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108753,"byte_end":108756,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The iterator order is arbitrary, but consistent across platforms for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108761,"byte_end":108837,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/ same crate version. Each key will be yielded once per associated value,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108842,"byte_end":108917,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ so if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108922,"byte_end":108990,"line_start":723,"line_end":723,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":108995,"byte_end":108998,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109003,"byte_end":109017,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109022,"byte_end":109025,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109030,"byte_end":109037,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109042,"byte_end":109071,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109076,"byte_end":109113,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109118,"byte_end":109121,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109126,"byte_end":109177,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109182,"byte_end":109235,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109240,"byte_end":109291,"line_start":733,"line_end":733,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109296,"byte_end":109299,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter_mut() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109304,"byte_end":109345,"line_start":735,"line_end":735,"column_start":5,"column_end":46}},{"value":"/     match key_and_value {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109350,"byte_end":109379,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/         KeyAndMutValueRef::Ascii(key, mut value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109384,"byte_end":109439,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109444,"byte_end":109486,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/         KeyAndMutValueRef::Binary(key, mut value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109491,"byte_end":109547,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109552,"byte_end":109595,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109600,"byte_end":109609,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109614,"byte_end":109619,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109624,"byte_end":109631,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110662,"byte_end":110666,"line_start":776,"line_end":776,"column_start":12,"column_end":16},"name":"keys","qualname":"<MetadataMap>::keys","value":"fn keys<'_>(&'_ Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109763,"byte_end":109797,"line_start":750,"line_end":750,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109802,"byte_end":109805,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109810,"byte_end":109883,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded only once even if it","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109888,"byte_end":109961,"line_start":753,"line_end":753,"column_start":5,"column_end":78}},{"value":"/ has multiple associated values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":109966,"byte_end":110001,"line_start":754,"line_end":754,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110006,"byte_end":110009,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110014,"byte_end":110028,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110033,"byte_end":110036,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110041,"byte_end":110048,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110053,"byte_end":110082,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110087,"byte_end":110124,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110129,"byte_end":110132,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110137,"byte_end":110188,"line_start":762,"line_end":762,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110193,"byte_end":110246,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110251,"byte_end":110321,"line_start":764,"line_end":764,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110326,"byte_end":110329,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110334,"byte_end":110361,"line_start":766,"line_end":766,"column_start":5,"column_end":32}},{"value":"/     match key {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110366,"byte_end":110385,"line_start":767,"line_end":767,"column_start":5,"column_end":24}},{"value":"/         KeyRef::Ascii(ref key) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110390,"byte_end":110427,"line_start":768,"line_end":768,"column_start":5,"column_end":42}},{"value":"/             println!(\"Ascii key: {:?}\", key),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110432,"byte_end":110481,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/         KeyRef::Binary(ref key) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110486,"byte_end":110524,"line_start":770,"line_end":770,"column_start":5,"column_end":43}},{"value":"/             println!(\"Binary key: {:?}\", key),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110529,"byte_end":110579,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110584,"byte_end":110593,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", key);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110598,"byte_end":110628,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110633,"byte_end":110638,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110643,"byte_end":110650,"line_start":775,"line_end":775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111627,"byte_end":111633,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"values","qualname":"<MetadataMap>::values","value":"fn values<'_>(&'_ Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all values (both ascii and binary).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110764,"byte_end":110824,"line_start":782,"line_end":782,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110829,"byte_end":110832,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110837,"byte_end":110910,"line_start":784,"line_end":784,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110915,"byte_end":110942,"line_start":785,"line_end":785,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110947,"byte_end":110950,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110955,"byte_end":110969,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110974,"byte_end":110977,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110982,"byte_end":110989,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":110994,"byte_end":111023,"line_start":790,"line_end":790,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111028,"byte_end":111065,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111070,"byte_end":111073,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111078,"byte_end":111129,"line_start":793,"line_end":793,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111134,"byte_end":111187,"line_start":794,"line_end":794,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111192,"byte_end":111262,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111267,"byte_end":111270,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ for value in map.values() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111275,"byte_end":111306,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     match value {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111311,"byte_end":111332,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/         ValueRef::Ascii(ref value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111337,"byte_end":111378,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/             println!(\"Ascii value: {:?}\", value),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111383,"byte_end":111436,"line_start":800,"line_end":800,"column_start":5,"column_end":58}},{"value":"/         ValueRef::Binary(ref value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111441,"byte_end":111483,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/             println!(\"Binary value: {:?}\", value),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111488,"byte_end":111542,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111547,"byte_end":111556,"line_start":803,"line_end":803,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", value);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111561,"byte_end":111593,"line_start":804,"line_end":804,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111598,"byte_end":111603,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111608,"byte_end":111615,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112518,"byte_end":112528,"line_start":837,"line_end":837,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<MetadataMap>::values_mut","value":"fn values_mut<'_>(&'_ mut Self) -> ValuesMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111735,"byte_end":111779,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111784,"byte_end":111787,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111792,"byte_end":111865,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111870,"byte_end":111897,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111902,"byte_end":111905,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111910,"byte_end":111924,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111929,"byte_end":111932,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111937,"byte_end":111944,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111949,"byte_end":111978,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":111983,"byte_end":112024,"line_start":822,"line_end":822,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112029,"byte_end":112032,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112037,"byte_end":112088,"line_start":824,"line_end":824,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112093,"byte_end":112146,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112151,"byte_end":112202,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112207,"byte_end":112210,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ for value in map.values_mut() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112215,"byte_end":112250,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/     match value {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112255,"byte_end":112276,"line_start":829,"line_end":829,"column_start":5,"column_end":26}},{"value":"/         ValueRefMut::Ascii(mut value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112281,"byte_end":112325,"line_start":830,"line_end":830,"column_start":5,"column_end":49}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112330,"byte_end":112372,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/         ValueRefMut::Binary(mut value) =>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112377,"byte_end":112422,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112427,"byte_end":112470,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112475,"byte_end":112484,"line_start":834,"line_end":834,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112489,"byte_end":112494,"line_start":835,"line_end":835,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112499,"byte_end":112506,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114156,"byte_end":114161,"line_start":883,"line_end":883,"column_start":12,"column_end":17},"name":"entry","qualname":"<MetadataMap>::entry","value":"fn entry<K, '_>(&'_ mut Self, K) -> Result<Entry, InvalidMetadataKey> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given ascii key's corresponding entry in the map for in-place\n manipulation. For binary keys, use `entry_bin`.","sig":null,"attributes":[{"value":"/ Gets the given ascii key's corresponding entry in the map for in-place","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112644,"byte_end":112718,"line_start":843,"line_end":843,"column_start":5,"column_end":79}},{"value":"/ manipulation. For binary keys, use `entry_bin`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112723,"byte_end":112774,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112779,"byte_end":112782,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112787,"byte_end":112801,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112806,"byte_end":112809,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112814,"byte_end":112821,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112826,"byte_end":112855,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112860,"byte_end":112901,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112906,"byte_end":112909,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112914,"byte_end":112934,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     \"content-length\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112939,"byte_end":112964,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112969,"byte_end":112987,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":112992,"byte_end":113017,"line_start":855,"line_end":855,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113022,"byte_end":113040,"line_start":856,"line_end":856,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113045,"byte_end":113051,"line_start":857,"line_end":857,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113056,"byte_end":113059,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113064,"byte_end":113092,"line_start":859,"line_end":859,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry(header).unwrap().or_insert(\"\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113097,"byte_end":113177,"line_start":860,"line_end":860,"column_start":5,"column_end":85}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113182,"byte_end":113266,"line_start":861,"line_end":861,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113271,"byte_end":113276,"line_start":862,"line_end":862,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113281,"byte_end":113284,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113289,"byte_end":113346,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113351,"byte_end":113400,"line_start":865,"line_end":865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113405,"byte_end":113408,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ // Gracefully handles parting invalid key strings","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113413,"byte_end":113466,"line_start":867,"line_end":867,"column_start":5,"column_end":58}},{"value":"/ assert!(!map.entry(\"a{}b\").is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113471,"byte_end":113511,"line_start":868,"line_end":868,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113516,"byte_end":113519,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113524,"byte_end":113586,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113591,"byte_end":113615,"line_start":871,"line_end":871,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113620,"byte_end":113688,"line_start":872,"line_end":872,"column_start":5,"column_end":73}},{"value":"/ assert!(!map.entry(\"host-bin\").is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113693,"byte_end":113737,"line_start":873,"line_end":873,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry(\"host-bin\".to_string()).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113742,"byte_end":113798,"line_start":874,"line_end":874,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry(&(\"host-bin\".to_string())).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113803,"byte_end":113862,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113867,"byte_end":113870,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113875,"byte_end":113935,"line_start":877,"line_end":877,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113940,"byte_end":113964,"line_start":878,"line_end":878,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry(\"host{}\").is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":113969,"byte_end":114011,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/ assert!(!map.entry(\"host{}\".to_string()).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114016,"byte_end":114070,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/ assert!(!map.entry(&(\"host{}\".to_string())).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114075,"byte_end":114132,"line_start":881,"line_end":881,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114137,"byte_end":114144,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115837,"byte_end":115846,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"entry_bin","qualname":"<MetadataMap>::entry_bin","value":"fn entry_bin<K, '_>(&'_ mut Self, K) -> Result<Entry, InvalidMetadataKey>\nwhere K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given Binary key's corresponding entry in the map for in-place\n manipulation.","sig":null,"attributes":[{"value":"/ Gets the given Binary key's corresponding entry in the map for in-place","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114336,"byte_end":114411,"line_start":890,"line_end":890,"column_start":5,"column_end":80}},{"value":"/ manipulation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114416,"byte_end":114433,"line_start":891,"line_end":891,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114438,"byte_end":114441,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114446,"byte_end":114460,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114465,"byte_end":114468,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114473,"byte_end":114480,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114485,"byte_end":114514,"line_start":896,"line_end":896,"column_start":5,"column_end":34}},{"value":"/ # use std::str;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114519,"byte_end":114538,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114543,"byte_end":114584,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114589,"byte_end":114592,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114597,"byte_end":114617,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/     \"content-length-bin\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114622,"byte_end":114651,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/     \"x-hello-bin\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114656,"byte_end":114678,"line_start":902,"line_end":902,"column_start":5,"column_end":27}},{"value":"/     \"Content-Length-bin\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114683,"byte_end":114712,"line_start":903,"line_end":903,"column_start":5,"column_end":34}},{"value":"/     \"x-world-bin\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114717,"byte_end":114739,"line_start":904,"line_end":904,"column_start":5,"column_end":27}},{"value":"/ ];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114744,"byte_end":114750,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114755,"byte_end":114758,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114763,"byte_end":114791,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry_bin(header).unwrap().or_insert(MetadataValue::from_bytes(b\"\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114796,"byte_end":114891,"line_start":908,"line_end":908,"column_start":5,"column_end":100}},{"value":"/     *counter = MetadataValue::from_bytes(format!(\"{}{}\", str::from_utf8(counter.to_bytes().unwrap().as_ref()).unwrap(), \"1\").as_bytes());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":114896,"byte_end":115037,"line_start":909,"line_end":909,"column_start":5,"column_end":146}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115042,"byte_end":115047,"line_start":910,"line_end":910,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115052,"byte_end":115055,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_bin(\"content-length-bin\").unwrap(), \"11\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115060,"byte_end":115125,"line_start":912,"line_end":912,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(map.get_bin(\"x-hello-bin\").unwrap(), \"1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115130,"byte_end":115187,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115192,"byte_end":115195,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115200,"byte_end":115262,"line_start":915,"line_end":915,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115267,"byte_end":115291,"line_start":916,"line_end":916,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115296,"byte_end":115345,"line_start":917,"line_end":917,"column_start":5,"column_end":54}},{"value":"/ assert!(!map.entry_bin(\"host\").is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115350,"byte_end":115394,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry_bin(\"host\".to_string()).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115399,"byte_end":115455,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry_bin(&(\"host\".to_string())).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115460,"byte_end":115519,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115524,"byte_end":115527,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115532,"byte_end":115592,"line_start":922,"line_end":922,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115597,"byte_end":115621,"line_start":923,"line_end":923,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\").is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115626,"byte_end":115676,"line_start":924,"line_end":924,"column_start":5,"column_end":55}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\".to_string()).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115681,"byte_end":115743,"line_start":925,"line_end":925,"column_start":5,"column_end":67}},{"value":"/ assert!(!map.entry_bin(&(\"host{}-bin\".to_string())).is_ok());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115748,"byte_end":115813,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":115818,"byte_end":115825,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118434,"byte_end":118440,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"name":"insert","qualname":"<MetadataMap>::insert","value":"fn insert<K, '_>(&'_ mut Self, K, MetadataValue<Ascii>)\n-> Option<MetadataValue<Ascii>> where K: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `insert_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116687,"byte_end":116762,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/ use `insert_bin`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116767,"byte_end":116788,"line_start":958,"line_end":958,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116793,"byte_end":116796,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116801,"byte_end":116871,"line_start":960,"line_end":960,"column_start":5,"column_end":75}},{"value":"/ converted to a `MetadataKey<Ascii>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116876,"byte_end":116916,"line_start":961,"line_end":961,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116921,"byte_end":116924,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `None` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":116929,"byte_end":117000,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117005,"byte_end":117018,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117023,"byte_end":117026,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is associated with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117031,"byte_end":117105,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ the key and all previous values are removed. **Note** that only a single","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117110,"byte_end":117186,"line_start":967,"line_end":967,"column_start":5,"column_end":81}},{"value":"/ one of the previous values is returned. If there are multiple values","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117191,"byte_end":117263,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ that have been previously associated with the key, then the first one is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117268,"byte_end":117344,"line_start":969,"line_end":969,"column_start":5,"column_end":81}},{"value":"/ returned. See `insert_mult` on `OccupiedEntry` for an API that returns","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117349,"byte_end":117423,"line_start":970,"line_end":970,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117428,"byte_end":117443,"line_start":971,"line_end":971,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117448,"byte_end":117451,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The key is not updated, though; this matters for types that can be `==`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117456,"byte_end":117531,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/ without being identical.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117536,"byte_end":117564,"line_start":974,"line_end":974,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117569,"byte_end":117572,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117577,"byte_end":117591,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117596,"byte_end":117599,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117604,"byte_end":117611,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117616,"byte_end":117645,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117650,"byte_end":117687,"line_start":980,"line_end":980,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117692,"byte_end":117762,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117767,"byte_end":117796,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117801,"byte_end":117804,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert(\"x-host\", \"earth\".parse().unwrap()).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117809,"byte_end":117884,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117889,"byte_end":117919,"line_start":985,"line_end":985,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117924,"byte_end":117931,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117936,"byte_end":117939,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117944,"byte_end":117963,"line_start":988,"line_end":988,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":117968,"byte_end":117997,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118002,"byte_end":118039,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118044,"byte_end":118099,"line_start":991,"line_end":991,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"x{}host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118104,"byte_end":118156,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118161,"byte_end":118168,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118173,"byte_end":118176,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118181,"byte_end":118200,"line_start":995,"line_end":995,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118205,"byte_end":118234,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118239,"byte_end":118276,"line_start":997,"line_end":997,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is binary panics (use insert_bin).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118281,"byte_end":118350,"line_start":998,"line_end":998,"column_start":5,"column_end":74}},{"value":"/ map.insert(\"x-host-bin\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118355,"byte_end":118410,"line_start":999,"line_end":999,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118415,"byte_end":118422,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119811,"byte_end":119821,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"insert_bin","qualname":"<MetadataMap>::insert_bin","value":"fn insert_bin<K, '_>(&'_ mut Self, K, MetadataValue<Binary>)\n-> Option<MetadataValue<Binary>> where K: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like insert, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like insert, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118614,"byte_end":118683,"line_start":1008,"line_end":1008,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118688,"byte_end":118691,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118696,"byte_end":118766,"line_start":1010,"line_end":1010,"column_start":5,"column_end":75}},{"value":"/ converted to a `MetadataKey<Binary>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118771,"byte_end":118812,"line_start":1011,"line_end":1011,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118817,"byte_end":118820,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118825,"byte_end":118839,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118844,"byte_end":118847,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118852,"byte_end":118859,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118864,"byte_end":118893,"line_start":1016,"line_end":1016,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118898,"byte_end":118935,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":118940,"byte_end":119034,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119039,"byte_end":119068,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119073,"byte_end":119076,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\")).unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119081,"byte_end":119180,"line_start":1021,"line_end":1021,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119185,"byte_end":119215,"line_start":1022,"line_end":1022,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119220,"byte_end":119227,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119232,"byte_end":119235,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119240,"byte_end":119259,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119264,"byte_end":119293,"line_start":1026,"line_end":1026,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119298,"byte_end":119339,"line_start":1027,"line_end":1027,"column_start":5,"column_end":46}},{"value":"/ // Attempting to add a binary metadata entry with an invalid name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119344,"byte_end":119413,"line_start":1028,"line_end":1028,"column_start":5,"column_end":74}},{"value":"/ map.insert_bin(\"trace-proto\", MetadataValue::from_bytes(b\"hello\")); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119418,"byte_end":119510,"line_start":1029,"line_end":1029,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119515,"byte_end":119522,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119527,"byte_end":119530,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119535,"byte_end":119554,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119559,"byte_end":119588,"line_start":1033,"line_end":1033,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119593,"byte_end":119630,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119635,"byte_end":119690,"line_start":1035,"line_end":1035,"column_start":5,"column_end":60}},{"value":"/ map.insert_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119695,"byte_end":119787,"line_start":1036,"line_end":1036,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":119792,"byte_end":119799,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121666,"byte_end":121672,"line_start":1092,"line_end":1092,"column_start":12,"column_end":18},"name":"append","qualname":"<MetadataMap>::append","value":"fn append<K, '_>(&'_ mut Self, K, MetadataValue<Ascii>) -> bool where\nK: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `append_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120029,"byte_end":120104,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ use `append_bin`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120109,"byte_end":120130,"line_start":1050,"line_end":1050,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120135,"byte_end":120138,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120143,"byte_end":120213,"line_start":1052,"line_end":1052,"column_start":5,"column_end":75}},{"value":"/ converted to a `MetadataKey<Ascii>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120218,"byte_end":120258,"line_start":1053,"line_end":1053,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120263,"byte_end":120266,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `false` is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120271,"byte_end":120343,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120348,"byte_end":120361,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120366,"byte_end":120369,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is pushed to the end","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120374,"byte_end":120450,"line_start":1058,"line_end":1058,"column_start":5,"column_end":81}},{"value":"/ of the list of values currently associated with the key. The key is not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120455,"byte_end":120530,"line_start":1059,"line_end":1059,"column_start":5,"column_end":80}},{"value":"/ updated, though; this matters for types that can be `==` without being","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120535,"byte_end":120609,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ identical.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120614,"byte_end":120628,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120633,"byte_end":120636,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120641,"byte_end":120655,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120660,"byte_end":120663,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120668,"byte_end":120675,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120680,"byte_end":120709,"line_start":1066,"line_end":1066,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120714,"byte_end":120751,"line_start":1067,"line_end":1067,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120756,"byte_end":120826,"line_start":1068,"line_end":1068,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120831,"byte_end":120860,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120865,"byte_end":120868,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120873,"byte_end":120924,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120929,"byte_end":120932,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120937,"byte_end":120976,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":120981,"byte_end":121011,"line_start":1074,"line_end":1074,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121016,"byte_end":121060,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121065,"byte_end":121109,"line_start":1076,"line_end":1076,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121114,"byte_end":121121,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121126,"byte_end":121129,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121134,"byte_end":121153,"line_start":1079,"line_end":1079,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121158,"byte_end":121187,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121192,"byte_end":121229,"line_start":1081,"line_end":1081,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121234,"byte_end":121289,"line_start":1082,"line_end":1082,"column_start":5,"column_end":60}},{"value":"/ map.append(\"x{}host\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121294,"byte_end":121367,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121372,"byte_end":121379,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121384,"byte_end":121387,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121392,"byte_end":121411,"line_start":1086,"line_end":1086,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121416,"byte_end":121445,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121450,"byte_end":121487,"line_start":1088,"line_end":1088,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is binary panics (use append_bin).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121492,"byte_end":121561,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ map.append(\"x-host-bin\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121566,"byte_end":121642,"line_start":1090,"line_end":1090,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121647,"byte_end":121654,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123148,"byte_end":123158,"line_start":1133,"line_end":1133,"column_start":12,"column_end":22},"name":"append_bin","qualname":"<MetadataMap>::append_bin","value":"fn append_bin<K, '_>(&'_ mut Self, K, MetadataValue<Binary>) -> bool where\nK: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like append, but for binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like append, but for binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121826,"byte_end":121895,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121900,"byte_end":121903,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121908,"byte_end":121978,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/ converted to a `MetadataKey<Binary>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":121983,"byte_end":122024,"line_start":1102,"line_end":1102,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122029,"byte_end":122032,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122037,"byte_end":122051,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122056,"byte_end":122059,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122064,"byte_end":122071,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122076,"byte_end":122105,"line_start":1107,"line_end":1107,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122110,"byte_end":122147,"line_start":1108,"line_end":1108,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122152,"byte_end":122246,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122251,"byte_end":122280,"line_start":1110,"line_end":1110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122285,"byte_end":122288,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122293,"byte_end":122368,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122373,"byte_end":122376,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122381,"byte_end":122433,"line_start":1114,"line_end":1114,"column_start":5,"column_end":57}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122438,"byte_end":122468,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122473,"byte_end":122517,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122522,"byte_end":122566,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122571,"byte_end":122578,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122583,"byte_end":122586,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122591,"byte_end":122610,"line_start":1120,"line_end":1120,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122615,"byte_end":122644,"line_start":1121,"line_end":1121,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122649,"byte_end":122686,"line_start":1122,"line_end":1122,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122691,"byte_end":122746,"line_start":1123,"line_end":1123,"column_start":5,"column_end":60}},{"value":"/ map.append_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122751,"byte_end":122843,"line_start":1124,"line_end":1124,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122848,"byte_end":122855,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122860,"byte_end":122863,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122868,"byte_end":122887,"line_start":1127,"line_end":1127,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122892,"byte_end":122921,"line_start":1128,"line_end":1128,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122926,"byte_end":122963,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is ascii panics (use append).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":122968,"byte_end":123032,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ map.append_bin(\"x-host\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123037,"byte_end":123124,"line_start":1131,"line_end":1131,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123129,"byte_end":123136,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124705,"byte_end":124711,"line_start":1173,"line_end":1173,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetadataMap>::remove","value":"fn remove<K, '_>(&'_ mut Self, K) -> Option<MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Removes an ascii key from the map, returning the value associated with\n the key. To remove a binary key, use `remove_bin`.","sig":null,"attributes":[{"value":"/ Removes an ascii key from the map, returning the value associated with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123314,"byte_end":123388,"line_start":1140,"line_end":1140,"column_start":5,"column_end":79}},{"value":"/ the key. To remove a binary key, use `remove_bin`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123393,"byte_end":123447,"line_start":1141,"line_end":1141,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123452,"byte_end":123455,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the map does not contain the key. If there are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123460,"byte_end":123528,"line_start":1143,"line_end":1143,"column_start":5,"column_end":73}},{"value":"/ multiple values associated with the key, then the first one is returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123533,"byte_end":123609,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/ See `remove_entry_mult` on `OccupiedEntry` for an API that yields all","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123614,"byte_end":123687,"line_start":1145,"line_end":1145,"column_start":5,"column_end":78}},{"value":"/ values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123692,"byte_end":123703,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123708,"byte_end":123711,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123716,"byte_end":123730,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123735,"byte_end":123738,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123743,"byte_end":123750,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123755,"byte_end":123784,"line_start":1151,"line_end":1151,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123789,"byte_end":123826,"line_start":1152,"line_end":1152,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123831,"byte_end":123888,"line_start":1153,"line_end":1153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123893,"byte_end":123896,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove(\"x-host\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123901,"byte_end":123946,"line_start":1155,"line_end":1155,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123951,"byte_end":123987,"line_start":1156,"line_end":1156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":123992,"byte_end":123995,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove(\"x-host\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124000,"byte_end":124044,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124049,"byte_end":124052,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124057,"byte_end":124121,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124126,"byte_end":124150,"line_start":1161,"line_end":1161,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124155,"byte_end":124223,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/ assert!(map.remove(\"host-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124228,"byte_end":124274,"line_start":1163,"line_end":1163,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove(\"host-bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124279,"byte_end":124337,"line_start":1164,"line_end":1164,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124342,"byte_end":124403,"line_start":1165,"line_end":1165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124408,"byte_end":124411,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124416,"byte_end":124478,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124483,"byte_end":124507,"line_start":1168,"line_end":1168,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove(\"host{}\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124512,"byte_end":124556,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ assert!(map.remove(\"host{}\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124561,"byte_end":124617,"line_start":1170,"line_end":1170,"column_start":5,"column_end":61}},{"value":"/ assert!(map.remove(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124622,"byte_end":124681,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124686,"byte_end":124693,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125977,"byte_end":125987,"line_start":1207,"line_end":1207,"column_start":12,"column_end":22},"name":"remove_bin","qualname":"<MetadataMap>::remove_bin","value":"fn remove_bin<K, '_>(&'_ mut Self, K) -> Option<MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like remove, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like remove, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124851,"byte_end":124920,"line_start":1180,"line_end":1180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124925,"byte_end":124928,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124933,"byte_end":124947,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124952,"byte_end":124955,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124960,"byte_end":124967,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":124972,"byte_end":125001,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125006,"byte_end":125043,"line_start":1186,"line_end":1186,"column_start":5,"column_end":42}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello.world\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125048,"byte_end":125129,"line_start":1187,"line_end":1187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125134,"byte_end":125137,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove_bin(\"trace-proto-bin\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125142,"byte_end":125200,"line_start":1189,"line_end":1189,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125205,"byte_end":125241,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125246,"byte_end":125249,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125254,"byte_end":125311,"line_start":1192,"line_end":1192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125316,"byte_end":125319,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125324,"byte_end":125388,"line_start":1194,"line_end":1194,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125393,"byte_end":125417,"line_start":1195,"line_end":1195,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125422,"byte_end":125471,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/ assert!(map.remove_bin(\"host\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125476,"byte_end":125522,"line_start":1197,"line_end":1197,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove_bin(\"host\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125527,"byte_end":125585,"line_start":1198,"line_end":1198,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125590,"byte_end":125651,"line_start":1199,"line_end":1199,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125656,"byte_end":125659,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125664,"byte_end":125726,"line_start":1201,"line_end":1201,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125731,"byte_end":125755,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\").is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125760,"byte_end":125812,"line_start":1203,"line_end":1203,"column_start":5,"column_end":57}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125817,"byte_end":125881,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/ assert!(map.remove_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125886,"byte_end":125953,"line_start":1205,"line_end":1205,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":125958,"byte_end":125965,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":126338,"byte_end":126342,"line_start":1224,"line_end":1224,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":126974,"byte_end":126983,"line_start":1241,"line_end":1241,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":127171,"byte_end":127175,"line_start":1251,"line_end":1251,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":127821,"byte_end":127830,"line_start":1268,"line_end":1268,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128043,"byte_end":128047,"line_start":1278,"line_end":1278,"column_start":8,"column_end":12},"name":"next","qualname":"<ValueDrain as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128197,"byte_end":128206,"line_start":1284,"line_end":1284,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ValueDrain as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128377,"byte_end":128381,"line_start":1294,"line_end":1294,"column_start":8,"column_end":12},"name":"next","qualname":"<Keys as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128727,"byte_end":128736,"line_start":1304,"line_end":1304,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Keys as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128956,"byte_end":128960,"line_start":1316,"line_end":1316,"column_start":8,"column_end":12},"name":"next","qualname":"<Values as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":129360,"byte_end":129369,"line_start":1327,"line_end":1327,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Values as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":129551,"byte_end":129555,"line_start":1337,"line_end":1337,"column_start":8,"column_end":12},"name":"next","qualname":"<ValuesMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":129969,"byte_end":129978,"line_start":1348,"line_end":1348,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ValuesMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130211,"byte_end":130215,"line_start":1361,"line_end":1361,"column_start":8,"column_end":12},"name":"next","qualname":"<ValueIter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130463,"byte_end":130472,"line_start":1370,"line_end":1370,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ValueIter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130735,"byte_end":130744,"line_start":1382,"line_end":1382,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ValueIter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8449},"children":[],"decl_id":{"krate":2,"index":8450},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131159,"byte_end":131163,"line_start":1400,"line_end":1400,"column_start":8,"column_end":12},"name":"next","qualname":"<ValueIterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8603},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131416,"byte_end":131425,"line_start":1411,"line_end":1411,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ValueIterMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8449},"children":[],"decl_id":{"krate":2,"index":8450},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132511,"byte_end":132520,"line_start":1448,"line_end":1448,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn or_insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131658,"byte_end":131728,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131733,"byte_end":131736,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131741,"byte_end":131809,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131814,"byte_end":131817,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131822,"byte_end":131836,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131841,"byte_end":131844,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131849,"byte_end":131856,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131861,"byte_end":131890,"line_start":1428,"line_end":1428,"column_start":5,"column_end":34}},{"value":"/ let mut map: MetadataMap = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131895,"byte_end":131949,"line_start":1429,"line_end":1429,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131954,"byte_end":131957,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let keys = &[","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131962,"byte_end":131979,"line_start":1431,"line_end":1431,"column_start":5,"column_end":22}},{"value":"/     \"content-length\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131984,"byte_end":132009,"line_start":1432,"line_end":1432,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132014,"byte_end":132032,"line_start":1433,"line_end":1433,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132037,"byte_end":132062,"line_start":1434,"line_end":1434,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132067,"byte_end":132085,"line_start":1435,"line_end":1435,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132090,"byte_end":132096,"line_start":1436,"line_end":1436,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132101,"byte_end":132104,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ for &key in keys {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132109,"byte_end":132131,"line_start":1438,"line_end":1438,"column_start":5,"column_end":27}},{"value":"/     let counter = map.entry(key)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132136,"byte_end":132172,"line_start":1439,"line_end":1439,"column_start":5,"column_end":41}},{"value":"/         .expect(\"valid key names\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132177,"byte_end":132215,"line_start":1440,"line_end":1440,"column_start":5,"column_end":43}},{"value":"/         .or_insert(\"\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132220,"byte_end":132264,"line_start":1441,"line_end":1441,"column_start":5,"column_end":49}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132269,"byte_end":132353,"line_start":1442,"line_end":1442,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132358,"byte_end":132363,"line_start":1443,"line_end":1443,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132368,"byte_end":132371,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132376,"byte_end":132433,"line_start":1445,"line_end":1445,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132438,"byte_end":132487,"line_start":1446,"line_end":1446,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132492,"byte_end":132499,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133764,"byte_end":133778,"line_start":1491,"line_end":1491,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn or_insert_with<F>(Self, F) -> &'a mut MetadataValue<VE> where F: FnOnce()\n-> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132742,"byte_end":132816,"line_start":1457,"line_end":1457,"column_start":5,"column_end":79}},{"value":"/ function if empty.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132821,"byte_end":132843,"line_start":1458,"line_end":1458,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132848,"byte_end":132851,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132856,"byte_end":132926,"line_start":1460,"line_end":1460,"column_start":5,"column_end":75}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":132931,"byte_end":132999,"line_start":1461,"line_end":1461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133004,"byte_end":133007,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133012,"byte_end":133026,"line_start":1463,"line_end":1463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133031,"byte_end":133034,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Basic usage.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133039,"byte_end":133055,"line_start":1465,"line_end":1465,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133060,"byte_end":133063,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133068,"byte_end":133075,"line_start":1467,"line_end":1467,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133080,"byte_end":133109,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133114,"byte_end":133151,"line_start":1469,"line_end":1469,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133156,"byte_end":133159,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"x-hello\").unwrap()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133164,"byte_end":133207,"line_start":1471,"line_end":1471,"column_start":5,"column_end":48}},{"value":"/     .or_insert_with(|| \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133212,"byte_end":133265,"line_start":1472,"line_end":1472,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133270,"byte_end":133273,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133278,"byte_end":133307,"line_start":1474,"line_end":1474,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133312,"byte_end":133319,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133324,"byte_end":133327,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133332,"byte_end":133402,"line_start":1477,"line_end":1477,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133407,"byte_end":133410,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133415,"byte_end":133422,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133427,"byte_end":133456,"line_start":1480,"line_end":1480,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133461,"byte_end":133498,"line_start":1481,"line_end":1481,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133503,"byte_end":133552,"line_start":1482,"line_end":1482,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133557,"byte_end":133560,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"host\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133565,"byte_end":133596,"line_start":1484,"line_end":1484,"column_start":5,"column_end":36}},{"value":"/     .expect(\"host is a valid string\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133601,"byte_end":133642,"line_start":1485,"line_end":1485,"column_start":5,"column_end":46}},{"value":"/     .or_insert_with(|| unreachable!());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133647,"byte_end":133690,"line_start":1486,"line_end":1486,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133695,"byte_end":133698,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133703,"byte_end":133706,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133711,"byte_end":133740,"line_start":1489,"line_end":1489,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":133745,"byte_end":133752,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134308,"byte_end":134311,"line_start":1513,"line_end":1513,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn key<'_>(&'_ Self) -> &'_ MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134043,"byte_end":134085,"line_start":1503,"line_end":1503,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134090,"byte_end":134093,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134098,"byte_end":134112,"line_start":1505,"line_end":1505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134117,"byte_end":134120,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134125,"byte_end":134132,"line_start":1507,"line_end":1507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134137,"byte_end":134166,"line_start":1508,"line_end":1508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134171,"byte_end":134208,"line_start":1509,"line_end":1509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134213,"byte_end":134216,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134221,"byte_end":134284,"line_start":1511,"line_end":1511,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134289,"byte_end":134296,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134898,"byte_end":134901,"line_start":1536,"line_end":1536,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn key<'_>(&'_ Self) -> &'_ MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134633,"byte_end":134675,"line_start":1526,"line_end":1526,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134680,"byte_end":134683,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134688,"byte_end":134702,"line_start":1528,"line_end":1528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134707,"byte_end":134710,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134715,"byte_end":134722,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134727,"byte_end":134756,"line_start":1531,"line_end":1531,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134761,"byte_end":134798,"line_start":1532,"line_end":1532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134803,"byte_end":134806,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134811,"byte_end":134874,"line_start":1534,"line_end":1534,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134879,"byte_end":134886,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135330,"byte_end":135338,"line_start":1552,"line_end":1552,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn into_key(Self) -> MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key","sig":null,"attributes":[{"value":"/ Take ownership of the key","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135012,"byte_end":135041,"line_start":1540,"line_end":1540,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135046,"byte_end":135049,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135054,"byte_end":135068,"line_start":1542,"line_end":1542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135073,"byte_end":135076,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135081,"byte_end":135088,"line_start":1544,"line_end":1544,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135093,"byte_end":135122,"line_start":1545,"line_end":1545,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135127,"byte_end":135164,"line_start":1546,"line_end":1546,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135169,"byte_end":135172,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135177,"byte_end":135238,"line_start":1548,"line_end":1548,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(v.into_key().as_str(), \"x-hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135243,"byte_end":135296,"line_start":1549,"line_end":1549,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135301,"byte_end":135306,"line_start":1550,"line_end":1550,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135311,"byte_end":135318,"line_start":1551,"line_end":1551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135965,"byte_end":135971,"line_start":1573,"line_end":1573,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135448,"byte_end":135484,"line_start":1556,"line_end":1556,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135489,"byte_end":135492,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. A mutable reference","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135497,"byte_end":135572,"line_start":1558,"line_end":1558,"column_start":5,"column_end":80}},{"value":"/ to the inserted value will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135577,"byte_end":135620,"line_start":1559,"line_end":1559,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135625,"byte_end":135628,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135633,"byte_end":135647,"line_start":1561,"line_end":1561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135652,"byte_end":135655,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135660,"byte_end":135667,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135672,"byte_end":135701,"line_start":1564,"line_end":1564,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135706,"byte_end":135743,"line_start":1565,"line_end":1565,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135748,"byte_end":135751,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135756,"byte_end":135817,"line_start":1567,"line_end":1567,"column_start":5,"column_end":66}},{"value":"/     v.insert(\"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135822,"byte_end":135865,"line_start":1568,"line_end":1568,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135870,"byte_end":135875,"line_start":1569,"line_end":1569,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135880,"byte_end":135883,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135888,"byte_end":135941,"line_start":1571,"line_end":1571,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":135946,"byte_end":135953,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136734,"byte_end":136746,"line_start":1595,"line_end":1595,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<VacantEntry>::insert_entry","value":"fn insert_entry(Self, MetadataValue<VE>) -> OccupiedEntry","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136137,"byte_end":136173,"line_start":1577,"line_end":1577,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136178,"byte_end":136181,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. The new","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136186,"byte_end":136249,"line_start":1579,"line_end":1579,"column_start":5,"column_end":68}},{"value":"/ `OccupiedEntry` is returned, allowing for further manipulation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136254,"byte_end":136321,"line_start":1580,"line_end":1580,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136326,"byte_end":136329,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136334,"byte_end":136348,"line_start":1582,"line_end":1582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136353,"byte_end":136356,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136361,"byte_end":136368,"line_start":1584,"line_end":1584,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136373,"byte_end":136402,"line_start":1585,"line_end":1585,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136407,"byte_end":136444,"line_start":1586,"line_end":1586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136449,"byte_end":136452,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136457,"byte_end":136518,"line_start":1588,"line_end":1588,"column_start":5,"column_end":66}},{"value":"/     let mut e = v.insert_entry(\"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136523,"byte_end":136584,"line_start":1589,"line_end":1589,"column_start":5,"column_end":66}},{"value":"/     e.insert(\"world2\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136589,"byte_end":136633,"line_start":1590,"line_end":1590,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136638,"byte_end":136643,"line_start":1591,"line_end":1591,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136648,"byte_end":136651,"line_start":1592,"line_end":1592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world2\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136656,"byte_end":136710,"line_start":1593,"line_end":1593,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":136715,"byte_end":136722,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137402,"byte_end":137405,"line_start":1619,"line_end":1619,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn key<'_>(&'_ Self) -> &'_ MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137034,"byte_end":137077,"line_start":1606,"line_end":1606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137082,"byte_end":137085,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137090,"byte_end":137104,"line_start":1608,"line_end":1608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137109,"byte_end":137112,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137117,"byte_end":137124,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137129,"byte_end":137158,"line_start":1611,"line_end":1611,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137163,"byte_end":137200,"line_start":1612,"line_end":1612,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137205,"byte_end":137254,"line_start":1613,"line_end":1613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137259,"byte_end":137262,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137267,"byte_end":137327,"line_start":1615,"line_end":1615,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(\"host\", e.key());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137332,"byte_end":137368,"line_start":1616,"line_end":1616,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137373,"byte_end":137378,"line_start":1617,"line_end":1617,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137383,"byte_end":137390,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138188,"byte_end":138191,"line_start":1646,"line_end":1646,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn get<'_>(&'_ Self) -> &'_ MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a reference to the first value in the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137516,"byte_end":137568,"line_start":1623,"line_end":1623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137573,"byte_end":137576,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137581,"byte_end":137622,"line_start":1625,"line_end":1625,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137627,"byte_end":137630,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137635,"byte_end":137647,"line_start":1627,"line_end":1627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137652,"byte_end":137655,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ `get` panics if there are no values associated with the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137660,"byte_end":137726,"line_start":1629,"line_end":1629,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137731,"byte_end":137734,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137739,"byte_end":137753,"line_start":1631,"line_end":1631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137758,"byte_end":137761,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137766,"byte_end":137773,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137778,"byte_end":137807,"line_start":1634,"line_end":1634,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137812,"byte_end":137849,"line_start":1635,"line_end":1635,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137854,"byte_end":137909,"line_start":1636,"line_end":1636,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137914,"byte_end":137917,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137922,"byte_end":137986,"line_start":1638,"line_end":1638,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137991,"byte_end":138035,"line_start":1639,"line_end":1639,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138040,"byte_end":138043,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/     e.append(\"hello.earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138048,"byte_end":138097,"line_start":1641,"line_end":1641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138102,"byte_end":138105,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138110,"byte_end":138154,"line_start":1643,"line_end":1643,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138159,"byte_end":138164,"line_start":1644,"line_end":1644,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138169,"byte_end":138176,"line_start":1645,"line_end":1645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138966,"byte_end":138973,"line_start":1671,"line_end":1671,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first value in the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138307,"byte_end":138367,"line_start":1650,"line_end":1650,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138372,"byte_end":138375,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138380,"byte_end":138421,"line_start":1652,"line_end":1652,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138426,"byte_end":138429,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138434,"byte_end":138446,"line_start":1654,"line_end":1654,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138451,"byte_end":138454,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ `get_mut` panics if there are no values associated with the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138459,"byte_end":138529,"line_start":1656,"line_end":1656,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138534,"byte_end":138537,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138542,"byte_end":138556,"line_start":1658,"line_end":1658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138561,"byte_end":138564,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138569,"byte_end":138576,"line_start":1660,"line_end":1660,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138581,"byte_end":138610,"line_start":1661,"line_end":1661,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138615,"byte_end":138656,"line_start":1662,"line_end":1662,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138661,"byte_end":138716,"line_start":1663,"line_end":1663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138721,"byte_end":138724,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138729,"byte_end":138793,"line_start":1665,"line_end":1665,"column_start":5,"column_end":69}},{"value":"/     e.get_mut().set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138798,"byte_end":138838,"line_start":1666,"line_end":1666,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138843,"byte_end":138887,"line_start":1667,"line_end":1667,"column_start":5,"column_end":49}},{"value":"/     assert!(e.get().is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138892,"byte_end":138932,"line_start":1668,"line_end":1668,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138937,"byte_end":138942,"line_start":1669,"line_end":1669,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":138947,"byte_end":138954,"line_start":1670,"line_end":1670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139854,"byte_end":139862,"line_start":1698,"line_end":1698,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn into_mut(Self) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the **first**\n value.","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the **first**","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139105,"byte_end":139179,"line_start":1675,"line_end":1675,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139184,"byte_end":139194,"line_start":1676,"line_end":1676,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139199,"byte_end":139202,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference is bound to the original map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139207,"byte_end":139279,"line_start":1678,"line_end":1678,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139284,"byte_end":139287,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139292,"byte_end":139304,"line_start":1680,"line_end":1680,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139309,"byte_end":139312,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ `into_mut` panics if there are no values associated with the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139317,"byte_end":139388,"line_start":1682,"line_end":1682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139393,"byte_end":139396,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139401,"byte_end":139415,"line_start":1684,"line_end":1684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139420,"byte_end":139423,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139428,"byte_end":139435,"line_start":1686,"line_end":1686,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139440,"byte_end":139469,"line_start":1687,"line_end":1687,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139474,"byte_end":139515,"line_start":1688,"line_end":1688,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139520,"byte_end":139575,"line_start":1689,"line_end":1689,"column_start":5,"column_end":60}},{"value":"/ map.append(\"host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139580,"byte_end":139635,"line_start":1690,"line_end":1690,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139640,"byte_end":139643,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139648,"byte_end":139708,"line_start":1692,"line_end":1692,"column_start":5,"column_end":65}},{"value":"/     e.into_mut().set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139713,"byte_end":139754,"line_start":1693,"line_end":1693,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139759,"byte_end":139764,"line_start":1694,"line_end":1694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139769,"byte_end":139772,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"host\").unwrap().is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139777,"byte_end":139830,"line_start":1696,"line_end":1696,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139835,"byte_end":139842,"line_start":1697,"line_end":1697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140657,"byte_end":140663,"line_start":1721,"line_end":1721,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn insert<'_>(&'_ mut Self, MetadataValue<VE>) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":139993,"byte_end":140025,"line_start":1702,"line_end":1702,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140030,"byte_end":140033,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ All previous values associated with the entry are removed and the first","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140038,"byte_end":140113,"line_start":1704,"line_end":1704,"column_start":5,"column_end":80}},{"value":"/ one is returned. See `insert_mult` for an API that returns all values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140118,"byte_end":140192,"line_start":1705,"line_end":1705,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140197,"byte_end":140200,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140205,"byte_end":140219,"line_start":1707,"line_end":1707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140224,"byte_end":140227,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140232,"byte_end":140239,"line_start":1709,"line_end":1709,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140244,"byte_end":140273,"line_start":1710,"line_end":1710,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140278,"byte_end":140315,"line_start":1711,"line_end":1711,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140320,"byte_end":140375,"line_start":1712,"line_end":1712,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140380,"byte_end":140383,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140388,"byte_end":140452,"line_start":1714,"line_end":1714,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert(\"earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140457,"byte_end":140515,"line_start":1715,"line_end":1715,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(\"hello.world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140520,"byte_end":140560,"line_start":1716,"line_end":1716,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140565,"byte_end":140570,"line_start":1717,"line_end":1717,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140575,"byte_end":140578,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140583,"byte_end":140633,"line_start":1719,"line_end":1719,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140638,"byte_end":140645,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141673,"byte_end":141684,"line_start":1748,"line_end":1748,"column_start":12,"column_end":23},"name":"insert_mult","qualname":"<OccupiedEntry>::insert_mult","value":"fn insert_mult<'_>(&'_ mut Self, MetadataValue<VE>) -> ValueDrain","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140859,"byte_end":140891,"line_start":1726,"line_end":1726,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140896,"byte_end":140899,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ This function does the same as `insert` except it returns an iterator","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140904,"byte_end":140977,"line_start":1728,"line_end":1728,"column_start":5,"column_end":78}},{"value":"/ that yields all values previously associated with the key.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":140982,"byte_end":141044,"line_start":1729,"line_end":1729,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141049,"byte_end":141052,"line_start":1730,"line_end":1730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141057,"byte_end":141071,"line_start":1731,"line_end":1731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141076,"byte_end":141079,"line_start":1732,"line_end":1732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141084,"byte_end":141091,"line_start":1733,"line_end":1733,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141096,"byte_end":141125,"line_start":1734,"line_end":1734,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141130,"byte_end":141167,"line_start":1735,"line_end":1735,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141172,"byte_end":141221,"line_start":1736,"line_end":1736,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"world2\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141226,"byte_end":141276,"line_start":1737,"line_end":1737,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141281,"byte_end":141284,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141289,"byte_end":141353,"line_start":1739,"line_end":1739,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert_mult(\"earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141358,"byte_end":141421,"line_start":1740,"line_end":1740,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(\"world\", prev.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141426,"byte_end":141476,"line_start":1741,"line_end":1741,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(\"world2\", prev.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141481,"byte_end":141532,"line_start":1742,"line_end":1742,"column_start":5,"column_end":56}},{"value":"/     assert!(prev.next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141537,"byte_end":141576,"line_start":1743,"line_end":1743,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141581,"byte_end":141586,"line_start":1744,"line_end":1744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141591,"byte_end":141594,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141599,"byte_end":141649,"line_start":1746,"line_end":1746,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141654,"byte_end":141661,"line_start":1747,"line_end":1747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142581,"byte_end":142587,"line_start":1776,"line_end":1776,"column_start":12,"column_end":18},"name":"append","qualname":"<OccupiedEntry>::append","value":"fn append<'_>(&'_ mut Self, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141878,"byte_end":141914,"line_start":1755,"line_end":1755,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141919,"byte_end":141922,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ The new value is appended to the end of the entry's value list. All","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":141927,"byte_end":141998,"line_start":1757,"line_end":1757,"column_start":5,"column_end":76}},{"value":"/ previous values associated with the entry are retained.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142003,"byte_end":142062,"line_start":1758,"line_end":1758,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142067,"byte_end":142070,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142075,"byte_end":142089,"line_start":1760,"line_end":1760,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142094,"byte_end":142097,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142102,"byte_end":142109,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142114,"byte_end":142143,"line_start":1763,"line_end":1763,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142148,"byte_end":142185,"line_start":1764,"line_end":1764,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142190,"byte_end":142239,"line_start":1765,"line_end":1765,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142244,"byte_end":142247,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142252,"byte_end":142316,"line_start":1767,"line_end":1767,"column_start":5,"column_end":69}},{"value":"/     e.append(\"earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142321,"byte_end":142364,"line_start":1768,"line_end":1768,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142369,"byte_end":142374,"line_start":1769,"line_end":1769,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142379,"byte_end":142382,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"host\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142387,"byte_end":142424,"line_start":1771,"line_end":1771,"column_start":5,"column_end":42}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142429,"byte_end":142459,"line_start":1772,"line_end":1772,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142464,"byte_end":142508,"line_start":1773,"line_end":1773,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142513,"byte_end":142557,"line_start":1774,"line_end":1774,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142562,"byte_end":142569,"line_start":1775,"line_end":1775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143289,"byte_end":143295,"line_start":1799,"line_end":1799,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn remove(Self) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142677,"byte_end":142711,"line_start":1780,"line_end":1780,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142716,"byte_end":142719,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ All values associated with the entry are removed and the first one is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142724,"byte_end":142797,"line_start":1782,"line_end":1782,"column_start":5,"column_end":78}},{"value":"/ returned. See `remove_entry_mult` for an API that returns all values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142802,"byte_end":142875,"line_start":1783,"line_end":1783,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142880,"byte_end":142883,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142888,"byte_end":142902,"line_start":1785,"line_end":1785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142907,"byte_end":142910,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142915,"byte_end":142922,"line_start":1787,"line_end":1787,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142927,"byte_end":142956,"line_start":1788,"line_end":1788,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":142961,"byte_end":142998,"line_start":1789,"line_end":1789,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143003,"byte_end":143052,"line_start":1790,"line_end":1790,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143057,"byte_end":143060,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143065,"byte_end":143125,"line_start":1792,"line_end":1792,"column_start":5,"column_end":65}},{"value":"/     let mut prev = e.remove();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143130,"byte_end":143164,"line_start":1793,"line_end":1793,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143169,"byte_end":143203,"line_start":1794,"line_end":1794,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143208,"byte_end":143213,"line_start":1795,"line_end":1795,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143218,"byte_end":143221,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143226,"byte_end":143265,"line_start":1797,"line_end":1797,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143270,"byte_end":143277,"line_start":1798,"line_end":1798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144126,"byte_end":144138,"line_start":1825,"line_end":1825,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn remove_entry(Self) -> (MetadataKey<VE>, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143435,"byte_end":143469,"line_start":1804,"line_end":1804,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143474,"byte_end":143477,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143482,"byte_end":143554,"line_start":1806,"line_end":1806,"column_start":5,"column_end":77}},{"value":"/ first one is returned. See `remove_entry_mult` for an API that returns","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143559,"byte_end":143633,"line_start":1807,"line_end":1807,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143638,"byte_end":143653,"line_start":1808,"line_end":1808,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143658,"byte_end":143661,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143666,"byte_end":143680,"line_start":1810,"line_end":1810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143685,"byte_end":143688,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143693,"byte_end":143700,"line_start":1812,"line_end":1812,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143705,"byte_end":143734,"line_start":1813,"line_end":1813,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143739,"byte_end":143776,"line_start":1814,"line_end":1814,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143781,"byte_end":143830,"line_start":1815,"line_end":1815,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143835,"byte_end":143838,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143843,"byte_end":143903,"line_start":1817,"line_end":1817,"column_start":5,"column_end":65}},{"value":"/     let (key, mut prev) = e.remove_entry();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143908,"byte_end":143955,"line_start":1818,"line_end":1818,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(\"host\", key.as_str());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":143960,"byte_end":144001,"line_start":1819,"line_end":1819,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144006,"byte_end":144040,"line_start":1820,"line_end":1820,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144045,"byte_end":144050,"line_start":1821,"line_end":1821,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144055,"byte_end":144058,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144063,"byte_end":144102,"line_start":1823,"line_end":1823,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144107,"byte_end":144114,"line_start":1824,"line_end":1824,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144540,"byte_end":144557,"line_start":1837,"line_end":1837,"column_start":12,"column_end":29},"name":"remove_entry_mult","qualname":"<OccupiedEntry>::remove_entry_mult","value":"fn remove_entry_mult(Self) -> (MetadataKey<VE>, ValueDrain)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144395,"byte_end":144429,"line_start":1833,"line_end":1833,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144434,"byte_end":144437,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144442,"byte_end":144510,"line_start":1835,"line_end":1835,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144515,"byte_end":144528,"line_start":1836,"line_end":1836,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145534,"byte_end":145538,"line_start":1867,"line_end":1867,"column_start":12,"column_end":16},"name":"iter","qualname":"<OccupiedEntry>::iter","value":"fn iter<'_>(&'_ Self) -> ValueIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144877,"byte_end":144947,"line_start":1848,"line_end":1848,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144952,"byte_end":144955,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":144960,"byte_end":145003,"line_start":1850,"line_end":1850,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145008,"byte_end":145011,"line_start":1851,"line_end":1851,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145016,"byte_end":145030,"line_start":1852,"line_end":1852,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145035,"byte_end":145038,"line_start":1853,"line_end":1853,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145043,"byte_end":145050,"line_start":1854,"line_end":1854,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145055,"byte_end":145084,"line_start":1855,"line_end":1855,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145089,"byte_end":145126,"line_start":1856,"line_end":1856,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145131,"byte_end":145180,"line_start":1857,"line_end":1857,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145185,"byte_end":145234,"line_start":1858,"line_end":1858,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145239,"byte_end":145242,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145247,"byte_end":145307,"line_start":1860,"line_end":1860,"column_start":5,"column_end":65}},{"value":"/     let mut iter = e.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145312,"byte_end":145344,"line_start":1861,"line_end":1861,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(&\"world\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145349,"byte_end":145400,"line_start":1862,"line_end":1862,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"earth\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145405,"byte_end":145456,"line_start":1863,"line_end":1863,"column_start":5,"column_end":56}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145461,"byte_end":145500,"line_start":1864,"line_end":1864,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145505,"byte_end":145510,"line_start":1865,"line_end":1865,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145515,"byte_end":145522,"line_start":1866,"line_end":1866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146456,"byte_end":146464,"line_start":1898,"line_end":1898,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OccupiedEntry>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> ValueIterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator mutably visiting all values associated with the\n entry.","sig":null,"attributes":[{"value":"/ Returns an iterator mutably visiting all values associated with the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145688,"byte_end":145759,"line_start":1874,"line_end":1874,"column_start":5,"column_end":76}},{"value":"/ entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145764,"byte_end":145774,"line_start":1875,"line_end":1875,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145779,"byte_end":145782,"line_start":1876,"line_end":1876,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145787,"byte_end":145830,"line_start":1877,"line_end":1877,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145835,"byte_end":145838,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145843,"byte_end":145857,"line_start":1879,"line_end":1879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145862,"byte_end":145865,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145870,"byte_end":145877,"line_start":1881,"line_end":1881,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145882,"byte_end":145911,"line_start":1882,"line_end":1882,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145916,"byte_end":145957,"line_start":1883,"line_end":1883,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":145962,"byte_end":146011,"line_start":1884,"line_end":1884,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146016,"byte_end":146065,"line_start":1885,"line_end":1885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146070,"byte_end":146073,"line_start":1886,"line_end":1886,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146078,"byte_end":146142,"line_start":1887,"line_end":1887,"column_start":5,"column_end":69}},{"value":"/     for e in e.iter_mut() {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146147,"byte_end":146178,"line_start":1888,"line_end":1888,"column_start":5,"column_end":36}},{"value":"/         e.set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146183,"byte_end":146217,"line_start":1889,"line_end":1889,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146222,"byte_end":146231,"line_start":1890,"line_end":1890,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146236,"byte_end":146241,"line_start":1891,"line_end":1891,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146246,"byte_end":146249,"line_start":1892,"line_end":1892,"column_start":5,"column_end":8}},{"value":"/ let mut values = map.get_all(\"host\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146254,"byte_end":146295,"line_start":1893,"line_end":1893,"column_start":5,"column_end":46}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146300,"byte_end":146330,"line_start":1894,"line_end":1894,"column_start":5,"column_end":35}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146335,"byte_end":146381,"line_start":1895,"line_end":1895,"column_start":5,"column_end":51}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146386,"byte_end":146432,"line_start":1896,"line_end":1896,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146437,"byte_end":146444,"line_start":1897,"line_end":1897,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146800,"byte_end":146809,"line_start":1913,"line_end":1913,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<OccupiedEntry as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> ValueIterMut","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147128,"byte_end":147137,"line_start":1925,"line_end":1925,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'b OccupiedEntry as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> ValueIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147374,"byte_end":147383,"line_start":1934,"line_end":1934,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'b mut OccupiedEntry as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> ValueIterMut","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148169,"byte_end":148173,"line_start":1960,"line_end":1960,"column_start":12,"column_end":16},"name":"iter","qualname":"<GetAll>::iter","value":"fn iter<'_>(&'_ Self) -> ValueIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147526,"byte_end":147596,"line_start":1942,"line_end":1942,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147601,"byte_end":147604,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147609,"byte_end":147652,"line_start":1944,"line_end":1944,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147657,"byte_end":147660,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147665,"byte_end":147679,"line_start":1946,"line_end":1946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147684,"byte_end":147687,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147692,"byte_end":147699,"line_start":1948,"line_end":1948,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147704,"byte_end":147733,"line_start":1949,"line_end":1949,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147738,"byte_end":147775,"line_start":1950,"line_end":1950,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147780,"byte_end":147837,"line_start":1951,"line_end":1951,"column_start":5,"column_end":62}},{"value":"/ map.append(\"x-host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147842,"byte_end":147899,"line_start":1952,"line_end":1952,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147904,"byte_end":147907,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147912,"byte_end":147951,"line_start":1954,"line_end":1954,"column_start":5,"column_end":44}},{"value":"/ let mut iter = values.iter();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147956,"byte_end":147989,"line_start":1955,"line_end":1955,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&\"hello.world\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147994,"byte_end":148047,"line_start":1956,"line_end":1956,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(&\"hello.earth\", iter.next().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148052,"byte_end":148105,"line_start":1957,"line_end":1957,"column_start":5,"column_end":58}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148110,"byte_end":148145,"line_start":1958,"line_end":1958,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148150,"byte_end":148157,"line_start":1959,"line_end":1959,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148409,"byte_end":148411,"line_start":1969,"line_end":1969,"column_start":8,"column_end":10},"name":"eq","qualname":"<GetAll as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148667,"byte_end":148676,"line_start":1981,"line_end":1981,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<GetAll as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> ValueIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":149001,"byte_end":149010,"line_start":1993,"line_end":1993,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'b GetAll as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> ValueIter","parent":{"krate":2,"index":8405},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":149486,"byte_end":149501,"line_start":2009,"line_end":2009,"column_start":15,"column_end":30},"name":"IntoMetadataKey","qualname":"::metadata::map::into_metadata_key::IntoMetadataKey","value":"IntoMetadataKey<VE>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as insert keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as insert keys","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":149369,"byte_end":149443,"line_start":2007,"line_end":2007,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":149448,"byte_end":149471,"line_start":2008,"line_end":2008,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":149941,"byte_end":149947,"line_start":2019,"line_end":2019,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::into_metadata_key::Sealed","value":"Sealed<VE>","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150003,"byte_end":150009,"line_start":2021,"line_end":2021,"column_start":12,"column_end":18},"name":"insert","qualname":"::metadata::map::into_metadata_key::Sealed::insert","value":"fn insert<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150140,"byte_end":150146,"line_start":2025,"line_end":2025,"column_start":12,"column_end":18},"name":"append","qualname":"::metadata::map::into_metadata_key::Sealed::append","value":"fn append<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150353,"byte_end":150359,"line_start":2033,"line_end":2033,"column_start":12,"column_end":18},"name":"insert","qualname":"<MetadataKey<VE> as metadata::map::into_metadata_key::Sealed>::insert","value":"fn insert<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1042},"children":[],"decl_id":{"krate":0,"index":1044},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150332,"byte_end":150341,"line_start":2032,"line_end":2032,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150690,"byte_end":150696,"line_start":2045,"line_end":2045,"column_start":12,"column_end":18},"name":"append","qualname":"<MetadataKey<VE> as metadata::map::into_metadata_key::Sealed>::append","value":"fn append<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":1042},"children":[],"decl_id":{"krate":0,"index":1045},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150669,"byte_end":150678,"line_start":2044,"line_end":2044,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":151024,"byte_end":151030,"line_start":2055,"line_end":2055,"column_start":12,"column_end":18},"name":"insert","qualname":"<&'a MetadataKey<VE> as metadata::map::into_metadata_key::Sealed>::insert","value":"fn insert<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1042},"children":[],"decl_id":{"krate":0,"index":1044},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":151003,"byte_end":151012,"line_start":2054,"line_end":2054,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":151361,"byte_end":151367,"line_start":2066,"line_end":2066,"column_start":12,"column_end":18},"name":"append","qualname":"<&'a MetadataKey<VE> as metadata::map::into_metadata_key::Sealed>::append","value":"fn append<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":1042},"children":[],"decl_id":{"krate":0,"index":1045},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":151340,"byte_end":151349,"line_start":2065,"line_end":2065,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":151693,"byte_end":151699,"line_start":2076,"line_end":2076,"column_start":12,"column_end":18},"name":"insert","qualname":"<&'static str as metadata::map::into_metadata_key::Sealed>::insert","value":"fn insert<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1042},"children":[],"decl_id":{"krate":0,"index":1044},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":151672,"byte_end":151681,"line_start":2075,"line_end":2075,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":152128,"byte_end":152134,"line_start":2090,"line_end":2090,"column_start":12,"column_end":18},"name":"append","qualname":"<&'static str as metadata::map::into_metadata_key::Sealed>::append","value":"fn append<'_>(Self, &'_ mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":1042},"children":[],"decl_id":{"krate":0,"index":1045},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":152107,"byte_end":152116,"line_start":2089,"line_end":2089,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":152760,"byte_end":152773,"line_start":2108,"line_end":2108,"column_start":15,"column_end":28},"name":"AsMetadataKey","qualname":"::metadata::map::as_metadata_key::AsMetadataKey","value":"AsMetadataKey<VE>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":152643,"byte_end":152717,"line_start":2106,"line_end":2106,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":152722,"byte_end":152745,"line_start":2107,"line_end":2107,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153190,"byte_end":153196,"line_start":2118,"line_end":2118,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_metadata_key::Sealed","value":"Sealed<VE>","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153252,"byte_end":153255,"line_start":2120,"line_end":2120,"column_start":12,"column_end":15},"name":"get","qualname":"::metadata::map::as_metadata_key::Sealed::get","value":"fn get<'_>(Self, &'_ MetadataMap) -> Option<&'_ MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153347,"byte_end":153354,"line_start":2123,"line_end":2123,"column_start":12,"column_end":19},"name":"get_mut","qualname":"::metadata::map::as_metadata_key::Sealed::get_mut","value":"fn get_mut<'_>(Self, &'_ mut MetadataMap) -> Option<&'_ mut MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153454,"byte_end":153461,"line_start":2126,"line_end":2126,"column_start":12,"column_end":19},"name":"get_all","qualname":"::metadata::map::as_metadata_key::Sealed::get_all","value":"fn get_all<'_>(Self, &'_ MetadataMap) -> Option<GetAll>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153558,"byte_end":153563,"line_start":2129,"line_end":2129,"column_start":12,"column_end":17},"name":"entry","qualname":"::metadata::map::as_metadata_key::Sealed::entry","value":"fn entry<'_>(Self, &'_ mut MetadataMap) -> Result<Entry, InvalidMetadataKey>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153695,"byte_end":153701,"line_start":2133,"line_end":2133,"column_start":12,"column_end":18},"name":"remove","qualname":"::metadata::map::as_metadata_key::Sealed::remove","value":"fn remove<'_>(Self, &'_ mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153905,"byte_end":153908,"line_start":2141,"line_end":2141,"column_start":12,"column_end":15},"name":"get","qualname":"<MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::get","value":"fn get<'_>(Self, &'_ MetadataMap) -> Option<&'_ MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1098},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153884,"byte_end":153893,"line_start":2140,"line_end":2140,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154155,"byte_end":154162,"line_start":2149,"line_end":2149,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::get_mut","value":"fn get_mut<'_>(Self, &'_ mut MetadataMap) -> Option<&'_ mut MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1099},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154134,"byte_end":154143,"line_start":2148,"line_end":2148,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154425,"byte_end":154432,"line_start":2157,"line_end":2157,"column_start":12,"column_end":19},"name":"get_all","qualname":"<MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::get_all","value":"fn get_all<'_>(Self, &'_ MetadataMap) -> Option<GetAll>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1100},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154404,"byte_end":154413,"line_start":2156,"line_end":2156,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154608,"byte_end":154613,"line_start":2163,"line_end":2163,"column_start":12,"column_end":17},"name":"entry","qualname":"<MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::entry","value":"fn entry<'_>(Self, &'_ mut MetadataMap) -> Result<Entry, InvalidMetadataKey>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154587,"byte_end":154596,"line_start":2162,"line_end":2162,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154843,"byte_end":154849,"line_start":2172,"line_end":2172,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::remove","value":"fn remove<'_>(Self, &'_ mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1102},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":154822,"byte_end":154831,"line_start":2171,"line_end":2171,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155243,"byte_end":155246,"line_start":2184,"line_end":2184,"column_start":12,"column_end":15},"name":"get","qualname":"<&'a MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::get","value":"fn get<'_>(Self, &'_ MetadataMap) -> Option<&'_ MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1098},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155222,"byte_end":155231,"line_start":2183,"line_end":2183,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155494,"byte_end":155501,"line_start":2192,"line_end":2192,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<&'a MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::get_mut","value":"fn get_mut<'_>(Self, &'_ mut MetadataMap) -> Option<&'_ mut MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1099},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155473,"byte_end":155482,"line_start":2191,"line_end":2191,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155765,"byte_end":155772,"line_start":2200,"line_end":2200,"column_start":12,"column_end":19},"name":"get_all","qualname":"<&'a MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::get_all","value":"fn get_all<'_>(Self, &'_ MetadataMap) -> Option<GetAll>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1100},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155744,"byte_end":155753,"line_start":2199,"line_end":2199,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155949,"byte_end":155954,"line_start":2206,"line_end":2206,"column_start":12,"column_end":17},"name":"entry","qualname":"<&'a MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::entry","value":"fn entry<'_>(Self, &'_ mut MetadataMap) -> Result<Entry, InvalidMetadataKey>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155928,"byte_end":155937,"line_start":2205,"line_end":2205,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":156185,"byte_end":156191,"line_start":2215,"line_end":2215,"column_start":12,"column_end":18},"name":"remove","qualname":"<&'a MetadataKey<VE> as metadata::map::as_metadata_key::Sealed>::remove","value":"fn remove<'_>(Self, &'_ mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1102},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":156164,"byte_end":156173,"line_start":2214,"line_end":2214,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":156582,"byte_end":156585,"line_start":2227,"line_end":2227,"column_start":12,"column_end":15},"name":"get","qualname":"<&'a str as metadata::map::as_metadata_key::Sealed>::get","value":"fn get<'_>(Self, &'_ MetadataMap) -> Option<&'_ MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1098},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":156561,"byte_end":156570,"line_start":2226,"line_end":2226,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":156910,"byte_end":156917,"line_start":2238,"line_end":2238,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<&'a str as metadata::map::as_metadata_key::Sealed>::get_mut","value":"fn get_mut<'_>(Self, &'_ mut MetadataMap) -> Option<&'_ mut MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1099},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":156889,"byte_end":156898,"line_start":2237,"line_end":2237,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":157258,"byte_end":157265,"line_start":2249,"line_end":2249,"column_start":12,"column_end":19},"name":"get_all","qualname":"<&'a str as metadata::map::as_metadata_key::Sealed>::get_all","value":"fn get_all<'_>(Self, &'_ MetadataMap) -> Option<GetAll>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1100},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":157237,"byte_end":157246,"line_start":2248,"line_end":2248,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":157519,"byte_end":157524,"line_start":2258,"line_end":2258,"column_start":12,"column_end":17},"name":"entry","qualname":"<&'a str as metadata::map::as_metadata_key::Sealed>::entry","value":"fn entry<'_>(Self, &'_ mut MetadataMap) -> Result<Entry, InvalidMetadataKey>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":157498,"byte_end":157507,"line_start":2257,"line_end":2257,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158023,"byte_end":158029,"line_start":2274,"line_end":2274,"column_start":12,"column_end":18},"name":"remove","qualname":"<&'a str as metadata::map::as_metadata_key::Sealed>::remove","value":"fn remove<'_>(Self, &'_ mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1102},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158002,"byte_end":158011,"line_start":2273,"line_end":2273,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158480,"byte_end":158483,"line_start":2289,"line_end":2289,"column_start":12,"column_end":15},"name":"get","qualname":"<String as metadata::map::as_metadata_key::Sealed>::get","value":"fn get<'_>(Self, &'_ MetadataMap) -> Option<&'_ MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1098},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158459,"byte_end":158468,"line_start":2288,"line_end":2288,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158826,"byte_end":158833,"line_start":2300,"line_end":2300,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<String as metadata::map::as_metadata_key::Sealed>::get_mut","value":"fn get_mut<'_>(Self, &'_ mut MetadataMap) -> Option<&'_ mut MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1099},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158805,"byte_end":158814,"line_start":2299,"line_end":2299,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":159192,"byte_end":159199,"line_start":2311,"line_end":2311,"column_start":12,"column_end":19},"name":"get_all","qualname":"<String as metadata::map::as_metadata_key::Sealed>::get_all","value":"fn get_all<'_>(Self, &'_ MetadataMap) -> Option<GetAll>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1100},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":159171,"byte_end":159180,"line_start":2310,"line_end":2310,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":159471,"byte_end":159476,"line_start":2320,"line_end":2320,"column_start":12,"column_end":17},"name":"entry","qualname":"<String as metadata::map::as_metadata_key::Sealed>::entry","value":"fn entry<'_>(Self, &'_ mut MetadataMap) -> Result<Entry, InvalidMetadataKey>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":159450,"byte_end":159459,"line_start":2319,"line_end":2319,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":159953,"byte_end":159959,"line_start":2335,"line_end":2335,"column_start":12,"column_end":18},"name":"remove","qualname":"<String as metadata::map::as_metadata_key::Sealed>::remove","value":"fn remove<'_>(Self, &'_ mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1102},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":159932,"byte_end":159941,"line_start":2334,"line_end":2334,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":160431,"byte_end":160434,"line_start":2350,"line_end":2350,"column_start":12,"column_end":15},"name":"get","qualname":"<&'a String as metadata::map::as_metadata_key::Sealed>::get","value":"fn get<'_>(Self, &'_ MetadataMap) -> Option<&'_ MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1098},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":160410,"byte_end":160419,"line_start":2349,"line_end":2349,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":160768,"byte_end":160775,"line_start":2361,"line_end":2361,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<&'a String as metadata::map::as_metadata_key::Sealed>::get_mut","value":"fn get_mut<'_>(Self, &'_ mut MetadataMap) -> Option<&'_ mut MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1099},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":160747,"byte_end":160756,"line_start":2360,"line_end":2360,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":161125,"byte_end":161132,"line_start":2372,"line_end":2372,"column_start":12,"column_end":19},"name":"get_all","qualname":"<&'a String as metadata::map::as_metadata_key::Sealed>::get_all","value":"fn get_all<'_>(Self, &'_ MetadataMap) -> Option<GetAll>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1100},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":161104,"byte_end":161113,"line_start":2371,"line_end":2371,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":161395,"byte_end":161400,"line_start":2381,"line_end":2381,"column_start":12,"column_end":17},"name":"entry","qualname":"<&'a String as metadata::map::as_metadata_key::Sealed>::entry","value":"fn entry<'_>(Self, &'_ mut MetadataMap) -> Result<Entry, InvalidMetadataKey>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":161374,"byte_end":161383,"line_start":2380,"line_end":2380,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":161868,"byte_end":161874,"line_start":2396,"line_end":2396,"column_start":12,"column_end":18},"name":"remove","qualname":"<&'a String as metadata::map::as_metadata_key::Sealed>::remove","value":"fn remove<'_>(Self, &'_ mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":1096},"children":[],"decl_id":{"krate":0,"index":1102},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":161847,"byte_end":161856,"line_start":2395,"line_end":2395,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":162536,"byte_end":162565,"line_start":2415,"line_end":2415,"column_start":15,"column_end":44},"name":"AsEncodingAgnosticMetadataKey","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::AsEncodingAgnosticMetadataKey","value":"AsEncodingAgnosticMetadataKey: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`, for operations that don't expose the actual value.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":162368,"byte_end":162442,"line_start":2413,"line_end":2413,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`, for operations that don't expose the actual value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":162447,"byte_end":162521,"line_start":2414,"line_end":2414,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163006,"byte_end":163012,"line_start":2426,"line_end":2426,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163049,"byte_end":163061,"line_start":2428,"line_end":2428,"column_start":12,"column_end":24},"name":"contains_key","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed::contains_key","value":"fn contains_key<'_, '_>(&'_ Self, &'_ MetadataMap) -> bool","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163237,"byte_end":163249,"line_start":2436,"line_end":2436,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MetadataKey<VE> as metadata::map::as_encoding_agnostic_metadata_key::Sealed>::contains_key","value":"fn contains_key<'_, '_>(&'_ Self, &'_ MetadataMap) -> bool","parent":{"krate":0,"index":1169},"children":[],"decl_id":{"krate":0,"index":1170},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163216,"byte_end":163225,"line_start":2435,"line_end":2435,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163552,"byte_end":163564,"line_start":2446,"line_end":2446,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<&'a MetadataKey<VE> as metadata::map::as_encoding_agnostic_metadata_key::Sealed>::contains_key","value":"fn contains_key<'_, '_>(&'_ Self, &'_ MetadataMap) -> bool","parent":{"krate":0,"index":1169},"children":[],"decl_id":{"krate":0,"index":1170},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163531,"byte_end":163540,"line_start":2445,"line_end":2445,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163844,"byte_end":163856,"line_start":2456,"line_end":2456,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<&'a str as metadata::map::as_encoding_agnostic_metadata_key::Sealed>::contains_key","value":"fn contains_key<'_, '_>(&'_ Self, &'_ MetadataMap) -> bool","parent":{"krate":0,"index":1169},"children":[],"decl_id":{"krate":0,"index":1170},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163823,"byte_end":163832,"line_start":2455,"line_end":2455,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164094,"byte_end":164106,"line_start":2466,"line_end":2466,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<String as metadata::map::as_encoding_agnostic_metadata_key::Sealed>::contains_key","value":"fn contains_key<'_, '_>(&'_ Self, &'_ MetadataMap) -> bool","parent":{"krate":0,"index":1169},"children":[],"decl_id":{"krate":0,"index":1170},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164073,"byte_end":164082,"line_start":2465,"line_end":2465,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164355,"byte_end":164367,"line_start":2476,"line_end":2476,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<&'a String as metadata::map::as_encoding_agnostic_metadata_key::Sealed>::contains_key","value":"fn contains_key<'_, '_>(&'_ Self, &'_ MetadataMap) -> bool","parent":{"krate":0,"index":1169},"children":[],"decl_id":{"krate":0,"index":1170},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164334,"byte_end":164343,"line_start":2475,"line_end":2475,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172686,"byte_end":172699,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"MetadataValue","qualname":"::metadata::value::MetadataValue","value":"MetadataValue {  }","parent":null,"children":[{"krate":0,"index":4116},{"krate":0,"index":4117}],"decl_id":null,"docs":" Represents a custom metadata field value.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172439,"byte_end":172484,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172485,"byte_end":172488,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `MetadataValue` is used as the [`MetadataMap`] value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172489,"byte_end":172546,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172547,"byte_end":172550,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172551,"byte_end":172591,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172592,"byte_end":172636,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172654,"byte_end":172674,"line_start":23,"line_end":23,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":4121},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173157,"byte_end":173167,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"ToStrError","qualname":"::metadata::value::ToStrError","value":"ToStrError {  }","parent":null,"children":[{"krate":0,"index":4122}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` to a string representation.","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` to a string representation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":172917,"byte_end":172999,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173000,"byte_end":173003,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Metadata field values may contain opaque bytes, in which case it is not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173004,"byte_end":173079,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ possible to represent the value as a string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173080,"byte_end":173128,"line_start":34,"line_end":34,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173226,"byte_end":173244,"line_start":41,"line_end":41,"column_start":10,"column_end":28},"name":"AsciiMetadataValue","qualname":"::metadata::value::AsciiMetadataValue","value":"MetadataValue<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173188,"byte_end":173216,"line_start":40,"line_end":40,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173307,"byte_end":173326,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"BinaryMetadataValue","qualname":"::metadata::value::BinaryMetadataValue","value":"MetadataValue<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata value.\n","sig":null,"attributes":[{"value":"/ A binary metadata value.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173269,"byte_end":173297,"line_start":42,"line_end":42,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174259,"byte_end":174270,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataValue<VE>>::from_static","value":"fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a static string to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Convert a static string to a `MetadataValue`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173401,"byte_end":173450,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173455,"byte_end":173458,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function will not perform any copying, however the string is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173463,"byte_end":173532,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ checked to ensure that no invalid characters are present.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173537,"byte_end":173598,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173603,"byte_end":173606,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ For Ascii values, only visible ASCII characters (32-127) are permitted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173611,"byte_end":173686,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ For Binary values, the string must be valid base64.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173691,"byte_end":173746,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173751,"byte_end":173754,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173759,"byte_end":173771,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173776,"byte_end":173779,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument contains invalid metadata value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173784,"byte_end":173856,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ characters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173861,"byte_end":173876,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173881,"byte_end":173884,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173889,"byte_end":173903,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173908,"byte_end":173911,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173916,"byte_end":173923,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173928,"byte_end":173957,"line_start":62,"line_end":62,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173962,"byte_end":174017,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174022,"byte_end":174051,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174056,"byte_end":174063,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174068,"byte_end":174071,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174076,"byte_end":174083,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174088,"byte_end":174117,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_static(\"SGVsbG8hIQ==\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174122,"byte_end":174185,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(val, \"Hello!!\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174190,"byte_end":174221,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174226,"byte_end":174233,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174238,"byte_end":174247,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175313,"byte_end":175327,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"try_from_bytes","qualname":"<MetadataValue<VE>>::try_from_bytes","value":"fn try_from_bytes<'_>(&'_ [u8]) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a byte slice to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a byte slice to a `MetadataValue`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174420,"byte_end":174477,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174482,"byte_end":174485,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ For Ascii metadata values, If the argument contains invalid metadata","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174490,"byte_end":174562,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174567,"byte_end":174641,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174646,"byte_end":174702,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174707,"byte_end":174710,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ For Binary metadata values this method cannot fail. See also the Binary","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174715,"byte_end":174790,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ only version of this method `from_bytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174795,"byte_end":174840,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174845,"byte_end":174848,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174853,"byte_end":174867,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174872,"byte_end":174875,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174880,"byte_end":174887,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174892,"byte_end":174921,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"hello\\xfa\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":174926,"byte_end":174998,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175003,"byte_end":175042,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175047,"byte_end":175054,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175059,"byte_end":175062,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175067,"byte_end":175087,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175092,"byte_end":175095,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175100,"byte_end":175107,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175112,"byte_end":175141,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"\\n\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175146,"byte_end":175202,"line_start":101,"line_end":101,"column_start":5,"column_end":61}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175207,"byte_end":175233,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175238,"byte_end":175245,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175250,"byte_end":175259,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"deprecated = \"Use TryFrom instead\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175264,"byte_end":175301,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176055,"byte_end":176066,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<MetadataValue<VE>>::from_shared","value":"fn from_shared(Bytes) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a `Bytes` buffer to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a `Bytes` buffer to a `MetadataValue`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175424,"byte_end":175485,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175490,"byte_end":175493,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Ascii>`, if the argument contains invalid metadata","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175498,"byte_end":175571,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175576,"byte_end":175650,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175655,"byte_end":175711,"line_start":114,"line_end":114,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175716,"byte_end":175719,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Binary>`, if the argument is not valid base64, an","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175724,"byte_end":175796,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ error is returned. In use cases where the input is not base64 encoded,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175801,"byte_end":175875,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ use `from_bytes`; if the value has to be encoded it's not possible to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175880,"byte_end":175953,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ share the memory anyways.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175958,"byte_end":175987,"line_start":119,"line_end":119,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":175992,"byte_end":176001,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"deprecated = \"Use TryFrom instead\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176006,"byte_end":176043,"line_start":121,"line_end":121,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176530,"byte_end":176551,"line_start":135,"line_end":135,"column_start":19,"column_end":40},"name":"from_shared_unchecked","qualname":"<MetadataValue<VE>>::from_shared_unchecked","value":"unsafe fn from_shared_unchecked(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Bytes` directly into a `MetadataValue` without validating.\n For `MetadataValue<Binary>` the provided parameter must be base64\n encoded without padding bytes at the end.","sig":null,"attributes":[{"value":"/ Convert a `Bytes` directly into a `MetadataValue` without validating.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176163,"byte_end":176236,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ For `MetadataValue<Binary>` the provided parameter must be base64","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176241,"byte_end":176310,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ encoded without padding bytes at the end.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176315,"byte_end":176360,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176365,"byte_end":176368,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176373,"byte_end":176385,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176390,"byte_end":176393,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function does NOT validate that illegal bytes are not contained","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176398,"byte_end":176470,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ within the buffer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176475,"byte_end":176497,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176502,"byte_end":176511,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177095,"byte_end":177103,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataValue<VE>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `MetadataValue` has a length of zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the `MetadataValue` has a length of zero bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176719,"byte_end":176786,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176791,"byte_end":176794,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176799,"byte_end":176813,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176818,"byte_end":176821,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176826,"byte_end":176833,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176838,"byte_end":176867,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176872,"byte_end":176922,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/ assert!(val.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176927,"byte_end":176955,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176960,"byte_end":176963,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":176968,"byte_end":177023,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"/ assert!(!val.is_empty());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177028,"byte_end":177057,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177062,"byte_end":177069,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177074,"byte_end":177083,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177773,"byte_end":177781,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MetadataValue<VE>>::to_bytes","value":"fn to_bytes<'_>(&'_ Self) -> Result<Bytes, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a Bytes buffer. This method cannot\n fail for Ascii values. For Ascii values, `as_bytes` is more convenient\n to use.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a Bytes buffer. This method cannot","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177176,"byte_end":177244,"line_start":159,"line_end":159,"column_start":5,"column_end":73}},{"value":"/ fail for Ascii values. For Ascii values, `as_bytes` is more convenient","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177249,"byte_end":177323,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ to use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177328,"byte_end":177339,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177344,"byte_end":177347,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177352,"byte_end":177366,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177371,"byte_end":177374,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177379,"byte_end":177386,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177391,"byte_end":177420,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177425,"byte_end":177480,"line_start":167,"line_end":167,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177485,"byte_end":177544,"line_start":168,"line_end":168,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177549,"byte_end":177556,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177561,"byte_end":177564,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177569,"byte_end":177576,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177581,"byte_end":177610,"line_start":172,"line_end":172,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177615,"byte_end":177671,"line_start":173,"line_end":173,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177676,"byte_end":177735,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177740,"byte_end":177747,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177752,"byte_end":177761,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178299,"byte_end":178312,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"set_sensitive","qualname":"<MetadataValue<VE>>::set_sensitive","value":"fn set_sensitive<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Mark that the metadata value represents sensitive information.","sig":null,"attributes":[{"value":"/ Mark that the metadata value represents sensitive information.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177888,"byte_end":177954,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177959,"byte_end":177962,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177967,"byte_end":177981,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177986,"byte_end":177989,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":177994,"byte_end":178001,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178006,"byte_end":178035,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178040,"byte_end":178103,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178108,"byte_end":178111,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178116,"byte_end":178144,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178149,"byte_end":178181,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178186,"byte_end":178189,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178194,"byte_end":178223,"line_start":192,"line_end":192,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178228,"byte_end":178261,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178266,"byte_end":178273,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178278,"byte_end":178287,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179185,"byte_end":179197,"line_start":222,"line_end":222,"column_start":12,"column_end":24},"name":"is_sensitive","qualname":"<MetadataValue<VE>>::is_sensitive","value":"fn is_sensitive<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value represents sensitive data.","sig":null,"attributes":[{"value":"/ Returns `true` if the value represents sensitive data.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178387,"byte_end":178445,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178450,"byte_end":178453,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Sensitive data could represent passwords or other data that should not","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178458,"byte_end":178532,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ be stored on disk or in memory. This setting can be used by components","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178537,"byte_end":178611,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ like caches to avoid storing the value. HPACK encoders must set the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178616,"byte_end":178687,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/ metadata field to never index when `is_sensitive` returns true.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178692,"byte_end":178759,"line_start":205,"line_end":205,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178764,"byte_end":178767,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that sensitivity is not factored into equality or ordering.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178772,"byte_end":178840,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178845,"byte_end":178848,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178853,"byte_end":178867,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178872,"byte_end":178875,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178880,"byte_end":178887,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178892,"byte_end":178921,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178926,"byte_end":178989,"line_start":213,"line_end":213,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":178994,"byte_end":178997,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179002,"byte_end":179030,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179035,"byte_end":179067,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179072,"byte_end":179075,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179080,"byte_end":179109,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179114,"byte_end":179147,"line_start":219,"line_end":219,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179152,"byte_end":179159,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179164,"byte_end":179173,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179788,"byte_end":179804,"line_start":243,"line_end":243,"column_start":12,"column_end":28},"name":"as_encoded_bytes","qualname":"<MetadataValue<VE>>::as_encoded_bytes","value":"fn as_encoded_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, the\n return value is base64 encoded.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179260,"byte_end":179330,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ return value is base64 encoded.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179335,"byte_end":179370,"line_start":227,"line_end":227,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179375,"byte_end":179378,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179383,"byte_end":179397,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179402,"byte_end":179405,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179410,"byte_end":179417,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179422,"byte_end":179451,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179456,"byte_end":179511,"line_start":233,"line_end":233,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179516,"byte_end":179565,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179570,"byte_end":179577,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179582,"byte_end":179585,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179590,"byte_end":179597,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179602,"byte_end":179631,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"Hello!\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179636,"byte_end":179693,"line_start":239,"line_end":239,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"SGVsbG8h\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179698,"byte_end":179750,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179755,"byte_end":179762,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":179767,"byte_end":179776,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":181855,"byte_end":181863,"line_start":303,"line_end":303,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<VE> as std::convert::TryFrom>::try_from","value":"fn try_from<'_>(&'_ [u8]) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":181838,"byte_end":181847,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":182920,"byte_end":182928,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<VE> as std::convert::TryFrom>::try_from","value":"fn try_from<'_>(&'_ [u8; ]) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":182903,"byte_end":182912,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":183678,"byte_end":183686,"line_start":358,"line_end":358,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<VE> as std::convert::TryFrom>::try_from","value":"fn try_from(Bytes) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":183661,"byte_end":183670,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":184524,"byte_end":184532,"line_start":380,"line_end":380,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<VE> as std::convert::TryFrom>::try_from","value":"fn try_from(Vec<u8>) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":184507,"byte_end":184516,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185041,"byte_end":185049,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<Ascii> as std::convert::TryFrom>::try_from","value":"fn try_from(&'a str) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185024,"byte_end":185033,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185538,"byte_end":185546,"line_start":410,"line_end":410,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<Ascii> as std::convert::TryFrom>::try_from","value":"fn try_from(&'a String) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185521,"byte_end":185530,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186030,"byte_end":186038,"line_start":425,"line_end":425,"column_start":8,"column_end":16},"name":"try_from","qualname":"<MetadataValue<Ascii> as std::convert::TryFrom>::try_from","value":"fn try_from(String) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186013,"byte_end":186022,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187055,"byte_end":187063,"line_start":458,"line_end":458,"column_start":12,"column_end":20},"name":"from_str","qualname":"<MetadataValue<Ascii>>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, InvalidMetadataValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a string to a `MetadataValue<Ascii>`.","sig":null,"attributes":[{"value":"/ Attempt to convert a string to a `MetadataValue<Ascii>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186234,"byte_end":186294,"line_start":433,"line_end":433,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186299,"byte_end":186302,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If the argument contains invalid metadata value characters, an error is","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186307,"byte_end":186382,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ returned. Only visible ASCII characters (32-127) are permitted. Use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186387,"byte_end":186458,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ `from_bytes` to create a `MetadataValue` that includes opaque octets","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186463,"byte_end":186535,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ (128-255).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186540,"byte_end":186554,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186559,"byte_end":186562,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186567,"byte_end":186581,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186586,"byte_end":186589,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186594,"byte_end":186601,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186606,"byte_end":186635,"line_start":443,"line_end":443,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"hello\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186640,"byte_end":186701,"line_start":444,"line_end":444,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186706,"byte_end":186735,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186740,"byte_end":186747,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186752,"byte_end":186755,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186760,"byte_end":186780,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186785,"byte_end":186788,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186793,"byte_end":186800,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186805,"byte_end":186834,"line_start":451,"line_end":451,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"\\n\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186839,"byte_end":186888,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186893,"byte_end":186919,"line_start":453,"line_end":453,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186924,"byte_end":186931,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186936,"byte_end":186976,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"deprecated = \"Use TryFrom or FromStr instead\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186981,"byte_end":187029,"line_start":456,"line_end":456,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187034,"byte_end":187043,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187585,"byte_end":187593,"line_start":475,"line_end":475,"column_start":12,"column_end":20},"name":"from_key","qualname":"<MetadataValue<Ascii>>::from_key","value":"fn from_key<KeyVE>(MetadataKey<KeyVE>) -> Self where KeyVE: ValueEncoding","parent":null,"children":[],"decl_id":null,"docs":" Converts a MetadataKey into a `MetadataValue<Ascii>`.","sig":null,"attributes":[{"value":"/ Converts a MetadataKey into a `MetadataValue<Ascii>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187146,"byte_end":187203,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187208,"byte_end":187211,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Since every valid MetadataKey is a valid MetadataValue this is done","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187216,"byte_end":187287,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ infallibly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187292,"byte_end":187307,"line_start":465,"line_end":465,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187312,"byte_end":187315,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187320,"byte_end":187334,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187339,"byte_end":187342,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187347,"byte_end":187354,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187359,"byte_end":187388,"line_start":470,"line_end":470,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_key::<Ascii>(\"accept\".parse().unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187393,"byte_end":187472,"line_start":471,"line_end":471,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(val, AsciiMetadataValue::try_from(b\"accept\").unwrap());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187477,"byte_end":187547,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187552,"byte_end":187559,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187564,"byte_end":187573,"line_start":474,"line_end":474,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188226,"byte_end":188229,"line_start":494,"line_end":494,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataValue<Ascii>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of `self`, in bytes.","sig":null,"attributes":[{"value":"/ Returns the length of `self`, in bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187681,"byte_end":187724,"line_start":479,"line_end":479,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187729,"byte_end":187732,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This method is not available for `MetadataValue<Binary>` because that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187737,"byte_end":187810,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ cannot be implemented in constant time, which most people would probably","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187815,"byte_end":187891,"line_start":482,"line_end":482,"column_start":5,"column_end":81}},{"value":"/ expect. To get the length of `MetadataValue<Binary>`, convert it to a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187896,"byte_end":187969,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ Bytes value and measure its length.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":187974,"byte_end":188013,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188018,"byte_end":188021,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188026,"byte_end":188040,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188045,"byte_end":188048,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188053,"byte_end":188060,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188065,"byte_end":188094,"line_start":489,"line_end":489,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188099,"byte_end":188154,"line_start":490,"line_end":490,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.len(), 5);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188159,"byte_end":188188,"line_start":491,"line_end":491,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188193,"byte_end":188200,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188205,"byte_end":188214,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188702,"byte_end":188708,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"to_str","qualname":"<MetadataValue<Ascii>>::to_str","value":"fn to_str<'_>(&'_ Self) -> Result<&'_ str, ToStrError>","parent":null,"children":[],"decl_id":null,"docs":" Yields a `&str` slice if the `MetadataValue` only contains visible ASCII\n chars.","sig":null,"attributes":[{"value":"/ Yields a `&str` slice if the `MetadataValue` only contains visible ASCII","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188284,"byte_end":188360,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ chars.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188365,"byte_end":188375,"line_start":499,"line_end":499,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188380,"byte_end":188383,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This function will perform a scan of the metadata value, checking all the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188388,"byte_end":188465,"line_start":501,"line_end":501,"column_start":5,"column_end":82}},{"value":"/ characters.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188470,"byte_end":188485,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188490,"byte_end":188493,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188498,"byte_end":188512,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188517,"byte_end":188520,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188525,"byte_end":188532,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188537,"byte_end":188566,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188571,"byte_end":188626,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_str().unwrap(), \"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188631,"byte_end":188678,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188683,"byte_end":188690,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189131,"byte_end":189139,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MetadataValue<Ascii>>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, use\n `to_bytes`.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188816,"byte_end":188886,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ `to_bytes`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188891,"byte_end":188906,"line_start":516,"line_end":516,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188911,"byte_end":188914,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188919,"byte_end":188933,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188938,"byte_end":188941,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188946,"byte_end":188953,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188958,"byte_end":188987,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":188992,"byte_end":189047,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_bytes(), b\"hello\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189052,"byte_end":189093,"line_start":523,"line_end":523,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189098,"byte_end":189105,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189110,"byte_end":189119,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189512,"byte_end":189522,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataValue<Binary>>::from_bytes","value":"fn from_bytes<'_>(&'_ [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a byte slice to a `MetadataValue<Binary>`.","sig":null,"attributes":[{"value":"/ Convert a byte slice to a `MetadataValue<Binary>`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189230,"byte_end":189284,"line_start":532,"line_end":532,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189289,"byte_end":189292,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189297,"byte_end":189311,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189316,"byte_end":189319,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189324,"byte_end":189331,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189336,"byte_end":189365,"line_start":537,"line_end":537,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\\xfa\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189370,"byte_end":189430,"line_start":538,"line_end":538,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189435,"byte_end":189474,"line_start":539,"line_end":539,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189479,"byte_end":189486,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189491,"byte_end":189500,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189728,"byte_end":189734,"line_start":550,"line_end":550,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<MetadataValue<VE> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189711,"byte_end":189720,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189856,"byte_end":189859,"line_start":556,"line_end":556,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MetadataValue<VE> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":190053,"byte_end":190057,"line_start":563,"line_end":563,"column_start":8,"column_end":12},"name":"from","qualname":"<MetadataValue<Ascii> as std::convert::From>::from","value":"fn from(MetadataKey<KeyVE>) -> MetadataValue<Ascii>","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":190036,"byte_end":190045,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192154,"byte_end":192162,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"from_str","qualname":"<MetadataValue<Ascii> as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<MetadataValue<Ascii>, Self::Err>","parent":{"krate":2,"index":12996},"children":[],"decl_id":{"krate":2,"index":12998},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192137,"byte_end":192146,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192518,"byte_end":192522,"line_start":663,"line_end":663,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as std::convert::From>::from","value":"fn from(MetadataValue<VE>) -> Bytes","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192501,"byte_end":192510,"line_start":662,"line_end":662,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192725,"byte_end":192729,"line_start":670,"line_end":670,"column_start":8,"column_end":12},"name":"from","qualname":"<MetadataValue<VE> as std::convert::From>::from","value":"fn from(&'a MetadataValue<VE>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192708,"byte_end":192717,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192956,"byte_end":192959,"line_start":684,"line_end":684,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ToStrError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193154,"byte_end":193158,"line_start":692,"line_end":692,"column_start":8,"column_end":12},"name":"hash","qualname":"<MetadataValue<Ascii> as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10533},"children":[],"decl_id":{"krate":2,"index":10534},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193279,"byte_end":193283,"line_start":698,"line_end":698,"column_start":8,"column_end":12},"name":"hash","qualname":"<MetadataValue<Binary> as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10533},"children":[],"decl_id":{"krate":2,"index":10534},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193561,"byte_end":193563,"line_start":710,"line_end":710,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataValue<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataValue<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193544,"byte_end":193553,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194024,"byte_end":194035,"line_start":723,"line_end":723,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<MetadataValue<VE> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ MetadataValue<VE>)\n-> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194007,"byte_end":194016,"line_start":722,"line_end":722,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194224,"byte_end":194227,"line_start":730,"line_end":730,"column_start":8,"column_end":11},"name":"cmp","qualname":"<MetadataValue<VE> as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> cmp::Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194207,"byte_end":194216,"line_start":729,"line_end":729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194398,"byte_end":194400,"line_start":737,"line_end":737,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataValue<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ str) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194381,"byte_end":194390,"line_start":736,"line_end":736,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194575,"byte_end":194577,"line_start":744,"line_end":744,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataValue<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ [u8]) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194558,"byte_end":194567,"line_start":743,"line_end":743,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194742,"byte_end":194753,"line_start":751,"line_end":751,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<MetadataValue<VE> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ str) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194725,"byte_end":194734,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194945,"byte_end":194956,"line_start":758,"line_end":758,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<MetadataValue<VE> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ [u8]) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194928,"byte_end":194937,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195136,"byte_end":195138,"line_start":765,"line_end":765,"column_start":8,"column_end":10},"name":"eq","qualname":"<str as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataValue<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195119,"byte_end":195128,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195301,"byte_end":195303,"line_start":772,"line_end":772,"column_start":8,"column_end":10},"name":"eq","qualname":"<[u8] as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataValue<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195284,"byte_end":195293,"line_start":771,"line_end":771,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195466,"byte_end":195477,"line_start":779,"line_end":779,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<str as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ MetadataValue<VE>)\n-> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195449,"byte_end":195458,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195694,"byte_end":195705,"line_start":786,"line_end":786,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<[u8] as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ MetadataValue<VE>)\n-> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195677,"byte_end":195686,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195912,"byte_end":195914,"line_start":793,"line_end":793,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataValue<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ String) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195895,"byte_end":195904,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196072,"byte_end":196083,"line_start":800,"line_end":800,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<MetadataValue<VE> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ String) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196055,"byte_end":196064,"line_start":799,"line_end":799,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196279,"byte_end":196281,"line_start":807,"line_end":807,"column_start":8,"column_end":10},"name":"eq","qualname":"<String as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataValue<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196262,"byte_end":196271,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196447,"byte_end":196458,"line_start":814,"line_end":814,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<String as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ MetadataValue<VE>)\n-> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196430,"byte_end":196439,"line_start":813,"line_end":813,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196695,"byte_end":196697,"line_start":821,"line_end":821,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'a MetadataValue<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataValue<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196678,"byte_end":196687,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196883,"byte_end":196894,"line_start":828,"line_end":828,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<&'a MetadataValue<VE> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ MetadataValue<VE>)\n-> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196866,"byte_end":196875,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197145,"byte_end":197147,"line_start":838,"line_end":838,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetadataValue<VE> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ &'a T) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197128,"byte_end":197137,"line_start":837,"line_end":837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197360,"byte_end":197371,"line_start":848,"line_end":848,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<MetadataValue<VE> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ &'a T) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197343,"byte_end":197352,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197555,"byte_end":197557,"line_start":855,"line_end":855,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'a str as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ MetadataValue<VE>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197538,"byte_end":197547,"line_start":854,"line_end":854,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197728,"byte_end":197739,"line_start":862,"line_end":862,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<&'a str as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ MetadataValue<VE>)\n-> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197711,"byte_end":197720,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68227,"byte_end":68233,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"errors","qualname":"::metadata::errors","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499}],"decl_id":null,"docs":" The metadata::errors module contains types for errors that can occur\n while handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ The metadata::errors module contains types for errors that can occur","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68105,"byte_end":68177,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ while handling gRPC custom metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/mod.rs","byte_start":68178,"byte_end":68218,"line_start":37,"line_end":37,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1629},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722}],"decl_id":null,"docs":" Generic server implementation.","sig":null,"attributes":[{"value":"/ Generic server implementation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203312,"byte_end":203346,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203347,"byte_end":203350,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC server. It","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203351,"byte_end":203427,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC server handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203428,"byte_end":203478,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203479,"byte_end":203482,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The items in this module are generally designed to be used by some codegen","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203483,"byte_end":203561,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ tool that will provide the user some custom way to implement the server that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203562,"byte_end":203642,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ will implement the proper gRPC service. Thusly, they are a bit hard to use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203643,"byte_end":203721,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ by hand.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203722,"byte_end":203734,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205234,"byte_end":205238,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::server::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"decl_id":null,"docs":" A gRPC Server handler.","sig":null,"attributes":[{"value":"/ A gRPC Server handler.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":204834,"byte_end":204860,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":204861,"byte_end":204864,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Codec`] and provide utilities to handle","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":204865,"byte_end":204936,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ inbound unary, client side streaming, server side streaming, and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":204937,"byte_end":205005,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ bi-directional streaming.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205006,"byte_end":205035,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205036,"byte_end":205039,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Each request handler method accepts some service that implements the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205040,"byte_end":205112,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ corresponding service trait and a http request that contains some body that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205113,"byte_end":205192,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ implements some [`Body`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205193,"byte_end":205222,"line_start":32,"line_end":32,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205843,"byte_end":205846,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205773,"byte_end":205831,"line_start":49,"line_end":49,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207075,"byte_end":207092,"line_start":87,"line_end":87,"column_start":12,"column_end":29},"name":"accept_compressed","qualname":"<Grpc<T>>::accept_compressed","value":"fn accept_compressed(Self, CompressionEncoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable accepting compressed requests.","sig":null,"attributes":[{"value":"/ Enable accepting compressed requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206174,"byte_end":206215,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206220,"byte_end":206223,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ If a request with an unsupported encoding is received the server will respond with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206228,"byte_end":206314,"line_start":62,"line_end":62,"column_start":5,"column_end":91}},{"value":"/ [`Code::UnUnimplemented`](crate::Code).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206319,"byte_end":206362,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206367,"byte_end":206370,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206375,"byte_end":206388,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206393,"byte_end":206396,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a server generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206401,"byte_end":206484,"line_start":67,"line_end":67,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206489,"byte_end":206492,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206497,"byte_end":206508,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # enum CompressionEncoding { Gzip }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206513,"byte_end":206552,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/ # struct Svc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206557,"byte_end":206574,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ # struct ExampleServer<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206579,"byte_end":206612,"line_start":72,"line_end":72,"column_start":5,"column_end":38}},{"value":"/ # impl<T> ExampleServer<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206617,"byte_end":206649,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/ #     fn new(svc: T) -> Self { Self(svc) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206654,"byte_end":206700,"line_start":74,"line_end":74,"column_start":5,"column_end":51}},{"value":"/ #     fn accept_compressed(self, _: CompressionEncoding) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206705,"byte_end":206782,"line_start":75,"line_end":75,"column_start":5,"column_end":82}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206787,"byte_end":206794,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206799,"byte_end":206826,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/ # trait Example {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206831,"byte_end":206853,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206858,"byte_end":206861,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206866,"byte_end":206891,"line_start":80,"line_end":80,"column_start":5,"column_end":30}},{"value":"/ impl Example for Svc {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206896,"byte_end":206922,"line_start":81,"line_end":81,"column_start":5,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206927,"byte_end":206941,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206946,"byte_end":206951,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206956,"byte_end":206959,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let service = ExampleServer::new(Svc).accept_compressed(CompressionEncoding::Gzip);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":206964,"byte_end":207051,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207056,"byte_end":207063,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208061,"byte_end":208076,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"send_compressed","qualname":"<Grpc<T>>::send_compressed","value":"fn send_compressed(Self, CompressionEncoding) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable sending compressed responses.","sig":null,"attributes":[{"value":"/ Enable sending compressed responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207228,"byte_end":207268,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207273,"byte_end":207276,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Requires the client to also support receiving compressed responses.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207281,"byte_end":207352,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207357,"byte_end":207360,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207365,"byte_end":207378,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207383,"byte_end":207386,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a server generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207391,"byte_end":207474,"line_start":98,"line_end":98,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207479,"byte_end":207482,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207487,"byte_end":207498,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # enum CompressionEncoding { Gzip }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207503,"byte_end":207542,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/ # struct Svc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207547,"byte_end":207564,"line_start":102,"line_end":102,"column_start":5,"column_end":22}},{"value":"/ # struct ExampleServer<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207569,"byte_end":207602,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # impl<T> ExampleServer<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207607,"byte_end":207639,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/ #     fn new(svc: T) -> Self { Self(svc) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207644,"byte_end":207690,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/ #     fn send_compressed(self, _: CompressionEncoding) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207695,"byte_end":207770,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207775,"byte_end":207782,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207787,"byte_end":207814,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ # trait Example {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207819,"byte_end":207841,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207846,"byte_end":207849,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207854,"byte_end":207879,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/ impl Example for Svc {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207884,"byte_end":207910,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207915,"byte_end":207929,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207934,"byte_end":207939,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207944,"byte_end":207947,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let service = ExampleServer::new(Svc).send_compressed(CompressionEncoding::Gzip);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":207952,"byte_end":208037,"line_start":116,"line_end":116,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208042,"byte_end":208049,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208997,"byte_end":209022,"line_start":148,"line_end":148,"column_start":12,"column_end":37},"name":"max_decoding_message_size","qualname":"<Grpc<T>>::max_decoding_message_size","value":"fn max_decoding_message_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limits the maximum size of a decoded message.","sig":null,"attributes":[{"value":"/ Limits the maximum size of a decoded message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208210,"byte_end":208259,"line_start":123,"line_end":123,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208264,"byte_end":208267,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208272,"byte_end":208285,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208290,"byte_end":208293,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a server generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208298,"byte_end":208381,"line_start":127,"line_end":127,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208386,"byte_end":208389,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208394,"byte_end":208405,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # struct Svc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208410,"byte_end":208427,"line_start":130,"line_end":130,"column_start":5,"column_end":22}},{"value":"/ # struct ExampleServer<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208432,"byte_end":208465,"line_start":131,"line_end":131,"column_start":5,"column_end":38}},{"value":"/ # impl<T> ExampleServer<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208470,"byte_end":208502,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/ #     fn new(svc: T) -> Self { Self(svc) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208507,"byte_end":208553,"line_start":133,"line_end":133,"column_start":5,"column_end":51}},{"value":"/ #     fn max_decoding_message_size(self, _: usize) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208558,"byte_end":208629,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208634,"byte_end":208641,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208646,"byte_end":208673,"line_start":136,"line_end":136,"column_start":5,"column_end":32}},{"value":"/ # trait Example {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208678,"byte_end":208700,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208705,"byte_end":208708,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208713,"byte_end":208738,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ impl Example for Svc {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208743,"byte_end":208769,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208774,"byte_end":208788,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208793,"byte_end":208798,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208803,"byte_end":208806,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Set the limit to 2MB, Defaults to 4MB.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208811,"byte_end":208856,"line_start":144,"line_end":144,"column_start":5,"column_end":50}},{"value":"/ let limit = 2 * 1024 * 1024;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208861,"byte_end":208893,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/ let service = ExampleServer::new(Svc).max_decoding_message_size(limit);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208898,"byte_end":208973,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":208978,"byte_end":208985,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209922,"byte_end":209947,"line_start":178,"line_end":178,"column_start":12,"column_end":37},"name":"max_encoding_message_size","qualname":"<Grpc<T>>::max_encoding_message_size","value":"fn max_encoding_message_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limits the maximum size of a encoded message.","sig":null,"attributes":[{"value":"/ Limits the maximum size of a encoded message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209135,"byte_end":209184,"line_start":153,"line_end":153,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209189,"byte_end":209192,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209197,"byte_end":209210,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209215,"byte_end":209218,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The most common way of using this is through a server generated by tonic-build:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209223,"byte_end":209306,"line_start":157,"line_end":157,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209311,"byte_end":209314,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209319,"byte_end":209330,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/ # struct Svc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209335,"byte_end":209352,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # struct ExampleServer<T>(T);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209357,"byte_end":209390,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/ # impl<T> ExampleServer<T> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209395,"byte_end":209427,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/ #     fn new(svc: T) -> Self { Self(svc) }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209432,"byte_end":209478,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/ #     fn max_encoding_message_size(self, _: usize) -> Self { self }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209483,"byte_end":209554,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209559,"byte_end":209566,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209571,"byte_end":209598,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/ # trait Example {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209603,"byte_end":209625,"line_start":167,"line_end":167,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209630,"byte_end":209633,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[tonic::async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209638,"byte_end":209663,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/ impl Example for Svc {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209668,"byte_end":209694,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209699,"byte_end":209713,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209718,"byte_end":209723,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209728,"byte_end":209731,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Set the limit to 2MB, Defaults to 4MB.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209736,"byte_end":209781,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/ let limit = 2 * 1024 * 1024;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209786,"byte_end":209818,"line_start":175,"line_end":175,"column_start":5,"column_end":37}},{"value":"/ let service = ExampleServer::new(Svc).max_encoding_message_size(limit);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209823,"byte_end":209898,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":209903,"byte_end":209910,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":210086,"byte_end":210110,"line_start":184,"line_end":184,"column_start":12,"column_end":36},"name":"apply_compression_config","qualname":"<Grpc<T>>::apply_compression_config","value":"fn apply_compression_config(Self, EnabledCompressionEncodings,\nEnabledCompressionEncodings) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":210649,"byte_end":210678,"line_start":204,"line_end":204,"column_start":12,"column_end":41},"name":"apply_max_message_size_config","qualname":"<Grpc<T>>::apply_max_message_size_config","value":"fn apply_max_message_size_config(Self, Option<usize>, Option<usize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":211172,"byte_end":211177,"line_start":222,"line_end":222,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"async fn unary<S, B, '_>(&'_ mut Self, S, http::Request<B>) -> /*impl Trait*/\nwhere S: UnaryService<T::Decode, Response = T::Encode>, B: Body + Send +\n'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a single unary gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":211115,"byte_end":211154,"line_start":221,"line_end":221,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":212560,"byte_end":212576,"line_start":266,"line_end":266,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"async fn server_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ServerStreamingService<T::Decode, Response =\nT::Encode>, S::ResponseStream: Send + 'static, B: Body + Send + 'static,\nB::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a server side streaming request.\n","sig":null,"attributes":[{"value":"/ Handle a server side streaming request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":212499,"byte_end":212542,"line_start":265,"line_end":265,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":213908,"byte_end":213924,"line_start":307,"line_end":307,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"async fn client_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ClientStreamingService<T::Decode, Response =\nT::Encode>, B: Body + Send + 'static, B::Error: Into<crate::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Handle a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a client side streaming gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":213842,"byte_end":213890,"line_start":306,"line_end":306,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":214905,"byte_end":214914,"line_start":340,"line_end":340,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"async fn streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: StreamingService<T::Decode, Response = T::Encode> +\nSend, S::ResponseStream: Send + 'static, B: Body + Send + 'static,\nB::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a bi-directional streaming gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":214836,"byte_end":214887,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":218911,"byte_end":218914,"line_start":479,"line_end":479,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Grpc<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220001,"byte_end":220013,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"UnaryService","qualname":"::server::service::UnaryService","value":"UnaryService<R>","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":219816,"byte_end":219863,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":219864,"byte_end":219867,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":219868,"byte_end":219946,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ automatically implement `UnaryService`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":219947,"byte_end":219990,"line_start":9,"line_end":9,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220067,"byte_end":220075,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::UnaryService::Response","value":"type Response;","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220023,"byte_end":220057,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220111,"byte_end":220117,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::UnaryService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220082,"byte_end":220101,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220211,"byte_end":220215,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::UnaryService::call","value":"fn call<'_>(&'_ mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1652},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220183,"byte_end":220203,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220453,"byte_end":220457,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"call","qualname":"<T as server::service::UnaryService>::call","value":"fn call<'_>(&'_ mut Self, Request<M1>) -> Self::Future","parent":{"krate":0,"index":1652},"children":[],"decl_id":{"krate":0,"index":1656},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220750,"byte_end":220772,"line_start":37,"line_end":37,"column_start":11,"column_end":33},"name":"ServerStreamingService","qualname":"::server::service::ServerStreamingService","value":"ServerStreamingService<R>","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220555,"byte_end":220602,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220603,"byte_end":220606,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220607,"byte_end":220685,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ServerStreamingService`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220686,"byte_end":220739,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220826,"byte_end":220834,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ServerStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220782,"byte_end":220816,"line_start":38,"line_end":38,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220891,"byte_end":220905,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::ServerStreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220841,"byte_end":220881,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220988,"byte_end":220994,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ServerStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220959,"byte_end":220978,"line_start":44,"line_end":44,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221094,"byte_end":221098,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ServerStreamingService::call","value":"fn call<'_>(&'_ mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221066,"byte_end":221086,"line_start":47,"line_end":47,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221426,"byte_end":221430,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"call","qualname":"<T as server::service::ServerStreamingService>::call","value":"fn call<'_>(&'_ mut Self, Request<M1>) -> Self::Future","parent":{"krate":0,"index":1664},"children":[],"decl_id":{"krate":0,"index":1669},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221723,"byte_end":221745,"line_start":69,"line_end":69,"column_start":11,"column_end":33},"name":"ClientStreamingService","qualname":"::server::service::ClientStreamingService","value":"ClientStreamingService<R>","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221528,"byte_end":221575,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221576,"byte_end":221579,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221580,"byte_end":221658,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ClientStreamingService`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221659,"byte_end":221712,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221799,"byte_end":221807,"line_start":71,"line_end":71,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ClientStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1679},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221755,"byte_end":221789,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221843,"byte_end":221849,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ClientStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1679},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221814,"byte_end":221833,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221943,"byte_end":221947,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ClientStreamingService::call","value":"fn call<'_>(&'_ mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1679},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221915,"byte_end":221935,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222217,"byte_end":222221,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"call","qualname":"<T as server::service::ClientStreamingService>::call","value":"fn call<'_>(&'_ mut Self, Request<Streaming<M1>>) -> Self::Future","parent":{"krate":0,"index":1679},"children":[],"decl_id":{"krate":0,"index":1683},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222519,"byte_end":222535,"line_start":96,"line_end":96,"column_start":11,"column_end":27},"name":"StreamingService","qualname":"::server::service::StreamingService","value":"StreamingService<R>","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222330,"byte_end":222377,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222378,"byte_end":222381,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222382,"byte_end":222460,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ automatically implement `StreamingService`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222461,"byte_end":222508,"line_start":95,"line_end":95,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222589,"byte_end":222597,"line_start":98,"line_end":98,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::StreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222545,"byte_end":222579,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222654,"byte_end":222668,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::StreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222604,"byte_end":222644,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222751,"byte_end":222757,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::StreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222722,"byte_end":222741,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222857,"byte_end":222861,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::StreamingService::call","value":"fn call<'_>(&'_ mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1691},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222829,"byte_end":222849,"line_start":106,"line_end":106,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":223205,"byte_end":223209,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"call","qualname":"<T as server::service::StreamingService>::call","value":"fn call<'_>(&'_ mut Self, Request<Streaming<M1>>) -> Self::Future","parent":{"krate":0,"index":1691},"children":[],"decl_id":{"krate":0,"index":1696},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":204032,"byte_end":204044,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NamedService","qualname":"::server::NamedService","value":"NamedService","parent":null,"children":[{"krate":0,"index":1723}],"decl_id":null,"docs":" A trait to provide a static reference to the service's\n name. This is used for routing service's within the router.\n","sig":null,"attributes":[{"value":"/ A trait to provide a static reference to the service's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203899,"byte_end":203957,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ name. This is used for routing service's within the router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":203958,"byte_end":204021,"line_start":20,"line_end":20,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":204201,"byte_end":204205,"line_start":25,"line_end":25,"column_start":11,"column_end":15},"name":"NAME","qualname":"::server::NamedService::NAME","value":"&'static str","parent":{"krate":0,"index":1722},"children":[],"decl_id":null,"docs":" The `Service-Name` as described [here].","sig":null,"attributes":[{"value":"/ The `Service-Name` as described [here].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":204051,"byte_end":204094,"line_start":22,"line_end":22,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":204099,"byte_end":204102,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [here]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/mod.rs","byte_start":204107,"byte_end":204190,"line_start":24,"line_end":24,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1827}],"decl_id":null,"docs":" Utilities for using Tower services with Tonic.\n","sig":null,"attributes":[{"value":"/ Utilities for using Tower services with Tonic.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","byte_start":223318,"byte_end":223368,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interceptor","qualname":"::service::interceptor","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":1778},{"krate":0,"index":1783},{"krate":0,"index":4152},{"krate":0,"index":4157},{"krate":0,"index":4161},{"krate":0,"index":1785},{"krate":0,"index":1789},{"krate":0,"index":1793},{"krate":0,"index":1803},{"krate":0,"index":4204},{"krate":0,"index":4167},{"krate":0,"index":4164},{"krate":0,"index":1807},{"krate":0,"index":4244},{"krate":0,"index":4210},{"krate":0,"index":4219},{"krate":0,"index":4207},{"krate":0,"index":1811}],"decl_id":null,"docs":" gRPC interceptors which are a kind of middleware.","sig":null,"attributes":[{"value":"/ gRPC interceptors which are a kind of middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223500,"byte_end":223553,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223554,"byte_end":223557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223558,"byte_end":223599,"line_start":3,"line_end":3,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225196,"byte_end":225207,"line_start":46,"line_end":46,"column_start":11,"column_end":22},"name":"Interceptor","qualname":"::service::interceptor::Interceptor","value":"Interceptor","parent":null,"children":[{"krate":0,"index":1770}],"decl_id":null,"docs":" A gRPC interceptor.","sig":null,"attributes":[{"value":"/ A gRPC interceptor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223872,"byte_end":223895,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223896,"byte_end":223899,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ gRPC interceptors are similar to middleware but have less flexibility. An interceptor allows","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223900,"byte_end":223996,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ you to do two main things, one is to add/remove/check items in the `MetadataMap` of each","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":223997,"byte_end":224089,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ request. Two, cancel a request with a `Status`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224090,"byte_end":224141,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224142,"byte_end":224145,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Any function that satisfies the bound `FnMut(Request<()>) -> Result<Request<()>, Status>` can be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224146,"byte_end":224246,"line_start":27,"line_end":27,"column_start":1,"column_end":101}},{"value":"/ used as an `Interceptor`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224247,"byte_end":224276,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224277,"byte_end":224280,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ An interceptor can be used on both the server and client side through the `tonic-build` crate's","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224281,"byte_end":224380,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ generated structs.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224381,"byte_end":224403,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224404,"byte_end":224407,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ See the [interceptor example][example] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224408,"byte_end":224468,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224469,"byte_end":224472,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If you need more powerful middleware, [tower] is the recommended approach. You can find","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224473,"byte_end":224564,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ examples of how to use tower with tonic [here][tower-example].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224565,"byte_end":224631,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224632,"byte_end":224635,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Additionally, interceptors is not the recommended way to add logging to your service. For that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224636,"byte_end":224734,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ a [tower] middleware is more appropriate since it can also act on the response. For example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224735,"byte_end":224830,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ tower-http's [`Trace`](https://docs.rs/tower-http/latest/tower_http/trace/index.html)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224831,"byte_end":224920,"line_start":40,"line_end":40,"column_start":1,"column_end":90}},{"value":"/ middleware supports gRPC out of the box.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224921,"byte_end":224965,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224966,"byte_end":224969,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [tower]: https://crates.io/crates/tower","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":224970,"byte_end":225013,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ [example]: https://github.com/hyperium/tonic/tree/master/examples/src/interceptor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225014,"byte_end":225099,"line_start":44,"line_end":44,"column_start":1,"column_end":86}},{"value":"/ [tower-example]: https://github.com/hyperium/tonic/tree/master/examples/src/tower","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225100,"byte_end":225185,"line_start":45,"line_end":45,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225290,"byte_end":225294,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::service::interceptor::Interceptor::call","value":"fn call<'_>(&'_ mut Self, crate::Request<()>)\n-> Result<crate::Request<()>, Status>","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" Intercept a request before it is sent, optionally cancelling it.\n","sig":null,"attributes":[{"value":"/ Intercept a request before it is sent, optionally cancelling it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225214,"byte_end":225282,"line_start":47,"line_end":47,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225490,"byte_end":225494,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"call","qualname":"<F as service::interceptor::Interceptor>::call","value":"fn call<'_>(&'_ mut Self, crate::Request<()>)\n-> Result<crate::Request<()>, Status>","parent":{"krate":0,"index":1769},"children":[],"decl_id":{"krate":0,"index":1770},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225695,"byte_end":225706,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"interceptor","qualname":"::service::interceptor::interceptor","value":"fn interceptor<F>(F) -> InterceptorLayer<F> where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new interceptor layer.","sig":null,"attributes":[{"value":"/ Create a new interceptor layer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225606,"byte_end":225641,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225642,"byte_end":225645,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225646,"byte_end":225687,"line_start":62,"line_end":62,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225983,"byte_end":225997,"line_start":77,"line_end":77,"column_start":8,"column_end":22},"name":"interceptor_fn","qualname":"::service::interceptor::interceptor_fn","value":"fn interceptor_fn<F>(F) -> InterceptorLayer<F> where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new interceptor layer.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.1\", note =\n\"Please use the `interceptor` function instead\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225797,"byte_end":225893,"line_start":70,"line_end":73,"column_start":1,"column_end":3}},{"value":"/ Create a new interceptor layer.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225894,"byte_end":225929,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225930,"byte_end":225933,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225934,"byte_end":225975,"line_start":76,"line_end":76,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4141},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226263,"byte_end":226279,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"InterceptorLayer","qualname":"::service::interceptor::InterceptorLayer","value":"InterceptorLayer {  }","parent":null,"children":[{"krate":0,"index":4143}],"decl_id":null,"docs":" A gRPC interceptor that can be used as a [`Layer`],\n created by calling [`interceptor`].","sig":null,"attributes":[{"value":"/ A gRPC interceptor that can be used as a [`Layer`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226080,"byte_end":226135,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/ created by calling [`interceptor`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226136,"byte_end":226175,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226176,"byte_end":226179,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226180,"byte_end":226221,"line_start":87,"line_end":87,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226431,"byte_end":226436,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"layer","qualname":"<InterceptorLayer<F> as tower_layer::Layer>::layer","value":"fn layer<'_>(&'_ Self, S) -> Self::Service","parent":{"krate":41,"index":240},"children":[],"decl_id":{"krate":41,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226790,"byte_end":226803,"line_start":112,"line_end":112,"column_start":10,"column_end":23},"name":"InterceptorFn","qualname":"::service::interceptor::InterceptorFn","value":"InterceptorLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" A gRPC interceptor that can be used as a [`Layer`],\n created by calling [`interceptor`].","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.1\", note =\n\"Please use the `InterceptorLayer` type instead\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226541,"byte_end":226638,"line_start":104,"line_end":107,"column_start":1,"column_end":3}},{"value":"/ A gRPC interceptor that can be used as a [`Layer`],","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226639,"byte_end":226694,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/ created by calling [`interceptor`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226695,"byte_end":226734,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226735,"byte_end":226738,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226739,"byte_end":226780,"line_start":111,"line_end":111,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4152},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226963,"byte_end":226981,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"InterceptedService","qualname":"::service::interceptor::InterceptedService","value":"InterceptedService {  }","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4156}],"decl_id":null,"docs":" A service wrapped in an interceptor middleware.","sig":null,"attributes":[{"value":"/ A service wrapped in an interceptor middleware.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226831,"byte_end":226882,"line_start":114,"line_end":114,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226883,"byte_end":226886,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226887,"byte_end":226928,"line_start":116,"line_end":116,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227182,"byte_end":227185,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<InterceptedService<S, F>>::new","value":"fn new(S, F) -> Self where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new `InterceptedService` that wraps `S` and intercepts each request with the\n function `F`.\n","sig":null,"attributes":[{"value":"/ Create a new `InterceptedService` that wraps `S` and intercepts each request with the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227059,"byte_end":227148,"line_start":124,"line_end":124,"column_start":5,"column_end":94}},{"value":"/ function `F`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227153,"byte_end":227170,"line_start":125,"line_end":125,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227381,"byte_end":227384,"line_start":138,"line_end":138,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InterceptedService<S, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":228173,"byte_end":228183,"line_start":160,"line_end":160,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<InterceptedService<S, F> as tower_service::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":30,"index":13},"children":[],"decl_id":{"krate":30,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":228156,"byte_end":228165,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":228300,"byte_end":228304,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"call","qualname":"<InterceptedService<S, F> as tower_service::Service>::call","value":"fn call<'_>(&'_ mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":30,"index":13},"children":[],"decl_id":{"krate":30,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229790,"byte_end":229794,"line_start":196,"line_end":196,"column_start":11,"column_end":15},"name":"NAME","qualname":"::<service::interceptor::InterceptedService<S, F> as server::NamedService>::NAME","value":"&'static str","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229914,"byte_end":229928,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::service::interceptor::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4206}],"decl_id":null,"docs":" Response future for [`InterceptedService`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229871,"byte_end":229885,"line_start":200,"line_end":200,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229914,"byte_end":229928,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::service::interceptor::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229871,"byte_end":229885,"line_start":200,"line_end":200,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":230635,"byte_end":230639,"line_start":237,"line_end":237,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":2075},{"krate":0,"index":2500},{"krate":0,"index":2530},{"krate":0,"index":3155},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3177},{"krate":0,"index":3180},{"krate":0,"index":3183},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":3193},{"krate":0,"index":3196}],"decl_id":null,"docs":" Batteries included server and client.","sig":null,"attributes":[{"value":"cfg(feature = \"transport\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4475,"byte_end":4504,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/ Batteries included server and client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234310,"byte_end":234351,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234352,"byte_end":234355,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a set of batteries included, fully featured and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234356,"byte_end":234428,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ fast set of HTTP/2 server and client's. These components each provide a or","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234429,"byte_end":234507,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ `rustls` tls backend when the respective feature flag is enabled, and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234508,"byte_end":234581,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ provides builders to configure transport behavior.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234582,"byte_end":234636,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234637,"byte_end":234640,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234641,"byte_end":234655,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234656,"byte_end":234659,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - TLS support via [rustls].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234660,"byte_end":234691,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/ - Load balancing","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234692,"byte_end":234712,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/ - Timeouts","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234713,"byte_end":234727,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ - Concurrency Limits","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234728,"byte_end":234752,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ - Rate limiting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234753,"byte_end":234772,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234773,"byte_end":234776,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234777,"byte_end":234791,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234792,"byte_end":234795,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Client","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234796,"byte_end":234809,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234810,"byte_end":234813,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234814,"byte_end":234827,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Channel, Certificate, ClientTlsConfig};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234828,"byte_end":234896,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234897,"byte_end":234927,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # use tonic::body::BoxBody;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234928,"byte_end":234959,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ # use tonic::client::GrpcService;;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234960,"byte_end":234998,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ # use http::Request;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":234999,"byte_end":235023,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235024,"byte_end":235056,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235057,"byte_end":235126,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ let cert = std::fs::read_to_string(\"ca.pem\")?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235127,"byte_end":235177,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235178,"byte_end":235181,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut channel = Channel::from_static(\"https://example.com\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235182,"byte_end":235247,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/     .tls_config(ClientTlsConfig::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235248,"byte_end":235290,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/         .ca_certificate(Certificate::from_pem(&cert))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235291,"byte_end":235348,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/         .domain_name(\"example.com\".to_string()))?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235349,"byte_end":235402,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/     .timeout(Duration::from_secs(5))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235403,"byte_end":235443,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235444,"byte_end":235490,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/     .concurrency_limit(256)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235491,"byte_end":235522,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/     .connect()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235523,"byte_end":235541,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/     .await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235542,"byte_end":235558,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235559,"byte_end":235562,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ channel.call(Request::new(BoxBody::empty())).await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235563,"byte_end":235619,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235620,"byte_end":235632,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235633,"byte_end":235640,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235641,"byte_end":235648,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235649,"byte_end":235652,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235653,"byte_end":235666,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235667,"byte_end":235670,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235671,"byte_end":235684,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Server, Identity, ServerTlsConfig};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235685,"byte_end":235749,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ # use tower::{Service, service_fn};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235750,"byte_end":235789,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ # use futures_util::future::{err, ok};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235790,"byte_end":235832,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235833,"byte_end":235865,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235866,"byte_end":235935,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235936,"byte_end":235958,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ # pub struct Svc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235959,"byte_end":235980,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ # impl Service<hyper::Request<hyper::Body>> for Svc {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":235981,"byte_end":236038,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ #   type Response = hyper::Response<tonic::body::BoxBody>;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236039,"byte_end":236101,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ #   type Error = tonic::Status;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236102,"byte_end":236137,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Self::Response, Self::Error>>;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236138,"byte_end":236225,"line_start":58,"line_end":58,"column_start":1,"column_end":88}},{"value":"/ #   fn poll_ready(&mut self, _cx: &mut std::task::Context<'_>) -> std::task::Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236226,"byte_end":236338,"line_start":59,"line_end":59,"column_start":1,"column_end":113}},{"value":"/ #       Ok(()).into()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236339,"byte_end":236364,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ #  }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236365,"byte_end":236373,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"/ #   fn call(&mut self, _req: hyper::Request<hyper::Body>) -> Self::Future {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236374,"byte_end":236453,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ #       unimplemented!()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236454,"byte_end":236482,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/ #   }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236483,"byte_end":236492,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236493,"byte_end":236500,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # impl tonic::server::NamedService for Svc {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236501,"byte_end":236549,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ # const NAME: &'static str = \"some_svc\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236550,"byte_end":236594,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236595,"byte_end":236602,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # let my_svc = Svc;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236603,"byte_end":236626,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ let cert = std::fs::read_to_string(\"server.pem\")?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236627,"byte_end":236681,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/ let key = std::fs::read_to_string(\"server.key\")?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236682,"byte_end":236735,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236736,"byte_end":236739,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let addr = \"[::1]:50051\".parse()?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236740,"byte_end":236778,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236779,"byte_end":236782,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Server::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236783,"byte_end":236804,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     .tls_config(ServerTlsConfig::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236805,"byte_end":236847,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/         .identity(Identity::from_pem(&cert, &key)))?","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236848,"byte_end":236904,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/     .concurrency_limit_per_connection(256)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236905,"byte_end":236951,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/     .add_service(my_svc)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236952,"byte_end":236980,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/     .serve(addr)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":236981,"byte_end":237001,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237002,"byte_end":237018,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237019,"byte_end":237022,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237023,"byte_end":237035,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237036,"byte_end":237043,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237044,"byte_end":237051,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237052,"byte_end":237055,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [rustls]: https://docs.rs/rustls/0.16.0/rustls/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237056,"byte_end":237107,"line_start":87,"line_end":87,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2062},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2073}],"decl_id":null,"docs":" Client implementation and builder.\n","sig":null,"attributes":[{"value":"/ Client implementation and builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":238055,"byte_end":238093,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4252},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":246594,"byte_end":246602,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::transport::channel::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269}],"decl_id":null,"docs":" Channel builder.","sig":null,"attributes":[{"value":"/ Channel builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":246477,"byte_end":246497,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":246498,"byte_end":246501,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This struct is used to build and configure HTTP/2 channels.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":246502,"byte_end":246565,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247644,"byte_end":247647,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"fn new<D>(D) -> Result<Self, Error> where D: TryInto<Self>,\nD::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248148,"byte_end":248159,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Endpoint>::from_static","value":"fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from a static string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247864,"byte_end":247911,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247916,"byte_end":247919,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247924,"byte_end":247936,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247941,"byte_end":247944,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument is an invalid URI.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247949,"byte_end":248008,"line_start":57,"line_end":57,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248013,"byte_end":248016,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248021,"byte_end":248028,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248033,"byte_end":248070,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248075,"byte_end":248124,"line_start":61,"line_end":61,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248129,"byte_end":248136,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248457,"byte_end":248468,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Endpoint>::from_shared","value":"fn from_shared<impl Into<Bytes>>(impl Into<Bytes>) -> Result<Self, Error>\nwhere impl Into<Bytes>: Into<Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from shared bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248261,"byte_end":248305,"line_start":68,"line_end":68,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248310,"byte_end":248313,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248318,"byte_end":248325,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248330,"byte_end":248367,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_shared(\"https://example.com\".to_string());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248372,"byte_end":248433,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248438,"byte_end":248445,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249201,"byte_end":249211,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<Endpoint>::user_agent","value":"fn user_agent<T>(Self, T) -> Result<Self, Error> where T: TryInto<HeaderValue>","parent":null,"children":[],"decl_id":null,"docs":" Set a custom user-agent header.","sig":null,"attributes":[{"value":"/ Set a custom user-agent header.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248653,"byte_end":248688,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248693,"byte_end":248696,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ `user_agent` will be prepended to Tonic's default user-agent string (`tonic/x.x.x`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248701,"byte_end":248789,"line_start":81,"line_end":81,"column_start":5,"column_end":93}},{"value":"/ It must be a value that can be converted into a valid  `http::HeaderValue` or building","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248794,"byte_end":248884,"line_start":82,"line_end":82,"column_start":5,"column_end":95}},{"value":"/ the endpoint will fail.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248889,"byte_end":248916,"line_start":83,"line_end":83,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248921,"byte_end":248928,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248933,"byte_end":248970,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":248975,"byte_end":249044,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ builder.user_agent(\"Greeter\").expect(\"Greeter should be a valid header value\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249049,"byte_end":249132,"line_start":87,"line_end":87,"column_start":5,"column_end":88}},{"value":"/ // user-agent: \"Greeter tonic/x.x.x\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249137,"byte_end":249177,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249182,"byte_end":249189,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250073,"byte_end":250079,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"origin","qualname":"<Endpoint>::origin","value":"fn origin(Self, Uri) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a custom origin.","sig":null,"attributes":[{"value":"/ Set a custom origin.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249529,"byte_end":249553,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249558,"byte_end":249561,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Override the `origin`, mainly useful when you are reaching a Server/LoadBalancer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249566,"byte_end":249650,"line_start":105,"line_end":105,"column_start":5,"column_end":89}},{"value":"/ which serves multiple services at the same time.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249655,"byte_end":249707,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ It will play the role of SNI (Server Name Indication).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249712,"byte_end":249770,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249775,"byte_end":249778,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249783,"byte_end":249790,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249795,"byte_end":249832,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://proxy.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249837,"byte_end":249904,"line_start":111,"line_end":111,"column_start":5,"column_end":72}},{"value":"/ builder.origin(\"https://example.com\".parse().expect(\"http://example.com must be a valid URI\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":249909,"byte_end":250008,"line_start":112,"line_end":112,"column_start":5,"column_end":104}},{"value":"/ // origin: \"https://example.com\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250013,"byte_end":250049,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250054,"byte_end":250061,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250787,"byte_end":250794,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Endpoint>::timeout","value":"fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to each request.","sig":null,"attributes":[{"value":"/ Apply a timeout to each request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250202,"byte_end":250238,"line_start":122,"line_end":122,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250243,"byte_end":250246,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250251,"byte_end":250258,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250263,"byte_end":250300,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250305,"byte_end":250335,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250340,"byte_end":250409,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ builder.timeout(Duration::from_secs(5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250414,"byte_end":250458,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250463,"byte_end":250470,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250475,"byte_end":250478,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250483,"byte_end":250494,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250499,"byte_end":250502,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This does **not** set the timeout metadata (`grpc-timeout` header) on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250507,"byte_end":250580,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ the request, meaning the server will not be informed of this timeout,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250585,"byte_end":250658,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ for that use [`Request::set_timeout`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250663,"byte_end":250705,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250710,"byte_end":250713,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`Request::set_timeout`]: crate::Request::set_timeout","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250718,"byte_end":250775,"line_start":137,"line_end":137,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251254,"byte_end":251269,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Endpoint>::connect_timeout","value":"fn connect_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to connecting to the uri.","sig":null,"attributes":[{"value":"/ Apply a timeout to connecting to the uri.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250917,"byte_end":250962,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250967,"byte_end":250970,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Defaults to no timeout.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":250975,"byte_end":251002,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251007,"byte_end":251010,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251015,"byte_end":251022,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251027,"byte_end":251064,"line_start":150,"line_end":150,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251069,"byte_end":251099,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251104,"byte_end":251173,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ builder.connect_timeout(Duration::from_secs(5));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251178,"byte_end":251230,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251235,"byte_end":251242,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251725,"byte_end":251738,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Endpoint>::tcp_keepalive","value":"fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251400,"byte_end":251475,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251480,"byte_end":251483,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251488,"byte_end":251561,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251566,"byte_end":251640,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251645,"byte_end":251656,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251661,"byte_end":251664,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251669,"byte_end":251705,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251710,"byte_end":251713,"line_start":169,"line_end":169,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252120,"byte_end":252137,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"concurrency_limit","qualname":"<Endpoint>::concurrency_limit","value":"fn concurrency_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a concurrency limit to each request.","sig":null,"attributes":[{"value":"/ Apply a concurrency limit to each request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251874,"byte_end":251920,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251925,"byte_end":251928,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251933,"byte_end":251940,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251945,"byte_end":251982,"line_start":180,"line_end":180,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":251987,"byte_end":252056,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ builder.concurrency_limit(256);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252061,"byte_end":252096,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252101,"byte_end":252108,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252561,"byte_end":252571,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"rate_limit","qualname":"<Endpoint>::rate_limit","value":"fn rate_limit(Self, u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a rate limit to each request.","sig":null,"attributes":[{"value":"/ Apply a rate limit to each request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252271,"byte_end":252310,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252315,"byte_end":252318,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252323,"byte_end":252330,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252335,"byte_end":252372,"line_start":194,"line_end":194,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252377,"byte_end":252407,"line_start":195,"line_end":195,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252412,"byte_end":252481,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/ builder.rate_limit(32, Duration::from_secs(1));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252486,"byte_end":252537,"line_start":197,"line_end":197,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252542,"byte_end":252549,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252966,"byte_end":252992,"line_start":212,"line_end":212,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Endpoint>::initial_stream_window_size","value":"fn initial_stream_window_size<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252728,"byte_end":252796,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252801,"byte_end":252831,"line_start":207,"line_end":207,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252836,"byte_end":252839,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252844,"byte_end":252865,"line_start":209,"line_end":209,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252870,"byte_end":252873,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":252878,"byte_end":252954,"line_start":211,"line_end":211,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":253246,"byte_end":253276,"line_start":222,"line_end":222,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Endpoint>::initial_connection_window_size","value":"fn initial_connection_window_size<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":253144,"byte_end":253200,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":253205,"byte_end":253208,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":253213,"byte_end":253234,"line_start":221,"line_end":221,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":253961,"byte_end":253972,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Endpoint>::tcp_nodelay","value":"fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":253862,"byte_end":253949,"line_start":243,"line_end":243,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254177,"byte_end":254202,"line_start":252,"line_end":252,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Endpoint>::http2_keep_alive_interval","value":"fn http2_keep_alive_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254097,"byte_end":254165,"line_start":251,"line_end":251,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254432,"byte_end":254450,"line_start":260,"line_end":260,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Endpoint>::keep_alive_timeout","value":"fn keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254353,"byte_end":254420,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254682,"byte_end":254703,"line_start":268,"line_end":268,"column_start":12,"column_end":33},"name":"keep_alive_while_idle","qualname":"<Endpoint>::keep_alive_while_idle","value":"fn keep_alive_while_idle(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254600,"byte_end":254670,"line_start":267,"line_end":267,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254945,"byte_end":254966,"line_start":276,"line_end":276,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Endpoint>::http2_adaptive_window","value":"fn http2_adaptive_window(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control. Uses `hyper`'s default otherwise.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":254850,"byte_end":254933,"line_start":275,"line_end":275,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":255215,"byte_end":255223,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"executor","qualname":"<Endpoint>::executor","value":"fn executor<E>(Self, E) -> Self where\nE: Executor<Pin<Box<dyn Future<Output = ()> + Send>>> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the executor used to spawn async tasks.","sig":null,"attributes":[{"value":"/ Sets the executor used to spawn async tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":255107,"byte_end":255155,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":255160,"byte_end":255163,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Uses `tokio::spawn` by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":255168,"byte_end":255203,"line_start":285,"line_end":285,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":255492,"byte_end":255499,"line_start":295,"line_end":295,"column_start":18,"column_end":25},"name":"connect","qualname":"<Endpoint>::connect","value":"async fn connect<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.\n","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":255436,"byte_end":255474,"line_start":294,"line_end":294,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":256458,"byte_end":256470,"line_start":320,"line_end":320,"column_start":12,"column_end":24},"name":"connect_lazy","qualname":"<Endpoint>::connect_lazy","value":"fn connect_lazy<'_>(&'_ Self) -> Channel","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":256287,"byte_end":256325,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":256330,"byte_end":256333,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The channel returned by this method does not attempt to connect to the endpoint until first","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":256338,"byte_end":256433,"line_start":318,"line_end":318,"column_start":5,"column_end":100}},{"value":"/ use.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":256438,"byte_end":256446,"line_start":319,"line_end":319,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257606,"byte_end":257628,"line_start":348,"line_end":348,"column_start":18,"column_end":40},"name":"connect_with_connector","qualname":"<Endpoint>::connect_with_connector","value":"async fn connect_with_connector<C, '_>(&'_ Self, C) -> /*impl Trait*/ where\nC: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector.","sig":null,"attributes":[{"value":"/ Connect with a custom connector.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257223,"byte_end":257259,"line_start":341,"line_end":341,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257264,"byte_end":257267,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257272,"byte_end":257365,"line_start":343,"line_end":343,"column_start":5,"column_end":98}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257370,"byte_end":257460,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257465,"byte_end":257498,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257503,"byte_end":257506,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ The [`connect_timeout`](Endpoint::connect_timeout) will still be applied.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":257511,"byte_end":257588,"line_start":347,"line_end":347,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258778,"byte_end":258805,"line_start":377,"line_end":377,"column_start":12,"column_end":39},"name":"connect_with_connector_lazy","qualname":"<Endpoint>::connect_with_connector_lazy","value":"fn connect_with_connector_lazy<C, '_>(&'_ Self, C) -> Channel where\nC: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector lazily.","sig":null,"attributes":[{"value":"/ Connect with a custom connector lazily.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258447,"byte_end":258490,"line_start":370,"line_end":370,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258495,"byte_end":258498,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258503,"byte_end":258595,"line_start":372,"line_end":372,"column_start":5,"column_end":97}},{"value":"/ connect to it lazily.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258600,"byte_end":258625,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258630,"byte_end":258633,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258638,"byte_end":258728,"line_start":375,"line_end":375,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":258733,"byte_end":258766,"line_start":376,"line_end":376,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259590,"byte_end":259593,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"uri","qualname":"<Endpoint>::uri","value":"fn uri<'_>(&'_ Self) -> &'_ Uri","parent":null,"children":[],"decl_id":null,"docs":" Get the endpoint uri.","sig":null,"attributes":[{"value":"/ Get the endpoint uri.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259299,"byte_end":259324,"line_start":393,"line_end":393,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259329,"byte_end":259332,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259337,"byte_end":259344,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259349,"byte_end":259386,"line_start":396,"line_end":396,"column_start":5,"column_end":42}},{"value":"/ # use http::Uri;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259391,"byte_end":259411,"line_start":397,"line_end":397,"column_start":5,"column_end":25}},{"value":"/ let endpoint = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259416,"byte_end":259480,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259485,"byte_end":259488,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(endpoint.uri(), &Uri::from_static(\"https://example.com\"));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259493,"byte_end":259566,"line_start":400,"line_end":400,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259571,"byte_end":259578,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259675,"byte_end":259679,"line_start":408,"line_end":408,"column_start":8,"column_end":12},"name":"from","qualname":"<Endpoint as std::convert::From>::from","value":"fn from(Uri) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260467,"byte_end":260475,"line_start":436,"line_end":436,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Endpoint as std::convert::TryFrom>::try_from","value":"fn try_from(Bytes) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260623,"byte_end":260631,"line_start":444,"line_end":444,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Endpoint as std::convert::TryFrom>::try_from","value":"fn try_from(String) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260799,"byte_end":260807,"line_start":452,"line_end":452,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Endpoint as std::convert::TryFrom>::try_from","value":"fn try_from(&'static str) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260943,"byte_end":260946,"line_start":458,"line_end":458,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Endpoint as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":261110,"byte_end":261118,"line_start":466,"line_end":466,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Endpoint as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12996},"children":[],"decl_id":{"krate":2,"index":12998},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240302,"byte_end":240309,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":4273}],"decl_id":null,"docs":" A default batteries included `transport` channel.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` channel.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239026,"byte_end":239079,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239080,"byte_end":239083,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This provides a fully featured http2 gRPC client based on [`hyper::Client`]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239084,"byte_end":239163,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ and `tower` services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239164,"byte_end":239189,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239190,"byte_end":239193,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Multiplexing requests","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239194,"byte_end":239221,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239222,"byte_end":239225,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Sending a request on a channel requires a `&mut self` and thus can only send","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239226,"byte_end":239306,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ one request in flight. This is intentional and is required to follow the `Service`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239307,"byte_end":239393,"line_start":53,"line_end":53,"column_start":1,"column_end":87}},{"value":"/ contract from the `tower` library which this channel implementation is built on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239394,"byte_end":239477,"line_start":54,"line_end":54,"column_start":1,"column_end":84}},{"value":"/ top of.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239478,"byte_end":239489,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239490,"byte_end":239493,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `tower` itself has a concept of `poll_ready` which is the main mechanism to apply","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239494,"byte_end":239579,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ back pressure. `poll_ready` takes a `&mut self` and when it returns `Poll::Ready`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239580,"byte_end":239665,"line_start":58,"line_end":58,"column_start":1,"column_end":86}},{"value":"/ we know the `Service` is able to accept only one request before we must `poll_ready`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239666,"byte_end":239754,"line_start":59,"line_end":59,"column_start":1,"column_end":89}},{"value":"/ again. Due to this fact any `async fn` that wants to poll for readiness and submit","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239755,"byte_end":239841,"line_start":60,"line_end":60,"column_start":1,"column_end":87}},{"value":"/ the request must have a `&mut self` reference.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239842,"byte_end":239892,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239893,"byte_end":239896,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ To work around this and to ease the use of the channel, `Channel` provides a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239897,"byte_end":239977,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ `Clone` implementation that is _cheap_. This is because at the very top level","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":239978,"byte_end":240059,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ the channel is backed by a `tower_buffer::Buffer` which runs the connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240060,"byte_end":240139,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ in a background task and provides a `mpsc` channel interface. Due to this","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240140,"byte_end":240217,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ cloning the `Channel` type is cheap and encouraged.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240218,"byte_end":240273,"line_start":67,"line_end":67,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240478,"byte_end":240492,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::transport::channel::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":2039}],"decl_id":null,"docs":" A future that resolves to an HTTP response.","sig":null,"attributes":[{"value":"/ A future that resolves to an HTTP response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240355,"byte_end":240402,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240403,"byte_end":240406,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This is returned by the `Service::call` on [`Channel`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240407,"byte_end":240466,"line_start":75,"line_end":75,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240680,"byte_end":240687,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"builder","qualname":"<Channel>::builder","value":"fn builder(Uri) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Endpoint`] builder that can create [`Channel`]s.\n","sig":null,"attributes":[{"value":"/ Create an [`Endpoint`] builder that can create [`Channel`]s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240604,"byte_end":240668,"line_start":81,"line_end":81,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240937,"byte_end":240948,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Channel>::from_static","value":"fn from_static(&'static str) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Endpoint`] from a static string.","sig":null,"attributes":[{"value":"/ Create an [`Endpoint`] from a static string.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240751,"byte_end":240799,"line_start":86,"line_end":86,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240804,"byte_end":240807,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240812,"byte_end":240819,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240824,"byte_end":240860,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ Channel::from_static(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240865,"byte_end":240913,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240918,"byte_end":240925,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241240,"byte_end":241251,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Channel>::from_shared","value":"fn from_shared<impl Into<Bytes>>(impl Into<Bytes>)\n-> Result<Endpoint, InvalidUri> where impl Into<Bytes>: Into<Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Endpoint`] from shared bytes.","sig":null,"attributes":[{"value":"/ Create an [`Endpoint`] from shared bytes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241057,"byte_end":241102,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241107,"byte_end":241110,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241115,"byte_end":241122,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241127,"byte_end":241163,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/ Channel::from_shared(\"https://example.com\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241168,"byte_end":241216,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241221,"byte_end":241228,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241560,"byte_end":241572,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"balance_list","qualname":"<Channel>::balance_list","value":"fn balance_list<impl Iterator<Item = Endpoint>>(impl Iterator<Item = Endpoint>)\n-> Self where impl Iterator<Item = Endpoint>: Iterator<Item = Endpoint>","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241402,"byte_end":241439,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241444,"byte_end":241447,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will load balance across all the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241452,"byte_end":241520,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ provided endpoints.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241525,"byte_end":241548,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242048,"byte_end":242063,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"balance_channel","qualname":"<Channel>::balance_channel","value":"fn balance_channel<K>(usize) -> (Self, Sender<Change<K, Endpoint>>) where\nK: Hash + Eq + Send + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241867,"byte_end":241904,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241909,"byte_end":241912,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":241917,"byte_end":242036,"line_start":124,"line_end":124,"column_start":5,"column_end":124}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242535,"byte_end":242564,"line_start":137,"line_end":137,"column_start":12,"column_end":41},"name":"balance_channel_with_executor","qualname":"<Channel>::balance_channel_with_executor","value":"fn balance_channel_with_executor<K, E>(usize, E)\n-> (Self, Sender<Change<K, Endpoint>>) where K: Hash + Eq + Send + Clone +\n'static, E: Executor<Pin<Box<dyn Future<Output = ()> + Send>>> + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242272,"byte_end":242309,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242314,"byte_end":242317,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242322,"byte_end":242441,"line_start":134,"line_end":134,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242446,"byte_end":242449,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The [`Channel`] will use the given executor to spawn async tasks.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":242454,"byte_end":242523,"line_start":136,"line_end":136,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245075,"byte_end":245085,"line_start":208,"line_end":208,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Channel as tower_service::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":30,"index":13},"children":[],"decl_id":{"krate":30,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245250,"byte_end":245254,"line_start":212,"line_end":212,"column_start":8,"column_end":12},"name":"call","qualname":"<Channel as tower_service::Service>::call","value":"fn call<'_>(&'_ mut Self, http::Request<BoxBody>) -> Self::Future","parent":{"krate":30,"index":13},"children":[],"decl_id":{"krate":30,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245523,"byte_end":245527,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245794,"byte_end":245797,"line_start":230,"line_end":230,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Channel as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245946,"byte_end":245949,"line_start":236,"line_end":236,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ResponseFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::transport::server","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2101},{"krate":0,"index":2169},{"krate":0,"index":2236},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2337},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2361},{"krate":0,"index":2364},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":4383},{"krate":0,"index":4399},{"krate":0,"index":2377},{"krate":0,"index":4402},{"krate":0,"index":4406},{"krate":0,"index":2379},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2463},{"krate":0,"index":4448},{"krate":0,"index":4409},{"krate":0,"index":2471},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2489}],"decl_id":null,"docs":" Server implementation and builder.\n","sig":null,"attributes":[{"value":"/ Server implementation and builder.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":261204,"byte_end":261242,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291339,"byte_end":291348,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"Connected","qualname":"::transport::server::conn::Connected","value":"Connected","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088}],"decl_id":null,"docs":" Trait that connected IO resources implement and use to produce info about the connection.","sig":null,"attributes":[{"value":"/ Trait that connected IO resources implement and use to produce info about the connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290198,"byte_end":290291,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290292,"byte_end":290295,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The goal for this trait is to allow users to implement","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290296,"byte_end":290354,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ custom IO types that can still provide the same connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290355,"byte_end":290417,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290418,"byte_end":290431,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290432,"byte_end":290435,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290436,"byte_end":290449,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290450,"byte_end":290453,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `ConnectInfo` returned will be accessible through [request extensions][ext]:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290454,"byte_end":290538,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290539,"byte_end":290542,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290543,"byte_end":290550,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tonic::{Request, transport::server::Connected};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290551,"byte_end":290606,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290607,"byte_end":290610,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // A `Stream` that yields connections","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290611,"byte_end":290652,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ struct MyConnector {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290653,"byte_end":290678,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290679,"byte_end":290682,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Return metadata about the connection as `MyConnectInfo`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290683,"byte_end":290745,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ impl Connected for MyConnector {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290746,"byte_end":290782,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/     type ConnectInfo = MyConnectInfo;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290783,"byte_end":290824,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290825,"byte_end":290828,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     fn connect_info(&self) -> Self::ConnectInfo {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290829,"byte_end":290882,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/         MyConnectInfo {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290883,"byte_end":290911,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290912,"byte_end":290921,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290922,"byte_end":290927,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290928,"byte_end":290931,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290932,"byte_end":290952,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/ struct MyConnectInfo {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290953,"byte_end":290979,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/     // Metadata about your connection","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":290980,"byte_end":291021,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291022,"byte_end":291027,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291028,"byte_end":291031,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // The connect info can be accessed through request extensions:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291032,"byte_end":291099,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ # fn foo(request: Request<()>) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291100,"byte_end":291136,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ let connect_info: &MyConnectInfo = request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291137,"byte_end":291183,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     .extensions()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291184,"byte_end":291205,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     .get::<MyConnectInfo>()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291206,"byte_end":291237,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/     .expect(\"bug in tonic\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291238,"byte_end":291270,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291271,"byte_end":291278,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291279,"byte_end":291286,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291287,"byte_end":291290,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291291,"byte_end":291328,"line_start":51,"line_end":51,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291494,"byte_end":291505,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"ConnectInfo","qualname":"::transport::server::conn::Connected::ConnectInfo","value":"type ConnectInfo: Clone + Send + Sync + 'static;","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The connection info type the IO resources generates.\n","sig":null,"attributes":[{"value":"/ The connection info type the IO resources generates.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291355,"byte_end":291411,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291608,"byte_end":291620,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"connect_info","qualname":"::transport::server::conn::Connected::connect_info","value":"fn connect_info<'_>(&'_ Self) -> Self::ConnectInfo","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Create type holding information about the connection.\n","sig":null,"attributes":[{"value":"/ Create type holding information about the connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291543,"byte_end":291600,"line_start":57,"line_end":57,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291942,"byte_end":291956,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"TcpConnectInfo","qualname":"::transport::server::conn::TcpConnectInfo","value":"TcpConnectInfo {  }","parent":null,"children":[{"krate":0,"index":4277},{"krate":0,"index":4278}],"decl_id":null,"docs":" Connection info for standard TCP streams.","sig":null,"attributes":[{"value":"/ Connection info for standard TCP streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291653,"byte_end":291698,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291699,"byte_end":291702,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type will be accessible through [request extensions][ext] if you're using the default","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291703,"byte_end":291797,"line_start":63,"line_end":63,"column_start":1,"column_end":95}},{"value":"/ non-TLS connector.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291798,"byte_end":291820,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291821,"byte_end":291824,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ See [`Connected`] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291825,"byte_end":291864,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291865,"byte_end":291868,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":291869,"byte_end":291906,"line_start":68,"line_end":68,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292131,"byte_end":292141,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpConnectInfo>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Return the local address the IO resource is connected.\n","sig":null,"attributes":[{"value":"/ Return the local address the IO resource is connected.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292061,"byte_end":292119,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292283,"byte_end":292294,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<TcpConnectInfo>::remote_addr","value":"fn remote_addr<'_>(&'_ Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Return the remote address the IO resource is connected too.\n","sig":null,"attributes":[{"value":"/ Return the remote address the IO resource is connected too.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292208,"byte_end":292271,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292439,"byte_end":292451,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"connect_info","qualname":"<AddrStream as transport::server::conn::Connected>::connect_info","value":"fn connect_info<'_>(&'_ Self) -> Self::ConnectInfo","parent":{"krate":0,"index":2086},"children":[],"decl_id":{"krate":0,"index":2088},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292704,"byte_end":292716,"line_start":101,"line_end":101,"column_start":8,"column_end":20},"name":"connect_info","qualname":"<TcpStream as transport::server::conn::Connected>::connect_info","value":"fn connect_info<'_>(&'_ Self) -> Self::ConnectInfo","parent":{"krate":0,"index":2086},"children":[],"decl_id":{"krate":0,"index":2088},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292967,"byte_end":292979,"line_start":112,"line_end":112,"column_start":8,"column_end":20},"name":"connect_info","qualname":"<tokio::io::DuplexStream as transport::server::conn::Connected>::connect_info","value":"fn connect_info<'_>(&'_ Self) -> Self::ConnectInfo","parent":{"krate":0,"index":2086},"children":[],"decl_id":{"krate":0,"index":2088},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298318,"byte_end":298329,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"TcpIncoming","qualname":"::transport::server::incoming::TcpIncoming","value":"TcpIncoming {  }","parent":null,"children":[{"krate":0,"index":4284}],"decl_id":null,"docs":" Binds a socket address for a [Router](super::Router)","sig":null,"attributes":[{"value":"/ Binds a socket address for a [Router](super::Router)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298030,"byte_end":298086,"line_start":127,"line_end":127,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298087,"byte_end":298090,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ An incoming stream, usable with [Router::serve_with_incoming](super::Router::serve_with_incoming),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298091,"byte_end":298193,"line_start":129,"line_end":129,"column_start":1,"column_end":103}},{"value":"/ of `AsyncRead + AsyncWrite` that communicate with clients that connect to a socket address.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298194,"byte_end":298289,"line_start":130,"line_end":130,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299739,"byte_end":299742,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpIncoming>::new","value":"fn new(SocketAddr, bool, Option<Duration>) -> Result<Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance by binding (opening) the specified socket address\n to which the specified TCP 'nodelay' and 'keepalive' parameters are applied.\n Returns a TcpIncoming if the socket address was successfully bound.","sig":null,"attributes":[{"value":"/ Creates an instance by binding (opening) the specified socket address","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298383,"byte_end":298456,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ to which the specified TCP 'nodelay' and 'keepalive' parameters are applied.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298461,"byte_end":298541,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ Returns a TcpIncoming if the socket address was successfully bound.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298546,"byte_end":298617,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298622,"byte_end":298625,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298630,"byte_end":298644,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298649,"byte_end":298662,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298667,"byte_end":298700,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/ # use http::{request::Request, response::Response};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298705,"byte_end":298760,"line_start":144,"line_end":144,"column_start":5,"column_end":60}},{"value":"/ # use tonic::{body::BoxBody, server::NamedService, transport::{Body, Server, server::TcpIncoming}};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298765,"byte_end":298868,"line_start":145,"line_end":145,"column_start":5,"column_end":108}},{"value":"/ # use core::convert::Infallible;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298873,"byte_end":298909,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298914,"byte_end":298942,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ # fn main() { }  // Cannot have type parameters, hence instead define:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298947,"byte_end":299021,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ # fn run<S>(some_service: S) -> Result<(), Box<dyn Error + Send + Sync>>","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299026,"byte_end":299102,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ # where","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299107,"byte_end":299118,"line_start":150,"line_end":150,"column_start":5,"column_end":16}},{"value":"/ #   S: Service<Request<Body>, Response = Response<BoxBody>, Error = Infallible> + NamedService + Clone + Send + 'static,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299123,"byte_end":299247,"line_start":151,"line_end":151,"column_start":5,"column_end":129}},{"value":"/ #   S::Future: Send + 'static,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299252,"byte_end":299286,"line_start":152,"line_end":152,"column_start":5,"column_end":39}},{"value":"/ # {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299291,"byte_end":299298,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ // Find a free port","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299303,"byte_end":299326,"line_start":154,"line_end":154,"column_start":5,"column_end":28}},{"value":"/ let mut port = 1322;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299331,"byte_end":299355,"line_start":155,"line_end":155,"column_start":5,"column_end":29}},{"value":"/ let tinc = loop {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299360,"byte_end":299381,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/    let addr = format!(\"127.0.0.1:{}\", port).parse().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299386,"byte_end":299451,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/    match TcpIncoming::new(addr, true, None) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299456,"byte_end":299505,"line_start":158,"line_end":158,"column_start":5,"column_end":54}},{"value":"/       Ok(t) => break t,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299510,"byte_end":299537,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/       Err(_) => port += 1","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299542,"byte_end":299571,"line_start":160,"line_end":160,"column_start":5,"column_end":34}},{"value":"/    }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299576,"byte_end":299584,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/ };","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299589,"byte_end":299595,"line_start":162,"line_end":162,"column_start":5,"column_end":11}},{"value":"/ Server::builder()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299600,"byte_end":299621,"line_start":163,"line_end":163,"column_start":5,"column_end":26}},{"value":"/    .add_service(some_service)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299626,"byte_end":299659,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/    .serve_with_incoming(tinc);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299664,"byte_end":299698,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299703,"byte_end":299715,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":299720,"byte_end":299727,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":300128,"byte_end":300141,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<TcpIncoming>::from_listener","value":"fn from_listener(TcpListener, bool, Option<Duration>)\n-> Result<Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpIncoming` from an existing `tokio::net::TcpListener`.\n","sig":null,"attributes":[{"value":"/ Creates a new `TcpIncoming` from an existing `tokio::net::TcpListener`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":300041,"byte_end":300116,"line_start":179,"line_end":179,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":300545,"byte_end":300554,"line_start":195,"line_end":195,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TcpIncoming as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":26,"index":96},"children":[],"decl_id":{"krate":26,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4376},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304933,"byte_end":304947,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"UdsConnectInfo","qualname":"::transport::server::unix::UdsConnectInfo","value":"UdsConnectInfo { peer_addr, peer_cred }","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4378}],"decl_id":null,"docs":" Connection info for Unix domain socket streams.","sig":null,"attributes":[{"value":"/ Connection info for Unix domain socket streams.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304567,"byte_end":304618,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304619,"byte_end":304622,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This type will be accessible through [request extensions][ext] if you're using","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304623,"byte_end":304705,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ a unix stream.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304706,"byte_end":304724,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304725,"byte_end":304728,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [Connected] for more details.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304729,"byte_end":304766,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304767,"byte_end":304770,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304771,"byte_end":304808,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/ [Connected]: crate::transport::server::Connected","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304809,"byte_end":304861,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4377},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":305028,"byte_end":305037,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"name":"peer_addr","qualname":"::transport::server::unix::UdsConnectInfo::peer_addr","value":"std::option::Option<std::sync::Arc<tokio::net::unix::SocketAddr>>","parent":{"krate":0,"index":4376},"children":[],"decl_id":null,"docs":" Peer address. This will be \"unnamed\" for client unix sockets.\n","sig":null,"attributes":[{"value":"/ Peer address. This will be \"unnamed\" for client unix sockets.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":304954,"byte_end":305019,"line_start":16,"line_end":16,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4378},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":305139,"byte_end":305148,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"peer_cred","qualname":"::transport::server::unix::UdsConnectInfo::peer_cred","value":"std::option::Option<tokio::net::unix::UCred>","parent":{"krate":0,"index":4376},"children":[],"decl_id":null,"docs":" Process credentials for the unix socket.\n","sig":null,"attributes":[{"value":"/ Process credentials for the unix socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":305086,"byte_end":305130,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":305277,"byte_end":305289,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"connect_info","qualname":"<tokio::net::UnixStream as transport::server::conn::Connected>::connect_info","value":"fn connect_info<'_>(&'_ Self) -> Self::ConnectInfo","parent":{"krate":0,"index":2086},"children":[],"decl_id":{"krate":0,"index":2088},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":263461,"byte_end":263467,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"Server","qualname":"::transport::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398}],"decl_id":null,"docs":" A default batteries included `transport` server.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` server.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":262908,"byte_end":262960,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":262961,"byte_end":262964,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around [`hyper::Server`] and provides an easy builder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":262965,"byte_end":263040,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ pattern style builder [`Server`]. This builder exposes easy configuration parameters","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":263041,"byte_end":263129,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ for providing a fully featured http2 based gRPC server. This should provide","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":263130,"byte_end":263209,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ a very good out of the box http2 server for use with tonic but is also a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":263210,"byte_end":263286,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ reference implementation that should be a good starting point for anyone","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":263287,"byte_end":263363,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ wanting to create a more complex and/or specific implementation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":263364,"byte_end":263432,"line_start":78,"line_end":78,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264128,"byte_end":264135,"line_start":100,"line_end":100,"column_start":8,"column_end":15},"name":"default","qualname":"<Server<Identity> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264847,"byte_end":264853,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"Router","qualname":"::transport::server::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4405}],"decl_id":null,"docs":" A stack based `Service` router.\n","sig":null,"attributes":[{"value":"/ A stack based `Service` router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264783,"byte_end":264818,"line_start":122,"line_end":122,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264983,"byte_end":264987,"line_start":130,"line_end":130,"column_start":11,"column_end":15},"name":"NAME","qualname":"::transport::server::<impl server::NamedService for tower::util::Either<S, T>>::NAME","value":"&'static str","parent":{"krate":0,"index":2379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265110,"byte_end":265117,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server>::builder","value":"fn builder() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new server builder that can configure a [`Server`].\n","sig":null,"attributes":[{"value":"/ Create a new server builder that can configure a [`Server`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265034,"byte_end":265098,"line_start":134,"line_end":134,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265960,"byte_end":265992,"line_start":166,"line_end":166,"column_start":12,"column_end":44},"name":"concurrency_limit_per_connection","qualname":"<Server<L>>::concurrency_limit_per_connection","value":"fn concurrency_limit_per_connection(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the concurrency limit applied to on requests inbound per connection.","sig":null,"attributes":[{"value":"/ Set the concurrency limit applied to on requests inbound per connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265623,"byte_end":265699,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265704,"byte_end":265707,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265712,"byte_end":265725,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265730,"byte_end":265733,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265738,"byte_end":265745,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265750,"byte_end":265785,"line_start":160,"line_end":160,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265790,"byte_end":265823,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/ # let builder = Server::builder();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265828,"byte_end":265866,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/ builder.concurrency_limit_per_connection(32);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265871,"byte_end":265920,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265925,"byte_end":265932,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265937,"byte_end":265948,"line_start":165,"line_end":165,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266462,"byte_end":266469,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Server<L>>::timeout","value":"fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout on for all request handlers.","sig":null,"attributes":[{"value":"/ Set a timeout on for all request handlers.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266124,"byte_end":266170,"line_start":173,"line_end":173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266175,"byte_end":266178,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266183,"byte_end":266196,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266201,"byte_end":266204,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266209,"byte_end":266216,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266221,"byte_end":266256,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266261,"byte_end":266294,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266299,"byte_end":266329,"line_start":180,"line_end":180,"column_start":5,"column_end":35}},{"value":"/ # let builder = Server::builder();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266334,"byte_end":266372,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ builder.timeout(Duration::from_secs(30));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266377,"byte_end":266422,"line_start":182,"line_end":182,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266427,"byte_end":266434,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266439,"byte_end":266450,"line_start":184,"line_end":184,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266852,"byte_end":266878,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Server<L>>::initial_stream_window_size","value":"fn initial_stream_window_size<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266598,"byte_end":266666,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266671,"byte_end":266701,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266706,"byte_end":266709,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266714,"byte_end":266735,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266740,"byte_end":266743,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266748,"byte_end":266824,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":266829,"byte_end":266840,"line_start":198,"line_end":198,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267146,"byte_end":267176,"line_start":210,"line_end":210,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Server<L>>::initial_connection_window_size","value":"fn initial_connection_window_size<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267028,"byte_end":267084,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267089,"byte_end":267092,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267097,"byte_end":267118,"line_start":208,"line_end":208,"column_start":5,"column_end":26}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267123,"byte_end":267134,"line_start":209,"line_end":209,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267588,"byte_end":267610,"line_start":224,"line_end":224,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Server<L>>::max_concurrent_streams","value":"fn max_concurrent_streams<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267330,"byte_end":267401,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267406,"byte_end":267422,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267427,"byte_end":267430,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`None`).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267435,"byte_end":267468,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267473,"byte_end":267476,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267481,"byte_end":267560,"line_start":222,"line_end":222,"column_start":5,"column_end":84}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267565,"byte_end":267576,"line_start":223,"line_end":223,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268221,"byte_end":268245,"line_start":241,"line_end":241,"column_start":12,"column_end":36},"name":"http2_keepalive_interval","qualname":"<Server<L>>::http2_keepalive_interval","value":"fn http2_keepalive_interval(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP2 Ping frames are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether HTTP2 Ping frames are enabled on accepted connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267761,"byte_end":267831,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267836,"byte_end":267839,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, HTTP2 keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267844,"byte_end":267923,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ specified will be the time interval between HTTP2 Ping frames.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267928,"byte_end":267994,"line_start":234,"line_end":234,"column_start":5,"column_end":71}},{"value":"/ The timeout for receiving an acknowledgement of the keepalive ping","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":267999,"byte_end":268069,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ can be set with [`Server::http2_keepalive_timeout`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268074,"byte_end":268130,"line_start":236,"line_end":236,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268135,"byte_end":268138,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Default is no HTTP2 keepalive (`None`)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268143,"byte_end":268185,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268190,"byte_end":268193,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268198,"byte_end":268209,"line_start":240,"line_end":240,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268712,"byte_end":268735,"line_start":256,"line_end":256,"column_start":12,"column_end":35},"name":"http2_keepalive_timeout","qualname":"<Server<L>>::http2_keepalive_timeout","value":"fn http2_keepalive_timeout(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keepalive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keepalive ping.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268401,"byte_end":268475,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268480,"byte_end":268483,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will be closed.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268488,"byte_end":268574,"line_start":250,"line_end":250,"column_start":5,"column_end":91}},{"value":"/ Does nothing if http2_keep_alive_interval is disabled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268579,"byte_end":268637,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268642,"byte_end":268645,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268650,"byte_end":268676,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268681,"byte_end":268684,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268689,"byte_end":268700,"line_start":255,"line_end":255,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269122,"byte_end":269143,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Server<L>>::http2_adaptive_window","value":"fn http2_adaptive_window(Self, Option<bool>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control. Defaults to false.\n Enabling this will override the limits set in http2_initial_stream_window_size and\n http2_initial_connection_window_size.\n","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control. Defaults to false.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268889,"byte_end":268957,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ Enabling this will override the limits set in http2_initial_stream_window_size and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":268962,"byte_end":269048,"line_start":264,"line_end":264,"column_start":5,"column_end":91}},{"value":"/ http2_initial_connection_window_size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269053,"byte_end":269094,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269099,"byte_end":269110,"line_start":266,"line_end":266,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269625,"byte_end":269638,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Server<L>>::tcp_keepalive","value":"fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269284,"byte_end":269359,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269364,"byte_end":269367,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269372,"byte_end":269445,"line_start":276,"line_end":276,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269450,"byte_end":269524,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269529,"byte_end":269540,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269545,"byte_end":269548,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269553,"byte_end":269589,"line_start":280,"line_end":280,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269594,"byte_end":269597,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269602,"byte_end":269613,"line_start":282,"line_end":282,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269887,"byte_end":269898,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Server<L>>::tcp_nodelay","value":"fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269772,"byte_end":269859,"line_start":290,"line_end":290,"column_start":5,"column_end":92}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":269864,"byte_end":269875,"line_start":291,"line_end":291,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270214,"byte_end":270228,"line_start":305,"line_end":305,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Server<L>>::max_frame_size","value":"fn max_frame_size<impl Into<Option<u32>>>(Self, impl Into<Option<u32>>)\n-> Self where impl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270021,"byte_end":270070,"line_start":299,"line_end":299,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270075,"byte_end":270078,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270083,"byte_end":270118,"line_start":301,"line_end":301,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270123,"byte_end":270126,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ If not set, will default from underlying transport.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270131,"byte_end":270186,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270191,"byte_end":270202,"line_start":304,"line_end":304,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270789,"byte_end":270801,"line_start":321,"line_end":321,"column_start":12,"column_end":24},"name":"accept_http1","qualname":"<Server<L>>::accept_http1","value":"fn accept_http1(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allow this server to accept http1 requests.","sig":null,"attributes":[{"value":"/ Allow this server to accept http1 requests.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270385,"byte_end":270432,"line_start":312,"line_end":312,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270437,"byte_end":270440,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Accepting http1 requests is only useful when developing `grpc-web`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270445,"byte_end":270515,"line_start":314,"line_end":314,"column_start":5,"column_end":75}},{"value":"/ enabled services. If this setting is set to `true` but services are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270520,"byte_end":270591,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/ not correctly configured to handle grpc-web requests, your server may","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270596,"byte_end":270669,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ return confusing (but correct) protocol errors.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270674,"byte_end":270725,"line_start":317,"line_end":317,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270730,"byte_end":270733,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270738,"byte_end":270761,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270766,"byte_end":270777,"line_start":320,"line_end":320,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271031,"byte_end":271039,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"trace_fn","qualname":"<Server<L>>::trace_fn","value":"fn trace_fn<F>(Self, F) -> Self where F: for<'_> Fn(&'_ http::Request<()>) ->\ntracing::Span + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Intercept inbound headers and add a [`tracing::Span`] to each response future.\n","sig":null,"attributes":[{"value":"/ Intercept inbound headers and add a [`tracing::Span`] to each response future.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":270921,"byte_end":271003,"line_start":328,"line_end":328,"column_start":5,"column_end":87}},{"value":"must_use","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271008,"byte_end":271019,"line_start":329,"line_end":329,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271466,"byte_end":271477,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Server<L>>::add_service","value":"fn add_service<S, '_>(&'_ mut Self, S) -> Router<L> where\nS: Service<Request<Body>, Response = Response<BoxBody>, Error = Infallible> +\nNamedService + Clone + Send + 'static, S::Future: Send + 'static, L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the `S` typed service as the first service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271262,"byte_end":271330,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271335,"byte_end":271338,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271343,"byte_end":271413,"line_start":342,"line_end":342,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271418,"byte_end":271454,"line_start":343,"line_end":343,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272254,"byte_end":272274,"line_start":365,"line_end":365,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Server<L>>::add_optional_service","value":"fn add_optional_service<S, '_>(&'_ mut Self, Option<S>) -> Router<L> where\nS: Service<Request<Body>, Response = Response<BoxBody>, Error = Infallible> +\nNamedService + Clone + Send + 'static, S::Future: Send + 'static, L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the optional `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the optional `S` typed service as the first service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271818,"byte_end":271895,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271900,"byte_end":271903,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271908,"byte_end":271978,"line_start":359,"line_end":359,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":271983,"byte_end":272019,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272024,"byte_end":272027,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272032,"byte_end":272042,"line_start":362,"line_end":362,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272047,"byte_end":272144,"line_start":363,"line_end":363,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272149,"byte_end":272242,"line_start":364,"line_end":364,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274728,"byte_end":274733,"line_start":440,"line_end":440,"column_start":12,"column_end":17},"name":"layer","qualname":"<Server<L>>::layer","value":"fn layer<NewLayer>(Self, NewLayer) -> Server<Stack<NewLayer, L>>","parent":null,"children":[],"decl_id":null,"docs":" Set the [Tower] [`Layer`] all services will be wrapped in.","sig":null,"attributes":[{"value":"/ Set the [Tower] [`Layer`] all services will be wrapped in.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272676,"byte_end":272738,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272743,"byte_end":272746,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ This enables using middleware from the [Tower ecosystem][eco].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272751,"byte_end":272817,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272822,"byte_end":272825,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272830,"byte_end":272843,"line_start":383,"line_end":383,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272848,"byte_end":272851,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272856,"byte_end":272863,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272868,"byte_end":272903,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272908,"byte_end":272941,"line_start":387,"line_end":387,"column_start":5,"column_end":38}},{"value":"/ use tower::timeout::TimeoutLayer;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272946,"byte_end":272983,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":272988,"byte_end":273016,"line_start":389,"line_end":389,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273021,"byte_end":273024,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273029,"byte_end":273071,"line_start":391,"line_end":391,"column_start":5,"column_end":47}},{"value":"/ builder.layer(TimeoutLayer::new(Duration::from_secs(30)));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273076,"byte_end":273138,"line_start":392,"line_end":392,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273143,"byte_end":273150,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273155,"byte_end":273158,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Note that timeouts should be set using [`Server::timeout`]. `TimeoutLayer` is only used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273163,"byte_end":273254,"line_start":395,"line_end":395,"column_start":5,"column_end":96}},{"value":"/ here as an example.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273259,"byte_end":273282,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273287,"byte_end":273290,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ You can build more complex layers using [`ServiceBuilder`]. Those layers can include","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273295,"byte_end":273383,"line_start":398,"line_end":398,"column_start":5,"column_end":93}},{"value":"/ [interceptors]:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273388,"byte_end":273407,"line_start":399,"line_end":399,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273412,"byte_end":273415,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273420,"byte_end":273427,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273432,"byte_end":273467,"line_start":402,"line_end":402,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273472,"byte_end":273505,"line_start":403,"line_end":403,"column_start":5,"column_end":38}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273510,"byte_end":273540,"line_start":404,"line_end":404,"column_start":5,"column_end":35}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273545,"byte_end":273573,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/ use tonic::{Request, Status, service::interceptor};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273578,"byte_end":273633,"line_start":406,"line_end":406,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273638,"byte_end":273641,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ fn auth_interceptor(request: Request<()>) -> Result<Request<()>, Status> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273646,"byte_end":273724,"line_start":408,"line_end":408,"column_start":5,"column_end":83}},{"value":"/     if valid_credentials(&request) {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273729,"byte_end":273769,"line_start":409,"line_end":409,"column_start":5,"column_end":45}},{"value":"/         Ok(request)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273774,"byte_end":273797,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273802,"byte_end":273818,"line_start":411,"line_end":411,"column_start":5,"column_end":21}},{"value":"/         Err(Status::unauthenticated(\"invalid credentials\"))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273823,"byte_end":273886,"line_start":412,"line_end":412,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273891,"byte_end":273900,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273905,"byte_end":273910,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273915,"byte_end":273918,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ fn valid_credentials(request: &Request<()>) -> bool {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273923,"byte_end":273980,"line_start":416,"line_end":416,"column_start":5,"column_end":62}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":273985,"byte_end":273999,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/     # true","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274004,"byte_end":274018,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274023,"byte_end":274028,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274033,"byte_end":274036,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ fn some_other_interceptor(request: Request<()>) -> Result<Request<()>, Status> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274041,"byte_end":274125,"line_start":421,"line_end":421,"column_start":5,"column_end":89}},{"value":"/     Ok(request)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274130,"byte_end":274149,"line_start":422,"line_end":422,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274154,"byte_end":274159,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274164,"byte_end":274167,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let layer = ServiceBuilder::new()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274172,"byte_end":274209,"line_start":425,"line_end":425,"column_start":5,"column_end":42}},{"value":"/     .load_shed()","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274214,"byte_end":274234,"line_start":426,"line_end":426,"column_start":5,"column_end":25}},{"value":"/     .timeout(Duration::from_secs(30))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274239,"byte_end":274280,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/     .layer(interceptor(auth_interceptor))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274285,"byte_end":274330,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/     .layer(interceptor(some_other_interceptor))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274335,"byte_end":274386,"line_start":429,"line_end":429,"column_start":5,"column_end":56}},{"value":"/     .into_inner();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274391,"byte_end":274413,"line_start":430,"line_end":430,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274418,"byte_end":274421,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Server::builder().layer(layer);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274426,"byte_end":274461,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274466,"byte_end":274473,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274478,"byte_end":274481,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ [Tower]: https://github.com/tower-rs/tower","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274486,"byte_end":274532,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"/ [`Layer`]: tower::layer::Layer","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274537,"byte_end":274571,"line_start":436,"line_end":436,"column_start":5,"column_end":39}},{"value":"/ [eco]: https://github.com/tower-rs","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274576,"byte_end":274614,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ [`ServiceBuilder`]: tower::ServiceBuilder","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274619,"byte_end":274664,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/ [interceptors]: crate::service::Interceptor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":274669,"byte_end":274716,"line_start":439,"line_end":439,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":278774,"byte_end":278785,"line_start":540,"line_end":540,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Router<L>>::add_service","value":"fn add_service<S>(Self, S) -> Self where S: Service<Request<Body>, Response =\nResponse<BoxBody>, Error = Infallible> + NamedService + Clone + Send +\n'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a new service to this router.\n","sig":null,"attributes":[{"value":"/ Add a new service to this router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":278725,"byte_end":278762,"line_start":539,"line_end":539,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279434,"byte_end":279454,"line_start":559,"line_end":559,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Router<L>>::add_optional_service","value":"fn add_optional_service<S>(Self, Option<S>) -> Self where\nS: Service<Request<Body>, Response = Response<BoxBody>, Error = Infallible> +\nNamedService + Clone + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a new optional service to this router.","sig":null,"attributes":[{"value":"/ Add a new optional service to this router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279115,"byte_end":279161,"line_start":553,"line_end":553,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279166,"byte_end":279169,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279174,"byte_end":279184,"line_start":555,"line_end":555,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279189,"byte_end":279286,"line_start":556,"line_end":556,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279291,"byte_end":279384,"line_start":557,"line_end":557,"column_start":5,"column_end":98}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279389,"byte_end":279422,"line_start":558,"line_end":558,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":280056,"byte_end":280061,"line_start":579,"line_end":579,"column_start":18,"column_end":23},"name":"serve","qualname":"<Router<L>>::serve","value":"async fn serve<ResBody>(Self, SocketAddr) -> /*impl Trait*/ where\nL: Layer<Routes>, L::Service: Service<Request<Body>, Response =\nResponse<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [tokio]'s default executor.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279839,"byte_end":279913,"line_start":574,"line_end":574,"column_start":5,"column_end":79}},{"value":"/ on [tokio]'s default executor.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279918,"byte_end":279952,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279957,"byte_end":279960,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":279965,"byte_end":279999,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/ [tokio]: https://docs.rs/tokio","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":280004,"byte_end":280038,"line_start":578,"line_end":578,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":281216,"byte_end":281235,"line_start":605,"line_end":605,"column_start":18,"column_end":37},"name":"serve_with_shutdown","qualname":"<Router<L>>::serve_with_shutdown","value":"async fn serve_with_shutdown<F, ResBody>(Self, SocketAddr, F)\n-> /*impl Trait*/ where F: Future<Output = ()>, L: Layer<Routes>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [tokio]'s default executor. And shutdown when the provided signal\n is received.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":280940,"byte_end":281014,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/ on [tokio]'s default executor. And shutdown when the provided signal","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":281019,"byte_end":281091,"line_start":600,"line_end":600,"column_start":5,"column_end":77}},{"value":"/ is received.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":281096,"byte_end":281112,"line_start":601,"line_end":601,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":281117,"byte_end":281120,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":281125,"byte_end":281159,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [tokio]: https://docs.rs/tokio","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":281164,"byte_end":281198,"line_start":604,"line_end":604,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":282291,"byte_end":282310,"line_start":629,"line_end":629,"column_start":18,"column_end":37},"name":"serve_with_incoming","qualname":"<Router<L>>::serve_with_incoming","value":"async fn serve_with_incoming<I, IO, IE, ResBody>(Self, I) -> /*impl Trait*/\nwhere I: Stream<Item = Result<IO, IE>>, IO: AsyncRead + AsyncWrite +\nConnected + Unpin + Send + 'static, IO::ConnectInfo: Clone + Send + Sync +\n'static, IE: Into<crate::Error>, L: Layer<Routes>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":282083,"byte_end":282160,"line_start":625,"line_end":625,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":282165,"byte_end":282226,"line_start":626,"line_end":626,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":282231,"byte_end":282234,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":282239,"byte_end":282273,"line_start":628,"line_end":628,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283608,"byte_end":283636,"line_start":660,"line_end":660,"column_start":18,"column_end":46},"name":"serve_with_incoming_shutdown","qualname":"<Router<L>>::serve_with_incoming_shutdown","value":"async fn serve_with_incoming_shutdown<I, IO, IE, F, ResBody>(Self, I, F)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IO::ConnectInfo: Clone +\nSend + Sync + 'static, IE: Into<crate::Error>, F: Future<Output = ()>,\nL: Layer<Routes>, L::Service: Service<Request<Body>, Response =\nResponse<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to\n `serve_with_shutdown` this method will also take a signal future to\n gracefully shutdown the server.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283273,"byte_end":283350,"line_start":654,"line_end":654,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283355,"byte_end":283427,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ `serve_with_shutdown` this method will also take a signal future to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283432,"byte_end":283503,"line_start":656,"line_end":656,"column_start":5,"column_end":76}},{"value":"/ gracefully shutdown the server.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283508,"byte_end":283543,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283548,"byte_end":283551,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":283556,"byte_end":283590,"line_start":659,"line_end":659,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":284611,"byte_end":284623,"line_start":684,"line_end":684,"column_start":12,"column_end":24},"name":"into_service","qualname":"<Router<L>>::into_service","value":"fn into_service<ResBody>(Self) -> L::Service where L: Layer<Routes>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a tower service out of a router.\n","sig":null,"attributes":[{"value":"/ Create a tower service out of a router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":284556,"byte_end":284599,"line_start":683,"line_end":683,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":285213,"byte_end":285216,"line_start":698,"line_end":698,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Server<L> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":305636,"byte_end":305641,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Error","qualname":"::transport::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2510}],"decl_id":null,"docs":" Error's that originate from the client or server;\n","sig":null,"attributes":[{"value":"/ Error's that originate from the client or server;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":305571,"byte_end":305624,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":306734,"byte_end":306737,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":307045,"byte_end":307048,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":307183,"byte_end":307189,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source<'_>(&'_ Self) -> Option<&'_ dyn StdError + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2577},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325684,"byte_end":325698,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"TimeoutExpired","qualname":"::transport::service::grpc_timeout::TimeoutExpired","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned if a request didn't complete within the configured timeout.","sig":null,"attributes":[{"value":"/ Error returned if a request didn't complete within the configured timeout.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325207,"byte_end":325285,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325286,"byte_end":325289,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Timeouts can be configured either with [`Endpoint::timeout`], [`Server::timeout`], or by","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325290,"byte_end":325382,"line_start":156,"line_end":156,"column_start":1,"column_end":93}},{"value":"/ setting the [`grpc-timeout` metadata value][spec].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325383,"byte_end":325437,"line_start":157,"line_end":157,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325438,"byte_end":325441,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`Endpoint::timeout`]: crate::transport::server::Server::timeout","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325442,"byte_end":325510,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/ [`Server::timeout`]: crate::transport::channel::Endpoint::timeout","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325511,"byte_end":325580,"line_start":160,"line_end":160,"column_start":1,"column_end":70}},{"value":"/ [spec]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325581,"byte_end":325655,"line_start":161,"line_end":161,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325751,"byte_end":325754,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TimeoutExpired as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4858},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":340728,"byte_end":340734,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Routes","qualname":"::transport::service::router::Routes","value":"Routes {  }","parent":null,"children":[{"krate":0,"index":4859}],"decl_id":null,"docs":" A [`Service`] router.\n","sig":null,"attributes":[{"value":"/ A [`Service`] router.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":340658,"byte_end":340683,"line_start":18,"line_end":18,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342430,"byte_end":342440,"line_start":77,"line_end":77,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Routes as tower_service::Service>::poll_ready","value":"fn poll_ready<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":30,"index":13},"children":[],"decl_id":{"krate":30,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342413,"byte_end":342422,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342550,"byte_end":342554,"line_start":81,"line_end":81,"column_start":8,"column_end":12},"name":"call","qualname":"<Routes as tower_service::Service>::call","value":"fn call<'_>(&'_ mut Self, Request<Body>) -> Self::Future","parent":{"krate":30,"index":13},"children":[],"decl_id":{"krate":30,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4896},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342683,"byte_end":342695,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"RoutesFuture","qualname":"::transport::service::router::RoutesFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342657,"byte_end":342671,"line_start":86,"line_end":86,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342683,"byte_end":342695,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"__RoutesFuture","qualname":"::transport::service::router::_::__RoutesFuture","value":"__RoutesFuture {  }","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342657,"byte_end":342671,"line_start":86,"line_end":86,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342801,"byte_end":342804,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RoutesFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":343011,"byte_end":343015,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"poll","qualname":"<RoutesFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13770},"children":[],"decl_id":{"krate":2,"index":13772},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4906},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345224,"byte_end":345235,"line_start":3,"line_end":3,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::transport::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":4907}],"decl_id":null,"docs":" Represents a X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a X509 certificate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345154,"byte_end":345188,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345666,"byte_end":345674,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"fn from_pem<impl AsRef<[u8]>>(impl AsRef<[u8]>) -> Self where\nimpl AsRef<[u8]>: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded X509 Certificate.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded X509 Certificate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345527,"byte_end":345568,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345573,"byte_end":345576,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The provided PEM should include at least one PEM encoded certificate.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345581,"byte_end":345654,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345846,"byte_end":345853,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Certificate>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to underlying certificate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345779,"byte_end":345834,"line_start":25,"line_end":25,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345976,"byte_end":345983,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Certificate>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to underlying certificate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345911,"byte_end":345964,"line_start":30,"line_end":30,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":346116,"byte_end":346126,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Certificate>::into_inner","value":"fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the underlying certificate\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the underlying certificate","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":346047,"byte_end":346104,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":346214,"byte_end":346220,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Certificate as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4912},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346955,"byte_end":346965,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Extensions","qualname":"::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":4913}],"decl_id":null,"docs":" A type map of protocol extensions.","sig":null,"attributes":[{"value":"/ A type map of protocol extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346671,"byte_end":346709,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346710,"byte_end":346713,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `Extensions` can be used by [`Interceptor`] and [`Request`] to store extra data derived from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346714,"byte_end":346810,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ the underlying protocol.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346811,"byte_end":346839,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346840,"byte_end":346843,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Interceptor`]: crate::service::Interceptor","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346844,"byte_end":346892,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Request`]: crate::Request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":346893,"byte_end":346924,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347289,"byte_end":347295,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"insert","qualname":"<Extensions>::insert","value":"fn insert<T, '_>(&'_ mut Self, T) -> Option<T> where T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Insert a type into this `Extensions`.","sig":null,"attributes":[{"value":"/ Insert a type into this `Extensions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347132,"byte_end":347173,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347178,"byte_end":347181,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type already existed, it will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347186,"byte_end":347242,"line_start":24,"line_end":24,"column_start":5,"column_end":61}},{"value":"/ be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347247,"byte_end":347263,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347268,"byte_end":347277,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347495,"byte_end":347498,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"get","qualname":"<Extensions>::get","value":"fn get<T, '_>(&'_ Self) -> Option<&'_ T> where T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a type previously inserted on this `Extensions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347398,"byte_end":347469,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347474,"byte_end":347483,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347689,"byte_end":347696,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Extensions>::get_mut","value":"fn get_mut<T, '_>(&'_ mut Self) -> Option<&'_ mut T> where T: Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this `Extensions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347584,"byte_end":347663,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347668,"byte_end":347677,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347935,"byte_end":347941,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"remove","qualname":"<Extensions>::remove","value":"fn remove<T, '_>(&'_ mut Self) -> Option<T> where T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Remove a type from this `Extensions`.","sig":null,"attributes":[{"value":"/ Remove a type from this `Extensions`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347794,"byte_end":347835,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347840,"byte_end":347843,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type existed, it will be returned.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347848,"byte_end":347909,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347914,"byte_end":347923,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348113,"byte_end":348118,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"clear","qualname":"<Extensions>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `Extensions` of all inserted extensions.\n","sig":null,"attributes":[{"value":"/ Clear the `Extensions` of all inserted extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348033,"byte_end":348087,"line_start":51,"line_end":51,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348092,"byte_end":348101,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348359,"byte_end":348368,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"into_http","qualname":"<Extensions>::into_http","value":"fn into_http(Self) -> http::Extensions","parent":null,"children":[],"decl_id":null,"docs":" Convert to `http::Extensions` and consume self.\n","sig":null,"attributes":[{"value":"/ Convert to `http::Extensions` and consume self.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348282,"byte_end":348333,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348338,"byte_end":348347,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348465,"byte_end":348468,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Extensions as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4916},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348638,"byte_end":348648,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"GrpcMethod","qualname":"::extensions::GrpcMethod","value":"GrpcMethod {  }","parent":null,"children":[{"krate":0,"index":4917},{"krate":0,"index":4918}],"decl_id":null,"docs":" A gRPC Method info extension.\n","sig":null,"attributes":[{"value":"/ A gRPC Method info extension.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348576,"byte_end":348609,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348800,"byte_end":348803,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<GrpcMethod>::new","value":"fn new(&'static str, &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GrpcMethod` extension.\n","sig":null,"attributes":[{"value":"/ Create a new `GrpcMethod` extension.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348729,"byte_end":348769,"line_start":83,"line_end":83,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348936,"byte_end":348943,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"service","qualname":"<GrpcMethod>::service","value":"fn service<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" gRPC service name\n","sig":null,"attributes":[{"value":"/ gRPC service name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348903,"byte_end":348924,"line_start":89,"line_end":89,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":349024,"byte_end":349030,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"method","qualname":"<GrpcMethod>::method","value":"fn method<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" gRPC method name\n","sig":null,"attributes":[{"value":"/ gRPC method name","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348992,"byte_end":349012,"line_start":93,"line_end":93,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352188,"byte_end":352195,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925}],"decl_id":null,"docs":" A gRPC request and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC request and metadata from an RPC call.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352110,"byte_end":352159,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353197,"byte_end":353208,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IntoRequest","qualname":"::request::IntoRequest","value":"IntoRequest<T>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3258}],"decl_id":null,"docs":" Trait implemented by RPC request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC request types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352275,"byte_end":352318,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352319,"byte_end":352322,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client RPC","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352323,"byte_end":352395,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ methods without explicitly wrapping them into `tonic::Request`s. The purpose","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352396,"byte_end":352476,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ is to make client calls slightly more convenient to write.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352477,"byte_end":352539,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352540,"byte_end":352543,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352544,"byte_end":352620,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352621,"byte_end":352681,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352682,"byte_end":352685,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352686,"byte_end":352699,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352700,"byte_end":352703,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC method definition:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352704,"byte_end":352751,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ ```proto","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352752,"byte_end":352764,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ rpc GetFeature(Point) returns (Feature) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352765,"byte_end":352811,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352812,"byte_end":352819,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352820,"byte_end":352823,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ we can call `get_feature` in two equivalent ways:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352824,"byte_end":352877,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352878,"byte_end":352889,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # pub struct Point {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352890,"byte_end":352915,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/ # pub struct Client {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352916,"byte_end":352942,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ # impl Client {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352943,"byte_end":352962,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ #   fn get_feature(&self, r: impl tonic::IntoRequest<Point>) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":352963,"byte_end":353030,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353031,"byte_end":353038,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353039,"byte_end":353068,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353069,"byte_end":353092,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353093,"byte_end":353096,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ client.get_feature(Point {});","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353097,"byte_end":353130,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ client.get_feature(Request::new(Point {}));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353131,"byte_end":353178,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353179,"byte_end":353186,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353294,"byte_end":353306,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"into_request","qualname":"::request::IntoRequest::into_request","value":"fn into_request(Self) -> Request<T>","parent":{"krate":0,"index":3256},"children":[],"decl_id":null,"docs":" Wrap the input message `T` in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the input message `T` in a `tonic::Request`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353234,"byte_end":353286,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354457,"byte_end":354477,"line_start":87,"line_end":87,"column_start":11,"column_end":31},"name":"IntoStreamingRequest","qualname":"::request::IntoStreamingRequest","value":"IntoStreamingRequest: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262}],"decl_id":null,"docs":" Trait implemented by RPC streaming request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC streaming request types.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353331,"byte_end":353384,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353385,"byte_end":353388,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client streaming","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353389,"byte_end":353467,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ RPC methods without explicitly wrapping them into `tonic::Request`s. The","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353468,"byte_end":353544,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ purpose is to make client calls slightly more convenient to write.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353545,"byte_end":353615,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353616,"byte_end":353619,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353620,"byte_end":353696,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353697,"byte_end":353757,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353758,"byte_end":353761,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353762,"byte_end":353775,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353776,"byte_end":353779,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC service method definition:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353780,"byte_end":353835,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/ ```proto","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353836,"byte_end":353848,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/ rpc RecordRoute(stream Point) returns (RouteSummary) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353849,"byte_end":353908,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353909,"byte_end":353916,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ we can call `record_route` in two equivalent ways:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353917,"byte_end":353971,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353972,"byte_end":353975,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353976,"byte_end":353987,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353988,"byte_end":354010,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ # pub struct Point {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354011,"byte_end":354037,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/ # pub struct Client {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354038,"byte_end":354065,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ # impl Client {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354066,"byte_end":354085,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ #   fn record_route(&self, r: impl tonic::IntoStreamingRequest<Message = Point>) {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354086,"byte_end":354173,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354174,"byte_end":354181,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354182,"byte_end":354211,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354212,"byte_end":354235,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ use futures_util::stream;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354236,"byte_end":354265,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354266,"byte_end":354269,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let messages = vec![Point {}, Point {}];","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354270,"byte_end":354314,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354315,"byte_end":354318,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ client.record_route(Request::new(stream::iter(messages.clone())));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354319,"byte_end":354389,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ client.record_route(stream::iter(messages));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354390,"byte_end":354438,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354439,"byte_end":354446,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354541,"byte_end":354547,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"Stream","qualname":"::request::IntoStreamingRequest::Stream","value":"type Stream: Stream<Item = Self::Message> + Send + 'static;","parent":{"krate":0,"index":3259},"children":[],"decl_id":null,"docs":" The RPC request stream type\n","sig":null,"attributes":[{"value":"/ The RPC request stream type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354500,"byte_end":354531,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354635,"byte_end":354642,"line_start":92,"line_end":92,"column_start":10,"column_end":17},"name":"Message","qualname":"::request::IntoStreamingRequest::Message","value":"type Message;","parent":{"krate":0,"index":3259},"children":[],"decl_id":null,"docs":" The RPC request type\n","sig":null,"attributes":[{"value":"/ The RPC request type","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354601,"byte_end":354625,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354710,"byte_end":354732,"line_start":95,"line_end":95,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"::request::IntoStreamingRequest::into_streaming_request","value":"fn into_streaming_request(Self) -> Request<Self::Stream>","parent":{"krate":0,"index":3259},"children":[],"decl_id":null,"docs":" Wrap the stream of messages in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the stream of messages in a `tonic::Request`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354649,"byte_end":354702,"line_start":94,"line_end":94,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355058,"byte_end":355061,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Request<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC request.","sig":null,"attributes":[{"value":"/ Create a new gRPC request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354793,"byte_end":354823,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354828,"byte_end":354831,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354836,"byte_end":354847,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Request;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354852,"byte_end":354877,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/ # pub struct HelloRequest {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354882,"byte_end":354913,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ #   pub name: String,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354918,"byte_end":354943,"line_start":104,"line_end":104,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354948,"byte_end":354955,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ Request::new(HelloRequest {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354960,"byte_end":354991,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/    name: \"Bob\".into(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354996,"byte_end":355022,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355027,"byte_end":355034,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355039,"byte_end":355046,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355275,"byte_end":355282,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Request<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the message\n","sig":null,"attributes":[{"value":"/ Get a reference to the message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355229,"byte_end":355263,"line_start":118,"line_end":118,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355385,"byte_end":355392,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Request<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355331,"byte_end":355373,"line_start":123,"line_end":123,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355516,"byte_end":355524,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Request<T>>::metadata","value":"fn metadata<'_>(&'_ Self) -> &'_ MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom request metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom request metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355453,"byte_end":355504,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355648,"byte_end":355660,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Request<T>>::metadata_mut","value":"fn metadata_mut<'_>(&'_ mut Self) -> &'_ mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the request metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the request metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355584,"byte_end":355636,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355786,"byte_end":355796,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Request<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355732,"byte_end":355774,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355909,"byte_end":355919,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Request<T>>::into_parts","value":"fn into_parts(Self) -> (MetadataMap, Extensions, T)","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` returning the parts of the request.\n","sig":null,"attributes":[{"value":"/ Consumes `self` returning the parts of the request.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":355842,"byte_end":355897,"line_start":143,"line_end":143,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":356106,"byte_end":356116,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Request<T>>::from_parts","value":"fn from_parts(MetadataMap, Extensions, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC request from metadata, extensions and message.\n","sig":null,"attributes":[{"value":"/ Create a new gRPC request from metadata, extensions and message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":356026,"byte_end":356094,"line_start":148,"line_end":148,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":356616,"byte_end":356625,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"from_http","qualname":"<Request<T>>::from_http","value":"fn from_http(http::Request<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP request to a gRPC request\n","sig":null,"attributes":[{"value":"/ Convert an HTTP request to a gRPC request","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":356559,"byte_end":356604,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357472,"byte_end":357475,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"map","qualname":"<Request<T>>::map","value":"fn map<F, U>(Self, F) -> Request<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357977,"byte_end":357987,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Request<T>>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this connection.","sig":null,"attributes":[{"value":"/ Get the local address of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357729,"byte_end":357774,"line_start":206,"line_end":206,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357779,"byte_end":357782,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This will return `None` if the `IO` type used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357787,"byte_end":357836,"line_start":208,"line_end":208,"column_start":5,"column_end":54}},{"value":"/ does not implement `Connected` or when using a unix domain socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357841,"byte_end":357911,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ This currently only works on the server side.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":357916,"byte_end":357965,"line_start":210,"line_end":210,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":359046,"byte_end":359057,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Request<T>>::remote_addr","value":"fn remote_addr<'_>(&'_ Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of this connection.","sig":null,"attributes":[{"value":"/ Get the remote address of this connection.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":358797,"byte_end":358843,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":358848,"byte_end":358851,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This will return `None` if the `IO` type used","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":358856,"byte_end":358905,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/ does not implement `Connected` or when using a unix domain socket.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":358910,"byte_end":358980,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/ This currently only works on the server side.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":358985,"byte_end":359034,"line_start":244,"line_end":244,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360266,"byte_end":360276,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"peer_certs","qualname":"<Request<T>>::peer_certs","value":"fn peer_certs<'_>(&'_ Self) -> Option<Arc<Vec<Certificate>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the peer certificates of the connected client.","sig":null,"attributes":[{"value":"/ Get the peer certificates of the connected client.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":359870,"byte_end":359924,"line_start":274,"line_end":274,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":359929,"byte_end":359932,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ This is used to fetch the certificates from the TLS session","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":359937,"byte_end":360000,"line_start":276,"line_end":276,"column_start":5,"column_end":68}},{"value":"/ and is mostly used for mTLS. This currently only returns","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360005,"byte_end":360065,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/ `Some` on the server side of the `transport` server with","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360070,"byte_end":360130,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/ TLS enabled connections.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360135,"byte_end":360163,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"transport\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360168,"byte_end":360197,"line_start":280,"line_end":280,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361397,"byte_end":361408,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"set_timeout","qualname":"<Request<T>>::set_timeout","value":"fn set_timeout<'_>(&'_ mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Set the max duration the request is allowed to take.","sig":null,"attributes":[{"value":"/ Set the max duration the request is allowed to take.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360590,"byte_end":360646,"line_start":296,"line_end":296,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360651,"byte_end":360654,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Requires the server to support the `grpc-timeout` metadata, which Tonic does.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360659,"byte_end":360740,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360745,"byte_end":360748,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The duration will be formatted according to [the spec] and use the most precise unit","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360753,"byte_end":360841,"line_start":300,"line_end":300,"column_start":5,"column_end":93}},{"value":"/ possible.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360846,"byte_end":360859,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360864,"byte_end":360867,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360872,"byte_end":360884,"line_start":303,"line_end":303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360889,"byte_end":360892,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360897,"byte_end":360908,"line_start":305,"line_end":305,"column_start":5,"column_end":16}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360913,"byte_end":360941,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/ use tonic::Request;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360946,"byte_end":360969,"line_start":307,"line_end":307,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360974,"byte_end":360977,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut request = Request::new(());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":360982,"byte_end":361021,"line_start":309,"line_end":309,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361026,"byte_end":361029,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ request.set_timeout(Duration::from_secs(30));","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361034,"byte_end":361083,"line_start":311,"line_end":311,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361088,"byte_end":361091,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let value = request.metadata().get(\"grpc-timeout\").unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361096,"byte_end":361160,"line_start":313,"line_end":313,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361165,"byte_end":361168,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361173,"byte_end":361188,"line_start":315,"line_end":315,"column_start":5,"column_end":20}},{"value":"/     value,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361193,"byte_end":361207,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/     // equivalent to 30 seconds","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361212,"byte_end":361247,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     \"30000000u\"","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361252,"byte_end":361271,"line_start":318,"line_end":318,"column_start":5,"column_end":24}},{"value":"/ );","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361276,"byte_end":361282,"line_start":319,"line_end":319,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361287,"byte_end":361294,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361299,"byte_end":361302,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [the spec]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361307,"byte_end":361385,"line_start":322,"line_end":322,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361703,"byte_end":361713,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Request<T>>::extensions","value":"fn extensions<'_>(&'_ Self) -> &'_ Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361638,"byte_end":361691,"line_start":329,"line_end":329,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363089,"byte_end":363103,"line_start":379,"line_end":379,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Request<T>>::extensions_mut","value":"fn extensions_mut<'_>(&'_ mut Self) -> &'_ mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361774,"byte_end":361835,"line_start":334,"line_end":334,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361840,"byte_end":361843,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361848,"byte_end":361861,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361866,"byte_end":361869,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Extensions can be set in interceptors:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361874,"byte_end":361916,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361921,"byte_end":361924,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361929,"byte_end":361942,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ use tonic::{Request, service::interceptor};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361947,"byte_end":361994,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":361999,"byte_end":362002,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ struct MyExtension {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362007,"byte_end":362031,"line_start":343,"line_end":343,"column_start":5,"column_end":29}},{"value":"/     some_piece_of_data: String,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362036,"byte_end":362071,"line_start":344,"line_end":344,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362076,"byte_end":362081,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362086,"byte_end":362089,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ interceptor(|mut request: Request<()>| {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362094,"byte_end":362138,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/     request.extensions_mut().insert(MyExtension {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362143,"byte_end":362196,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/         some_piece_of_data: \"foo\".to_string(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362201,"byte_end":362251,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362256,"byte_end":362267,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362272,"byte_end":362275,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     Ok(request)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362280,"byte_end":362299,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362304,"byte_end":362311,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362316,"byte_end":362323,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362328,"byte_end":362331,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ And picked up by RPCs:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362336,"byte_end":362362,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362367,"byte_end":362370,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362375,"byte_end":362388,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ use tonic::{async_trait, Status, Request, Response};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362393,"byte_end":362449,"line_start":359,"line_end":359,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362454,"byte_end":362459,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ # struct Output {}","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362464,"byte_end":362486,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/ # struct Input;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362491,"byte_end":362510,"line_start":362,"line_end":362,"column_start":5,"column_end":24}},{"value":"/ # struct MyService;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362515,"byte_end":362538,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/ # struct MyExtension;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362543,"byte_end":362568,"line_start":364,"line_end":364,"column_start":5,"column_end":30}},{"value":"/ # #[async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362573,"byte_end":362593,"line_start":365,"line_end":365,"column_start":5,"column_end":25}},{"value":"/ # trait TestService {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362598,"byte_end":362623,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/ #     async fn handler(&self, req: Request<Input>) -> Result<Response<Output>, Status>;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362628,"byte_end":362719,"line_start":367,"line_end":367,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362724,"byte_end":362731,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362736,"byte_end":362739,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[async_trait]","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362744,"byte_end":362762,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ impl TestService for MyService {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362767,"byte_end":362803,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/     async fn handler(&self, req: Request<Input>) -> Result<Response<Output>, Status> {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362808,"byte_end":362898,"line_start":372,"line_end":372,"column_start":5,"column_end":95}},{"value":"/         let value: &MyExtension = req.extensions().get::<MyExtension>().unwrap();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362903,"byte_end":362988,"line_start":373,"line_end":373,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":362993,"byte_end":362996,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/         Ok(Response::new(Output {}))","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363001,"byte_end":363041,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363046,"byte_end":363055,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363060,"byte_end":363065,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363070,"byte_end":363077,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363212,"byte_end":363224,"line_start":385,"line_end":385,"column_start":8,"column_end":20},"name":"into_request","qualname":"<T as request::IntoRequest>::into_request","value":"fn into_request(Self) -> Request<Self>","parent":{"krate":0,"index":3256},"children":[],"decl_id":{"krate":0,"index":3258},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363333,"byte_end":363345,"line_start":391,"line_end":391,"column_start":8,"column_end":20},"name":"into_request","qualname":"<Request<T> as request::IntoRequest>::into_request","value":"fn into_request(Self) -> Request<T>","parent":{"krate":0,"index":3256},"children":[],"decl_id":{"krate":0,"index":3258},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363522,"byte_end":363544,"line_start":403,"line_end":403,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"<T as request::IntoStreamingRequest>::into_streaming_request","value":"fn into_streaming_request(Self) -> Request<Self>","parent":{"krate":0,"index":3259},"children":[],"decl_id":{"krate":0,"index":3262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363747,"byte_end":363769,"line_start":415,"line_end":415,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"<Request<T> as request::IntoStreamingRequest>::into_streaming_request","value":"fn into_streaming_request(Self) -> Self","parent":{"krate":0,"index":3259},"children":[],"decl_id":{"krate":0,"index":3262},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363868,"byte_end":363874,"line_start":423,"line_end":423,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::request::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4929},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366815,"byte_end":366823,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":4931},{"krate":0,"index":4932},{"krate":0,"index":4933}],"decl_id":null,"docs":" A gRPC response and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC response and metadata from an RPC call.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366736,"byte_end":366786,"line_start":3,"line_end":3,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367247,"byte_end":367250,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC response.","sig":null,"attributes":[{"value":"/ Create a new gRPC response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366929,"byte_end":366960,"line_start":12,"line_end":12,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366965,"byte_end":366968,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366973,"byte_end":366984,"line_start":14,"line_end":14,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Response;","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366989,"byte_end":367015,"line_start":15,"line_end":15,"column_start":5,"column_end":31}},{"value":"/ # pub struct HelloReply {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367020,"byte_end":367049,"line_start":16,"line_end":16,"column_start":5,"column_end":34}},{"value":"/ #   pub message: String,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367054,"byte_end":367082,"line_start":17,"line_end":17,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367087,"byte_end":367094,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ # let name = \"\";","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367099,"byte_end":367119,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/ Response::new(HelloReply {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367124,"byte_end":367154,"line_start":20,"line_end":20,"column_start":5,"column_end":35}},{"value":"/     message: format!(\"Hello, {}!\", name).into(),","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367159,"byte_end":367211,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/ });","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367216,"byte_end":367223,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367228,"byte_end":367235,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367468,"byte_end":367475,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Response<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to `T`.\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to `T`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367419,"byte_end":367456,"line_start":32,"line_end":32,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367578,"byte_end":367585,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Response<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367524,"byte_end":367566,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367710,"byte_end":367718,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Response<T>>::metadata","value":"fn metadata<'_>(&'_ Self) -> &'_ MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom response metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom response metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367646,"byte_end":367698,"line_start":42,"line_end":42,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367843,"byte_end":367855,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Response<T>>::metadata_mut","value":"fn metadata_mut<'_>(&'_ mut Self) -> &'_ mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the response metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the response metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367778,"byte_end":367831,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367981,"byte_end":367991,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Response<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":367927,"byte_end":367969,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":368105,"byte_end":368115,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Response<T>>::into_parts","value":"fn into_parts(Self) -> (MetadataMap, T, Extensions)","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` returning the parts of the response.\n","sig":null,"attributes":[{"value":"/ Consumes `self` returning the parts of the response.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":368037,"byte_end":368093,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":368303,"byte_end":368313,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Response<T>>::from_parts","value":"fn from_parts(MetadataMap, T, Extensions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC response from metadata, message and extensions.\n","sig":null,"attributes":[{"value":"/ Create a new gRPC response from metadata, message and extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":368222,"byte_end":368291,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":369123,"byte_end":369126,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"map","qualname":"<Response<T>>::map","value":"fn map<F, U>(Self, F) -> Response<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":369446,"byte_end":369456,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response<T>>::extensions","value":"fn extensions<'_>(&'_ Self) -> &'_ Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":369381,"byte_end":369434,"line_start":103,"line_end":103,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":369590,"byte_end":369604,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Response<T>>::extensions_mut","value":"fn extensions_mut<'_>(&'_ mut Self) -> &'_ mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":369517,"byte_end":369578,"line_start":108,"line_end":108,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4937},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371993,"byte_end":371999,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Status","qualname":"::status::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4942}],"decl_id":null,"docs":" A gRPC status describing the result of an RPC call.","sig":null,"attributes":[{"value":"/ A gRPC status describing the result of an RPC call.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371506,"byte_end":371561,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371562,"byte_end":371565,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Values can be created using the `new` function or one of the specialized","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371566,"byte_end":371642,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ associated functions.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371643,"byte_end":371668,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371669,"byte_end":371680,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ # use tonic::{Status, Code};","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371681,"byte_end":371713,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ let status1 = Status::new(Code::InvalidArgument, \"name is invalid\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371714,"byte_end":371786,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ let status2 = Status::invalid_argument(\"name is invalid\");","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371787,"byte_end":371849,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371850,"byte_end":371853,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(status1.code(), Code::InvalidArgument);","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371854,"byte_end":371908,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(status1.code(), status2.code());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371909,"byte_end":371956,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":371957,"byte_end":371964,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372942,"byte_end":372944,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"Ok","qualname":"::status::Code::Ok","value":"Code::Ok","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372896,"byte_end":372937,"line_start":60,"line_end":60,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372992,"byte_end":373001,"line_start":64,"line_end":64,"column_start":5,"column_end":14},"name":"Cancelled","qualname":"::status::Code::Cancelled","value":"Code::Cancelled","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The operation was cancelled.\n","sig":null,"attributes":[{"value":"/ The operation was cancelled.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372955,"byte_end":372987,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4952},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373035,"byte_end":373042,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::status::Code::Unknown","value":"Code::Unknown","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"/ Unknown error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373012,"byte_end":373030,"line_start":66,"line_end":66,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4955},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373099,"byte_end":373114,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::status::Code::InvalidArgument","value":"Code::InvalidArgument","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Client specified an invalid argument.\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373053,"byte_end":373094,"line_start":69,"line_end":69,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4958},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373183,"byte_end":373199,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::status::Code::DeadlineExceeded","value":"Code::DeadlineExceeded","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373125,"byte_end":373178,"line_start":72,"line_end":72,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373255,"byte_end":373263,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::status::Code::NotFound","value":"Code::NotFound","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Some requested entity was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity was not found.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373210,"byte_end":373250,"line_start":75,"line_end":75,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373338,"byte_end":373351,"line_start":79,"line_end":79,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::status::Code::AlreadyExists","value":"Code::AlreadyExists","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Some entity that we attempted to create already exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create already exists.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373274,"byte_end":373333,"line_start":78,"line_end":78,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4967},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373442,"byte_end":373458,"line_start":82,"line_end":82,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::status::Code::PermissionDenied","value":"Code::PermissionDenied","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373362,"byte_end":373437,"line_start":81,"line_end":81,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4970},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373511,"byte_end":373528,"line_start":85,"line_end":85,"column_start":5,"column_end":22},"name":"ResourceExhausted","qualname":"::status::Code::ResourceExhausted","value":"Code::ResourceExhausted","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Some resource has been exhausted.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373469,"byte_end":373506,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4973},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373616,"byte_end":373634,"line_start":88,"line_end":88,"column_start":5,"column_end":23},"name":"FailedPrecondition","qualname":"::status::Code::FailedPrecondition","value":"Code::FailedPrecondition","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The system is not in a state required for the operation's execution.\n","sig":null,"attributes":[{"value":"/ The system is not in a state required for the operation's execution.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373539,"byte_end":373611,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4976},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373680,"byte_end":373687,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"Aborted","qualname":"::status::Code::Aborted","value":"Code::Aborted","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The operation was aborted.\n","sig":null,"attributes":[{"value":"/ The operation was aborted.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373645,"byte_end":373675,"line_start":90,"line_end":90,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4979},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373753,"byte_end":373763,"line_start":94,"line_end":94,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::status::Code::OutOfRange","value":"Code::OutOfRange","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range.\n","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373699,"byte_end":373748,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373830,"byte_end":373843,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::status::Code::Unimplemented","value":"Code::Unimplemented","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373775,"byte_end":373825,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4985},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373879,"byte_end":373887,"line_start":100,"line_end":100,"column_start":5,"column_end":13},"name":"Internal","qualname":"::status::Code::Internal","value":"Code::Internal","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Internal error.\n","sig":null,"attributes":[{"value":"/ Internal error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373855,"byte_end":373874,"line_start":99,"line_end":99,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373945,"byte_end":373956,"line_start":103,"line_end":103,"column_start":5,"column_end":16},"name":"Unavailable","qualname":"::status::Code::Unavailable","value":"Code::Unavailable","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The service is currently unavailable.\n","sig":null,"attributes":[{"value":"/ The service is currently unavailable.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373899,"byte_end":373940,"line_start":102,"line_end":102,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374015,"byte_end":374023,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"DataLoss","qualname":"::status::Code::DataLoss","value":"Code::DataLoss","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":373968,"byte_end":374010,"line_start":105,"line_end":105,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4994},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374102,"byte_end":374117,"line_start":109,"line_end":109,"column_start":5,"column_end":20},"name":"Unauthenticated","qualname":"::status::Code::Unauthenticated","value":"Code::Unauthenticated","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374035,"byte_end":374097,"line_start":108,"line_end":108,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4945},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372885,"byte_end":372889,"line_start":59,"line_end":59,"column_start":10,"column_end":14},"name":"Code","qualname":"::status::Code","value":"enum Code {\n    Ok = ,\n    Cancelled = ,\n    Unknown = ,\n    InvalidArgument = ,\n    DeadlineExceeded = ,\n    NotFound = ,\n    AlreadyExists = ,\n    PermissionDenied = ,\n    ResourceExhausted = ,\n    FailedPrecondition = ,\n    Aborted = ,\n    OutOfRange = ,\n    Unimplemented = ,\n    Internal = ,\n    Unavailable = ,\n    DataLoss = ,\n    Unauthenticated = ,\n}","parent":null,"children":[{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4994}],"decl_id":null,"docs":" gRPC status codes used by [`Status`].","sig":null,"attributes":[{"value":"/ gRPC status codes used by [`Status`].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372605,"byte_end":372646,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372647,"byte_end":372650,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ These variants match the [gRPC status codes].","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372651,"byte_end":372700,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372701,"byte_end":372704,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [gRPC status codes]: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":372705,"byte_end":372824,"line_start":57,"line_end":57,"column_start":1,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374621,"byte_end":374632,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"description","qualname":"<Code>::description","value":"fn description<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get description of this `Code`.\n ```\n fn make_grpc_request() -> tonic::Code {\n     // ...\n     tonic::Code::Ok\n }\n let code = make_grpc_request();\n println!(\"Operation completed. Human readable description: {}\", code.description());\n ```\n If you only need description in `println`, `format`, `log` and other\n formatting contexts, you may want to use `Display` impl for `Code`\n instead.\n","sig":null,"attributes":[{"value":"/ Get description of this `Code`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374143,"byte_end":374178,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374183,"byte_end":374190,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ fn make_grpc_request() -> tonic::Code {","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374195,"byte_end":374238,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/     // ...","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374243,"byte_end":374257,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/     tonic::Code::Ok","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374262,"byte_end":374285,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374290,"byte_end":374295,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ let code = make_grpc_request();","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374300,"byte_end":374335,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ println!(\"Operation completed. Human readable description: {}\", code.description());","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374340,"byte_end":374428,"line_start":120,"line_end":120,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374433,"byte_end":374440,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ If you only need description in `println`, `format`, `log` and other","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374445,"byte_end":374517,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ formatting contexts, you may want to use `Display` impl for `Code`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374522,"byte_end":374592,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374597,"byte_end":374609,"line_start":124,"line_end":124,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376113,"byte_end":376116,"line_start":153,"line_end":153,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Code as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376363,"byte_end":376366,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<Status>::new","value":"fn new<impl Into<String>>(Code, impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code and message.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code and message.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376288,"byte_end":376351,"line_start":161,"line_end":161,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376668,"byte_end":376670,"line_start":173,"line_end":173,"column_start":12,"column_end":14},"name":"ok","qualname":"<Status>::ok","value":"fn ok<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376615,"byte_end":376656,"line_start":172,"line_end":172,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376831,"byte_end":376840,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<Status>::cancelled","value":"fn cancelled<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" The operation was cancelled (typically by the caller).\n","sig":null,"attributes":[{"value":"/ The operation was cancelled (typically by the caller).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376761,"byte_end":376819,"line_start":177,"line_end":177,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377268,"byte_end":377275,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"unknown","qualname":"<Status>::unknown","value":"fn unknown<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Unknown error. An example of where this error may be returned is if a\n `Status` value received from another address space belongs to an error-space\n that is not known in this address space. Also errors raised by APIs that\n do not return enough error information may be converted to this error.\n","sig":null,"attributes":[{"value":"/ Unknown error. An example of where this error may be returned is if a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376938,"byte_end":377011,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ `Status` value received from another address space belongs to an error-space","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377016,"byte_end":377096,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/ that is not known in this address space. Also errors raised by APIs that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377101,"byte_end":377177,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ do not return enough error information may be converted to this error.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377182,"byte_end":377256,"line_start":185,"line_end":185,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377626,"byte_end":377642,"line_start":194,"line_end":194,"column_start":12,"column_end":28},"name":"invalid_argument","qualname":"<Status>::invalid_argument","value":"fn invalid_argument<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Client specified an invalid argument. Note that this differs from\n `FailedPrecondition`. `InvalidArgument` indicates arguments that are\n problematic regardless of the state of the system (e.g., a malformed file\n name).\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument. Note that this differs from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377371,"byte_end":377440,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ `FailedPrecondition`. `InvalidArgument` indicates arguments that are","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377445,"byte_end":377517,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ problematic regardless of the state of the system (e.g., a malformed file","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377522,"byte_end":377599,"line_start":192,"line_end":192,"column_start":5,"column_end":82}},{"value":"/ name).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377604,"byte_end":377614,"line_start":193,"line_end":193,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378085,"byte_end":378102,"line_start":203,"line_end":203,"column_start":12,"column_end":29},"name":"deadline_exceeded","qualname":"<Status>::deadline_exceeded","value":"fn deadline_exceeded<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete. For operations that\n change the state of the system, this error may be returned even if the\n operation has completed successfully. For example, a successful response\n from a server could have been delayed long enough for the deadline to\n expire.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete. For operations that","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377746,"byte_end":377819,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ change the state of the system, this error may be returned even if the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377824,"byte_end":377898,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ operation has completed successfully. For example, a successful response","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377903,"byte_end":377979,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ from a server could have been delayed long enough for the deadline to","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":377984,"byte_end":378057,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ expire.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378062,"byte_end":378073,"line_start":202,"line_end":202,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378285,"byte_end":378294,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Status>::not_found","value":"fn not_found<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Some requested entity (e.g., file or directory) was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity (e.g., file or directory) was not found.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378207,"byte_end":378273,"line_start":207,"line_end":207,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378496,"byte_end":378510,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"already_exists","qualname":"<Status>::already_exists","value":"fn already_exists<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Some entity that we attempted to create (e.g., file or directory) already\n exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create (e.g., file or directory) already","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378391,"byte_end":378468,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/ exists.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378473,"byte_end":378484,"line_start":213,"line_end":213,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378990,"byte_end":379007,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"permission_denied","qualname":"<Status>::permission_denied","value":"fn permission_denied<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n `PermissionDenied` must not be used for rejections caused by exhausting\n some resource (use `ResourceExhausted` instead for those errors).\n `PermissionDenied` must not be used if the caller cannot be identified\n (use `Unauthenticated` instead for those errors).\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378612,"byte_end":378687,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ `PermissionDenied` must not be used for rejections caused by exhausting","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378692,"byte_end":378767,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ some resource (use `ResourceExhausted` instead for those errors).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378772,"byte_end":378841,"line_start":220,"line_end":220,"column_start":5,"column_end":74}},{"value":"/ `PermissionDenied` must not be used if the caller cannot be identified","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378846,"byte_end":378920,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ (use `Unauthenticated` instead for those errors).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":378925,"byte_end":378978,"line_start":222,"line_end":222,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379246,"byte_end":379264,"line_start":229,"line_end":229,"column_start":12,"column_end":30},"name":"resource_exhausted","qualname":"<Status>::resource_exhausted","value":"fn resource_exhausted<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Some resource has been exhausted, perhaps a per-user quota, or perhaps\n the entire file system is out of space.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted, perhaps a per-user quota, or perhaps","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379112,"byte_end":379186,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ the entire file system is out of space.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379191,"byte_end":379234,"line_start":228,"line_end":228,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380342,"byte_end":380361,"line_start":247,"line_end":247,"column_start":12,"column_end":31},"name":"failed_precondition","qualname":"<Status>::failed_precondition","value":"fn failed_precondition<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Operation was rejected because the system is not in a state required for\n the operation's execution. For example, directory to be deleted may be\n non-empty, an rmdir operation is applied to a non-directory, etc.","sig":null,"attributes":[{"value":"/ Operation was rejected because the system is not in a state required for","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379370,"byte_end":379446,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ the operation's execution. For example, directory to be deleted may be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379451,"byte_end":379525,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ non-empty, an rmdir operation is applied to a non-directory, etc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379530,"byte_end":379599,"line_start":235,"line_end":235,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379604,"byte_end":379607,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ A litmus test that may help a service implementor in deciding between","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379612,"byte_end":379685,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ `FailedPrecondition`, `Aborted`, and `Unavailable`:","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379690,"byte_end":379745,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/ (a) Use `Unavailable` if the client can retry just the failing call.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379750,"byte_end":379822,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ (b) Use `Aborted` if the client should retry at a higher-level (e.g.,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379827,"byte_end":379900,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/     restarting a read-modify-write sequence).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379905,"byte_end":379954,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ (c) Use `FailedPrecondition` if the client should not retry until the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":379959,"byte_end":380032,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/     system state has been explicitly fixed.  E.g., if an \"rmdir\" fails","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380037,"byte_end":380111,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/     because the directory is non-empty, `FailedPrecondition` should be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380116,"byte_end":380190,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/     returned since the client should not retry unless they have first","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380195,"byte_end":380268,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/     fixed up the directory by deleting files from it.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380273,"byte_end":380330,"line_start":246,"line_end":246,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380730,"byte_end":380737,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"aborted","qualname":"<Status>::aborted","value":"fn aborted<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" The operation was aborted, typically due to a concurrency issue like\n sequencer check failures, transaction aborts, etc.","sig":null,"attributes":[{"value":"/ The operation was aborted, typically due to a concurrency issue like","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380468,"byte_end":380540,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ sequencer check failures, transaction aborts, etc.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380545,"byte_end":380599,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380604,"byte_end":380607,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380612,"byte_end":380680,"line_start":254,"line_end":254,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380685,"byte_end":380718,"line_start":255,"line_end":255,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381637,"byte_end":381649,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"out_of_range","qualname":"<Status>::out_of_range","value":"fn out_of_range<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range. E.g., seeking or reading\n past end of file.","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range. E.g., seeking or reading","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380833,"byte_end":380907,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ past end of file.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380912,"byte_end":380933,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380938,"byte_end":380941,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Unlike `InvalidArgument`, this error indicates a problem that may be","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":380946,"byte_end":381018,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ fixed if the system state changes. For example, a 32-bit file system will","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381023,"byte_end":381100,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ generate `InvalidArgument if asked to read at an offset that is not in the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381105,"byte_end":381183,"line_start":265,"line_end":265,"column_start":5,"column_end":83}},{"value":"/ range [0,2^32-1], but it will generate `OutOfRange` if asked to read from","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381188,"byte_end":381265,"line_start":266,"line_end":266,"column_start":5,"column_end":82}},{"value":"/ an offset past the current file size.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381270,"byte_end":381311,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381316,"byte_end":381319,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ There is a fair bit of overlap between `FailedPrecondition` and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381324,"byte_end":381391,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ `OutOfRange`. We recommend using `OutOfRange` (the more specific error)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381396,"byte_end":381471,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ when it applies so that callers who are iterating through a space can","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381476,"byte_end":381549,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ easily look for an `OutOfRange` error to detect when they are done.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381554,"byte_end":381625,"line_start":272,"line_end":272,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381834,"byte_end":381847,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"unimplemented","qualname":"<Status>::unimplemented","value":"fn unimplemented<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported/enabled in this service.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported/enabled in this service.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381748,"byte_end":381822,"line_start":277,"line_end":277,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382116,"byte_end":382124,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"internal","qualname":"<Status>::internal","value":"fn internal<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Internal errors. Means some invariants expected by underlying system has\n been broken. If you see one of these errors, something is very broken.\n","sig":null,"attributes":[{"value":"/ Internal errors. Means some invariants expected by underlying system has","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":381949,"byte_end":382025,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ been broken. If you see one of these errors, something is very broken.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382030,"byte_end":382104,"line_start":283,"line_end":283,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382496,"byte_end":382507,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"unavailable","qualname":"<Status>::unavailable","value":"fn unavailable<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" The service is currently unavailable.  This is a most likely a transient\n condition and may be corrected by retrying with a back-off.","sig":null,"attributes":[{"value":"/ The service is currently unavailable.  This is a most likely a transient","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382221,"byte_end":382297,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ condition and may be corrected by retrying with a back-off.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382302,"byte_end":382365,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382370,"byte_end":382373,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382378,"byte_end":382446,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382451,"byte_end":382484,"line_start":292,"line_end":292,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382661,"byte_end":382670,"line_start":298,"line_end":298,"column_start":12,"column_end":21},"name":"data_loss","qualname":"<Status>::data_loss","value":"fn data_loss<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382607,"byte_end":382649,"line_start":297,"line_end":297,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382868,"byte_end":382883,"line_start":304,"line_end":304,"column_start":12,"column_end":27},"name":"unauthenticated","qualname":"<Status>::unauthenticated","value":"fn unauthenticated<impl Into<String>>(impl Into<String>) -> Status where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials for the\n operation.\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials for the","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382767,"byte_end":382837,"line_start":302,"line_end":302,"column_start":5,"column_end":75}},{"value":"/ operation.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":382842,"byte_end":382856,"line_start":303,"line_end":303,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383536,"byte_end":383546,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"from_error","qualname":"<Status>::from_error","value":"fn from_error(Box<dyn Error + Send + Sync + 'static>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a `Status` from various types of `Error`.","sig":null,"attributes":[{"value":"/ Create a `Status` from various types of `Error`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383213,"byte_end":383265,"line_start":315,"line_end":315,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383270,"byte_end":383273,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Inspects the error source chain for recognizable errors, including statuses, HTTP2, and","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383278,"byte_end":383369,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ hyper, and attempts to maps them to a `Status`, or else returns an Unknown `Status`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383374,"byte_end":383462,"line_start":318,"line_end":318,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":384119,"byte_end":384133,"line_start":335,"line_end":335,"column_start":12,"column_end":26},"name":"try_from_error","qualname":"<Status>::try_from_error","value":"fn try_from_error(Box<dyn Error + Send + Sync + 'static>)\n-> Result<Status, Box<dyn Error + Send + Sync + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Status` from various types of `Error`.","sig":null,"attributes":[{"value":"/ Create a `Status` from various types of `Error`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383824,"byte_end":383876,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383881,"byte_end":383884,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Returns the error if a status could not be created.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383889,"byte_end":383944,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383949,"byte_end":383952,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Downcast stability","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383957,"byte_end":383981,"line_start":332,"line_end":332,"column_start":5,"column_end":29}},{"value":"/ This function does not provide any stability guarantees around how it will downcast errors into","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":383986,"byte_end":384085,"line_start":333,"line_end":333,"column_start":5,"column_end":104}},{"value":"/ status codes.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":384090,"byte_end":384107,"line_start":334,"line_end":334,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":388430,"byte_end":388445,"line_start":444,"line_end":444,"column_start":12,"column_end":27},"name":"from_header_map","qualname":"<Status>::from_header_map","value":"fn from_header_map<'_>(&'_ HeaderMap) -> Option<Status>","parent":null,"children":[],"decl_id":null,"docs":" Extract a `Status` from a hyper `HeaderMap`.\n","sig":null,"attributes":[{"value":"/ Extract a `Status` from a hyper `HeaderMap`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":388370,"byte_end":388418,"line_start":443,"line_end":443,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390427,"byte_end":390431,"line_start":494,"line_end":494,"column_start":12,"column_end":16},"name":"code","qualname":"<Status>::code","value":"fn code<'_>(&'_ Self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the gRPC `Code` of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the gRPC `Code` of this `Status`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390374,"byte_end":390415,"line_start":493,"line_end":493,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390538,"byte_end":390545,"line_start":499,"line_end":499,"column_start":12,"column_end":19},"name":"message","qualname":"<Status>::message","value":"fn message<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" Get the text error message of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the text error message of this `Status`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390478,"byte_end":390526,"line_start":498,"line_end":498,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390658,"byte_end":390665,"line_start":504,"line_end":504,"column_start":12,"column_end":19},"name":"details","qualname":"<Status>::details","value":"fn details<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the opaque error details of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the opaque error details of this `Status`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390596,"byte_end":390646,"line_start":503,"line_end":503,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390772,"byte_end":390780,"line_start":509,"line_end":509,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Status>::metadata","value":"fn metadata<'_>(&'_ Self) -> &'_ MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390717,"byte_end":390760,"line_start":508,"line_end":508,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390903,"byte_end":390915,"line_start":514,"line_end":514,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Status>::metadata_mut","value":"fn metadata_mut<'_>(&'_ mut Self) -> &'_ mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the custom metadata.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":390840,"byte_end":390891,"line_start":513,"line_end":513,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":391273,"byte_end":391283,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"add_header","qualname":"<Status>::add_header","value":"fn add_header<'_, '_>(&'_ Self, &'_ mut HeaderMap) -> Result<(), Self>","parent":null,"children":[],"decl_id":null,"docs":" Add headers from this `Status` into `header_map`.\n","sig":null,"attributes":[{"value":"/ Add headers from this `Status` into `header_map`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":391208,"byte_end":391261,"line_start":524,"line_end":524,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":392341,"byte_end":392353,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"name":"with_details","qualname":"<Status>::with_details","value":"fn with_details<impl Into<String>>(Code, impl Into<String>, Bytes) -> Status\nwhere impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and binary details field.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and binary details field.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":392243,"byte_end":392329,"line_start":553,"line_end":553,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":392609,"byte_end":392622,"line_start":559,"line_end":559,"column_start":12,"column_end":25},"name":"with_metadata","qualname":"<Status>::with_metadata","value":"fn with_metadata<impl Into<String>>(Code, impl Into<String>, MetadataMap)\n-> Status where impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and custom metadata","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":392517,"byte_end":392597,"line_start":558,"line_end":558,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":392901,"byte_end":392926,"line_start":564,"line_end":564,"column_start":12,"column_end":37},"name":"with_details_and_metadata","qualname":"<Status>::with_details_and_metadata","value":"fn with_details_and_metadata<impl Into<String>>(Code, impl Into<String>,\nBytes, MetadataMap) -> Status where impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, binary details field and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, binary details field and custom metadata","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":392788,"byte_end":392889,"line_start":563,"line_end":563,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":393269,"byte_end":393279,"line_start":580,"line_end":580,"column_start":12,"column_end":22},"name":"set_source","qualname":"<Status>::set_source","value":"fn set_source<'_>(&'_ mut Self, Arc<dyn Error + Send + Sync + 'static>)\n-> &'_ mut Status","parent":null,"children":[],"decl_id":null,"docs":" Add a source error to this status.\n","sig":null,"attributes":[{"value":"/ Add a source error to this status.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":393219,"byte_end":393257,"line_start":579,"line_end":579,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":393526,"byte_end":393533,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"to_http","qualname":"<Status>::to_http","value":"fn to_http(Self) -> http::Response<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Build an `http::Response` from the given `Status`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":393416,"byte_end":393455,"line_start":585,"line_end":585,"column_start":5,"column_end":44}},{"value":"/ Build an `http::Response` from the given `Status`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":393460,"byte_end":393514,"line_start":586,"line_end":586,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":395080,"byte_end":395083,"line_start":637,"line_end":637,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Status as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396001,"byte_end":396005,"line_start":671,"line_end":671,"column_start":8,"column_end":12},"name":"from","qualname":"<Status as std::convert::From>::from","value":"fn from(h2::Error) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396157,"byte_end":396161,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"from","qualname":"<h2::Error as std::convert::From>::from","value":"fn from(Status) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396272,"byte_end":396276,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"from","qualname":"<Status as std::convert::From>::from","value":"fn from(std::io::Error) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":397362,"byte_end":397365,"line_start":711,"line_end":711,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Status as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10302},"children":[],"decl_id":{"krate":2,"index":10303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":397683,"byte_end":397689,"line_start":724,"line_end":724,"column_start":8,"column_end":14},"name":"source","qualname":"<Status as std::error::Error>::source","value":"fn source<'_>(&'_ Self) -> Option<&'_ dyn Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399693,"byte_end":399701,"line_start":780,"line_end":780,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Code>::from_i32","value":"fn from_i32(i32) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the `Code` that represents the integer, if known.","sig":null,"attributes":[{"value":"/ Get the `Code` that represents the integer, if known.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399557,"byte_end":399614,"line_start":777,"line_end":777,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399619,"byte_end":399622,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ If not known, returns `Code::Unknown` (surprise!).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399627,"byte_end":399681,"line_start":779,"line_end":779,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399989,"byte_end":399999,"line_start":787,"line_end":787,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Code>::from_bytes","value":"fn from_bytes<'_>(&'_ [u8]) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Convert the string representation of a `Code` (as stored, for example, in the `grpc-status`\n header in a response) into a `Code`. Returns `Code::Unknown` if the code string is not a\n valid gRPC status code.\n","sig":null,"attributes":[{"value":"/ Convert the string representation of a `Code` (as stored, for example, in the `grpc-status`","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399753,"byte_end":399848,"line_start":784,"line_end":784,"column_start":5,"column_end":100}},{"value":"/ header in a response) into a `Code`. Returns `Code::Unknown` if the code string is not a","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399853,"byte_end":399945,"line_start":785,"line_end":785,"column_start":5,"column_end":97}},{"value":"/ valid gRPC status code.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399950,"byte_end":399977,"line_start":786,"line_end":786,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":402411,"byte_end":402415,"line_start":845,"line_end":845,"column_start":8,"column_end":12},"name":"from","qualname":"<Code as std::convert::From>::from","value":"fn from(i32) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":403176,"byte_end":403180,"line_start":872,"line_end":872,"column_start":8,"column_end":12},"name":"from","qualname":"<i32 as std::convert::From>::from","value":"fn from(Code) -> i32","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":403159,"byte_end":403168,"line_start":871,"line_end":871,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3601},{"krate":0,"index":3604},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3630},{"krate":0,"index":3633},{"krate":0,"index":3635}],"decl_id":null,"docs":" Codegen exports used by `tonic-build`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"codegen\")","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5149,"byte_end":5176,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/ Codegen exports used by `tonic-build`.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408589,"byte_end":408631,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":408895,"byte_end":408903,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"StdError","qualname":"::codegen::StdError","value":"Box<dyn std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3630},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409199,"byte_end":409208,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::codegen::BoxFuture","value":"self::Pin<Box<dyn self::Future<Output = Result<T, E>> + Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3633},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codegen.rs","byte_start":409300,"byte_end":409309,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::codegen::BoxStream","value":"self::Pin<Box<dyn futures_core::Stream<Item = Result<T, crate::Status>> +\nSend + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3638},"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5431,"byte_end":5437,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"std::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" `Result` is a type that represents either success ([`Ok`]) or failure ([`Err`]).\n By default, the Err value is of type [`Status`] but this can be overridden if desired.\n","sig":null,"attributes":[{"value":"/ `Result` is a type that represents either success ([`Ok`]) or failure ([`Err`]).","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5246,"byte_end":5330,"line_start":134,"line_end":134,"column_start":1,"column_end":85}},{"value":"/ By default, the Err value is of type [`Status`] but this can be overridden if desired.","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5331,"byte_end":5421,"line_start":135,"line_end":135,"column_start":1,"column_end":91}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8728,"byte_end":8732,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":125},{"krate":0,"index":134},{"krate":0,"index":141},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":19317,"byte_end":19327,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":20898,"byte_end":20902,"line_start":424,"line_end":424,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":21482,"byte_end":21486,"line_start":439,"line_end":439,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23339,"byte_end":23340,"line_start":32,"line_end":32,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26694,"byte_end":26703,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26830,"byte_end":26839,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27276,"byte_end":27285,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27387,"byte_end":27396,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27801,"byte_end":27810,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29698,"byte_end":29725,"line_start":18,"line_end":18,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":30937,"byte_end":30956,"line_start":64,"line_end":64,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":33485,"byte_end":33504,"line_start":141,"line_end":141,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":35934,"byte_end":35966,"line_start":223,"line_end":223,"column_start":18,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":37078,"byte_end":37087,"line_start":38,"line_end":38,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":37378,"byte_end":37387,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":39660,"byte_end":39674,"line_start":140,"line_end":140,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":45945,"byte_end":45954,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":398},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":49376,"byte_end":49385,"line_start":384,"line_end":384,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":50308,"byte_end":50317,"line_start":413,"line_end":413,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/encode.rs","byte_start":55452,"byte_end":55462,"line_start":190,"line_end":190,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/encode.rs","byte_start":56028,"byte_end":56039,"line_start":217,"line_end":217,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/encode.rs","byte_start":56634,"byte_end":56644,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":57988,"byte_end":57998,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58098,"byte_end":58108,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58644,"byte_end":58656,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":59083,"byte_end":59095,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71016,"byte_end":71021,"line_start":80,"line_end":80,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71996,"byte_end":72001,"line_start":114,"line_end":114,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72127,"byte_end":72133,"line_start":120,"line_end":120,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74226,"byte_end":74232,"line_start":183,"line_end":183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74362,"byte_end":74382,"line_start":191,"line_end":191,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74493,"byte_end":74513,"line_start":197,"line_end":197,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74657,"byte_end":74677,"line_start":203,"line_end":203,"column_start":16,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74906,"byte_end":74931,"line_start":212,"line_end":212,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":75062,"byte_end":75087,"line_start":218,"line_end":218,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":75199,"byte_end":75224,"line_start":224,"line_end":224,"column_start":16,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76267,"byte_end":76278,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":79897,"byte_end":79908,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80147,"byte_end":80158,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80267,"byte_end":80278,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80399,"byte_end":80410,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80518,"byte_end":80529,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80695,"byte_end":80706,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80838,"byte_end":80856,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81027,"byte_end":81038,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81183,"byte_end":81188,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81375,"byte_end":81386,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81720,"byte_end":81731,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82914,"byte_end":82925,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83400,"byte_end":83418,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83564,"byte_end":83582,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83656,"byte_end":83674,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90798,"byte_end":90809,"line_start":201,"line_end":201,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":126283,"byte_end":126287,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":127110,"byte_end":127117,"line_start":1248,"line_end":1248,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":127979,"byte_end":127989,"line_start":1275,"line_end":1275,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128330,"byte_end":128334,"line_start":1291,"line_end":1291,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128843,"byte_end":128847,"line_start":1309,"line_end":1309,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128905,"byte_end":128911,"line_start":1313,"line_end":1313,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":129494,"byte_end":129503,"line_start":1334,"line_end":1334,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130126,"byte_end":130135,"line_start":1355,"line_end":1355,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130690,"byte_end":130699,"line_start":1378,"line_end":1378,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131067,"byte_end":131079,"line_start":1394,"line_end":1394,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131368,"byte_end":131380,"line_start":1407,"line_end":1407,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131638,"byte_end":131643,"line_start":1420,"line_end":1420,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134607,"byte_end":134618,"line_start":1525,"line_end":1525,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137006,"byte_end":137019,"line_start":1605,"line_end":1605,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146665,"byte_end":146678,"line_start":1906,"line_end":1906,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147505,"byte_end":147511,"line_start":1941,"line_end":1941,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148385,"byte_end":148391,"line_start":1968,"line_end":1968,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148546,"byte_end":148552,"line_start":1974,"line_end":1974,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150283,"byte_end":150294,"line_start":2030,"line_end":2030,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150883,"byte_end":150894,"line_start":2050,"line_end":2050,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153835,"byte_end":153846,"line_start":2138,"line_end":2138,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155102,"byte_end":155113,"line_start":2179,"line_end":2179,"column_start":51,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158419,"byte_end":158425,"line_start":2286,"line_end":2286,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":160308,"byte_end":160314,"line_start":2345,"line_end":2345,"column_start":51,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163167,"byte_end":163178,"line_start":2433,"line_end":2433,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163415,"byte_end":163426,"line_start":2441,"line_end":2441,"column_start":63,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164033,"byte_end":164039,"line_start":2463,"line_end":2463,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164255,"byte_end":164261,"line_start":2471,"line_end":2471,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173377,"byte_end":173390,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":181769,"byte_end":181782,"line_start":299,"line_end":299,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":182834,"byte_end":182847,"line_start":335,"line_end":335,"column_start":70,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":183592,"byte_end":183605,"line_start":354,"line_end":354,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":184438,"byte_end":184451,"line_start":376,"line_end":376,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":184957,"byte_end":184970,"line_start":391,"line_end":391,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185454,"byte_end":185467,"line_start":406,"line_end":406,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185946,"byte_end":185959,"line_start":421,"line_end":421,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186207,"byte_end":186220,"line_start":432,"line_end":432,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189202,"byte_end":189215,"line_start":531,"line_end":531,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189687,"byte_end":189700,"line_start":548,"line_end":548,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189829,"byte_end":189842,"line_start":555,"line_end":555,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":190009,"byte_end":190022,"line_start":561,"line_end":561,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192072,"byte_end":192085,"line_start":647,"line_end":647,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192489,"byte_end":192494,"line_start":661,"line_end":661,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192684,"byte_end":192697,"line_start":668,"line_end":668,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192825,"byte_end":192835,"line_start":677,"line_end":677,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192936,"byte_end":192946,"line_start":683,"line_end":683,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193095,"byte_end":193105,"line_start":689,"line_end":689,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193124,"byte_end":193137,"line_start":691,"line_end":691,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193248,"byte_end":193261,"line_start":697,"line_end":697,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193520,"byte_end":193533,"line_start":708,"line_end":708,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193922,"byte_end":193935,"line_start":719,"line_end":719,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193983,"byte_end":193996,"line_start":721,"line_end":721,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194183,"byte_end":194196,"line_start":728,"line_end":728,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194357,"byte_end":194370,"line_start":735,"line_end":735,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194534,"byte_end":194547,"line_start":742,"line_end":742,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194701,"byte_end":194714,"line_start":749,"line_end":749,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194904,"byte_end":194917,"line_start":756,"line_end":756,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195871,"byte_end":195884,"line_start":791,"line_end":791,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196031,"byte_end":196044,"line_start":798,"line_end":798,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196249,"byte_end":196255,"line_start":805,"line_end":805,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196417,"byte_end":196423,"line_start":812,"line_end":812,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197061,"byte_end":197074,"line_start":833,"line_end":833,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197275,"byte_end":197288,"line_start":843,"line_end":843,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205739,"byte_end":205743,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1593},{"krate":0,"index":1598},{"krate":0,"index":1605},{"krate":0,"index":1610},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":218894,"byte_end":218898,"line_start":478,"line_end":478,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220305,"byte_end":220306,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221201,"byte_end":221202,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222058,"byte_end":222059,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222969,"byte_end":222970,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225401,"byte_end":225402,"line_start":51,"line_end":51,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226322,"byte_end":226338,"line_start":93,"line_end":93,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227028,"byte_end":227046,"line_start":123,"line_end":123,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227322,"byte_end":227340,"line_start":134,"line_end":134,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227692,"byte_end":227710,"line_start":146,"line_end":146,"column_start":66,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229711,"byte_end":229729,"line_start":192,"line_end":192,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229975,"byte_end":229989,"line_start":207,"line_end":207,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":230367,"byte_end":230381,"line_start":228,"line_end":228,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247486,"byte_end":247494,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1915},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259657,"byte_end":259665,"line_start":407,"line_end":407,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260424,"byte_end":260432,"line_start":433,"line_end":433,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260580,"byte_end":260588,"line_start":441,"line_end":441,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260756,"byte_end":260764,"line_start":449,"line_end":449,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260925,"byte_end":260933,"line_start":457,"line_end":457,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":261069,"byte_end":261077,"line_start":463,"line_end":463,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240590,"byte_end":240597,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":244943,"byte_end":244950,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245435,"byte_end":245449,"line_start":219,"line_end":219,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245777,"byte_end":245784,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245922,"byte_end":245936,"line_start":235,"line_end":235,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292040,"byte_end":292054,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292379,"byte_end":292389,"line_start":87,"line_end":87,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292645,"byte_end":292654,"line_start":98,"line_end":98,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292917,"byte_end":292929,"line_start":109,"line_end":109,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298365,"byte_end":298376,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":300471,"byte_end":300482,"line_start":192,"line_end":192,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":301553,"byte_end":301565,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":301680,"byte_end":301692,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":302312,"byte_end":302326,"line_start":54,"line_end":54,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":303356,"byte_end":303370,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":303606,"byte_end":303620,"line_start":102,"line_end":102,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":305217,"byte_end":305227,"line_start":22,"line_end":22,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264102,"byte_end":264108,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264958,"byte_end":264964,"line_start":129,"line_end":129,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265021,"byte_end":265027,"line_start":133,"line_end":133,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265271,"byte_end":265277,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":278581,"byte_end":278587,"line_start":532,"line_end":532,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":278709,"byte_end":278715,"line_start":538,"line_end":538,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2434},{"krate":0,"index":2439},{"krate":0,"index":2446},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":285194,"byte_end":285200,"line_start":697,"line_end":697,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":285447,"byte_end":285450,"line_start":708,"line_end":708,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":286655,"byte_end":286664,"line_start":752,"line_end":752,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2475},{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":287321,"byte_end":287324,"line_start":771,"line_end":771,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":287682,"byte_end":287689,"line_start":785,"line_end":785,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":305836,"byte_end":305841,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":306719,"byte_end":306724,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":307030,"byte_end":307035,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":307168,"byte_end":307173,"line_start":75,"line_end":75,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/add_origin.rs","byte_start":308348,"byte_end":308357,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/add_origin.rs","byte_start":308660,"byte_end":308669,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":310868,"byte_end":310878,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2662},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":313524,"byte_end":313534,"line_start":100,"line_end":100,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":313926,"byte_end":313936,"line_start":114,"line_end":114,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":314041,"byte_end":314051,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":314850,"byte_end":314859,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":315598,"byte_end":315607,"line_start":58,"line_end":58,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":317112,"byte_end":317137,"line_start":106,"line_end":106,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":317368,"byte_end":317393,"line_start":113,"line_end":113,"column_start":28,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","byte_start":317848,"byte_end":317868,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","byte_start":318018,"byte_end":318038,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2770},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","byte_start":319374,"byte_end":319394,"line_start":56,"line_end":56,"column_start":38,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/executor.rs","byte_start":319581,"byte_end":319590,"line_start":9,"line_end":9,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/executor.rs","byte_start":319864,"byte_end":319874,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2792},{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/executor.rs","byte_start":320187,"byte_end":320197,"line_start":39,"line_end":39,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":320735,"byte_end":320746,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":320956,"byte_end":320967,"line_start":30,"line_end":30,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":322402,"byte_end":322416,"line_start":78,"line_end":78,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325727,"byte_end":325741,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325948,"byte_end":325962,"line_start":172,"line_end":172,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":329920,"byte_end":329921,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330026,"byte_end":330033,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330155,"byte_end":330162,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330267,"byte_end":330274,"line_start":31,"line_end":31,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330479,"byte_end":330486,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330712,"byte_end":330719,"line_start":52,"line_end":52,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":331601,"byte_end":331609,"line_start":85,"line_end":85,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":332451,"byte_end":332459,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":332888,"byte_end":332896,"line_start":135,"line_end":135,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":334465,"byte_end":334474,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":334872,"byte_end":334881,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":338681,"byte_end":338690,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":339463,"byte_end":339477,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":339778,"byte_end":339792,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":340771,"byte_end":340777,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342297,"byte_end":342303,"line_start":71,"line_end":71,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342779,"byte_end":342791,"line_start":89,"line_end":89,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342929,"byte_end":342941,"line_start":95,"line_end":95,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/user_agent.rs","byte_start":343552,"byte_end":343561,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/user_agent.rs","byte_start":344148,"byte_end":344157,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345509,"byte_end":345520,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":346193,"byte_end":346204,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347005,"byte_end":347015,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348445,"byte_end":348455,"line_start":69,"line_end":69,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348712,"byte_end":348722,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354776,"byte_end":354783,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363201,"byte_end":363202,"line_start":384,"line_end":384,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363313,"byte_end":363320,"line_start":390,"line_end":390,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363423,"byte_end":363424,"line_start":396,"line_end":396,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363639,"byte_end":363646,"line_start":408,"line_end":408,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363835,"byte_end":363836,"line_start":420,"line_end":420,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366911,"byte_end":366919,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374132,"byte_end":374136,"line_start":112,"line_end":112,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3413}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376099,"byte_end":376103,"line_start":152,"line_end":152,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376275,"byte_end":376281,"line_start":160,"line_end":160,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3465},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":395064,"byte_end":395070,"line_start":636,"line_end":636,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":395985,"byte_end":395991,"line_start":670,"line_end":670,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396142,"byte_end":396147,"line_start":677,"line_end":677,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396256,"byte_end":396262,"line_start":683,"line_end":683,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":397346,"byte_end":397352,"line_start":710,"line_end":710,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":397667,"byte_end":397673,"line_start":723,"line_end":723,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399546,"byte_end":399550,"line_start":776,"line_end":776,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":402397,"byte_end":402401,"line_start":844,"line_end":844,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4386,"byte_end":4390,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4400,"byte_end":4406,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4416,"byte_end":4421,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":200}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4431,"byte_end":4439,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":628}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4449,"byte_end":4455,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1502}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4465,"byte_end":4472,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1724}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/mod.rs","byte_start":223378,"byte_end":223389,"line_start":3,"line_end":3,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1725}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":4566,"byte_end":4575,"line_start":106,"line_end":106,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1830}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237117,"byte_end":237124,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1831}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/mod.rs","byte_start":237134,"byte_end":237140,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2075}},{"kind":"Mod","span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/lib.rs","byte_start":5236,"byte_end":5243,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3571}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":8728,"byte_end":8732,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":19317,"byte_end":19327,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":20898,"byte_end":20902,"line_start":424,"line_end":424,"column_start":26,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":96},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/grpc.rs","byte_start":21482,"byte_end":21486,"line_start":439,"line_end":439,"column_start":36,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":96},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/client/service.rs","byte_start":23339,"byte_end":23340,"line_start":32,"line_end":32,"column_start":52,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26694,"byte_end":26703,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":26830,"byte_end":26839,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3641},"to":{"krate":21,"index":42}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27276,"byte_end":27285,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27387,"byte_end":27396,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/buffer.rs","byte_start":27801,"byte_end":27810,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3648},"to":{"krate":21,"index":152}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":29698,"byte_end":29725,"line_start":18,"line_end":18,"column_start":6,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":30937,"byte_end":30956,"line_start":64,"line_end":64,"column_start":6,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":33485,"byte_end":33504,"line_start":141,"line_end":141,"column_start":23,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3662},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/compression.rs","byte_start":35934,"byte_end":35966,"line_start":223,"line_end":223,"column_start":18,"column_end":50},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3674},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":37078,"byte_end":37087,"line_start":38,"line_end":38,"column_start":19,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":37378,"byte_end":37387,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":39660,"byte_end":39674,"line_start":140,"line_end":140,"column_start":6,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":45945,"byte_end":45954,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":49376,"byte_end":49385,"line_start":384,"line_end":384,"column_start":20,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":357},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/decode.rs","byte_start":50308,"byte_end":50317,"line_start":413,"line_end":413,"column_start":24,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/encode.rs","byte_start":55452,"byte_end":55462,"line_start":190,"line_end":190,"column_start":9,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/encode.rs","byte_start":56028,"byte_end":56039,"line_start":217,"line_end":217,"column_start":6,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/encode.rs","byte_start":56634,"byte_end":56644,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3833},"to":{"krate":20,"index":470}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":57988,"byte_end":57998,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3843},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58098,"byte_end":58108,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3843},"to":{"krate":0,"index":613}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":58644,"byte_end":58656,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3855},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/codec/prost.rs","byte_start":59083,"byte_end":59095,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3868},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69667,"byte_end":69672,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2882},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69675,"byte_end":69677,"line_start":48,"line_end":48,"column_start":34,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69680,"byte_end":69689,"line_start":48,"line_end":48,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2915},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69692,"byte_end":69696,"line_start":48,"line_end":48,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":10533},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":69721,"byte_end":69727,"line_start":48,"line_end":48,"column_start":80,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":661},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71016,"byte_end":71021,"line_start":80,"line_end":80,"column_start":39,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":661}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":71996,"byte_end":72001,"line_start":114,"line_end":114,"column_start":24,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":72127,"byte_end":72133,"line_start":120,"line_end":120,"column_start":39,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3902},"to":{"krate":0,"index":661}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74226,"byte_end":74232,"line_start":183,"line_end":183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3902},"to":{"krate":0,"index":670}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74362,"byte_end":74382,"line_start":191,"line_end":191,"column_start":6,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74493,"byte_end":74513,"line_start":197,"line_end":197,"column_start":23,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3881},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74657,"byte_end":74677,"line_start":203,"line_end":203,"column_start":16,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3881},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":74906,"byte_end":74931,"line_start":212,"line_end":212,"column_start":6,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":75062,"byte_end":75087,"line_start":218,"line_end":218,"column_start":23,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3916},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/encoding.rs","byte_start":75199,"byte_end":75224,"line_start":224,"line_end":224,"column_start":16,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3916},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":76267,"byte_end":76278,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":79897,"byte_end":79908,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":12996}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80147,"byte_end":80158,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80267,"byte_end":80278,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80399,"byte_end":80410,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80518,"byte_end":80529,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80695,"byte_end":80706,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":80838,"byte_end":80856,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81027,"byte_end":81038,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81183,"byte_end":81188,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":21,"index":557},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81375,"byte_end":81386,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":81720,"byte_end":81731,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":82914,"byte_end":82925,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83400,"byte_end":83418,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3946},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83564,"byte_end":83582,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3946},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/key.rs","byte_start":83656,"byte_end":83674,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3946},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":90798,"byte_end":90809,"line_start":201,"line_end":201,"column_start":6,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":126283,"byte_end":126287,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3958},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":127110,"byte_end":127117,"line_start":1248,"line_end":1248,"column_start":23,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3990},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":127979,"byte_end":127989,"line_start":1275,"line_end":1275,"column_start":42,"column_end":52},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3996},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128330,"byte_end":128334,"line_start":1291,"line_end":1291,"column_start":23,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4005},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128843,"byte_end":128847,"line_start":1309,"line_end":1309,"column_start":32,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4005},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":128905,"byte_end":128911,"line_start":1313,"line_end":1313,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":129494,"byte_end":129503,"line_start":1334,"line_end":1334,"column_start":23,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130126,"byte_end":130135,"line_start":1355,"line_end":1355,"column_start":42,"column_end":51},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4056},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":130690,"byte_end":130699,"line_start":1378,"line_end":1378,"column_start":53,"column_end":62},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4056},"to":{"krate":2,"index":8449}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131067,"byte_end":131079,"line_start":1394,"line_end":1394,"column_start":42,"column_end":54},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4065},"to":{"krate":2,"index":8603}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131368,"byte_end":131380,"line_start":1407,"line_end":1407,"column_start":53,"column_end":65},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4065},"to":{"krate":2,"index":8449}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":131638,"byte_end":131643,"line_start":1420,"line_end":1420,"column_start":29,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":134607,"byte_end":134618,"line_start":1525,"line_end":1525,"column_start":29,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":137006,"byte_end":137019,"line_start":1605,"line_end":1605,"column_start":29,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":146665,"byte_end":146678,"line_start":1906,"line_end":1906,"column_start":46,"column_end":59},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4105},"to":{"krate":2,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":147505,"byte_end":147511,"line_start":1941,"line_end":1941,"column_start":29,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148385,"byte_end":148391,"line_start":1968,"line_end":1968,"column_start":43,"column_end":49},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4074},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":148546,"byte_end":148552,"line_start":1974,"line_end":1974,"column_start":46,"column_end":52},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4074},"to":{"krate":2,"index":8405}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":149522,"byte_end":149528,"line_start":2009,"line_end":2009,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1042},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150283,"byte_end":150294,"line_start":2030,"line_end":2030,"column_start":44,"column_end":55},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3924},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":150883,"byte_end":150894,"line_start":2050,"line_end":2050,"column_start":53,"column_end":64},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3924},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":152794,"byte_end":152800,"line_start":2108,"line_end":2108,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":1096},"to":{"krate":0,"index":1094}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":153835,"byte_end":153846,"line_start":2138,"line_end":2138,"column_start":44,"column_end":55},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3924},"to":{"krate":0,"index":1096}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":155102,"byte_end":155113,"line_start":2179,"line_end":2179,"column_start":51,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3924},"to":{"krate":0,"index":1094}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":158419,"byte_end":158425,"line_start":2286,"line_end":2286,"column_start":44,"column_end":50},"kind":{"Impl":{"id":82}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":1096}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":160308,"byte_end":160314,"line_start":2345,"line_end":2345,"column_start":51,"column_end":57},"kind":{"Impl":{"id":83}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":1094}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":162567,"byte_end":162573,"line_start":2415,"line_end":2415,"column_start":46,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1169},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163167,"byte_end":163178,"line_start":2433,"line_end":2433,"column_start":40,"column_end":51},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3924},"to":{"krate":0,"index":1169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":163415,"byte_end":163426,"line_start":2441,"line_end":2441,"column_start":63,"column_end":74},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3924},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164033,"byte_end":164039,"line_start":2463,"line_end":2463,"column_start":21,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":1169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/map.rs","byte_start":164255,"byte_end":164261,"line_start":2471,"line_end":2471,"column_start":44,"column_end":50},"kind":{"Impl":{"id":87}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":173377,"byte_end":173390,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":181769,"byte_end":181782,"line_start":299,"line_end":299,"column_start":51,"column_end":64},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":182834,"byte_end":182847,"line_start":335,"line_end":335,"column_start":70,"column_end":83},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":183592,"byte_end":183605,"line_start":354,"line_end":354,"column_start":44,"column_end":57},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":184438,"byte_end":184451,"line_start":376,"line_end":376,"column_start":46,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":184957,"byte_end":184970,"line_start":391,"line_end":391,"column_start":31,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185454,"byte_end":185467,"line_start":406,"line_end":406,"column_start":34,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":185946,"byte_end":185959,"line_start":421,"line_end":421,"column_start":26,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":186207,"byte_end":186220,"line_start":432,"line_end":432,"column_start":6,"column_end":19},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189202,"byte_end":189215,"line_start":531,"line_end":531,"column_start":6,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189687,"byte_end":189700,"line_start":548,"line_end":548,"column_start":41,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":189829,"byte_end":189842,"line_start":555,"line_end":555,"column_start":40,"column_end":53},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":190009,"byte_end":190022,"line_start":561,"line_end":561,"column_start":57,"column_end":70},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192072,"byte_end":192085,"line_start":647,"line_end":647,"column_start":18,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":12996}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192489,"byte_end":192494,"line_start":661,"line_end":661,"column_start":53,"column_end":58},"kind":{"Impl":{"id":102}},"from":{"krate":21,"index":557},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192684,"byte_end":192697,"line_start":668,"line_end":668,"column_start":61,"column_end":74},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192825,"byte_end":192835,"line_start":677,"line_end":677,"column_start":6,"column_end":16},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":192936,"byte_end":192946,"line_start":683,"line_end":683,"column_start":23,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4121},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193095,"byte_end":193105,"line_start":689,"line_end":689,"column_start":16,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4121},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193124,"byte_end":193137,"line_start":691,"line_end":691,"column_start":15,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":10533}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193248,"byte_end":193261,"line_start":697,"line_end":697,"column_start":15,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":10533}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193520,"byte_end":193533,"line_start":708,"line_end":708,"column_start":39,"column_end":52},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193922,"byte_end":193935,"line_start":719,"line_end":719,"column_start":32,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":193983,"byte_end":193996,"line_start":721,"line_end":721,"column_start":40,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194183,"byte_end":194196,"line_start":728,"line_end":728,"column_start":33,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194357,"byte_end":194370,"line_start":735,"line_end":735,"column_start":44,"column_end":57},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194534,"byte_end":194547,"line_start":742,"line_end":742,"column_start":45,"column_end":58},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194701,"byte_end":194714,"line_start":749,"line_end":749,"column_start":45,"column_end":58},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":194904,"byte_end":194917,"line_start":756,"line_end":756,"column_start":46,"column_end":59},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":195871,"byte_end":195884,"line_start":791,"line_end":791,"column_start":47,"column_end":60},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196031,"byte_end":196044,"line_start":798,"line_end":798,"column_start":48,"column_end":61},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196249,"byte_end":196255,"line_start":805,"line_end":805,"column_start":58,"column_end":64},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":8368},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":196417,"byte_end":196423,"line_start":812,"line_end":812,"column_start":59,"column_end":65},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":8368},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197061,"byte_end":197074,"line_start":833,"line_end":833,"column_start":61,"column_end":74},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/metadata/value.rs","byte_start":197275,"byte_end":197288,"line_start":843,"line_end":843,"column_start":62,"column_end":75},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":205739,"byte_end":205743,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/grpc.rs","byte_start":218894,"byte_end":218898,"line_start":478,"line_end":478,"column_start":36,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":220305,"byte_end":220306,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1658},"to":{"krate":0,"index":1652}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":221201,"byte_end":221202,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1671},"to":{"krate":0,"index":1664}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222058,"byte_end":222059,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1685},"to":{"krate":0,"index":1679}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/server/service.rs","byte_start":222969,"byte_end":222970,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":1691}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":225401,"byte_end":225402,"line_start":51,"line_end":51,"column_start":25,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1772},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":226322,"byte_end":226338,"line_start":93,"line_end":93,"column_start":25,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4141},"to":{"krate":41,"index":240}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227028,"byte_end":227046,"line_start":123,"line_end":123,"column_start":12,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227322,"byte_end":227340,"line_start":134,"line_end":134,"column_start":27,"column_end":45},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":227692,"byte_end":227710,"line_start":146,"line_end":146,"column_start":66,"column_end":84},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4152},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229711,"byte_end":229729,"line_start":192,"line_end":192,"column_start":44,"column_end":62},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4152},"to":{"krate":0,"index":1722}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":229975,"byte_end":229989,"line_start":207,"line_end":207,"column_start":9,"column_end":23},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/service/interceptor.rs","byte_start":230367,"byte_end":230381,"line_start":228,"line_end":228,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4204},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":247486,"byte_end":247494,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":259657,"byte_end":259665,"line_start":407,"line_end":407,"column_start":20,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4252},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260424,"byte_end":260432,"line_start":433,"line_end":433,"column_start":25,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4252},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260580,"byte_end":260588,"line_start":441,"line_end":441,"column_start":26,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4252},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260756,"byte_end":260764,"line_start":449,"line_end":449,"column_start":32,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4252},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":260925,"byte_end":260933,"line_start":457,"line_end":457,"column_start":21,"column_end":29},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4252},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/endpoint.rs","byte_start":261069,"byte_end":261077,"line_start":463,"line_end":463,"column_start":18,"column_end":26},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4252},"to":{"krate":2,"index":12996}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":240590,"byte_end":240597,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":244943,"byte_end":244950,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4272},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245435,"byte_end":245449,"line_start":219,"line_end":219,"column_start":17,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2038},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245777,"byte_end":245784,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4272},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/channel/mod.rs","byte_start":245922,"byte_end":245936,"line_start":235,"line_end":235,"column_start":21,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2038},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292040,"byte_end":292054,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292379,"byte_end":292389,"line_start":87,"line_end":87,"column_start":20,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":59,"index":6180},"to":{"krate":0,"index":2086}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292645,"byte_end":292654,"line_start":98,"line_end":98,"column_start":20,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":49,"index":4973},"to":{"krate":0,"index":2086}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/conn.rs","byte_start":292917,"byte_end":292929,"line_start":109,"line_end":109,"column_start":31,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":49,"index":3867},"to":{"krate":0,"index":2086}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":298365,"byte_end":298376,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/incoming.rs","byte_start":300471,"byte_end":300482,"line_start":192,"line_end":192,"column_start":17,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4283},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":301553,"byte_end":301565,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":301680,"byte_end":301692,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4287},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":302312,"byte_end":302326,"line_start":54,"line_end":54,"column_start":32,"column_end":46},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4333},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":303356,"byte_end":303370,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/recover_error.rs","byte_start":303606,"byte_end":303620,"line_start":102,"line_end":102,"column_start":29,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4373},"to":{"krate":20,"index":470}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/unix.rs","byte_start":305217,"byte_end":305227,"line_start":22,"line_end":22,"column_start":32,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":49,"index":6079},"to":{"krate":0,"index":2086}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264102,"byte_end":264108,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4383},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":264958,"byte_end":264964,"line_start":129,"line_end":129,"column_start":43,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":42,"index":5071},"to":{"krate":0,"index":1722}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265021,"byte_end":265027,"line_start":133,"line_end":133,"column_start":6,"column_end":12},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":265271,"byte_end":265277,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":278581,"byte_end":278587,"line_start":532,"line_end":532,"column_start":9,"column_end":15},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":278709,"byte_end":278715,"line_start":538,"line_end":538,"column_start":9,"column_end":15},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":285194,"byte_end":285200,"line_start":697,"line_end":697,"column_start":24,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4383},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":285447,"byte_end":285450,"line_start":708,"line_end":708,"column_start":45,"column_end":48},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2459},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":286655,"byte_end":286664,"line_start":752,"line_end":752,"column_start":32,"column_end":41},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4448},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":287321,"byte_end":287324,"line_start":771,"line_end":771,"column_start":24,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2459},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/server/mod.rs","byte_start":287682,"byte_end":287689,"line_start":785,"line_end":785,"column_start":49,"column_end":56},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2481},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":305836,"byte_end":305841,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":306719,"byte_end":306724,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2509},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":307030,"byte_end":307035,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2509},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/error.rs","byte_start":307168,"byte_end":307173,"line_start":75,"line_end":75,"column_start":19,"column_end":24},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2509},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/add_origin.rs","byte_start":308348,"byte_end":308357,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/add_origin.rs","byte_start":308660,"byte_end":308669,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4461},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":310868,"byte_end":310878,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":313524,"byte_end":313534,"line_start":100,"line_end":100,"column_start":27,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2653},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":313926,"byte_end":313936,"line_start":114,"line_end":114,"column_start":15,"column_end":25},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2653},"to":{"krate":42,"index":1289}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connection.rs","byte_start":314041,"byte_end":314051,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":314850,"byte_end":314859,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":315598,"byte_end":315607,"line_start":58,"line_end":58,"column_start":26,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2707},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":317112,"byte_end":317137,"line_start":106,"line_end":106,"column_start":23,"column_end":48},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4469},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/connector.rs","byte_start":317368,"byte_end":317393,"line_start":113,"line_end":113,"column_start":28,"column_end":53},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4469},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","byte_start":317848,"byte_end":317868,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","byte_start":318018,"byte_end":318038,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2762},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/discover.rs","byte_start":319374,"byte_end":319394,"line_start":56,"line_end":56,"column_start":38,"column_end":58},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2762},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/executor.rs","byte_start":319581,"byte_end":319590,"line_start":9,"line_end":9,"column_start":25,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4474},"to":{"krate":59,"index":892}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/executor.rs","byte_start":319864,"byte_end":319874,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/executor.rs","byte_start":320187,"byte_end":320197,"line_start":39,"line_end":39,"column_start":43,"column_end":53},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4479},"to":{"krate":59,"index":892}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":320735,"byte_end":320746,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":320956,"byte_end":320967,"line_start":30,"line_end":30,"column_start":48,"column_end":59},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4483},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":322402,"byte_end":322416,"line_start":78,"line_end":78,"column_start":28,"column_end":42},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4549},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325727,"byte_end":325741,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4553},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/grpc_timeout.rs","byte_start":325948,"byte_end":325962,"line_start":172,"line_end":172,"column_start":28,"column_end":42},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4553},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":329860,"byte_end":329869,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":49,"index":237},"to":{"krate":0,"index":2908}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":329872,"byte_end":329882,"line_start":11,"line_end":11,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":49,"index":316},"to":{"krate":0,"index":2908}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":329885,"byte_end":329889,"line_start":11,"line_end":11,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":2908}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":329920,"byte_end":329921,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2910},"to":{"krate":0,"index":2908}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330026,"byte_end":330033,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330155,"byte_end":330162,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2911},"to":{"krate":59,"index":4014}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330267,"byte_end":330274,"line_start":31,"line_end":31,"column_start":20,"column_end":27},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2911},"to":{"krate":0,"index":2086}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330479,"byte_end":330486,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2911},"to":{"krate":49,"index":237}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":330712,"byte_end":330719,"line_start":52,"line_end":52,"column_start":21,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2911},"to":{"krate":49,"index":316}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":331601,"byte_end":331609,"line_start":85,"line_end":85,"column_start":10,"column_end":18},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":332451,"byte_end":332459,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2928},"to":{"krate":49,"index":237}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/io.rs","byte_start":332888,"byte_end":332896,"line_start":135,"line_end":135,"column_start":25,"column_end":33},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2928},"to":{"krate":49,"index":316}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":334465,"byte_end":334474,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":334872,"byte_end":334881,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2983},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":338681,"byte_end":338690,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2983},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":339463,"byte_end":339477,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/reconnect.rs","byte_start":339778,"byte_end":339792,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4810},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":340771,"byte_end":340777,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342297,"byte_end":342303,"line_start":71,"line_end":71,"column_start":33,"column_end":39},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4858},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342779,"byte_end":342791,"line_start":89,"line_end":89,"column_start":21,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4896},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/router.rs","byte_start":342929,"byte_end":342941,"line_start":95,"line_end":95,"column_start":17,"column_end":29},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4896},"to":{"krate":2,"index":13770}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/user_agent.rs","byte_start":343552,"byte_end":343561,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/service/user_agent.rs","byte_start":344148,"byte_end":344157,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4899},"to":{"krate":30,"index":13}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":345509,"byte_end":345520,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/transport/tls.rs","byte_start":346193,"byte_end":346204,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4906},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":347005,"byte_end":347015,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348445,"byte_end":348455,"line_start":69,"line_end":69,"column_start":21,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4912},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/extensions.rs","byte_start":348712,"byte_end":348722,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":353221,"byte_end":353227,"line_start":49,"line_end":49,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3306},"to":{"krate":0,"index":3256}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354487,"byte_end":354493,"line_start":87,"line_end":87,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3306},"to":{"krate":0,"index":3259}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":354776,"byte_end":354783,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363201,"byte_end":363202,"line_start":384,"line_end":384,"column_start":28,"column_end":29},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3288},"to":{"krate":0,"index":3256}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363313,"byte_end":363320,"line_start":390,"line_end":390,"column_start":28,"column_end":35},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4921},"to":{"krate":0,"index":3256}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363423,"byte_end":363424,"line_start":396,"line_end":396,"column_start":34,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3294},"to":{"krate":0,"index":3259}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363639,"byte_end":363646,"line_start":408,"line_end":408,"column_start":34,"column_end":41},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4921},"to":{"krate":0,"index":3259}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/request.rs","byte_start":363835,"byte_end":363836,"line_start":420,"line_end":420,"column_start":28,"column_end":29},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3304},"to":{"krate":0,"index":3306}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/response.rs","byte_start":366911,"byte_end":366919,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":374132,"byte_end":374136,"line_start":112,"line_end":112,"column_start":6,"column_end":10},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376099,"byte_end":376103,"line_start":152,"line_end":152,"column_start":28,"column_end":32},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":376275,"byte_end":376281,"line_start":160,"line_end":160,"column_start":6,"column_end":12},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":395064,"byte_end":395070,"line_start":636,"line_end":636,"column_start":21,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4937},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":395985,"byte_end":395991,"line_start":670,"line_end":670,"column_start":26,"column_end":32},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4937},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396142,"byte_end":396147,"line_start":677,"line_end":677,"column_start":27,"column_end":32},"kind":{"Impl":{"id":281}},"from":{"krate":62,"index":4341},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":396256,"byte_end":396262,"line_start":683,"line_end":683,"column_start":31,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4937},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":397346,"byte_end":397352,"line_start":710,"line_end":710,"column_start":23,"column_end":29},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4937},"to":{"krate":2,"index":10302}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":397667,"byte_end":397673,"line_start":723,"line_end":723,"column_start":16,"column_end":22},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4937},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":399546,"byte_end":399550,"line_start":776,"line_end":776,"column_start":6,"column_end":10},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/es/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.9.2/src/status.rs","byte_start":402397,"byte_end":402401,"line_start":844,"line_end":844,"column_start":20,"column_end":24},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":3169}}]}