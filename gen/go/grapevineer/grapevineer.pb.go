// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: grapevineer.proto

package grapevineer

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOGImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseUrl   string   `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	Title     string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tags      []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Body      string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	ColorCode string   `protobuf:"bytes,5,opt,name=color_code,json=colorCode,proto3" json:"color_code,omitempty"`
}

func (x *GetOGImageRequest) Reset() {
	*x = GetOGImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOGImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOGImageRequest) ProtoMessage() {}

func (x *GetOGImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOGImageRequest.ProtoReflect.Descriptor instead.
func (*GetOGImageRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{0}
}

func (x *GetOGImageRequest) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *GetOGImageRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetOGImageRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetOGImageRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *GetOGImageRequest) GetColorCode() string {
	if x != nil {
		return x.ColorCode
	}
	return ""
}

type GetOGImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GetOGImageResponse) Reset() {
	*x = GetOGImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOGImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOGImageResponse) ProtoMessage() {}

func (x *GetOGImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOGImageResponse.ProtoReflect.Descriptor instead.
func (*GetOGImageResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{1}
}

func (x *GetOGImageResponse) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type GetFlowerMeaningByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetFlowerMeaningByDateRequest) Reset() {
	*x = GetFlowerMeaningByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowerMeaningByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowerMeaningByDateRequest) ProtoMessage() {}

func (x *GetFlowerMeaningByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowerMeaningByDateRequest.ProtoReflect.Descriptor instead.
func (*GetFlowerMeaningByDateRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{2}
}

func (x *GetFlowerMeaningByDateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetFlowerMeaningByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string    `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Date    string    `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Sumamry string    `protobuf:"bytes,3,opt,name=sumamry,proto3" json:"sumamry,omitempty"`
	Flowers []*Flower `protobuf:"bytes,4,rep,name=flowers,proto3" json:"flowers,omitempty"`
}

func (x *GetFlowerMeaningByDateResponse) Reset() {
	*x = GetFlowerMeaningByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowerMeaningByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowerMeaningByDateResponse) ProtoMessage() {}

func (x *GetFlowerMeaningByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowerMeaningByDateResponse.ProtoReflect.Descriptor instead.
func (*GetFlowerMeaningByDateResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{3}
}

func (x *GetFlowerMeaningByDateResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetFlowerMeaningByDateResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetFlowerMeaningByDateResponse) GetSumamry() string {
	if x != nil {
		return x.Sumamry
	}
	return ""
}

func (x *GetFlowerMeaningByDateResponse) GetFlowers() []*Flower {
	if x != nil {
		return x.Flowers
	}
	return nil
}

type Flower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hanakotoba  string   `protobuf:"bytes,2,opt,name=hanakotoba,proto3" json:"hanakotoba,omitempty"`
	Origin      []string `protobuf:"bytes,3,rep,name=origin,proto3" json:"origin,omitempty"`
	ImageSource string   `protobuf:"bytes,4,opt,name=image_source,json=imageSource,proto3" json:"image_source,omitempty"`
}

func (x *Flower) Reset() {
	*x = Flower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flower) ProtoMessage() {}

func (x *Flower) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flower.ProtoReflect.Descriptor instead.
func (*Flower) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{4}
}

func (x *Flower) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flower) GetHanakotoba() string {
	if x != nil {
		return x.Hanakotoba
	}
	return ""
}

func (x *Flower) GetOrigin() []string {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Flower) GetImageSource() string {
	if x != nil {
		return x.ImageSource
	}
	return ""
}

type SendLineMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To      string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendLineMessageRequest) Reset() {
	*x = SendLineMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLineMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLineMessageRequest) ProtoMessage() {}

func (x *SendLineMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLineMessageRequest.ProtoReflect.Descriptor instead.
func (*SendLineMessageRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{5}
}

func (x *SendLineMessageRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendLineMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendLineMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendLineMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendLineMessageResponse) Reset() {
	*x = SendLineMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLineMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLineMessageResponse) ProtoMessage() {}

func (x *SendLineMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLineMessageResponse.ProtoReflect.Descriptor instead.
func (*SendLineMessageResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{6}
}

func (x *SendLineMessageResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SendOpenAIMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemPrompt string `protobuf:"bytes,1,opt,name=system_prompt,json=systemPrompt,proto3" json:"system_prompt,omitempty"`
	UserPrompt   string `protobuf:"bytes,2,opt,name=user_prompt,json=userPrompt,proto3" json:"user_prompt,omitempty"`
}

func (x *SendOpenAIMessageRequest) Reset() {
	*x = SendOpenAIMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOpenAIMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOpenAIMessageRequest) ProtoMessage() {}

func (x *SendOpenAIMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOpenAIMessageRequest.ProtoReflect.Descriptor instead.
func (*SendOpenAIMessageRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{7}
}

func (x *SendOpenAIMessageRequest) GetSystemPrompt() string {
	if x != nil {
		return x.SystemPrompt
	}
	return ""
}

func (x *SendOpenAIMessageRequest) GetUserPrompt() string {
	if x != nil {
		return x.UserPrompt
	}
	return ""
}

type SendOpenAIMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendOpenAIMessageResponse) Reset() {
	*x = SendOpenAIMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOpenAIMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOpenAIMessageResponse) ProtoMessage() {}

func (x *SendOpenAIMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOpenAIMessageResponse.ProtoReflect.Descriptor instead.
func (*SendOpenAIMessageResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{8}
}

func (x *SendOpenAIMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Region   string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *SetPlayerRequest) Reset() {
	*x = SetPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerRequest) ProtoMessage() {}

func (x *SetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{9}
}

func (x *SetPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SetPlayerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetPlayerRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type SetPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetPlayerResponse) Reset() {
	*x = SetPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerResponse) ProtoMessage() {}

func (x *SetPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerResponse.ProtoReflect.Descriptor instead.
func (*SetPlayerResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{10}
}

func (x *SetPlayerResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetAllPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllPlayersRequest) Reset() {
	*x = GetAllPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPlayersRequest) ProtoMessage() {}

func (x *GetAllPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPlayersRequest.ProtoReflect.Descriptor instead.
func (*GetAllPlayersRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{11}
}

type GetAllPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *GetAllPlayersResponse) Reset() {
	*x = GetAllPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPlayersResponse) ProtoMessage() {}

func (x *GetAllPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPlayersResponse.ProtoReflect.Descriptor instead.
func (*GetAllPlayersResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllPlayersResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type UpdatePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Region   string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *UpdatePlayerRequest) Reset() {
	*x = UpdatePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerRequest) ProtoMessage() {}

func (x *UpdatePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayerRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePlayerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *UpdatePlayerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePlayerRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type UpdatePlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdatePlayerResponse) Reset() {
	*x = UpdatePlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerResponse) ProtoMessage() {}

func (x *UpdatePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlayerResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePlayerResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Region   string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{15}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetPlayerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Region   string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GetPlayerInfoRequest) Reset() {
	*x = GetPlayerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoRequest) ProtoMessage() {}

func (x *GetPlayerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoRequest) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{16}
}

func (x *GetPlayerInfoRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetPlayerInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPlayerInfoRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetPlayerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player        *Player  `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	RecentMatches []*Match `protobuf:"bytes,2,rep,name=recent_matches,json=recentMatches,proto3" json:"recent_matches,omitempty"`
}

func (x *GetPlayerInfoResponse) Reset() {
	*x = GetPlayerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerInfoResponse) ProtoMessage() {}

func (x *GetPlayerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerInfoResponse) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{17}
}

func (x *GetPlayerInfoResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *GetPlayerInfoResponse) GetRecentMatches() []*Match {
	if x != nil {
		return x.RecentMatches
	}
	return nil
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MatchMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Players  *PlayerInMatch `protobuf:"bytes,2,opt,name=players,proto3" json:"players,omitempty"`
	Red      *Team          `protobuf:"bytes,3,opt,name=red,proto3" json:"red,omitempty"`
	Blue     *Team          `protobuf:"bytes,4,opt,name=blue,proto3" json:"blue,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{18}
}

func (x *Match) GetMetadata() *MatchMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Match) GetPlayers() *PlayerInMatch {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Match) GetRed() *Team {
	if x != nil {
		return x.Red
	}
	return nil
}

func (x *Match) GetBlue() *Team {
	if x != nil {
		return x.Blue
	}
	return nil
}

type MatchMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map              string `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"`
	Mode             string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	GameStartPatched string `protobuf:"bytes,3,opt,name=game_start_patched,json=gameStartPatched,proto3" json:"game_start_patched,omitempty"`
}

func (x *MatchMetadata) Reset() {
	*x = MatchMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchMetadata) ProtoMessage() {}

func (x *MatchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchMetadata.ProtoReflect.Descriptor instead.
func (*MatchMetadata) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{19}
}

func (x *MatchMetadata) GetMap() string {
	if x != nil {
		return x.Map
	}
	return ""
}

func (x *MatchMetadata) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *MatchMetadata) GetGameStartPatched() string {
	if x != nil {
		return x.GameStartPatched
	}
	return ""
}

type PlayerInMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllPlayers []*AllPlayerInMatch `protobuf:"bytes,1,rep,name=all_players,json=allPlayers,proto3" json:"all_players,omitempty"`
}

func (x *PlayerInMatch) Reset() {
	*x = PlayerInMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInMatch) ProtoMessage() {}

func (x *PlayerInMatch) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInMatch.ProtoReflect.Descriptor instead.
func (*PlayerInMatch) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{20}
}

func (x *PlayerInMatch) GetAllPlayers() []*AllPlayerInMatch {
	if x != nil {
		return x.AllPlayers
	}
	return nil
}

type AllPlayerInMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Puuid              string        `protobuf:"bytes,1,opt,name=puuid,proto3" json:"puuid,omitempty"`
	Team               string        `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Stats              *PlayerStats  `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	Character          string        `protobuf:"bytes,4,opt,name=character,proto3" json:"character,omitempty"`
	CurrenttierPatched string        `protobuf:"bytes,5,opt,name=currenttier_patched,json=currenttierPatched,proto3" json:"currenttier_patched,omitempty"`
	DamageMade         int32         `protobuf:"varint,6,opt,name=damage_made,json=damageMade,proto3" json:"damage_made,omitempty"`
	DamageReceived     int32         `protobuf:"varint,7,opt,name=damage_received,json=damageReceived,proto3" json:"damage_received,omitempty"`
	Assets             *PlayerAssets `protobuf:"bytes,8,opt,name=assets,proto3" json:"assets,omitempty"`
}

func (x *AllPlayerInMatch) Reset() {
	*x = AllPlayerInMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllPlayerInMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPlayerInMatch) ProtoMessage() {}

func (x *AllPlayerInMatch) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPlayerInMatch.ProtoReflect.Descriptor instead.
func (*AllPlayerInMatch) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{21}
}

func (x *AllPlayerInMatch) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *AllPlayerInMatch) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *AllPlayerInMatch) GetStats() *PlayerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *AllPlayerInMatch) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *AllPlayerInMatch) GetCurrenttierPatched() string {
	if x != nil {
		return x.CurrenttierPatched
	}
	return ""
}

func (x *AllPlayerInMatch) GetDamageMade() int32 {
	if x != nil {
		return x.DamageMade
	}
	return 0
}

func (x *AllPlayerInMatch) GetDamageReceived() int32 {
	if x != nil {
		return x.DamageReceived
	}
	return 0
}

func (x *AllPlayerInMatch) GetAssets() *PlayerAssets {
	if x != nil {
		return x.Assets
	}
	return nil
}

type PlayerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kills   int32 `protobuf:"varint,1,opt,name=kills,proto3" json:"kills,omitempty"`
	Deaths  int32 `protobuf:"varint,2,opt,name=deaths,proto3" json:"deaths,omitempty"`
	Assists int32 `protobuf:"varint,3,opt,name=assists,proto3" json:"assists,omitempty"`
	Score   int32 `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{22}
}

func (x *PlayerStats) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *PlayerStats) GetDeaths() int32 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *PlayerStats) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *PlayerStats) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type PlayerAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card *PlayerCard `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *PlayerAssets) Reset() {
	*x = PlayerAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAssets) ProtoMessage() {}

func (x *PlayerAssets) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAssets.ProtoReflect.Descriptor instead.
func (*PlayerAssets) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{23}
}

func (x *PlayerAssets) GetCard() *PlayerCard {
	if x != nil {
		return x.Card
	}
	return nil
}

type PlayerCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small string `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"`
	Large string `protobuf:"bytes,2,opt,name=large,proto3" json:"large,omitempty"`
	Wide  string `protobuf:"bytes,3,opt,name=wide,proto3" json:"wide,omitempty"`
}

func (x *PlayerCard) Reset() {
	*x = PlayerCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCard) ProtoMessage() {}

func (x *PlayerCard) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCard.ProtoReflect.Descriptor instead.
func (*PlayerCard) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{24}
}

func (x *PlayerCard) GetSmall() string {
	if x != nil {
		return x.Small
	}
	return ""
}

func (x *PlayerCard) GetLarge() string {
	if x != nil {
		return x.Large
	}
	return ""
}

func (x *PlayerCard) GetWide() string {
	if x != nil {
		return x.Wide
	}
	return ""
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasWon     bool  `protobuf:"varint,1,opt,name=has_won,json=hasWon,proto3" json:"has_won,omitempty"`
	RoundsWon  int32 `protobuf:"varint,2,opt,name=rounds_won,json=roundsWon,proto3" json:"rounds_won,omitempty"`
	RoundsLost int32 `protobuf:"varint,3,opt,name=rounds_lost,json=roundsLost,proto3" json:"rounds_lost,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapevineer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_grapevineer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_grapevineer_proto_rawDescGZIP(), []int{25}
}

func (x *Team) GetHasWon() bool {
	if x != nil {
		return x.HasWon
	}
	return false
}

func (x *Team) GetRoundsWon() int32 {
	if x != nil {
		return x.RoundsWon
	}
	return 0
}

func (x *Team) GetRoundsLost() int32 {
	if x != nil {
		return x.RoundsLost
	}
	return 0
}

var File_grapevineer_proto protoreflect.FileDescriptor

var file_grapevineer_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x47, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4f, 0x47, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x46,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x8f, 0x01,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x61, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x61, 0x6d, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x61, 0x6d, 0x72, 0x79,
	0x12, 0x2d, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x22,
	0x77, 0x0a, 0x06, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x61, 0x6e, 0x61, 0x6b, 0x6f, 0x74, 0x6f, 0x62, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x61, 0x6b, 0x6f, 0x74, 0x6f, 0x62, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x56, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x31, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x60, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x35, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65,
	0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65,
	0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x39, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65,
	0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x05,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76,
	0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69,
	0x6e, 0x65, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x22,
	0x63, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x22, 0x4f, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65,
	0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x61, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x22, 0x6b, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3b, 0x0a,
	0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2b, 0x0a,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x4c, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x72, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x77, 0x69, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x5f, 0x77, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x57, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x5f, 0x77, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x57, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x73, 0x74, 0x32, 0xa8, 0x07, 0x0a, 0x0b, 0x47, 0x72,
	0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4f, 0x47, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76,
	0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x47, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76,
	0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x47, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e,
	0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x94,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x61, 0x6e,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e,
	0x65, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x61,
	0x6e, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x7b,
	0x64, 0x61, 0x74, 0x65, 0x7d, 0x12, 0x76, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65,
	0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x7e, 0x0a,
	0x11, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x25, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e,
	0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0c, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x6b, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x21,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x67, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x1a, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69, 0x6e, 0x65,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76,
	0x69, 0x6e, 0x65, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x73, 0x68, 0x32, 0x6e, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x65, 0x76, 0x69,
	0x6e, 0x65, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70,
	0x65, 0x76, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grapevineer_proto_rawDescOnce sync.Once
	file_grapevineer_proto_rawDescData = file_grapevineer_proto_rawDesc
)

func file_grapevineer_proto_rawDescGZIP() []byte {
	file_grapevineer_proto_rawDescOnce.Do(func() {
		file_grapevineer_proto_rawDescData = protoimpl.X.CompressGZIP(file_grapevineer_proto_rawDescData)
	})
	return file_grapevineer_proto_rawDescData
}

var file_grapevineer_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_grapevineer_proto_goTypes = []interface{}{
	(*GetOGImageRequest)(nil),              // 0: grapevineer.GetOGImageRequest
	(*GetOGImageResponse)(nil),             // 1: grapevineer.GetOGImageResponse
	(*GetFlowerMeaningByDateRequest)(nil),  // 2: grapevineer.GetFlowerMeaningByDateRequest
	(*GetFlowerMeaningByDateResponse)(nil), // 3: grapevineer.GetFlowerMeaningByDateResponse
	(*Flower)(nil),                         // 4: grapevineer.Flower
	(*SendLineMessageRequest)(nil),         // 5: grapevineer.SendLineMessageRequest
	(*SendLineMessageResponse)(nil),        // 6: grapevineer.SendLineMessageResponse
	(*SendOpenAIMessageRequest)(nil),       // 7: grapevineer.SendOpenAIMessageRequest
	(*SendOpenAIMessageResponse)(nil),      // 8: grapevineer.SendOpenAIMessageResponse
	(*SetPlayerRequest)(nil),               // 9: grapevineer.SetPlayerRequest
	(*SetPlayerResponse)(nil),              // 10: grapevineer.SetPlayerResponse
	(*GetAllPlayersRequest)(nil),           // 11: grapevineer.GetAllPlayersRequest
	(*GetAllPlayersResponse)(nil),          // 12: grapevineer.GetAllPlayersResponse
	(*UpdatePlayerRequest)(nil),            // 13: grapevineer.UpdatePlayerRequest
	(*UpdatePlayerResponse)(nil),           // 14: grapevineer.UpdatePlayerResponse
	(*Player)(nil),                         // 15: grapevineer.Player
	(*GetPlayerInfoRequest)(nil),           // 16: grapevineer.GetPlayerInfoRequest
	(*GetPlayerInfoResponse)(nil),          // 17: grapevineer.GetPlayerInfoResponse
	(*Match)(nil),                          // 18: grapevineer.Match
	(*MatchMetadata)(nil),                  // 19: grapevineer.MatchMetadata
	(*PlayerInMatch)(nil),                  // 20: grapevineer.PlayerInMatch
	(*AllPlayerInMatch)(nil),               // 21: grapevineer.AllPlayerInMatch
	(*PlayerStats)(nil),                    // 22: grapevineer.PlayerStats
	(*PlayerAssets)(nil),                   // 23: grapevineer.PlayerAssets
	(*PlayerCard)(nil),                     // 24: grapevineer.PlayerCard
	(*Team)(nil),                           // 25: grapevineer.Team
}
var file_grapevineer_proto_depIdxs = []int32{
	4,  // 0: grapevineer.GetFlowerMeaningByDateResponse.flowers:type_name -> grapevineer.Flower
	15, // 1: grapevineer.GetAllPlayersResponse.players:type_name -> grapevineer.Player
	15, // 2: grapevineer.GetPlayerInfoResponse.player:type_name -> grapevineer.Player
	18, // 3: grapevineer.GetPlayerInfoResponse.recent_matches:type_name -> grapevineer.Match
	19, // 4: grapevineer.Match.metadata:type_name -> grapevineer.MatchMetadata
	20, // 5: grapevineer.Match.players:type_name -> grapevineer.PlayerInMatch
	25, // 6: grapevineer.Match.red:type_name -> grapevineer.Team
	25, // 7: grapevineer.Match.blue:type_name -> grapevineer.Team
	21, // 8: grapevineer.PlayerInMatch.all_players:type_name -> grapevineer.AllPlayerInMatch
	22, // 9: grapevineer.AllPlayerInMatch.stats:type_name -> grapevineer.PlayerStats
	23, // 10: grapevineer.AllPlayerInMatch.assets:type_name -> grapevineer.PlayerAssets
	24, // 11: grapevineer.PlayerAssets.card:type_name -> grapevineer.PlayerCard
	0,  // 12: grapevineer.Grapevineer.GetOGImage:input_type -> grapevineer.GetOGImageRequest
	2,  // 13: grapevineer.Grapevineer.GetFlowerMeaningByDate:input_type -> grapevineer.GetFlowerMeaningByDateRequest
	5,  // 14: grapevineer.Grapevineer.SendLineMessage:input_type -> grapevineer.SendLineMessageRequest
	7,  // 15: grapevineer.Grapevineer.SendOpenAIMessage:input_type -> grapevineer.SendOpenAIMessageRequest
	9,  // 16: grapevineer.Grapevineer.SetPlayer:input_type -> grapevineer.SetPlayerRequest
	11, // 17: grapevineer.Grapevineer.GetAllPlayers:input_type -> grapevineer.GetAllPlayersRequest
	13, // 18: grapevineer.Grapevineer.UpdatePlayer:input_type -> grapevineer.UpdatePlayerRequest
	16, // 19: grapevineer.Grapevineer.GetPlayerInfo:input_type -> grapevineer.GetPlayerInfoRequest
	1,  // 20: grapevineer.Grapevineer.GetOGImage:output_type -> grapevineer.GetOGImageResponse
	3,  // 21: grapevineer.Grapevineer.GetFlowerMeaningByDate:output_type -> grapevineer.GetFlowerMeaningByDateResponse
	6,  // 22: grapevineer.Grapevineer.SendLineMessage:output_type -> grapevineer.SendLineMessageResponse
	8,  // 23: grapevineer.Grapevineer.SendOpenAIMessage:output_type -> grapevineer.SendOpenAIMessageResponse
	10, // 24: grapevineer.Grapevineer.SetPlayer:output_type -> grapevineer.SetPlayerResponse
	12, // 25: grapevineer.Grapevineer.GetAllPlayers:output_type -> grapevineer.GetAllPlayersResponse
	14, // 26: grapevineer.Grapevineer.UpdatePlayer:output_type -> grapevineer.UpdatePlayerResponse
	17, // 27: grapevineer.Grapevineer.GetPlayerInfo:output_type -> grapevineer.GetPlayerInfoResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_grapevineer_proto_init() }
func file_grapevineer_proto_init() {
	if File_grapevineer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grapevineer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOGImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOGImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowerMeaningByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowerMeaningByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLineMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLineMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOpenAIMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOpenAIMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllPlayerInMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapevineer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grapevineer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grapevineer_proto_goTypes,
		DependencyIndexes: file_grapevineer_proto_depIdxs,
		MessageInfos:      file_grapevineer_proto_msgTypes,
	}.Build()
	File_grapevineer_proto = out.File
	file_grapevineer_proto_rawDesc = nil
	file_grapevineer_proto_goTypes = nil
	file_grapevineer_proto_depIdxs = nil
}
