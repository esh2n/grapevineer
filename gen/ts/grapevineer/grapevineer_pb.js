// source: grapevineer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.grapevineer.AllPlayerInMatch', null, global);
goog.exportSymbol('proto.grapevineer.Flower', null, global);
goog.exportSymbol('proto.grapevineer.GetAllPlayersRequest', null, global);
goog.exportSymbol('proto.grapevineer.GetAllPlayersResponse', null, global);
goog.exportSymbol('proto.grapevineer.GetFlowerMeaningByDateRequest', null, global);
goog.exportSymbol('proto.grapevineer.GetFlowerMeaningByDateResponse', null, global);
goog.exportSymbol('proto.grapevineer.GetOGImageRequest', null, global);
goog.exportSymbol('proto.grapevineer.GetOGImageResponse', null, global);
goog.exportSymbol('proto.grapevineer.GetPlayerInfoRequest', null, global);
goog.exportSymbol('proto.grapevineer.GetPlayerInfoResponse', null, global);
goog.exportSymbol('proto.grapevineer.Match', null, global);
goog.exportSymbol('proto.grapevineer.MatchMetadata', null, global);
goog.exportSymbol('proto.grapevineer.Player', null, global);
goog.exportSymbol('proto.grapevineer.PlayerAssets', null, global);
goog.exportSymbol('proto.grapevineer.PlayerCard', null, global);
goog.exportSymbol('proto.grapevineer.PlayerInMatch', null, global);
goog.exportSymbol('proto.grapevineer.PlayerStats', null, global);
goog.exportSymbol('proto.grapevineer.SendLineMessageRequest', null, global);
goog.exportSymbol('proto.grapevineer.SendLineMessageResponse', null, global);
goog.exportSymbol('proto.grapevineer.SendOpenAIMessageRequest', null, global);
goog.exportSymbol('proto.grapevineer.SendOpenAIMessageResponse', null, global);
goog.exportSymbol('proto.grapevineer.SetPlayerRequest', null, global);
goog.exportSymbol('proto.grapevineer.SetPlayerResponse', null, global);
goog.exportSymbol('proto.grapevineer.Team', null, global);
goog.exportSymbol('proto.grapevineer.UpdatePlayerRequest', null, global);
goog.exportSymbol('proto.grapevineer.UpdatePlayerResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetOGImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grapevineer.GetOGImageRequest.repeatedFields_, null);
};
goog.inherits(proto.grapevineer.GetOGImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetOGImageRequest.displayName = 'proto.grapevineer.GetOGImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetOGImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.GetOGImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetOGImageResponse.displayName = 'proto.grapevineer.GetOGImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetFlowerMeaningByDateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.GetFlowerMeaningByDateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetFlowerMeaningByDateRequest.displayName = 'proto.grapevineer.GetFlowerMeaningByDateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetFlowerMeaningByDateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grapevineer.GetFlowerMeaningByDateResponse.repeatedFields_, null);
};
goog.inherits(proto.grapevineer.GetFlowerMeaningByDateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetFlowerMeaningByDateResponse.displayName = 'proto.grapevineer.GetFlowerMeaningByDateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.Flower = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grapevineer.Flower.repeatedFields_, null);
};
goog.inherits(proto.grapevineer.Flower, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.Flower.displayName = 'proto.grapevineer.Flower';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.SendLineMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.SendLineMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.SendLineMessageRequest.displayName = 'proto.grapevineer.SendLineMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.SendLineMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.SendLineMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.SendLineMessageResponse.displayName = 'proto.grapevineer.SendLineMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.SendOpenAIMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.SendOpenAIMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.SendOpenAIMessageRequest.displayName = 'proto.grapevineer.SendOpenAIMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.SendOpenAIMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.SendOpenAIMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.SendOpenAIMessageResponse.displayName = 'proto.grapevineer.SendOpenAIMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.SetPlayerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.SetPlayerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.SetPlayerRequest.displayName = 'proto.grapevineer.SetPlayerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.SetPlayerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.SetPlayerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.SetPlayerResponse.displayName = 'proto.grapevineer.SetPlayerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetAllPlayersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.GetAllPlayersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetAllPlayersRequest.displayName = 'proto.grapevineer.GetAllPlayersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetAllPlayersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grapevineer.GetAllPlayersResponse.repeatedFields_, null);
};
goog.inherits(proto.grapevineer.GetAllPlayersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetAllPlayersResponse.displayName = 'proto.grapevineer.GetAllPlayersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.UpdatePlayerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.UpdatePlayerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.UpdatePlayerRequest.displayName = 'proto.grapevineer.UpdatePlayerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.UpdatePlayerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.UpdatePlayerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.UpdatePlayerResponse.displayName = 'proto.grapevineer.UpdatePlayerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.Player = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.Player, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.Player.displayName = 'proto.grapevineer.Player';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetPlayerInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.GetPlayerInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetPlayerInfoRequest.displayName = 'proto.grapevineer.GetPlayerInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.GetPlayerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grapevineer.GetPlayerInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.grapevineer.GetPlayerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.GetPlayerInfoResponse.displayName = 'proto.grapevineer.GetPlayerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.Match = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.Match, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.Match.displayName = 'proto.grapevineer.Match';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.MatchMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.MatchMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.MatchMetadata.displayName = 'proto.grapevineer.MatchMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.PlayerInMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grapevineer.PlayerInMatch.repeatedFields_, null);
};
goog.inherits(proto.grapevineer.PlayerInMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.PlayerInMatch.displayName = 'proto.grapevineer.PlayerInMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.AllPlayerInMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.AllPlayerInMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.AllPlayerInMatch.displayName = 'proto.grapevineer.AllPlayerInMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.PlayerStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.PlayerStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.PlayerStats.displayName = 'proto.grapevineer.PlayerStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.PlayerAssets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.PlayerAssets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.PlayerAssets.displayName = 'proto.grapevineer.PlayerAssets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.PlayerCard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.PlayerCard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.PlayerCard.displayName = 'proto.grapevineer.PlayerCard';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grapevineer.Team = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grapevineer.Team, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grapevineer.Team.displayName = 'proto.grapevineer.Team';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grapevineer.GetOGImageRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetOGImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetOGImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetOGImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetOGImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    body: jspb.Message.getFieldWithDefault(msg, 4, ""),
    colorCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetOGImageRequest}
 */
proto.grapevineer.GetOGImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetOGImageRequest;
  return proto.grapevineer.GetOGImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetOGImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetOGImageRequest}
 */
proto.grapevineer.GetOGImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setColorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetOGImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetOGImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetOGImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetOGImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getColorCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string base_url = 1;
 * @return {string}
 */
proto.grapevineer.GetOGImageRequest.prototype.getBaseUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.setBaseUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.grapevineer.GetOGImageRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.grapevineer.GetOGImageRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string body = 4;
 * @return {string}
 */
proto.grapevineer.GetOGImageRequest.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string color_code = 5;
 * @return {string}
 */
proto.grapevineer.GetOGImageRequest.prototype.getColorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetOGImageRequest} returns this
 */
proto.grapevineer.GetOGImageRequest.prototype.setColorCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetOGImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetOGImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetOGImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetOGImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: msg.getImage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetOGImageResponse}
 */
proto.grapevineer.GetOGImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetOGImageResponse;
  return proto.grapevineer.GetOGImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetOGImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetOGImageResponse}
 */
proto.grapevineer.GetOGImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetOGImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetOGImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetOGImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetOGImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes image = 1;
 * @return {!(string|Uint8Array)}
 */
proto.grapevineer.GetOGImageResponse.prototype.getImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes image = 1;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */
proto.grapevineer.GetOGImageResponse.prototype.getImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImage()));
};


/**
 * optional bytes image = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */
proto.grapevineer.GetOGImageResponse.prototype.getImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.grapevineer.GetOGImageResponse} returns this
 */
proto.grapevineer.GetOGImageResponse.prototype.setImage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetFlowerMeaningByDateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetFlowerMeaningByDateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetFlowerMeaningByDateRequest}
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetFlowerMeaningByDateRequest;
  return proto.grapevineer.GetFlowerMeaningByDateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetFlowerMeaningByDateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetFlowerMeaningByDateRequest}
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetFlowerMeaningByDateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetFlowerMeaningByDateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string date = 1;
 * @return {string}
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetFlowerMeaningByDateRequest} returns this
 */
proto.grapevineer.GetFlowerMeaningByDateRequest.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetFlowerMeaningByDateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetFlowerMeaningByDateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    date: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sumamry: jspb.Message.getFieldWithDefault(msg, 3, ""),
    flowersList: jspb.Message.toObjectList(msg.getFlowersList(),
    proto.grapevineer.Flower.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetFlowerMeaningByDateResponse;
  return proto.grapevineer.GetFlowerMeaningByDateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetFlowerMeaningByDateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSumamry(value);
      break;
    case 4:
      var value = new proto.grapevineer.Flower;
      reader.readMessage(value,proto.grapevineer.Flower.deserializeBinaryFromReader);
      msg.addFlowers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetFlowerMeaningByDateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetFlowerMeaningByDateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSumamry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFlowersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.grapevineer.Flower.serializeBinaryToWriter
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse} returns this
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string date = 2;
 * @return {string}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse} returns this
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sumamry = 3;
 * @return {string}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.getSumamry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse} returns this
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.setSumamry = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Flower flowers = 4;
 * @return {!Array<!proto.grapevineer.Flower>}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.getFlowersList = function() {
  return /** @type{!Array<!proto.grapevineer.Flower>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grapevineer.Flower, 4));
};


/**
 * @param {!Array<!proto.grapevineer.Flower>} value
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse} returns this
*/
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.setFlowersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.grapevineer.Flower=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grapevineer.Flower}
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.addFlowers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.grapevineer.Flower, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grapevineer.GetFlowerMeaningByDateResponse} returns this
 */
proto.grapevineer.GetFlowerMeaningByDateResponse.prototype.clearFlowersList = function() {
  return this.setFlowersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grapevineer.Flower.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.Flower.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.Flower.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.Flower} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Flower.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hanakotoba: jspb.Message.getFieldWithDefault(msg, 2, ""),
    originList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    imageSource: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.Flower}
 */
proto.grapevineer.Flower.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.Flower;
  return proto.grapevineer.Flower.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.Flower} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.Flower}
 */
proto.grapevineer.Flower.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHanakotoba(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrigin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.Flower.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.Flower.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.Flower} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Flower.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHanakotoba();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOriginList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getImageSource();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grapevineer.Flower.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Flower} returns this
 */
proto.grapevineer.Flower.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hanakotoba = 2;
 * @return {string}
 */
proto.grapevineer.Flower.prototype.getHanakotoba = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Flower} returns this
 */
proto.grapevineer.Flower.prototype.setHanakotoba = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string origin = 3;
 * @return {!Array<string>}
 */
proto.grapevineer.Flower.prototype.getOriginList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grapevineer.Flower} returns this
 */
proto.grapevineer.Flower.prototype.setOriginList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grapevineer.Flower} returns this
 */
proto.grapevineer.Flower.prototype.addOrigin = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grapevineer.Flower} returns this
 */
proto.grapevineer.Flower.prototype.clearOriginList = function() {
  return this.setOriginList([]);
};


/**
 * optional string image_source = 4;
 * @return {string}
 */
proto.grapevineer.Flower.prototype.getImageSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Flower} returns this
 */
proto.grapevineer.Flower.prototype.setImageSource = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.SendLineMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.SendLineMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.SendLineMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendLineMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    to: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.SendLineMessageRequest}
 */
proto.grapevineer.SendLineMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.SendLineMessageRequest;
  return proto.grapevineer.SendLineMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.SendLineMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.SendLineMessageRequest}
 */
proto.grapevineer.SendLineMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.SendLineMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.SendLineMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.SendLineMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendLineMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string to = 1;
 * @return {string}
 */
proto.grapevineer.SendLineMessageRequest.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SendLineMessageRequest} returns this
 */
proto.grapevineer.SendLineMessageRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.grapevineer.SendLineMessageRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SendLineMessageRequest} returns this
 */
proto.grapevineer.SendLineMessageRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.grapevineer.SendLineMessageRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SendLineMessageRequest} returns this
 */
proto.grapevineer.SendLineMessageRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.SendLineMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.SendLineMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.SendLineMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendLineMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.SendLineMessageResponse}
 */
proto.grapevineer.SendLineMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.SendLineMessageResponse;
  return proto.grapevineer.SendLineMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.SendLineMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.SendLineMessageResponse}
 */
proto.grapevineer.SendLineMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.SendLineMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.SendLineMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.SendLineMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendLineMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.grapevineer.SendLineMessageResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.SendLineMessageResponse} returns this
 */
proto.grapevineer.SendLineMessageResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.SendOpenAIMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.SendOpenAIMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.SendOpenAIMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendOpenAIMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    systemPrompt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userPrompt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.SendOpenAIMessageRequest}
 */
proto.grapevineer.SendOpenAIMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.SendOpenAIMessageRequest;
  return proto.grapevineer.SendOpenAIMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.SendOpenAIMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.SendOpenAIMessageRequest}
 */
proto.grapevineer.SendOpenAIMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemPrompt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPrompt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.SendOpenAIMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.SendOpenAIMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.SendOpenAIMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendOpenAIMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSystemPrompt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserPrompt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string system_prompt = 1;
 * @return {string}
 */
proto.grapevineer.SendOpenAIMessageRequest.prototype.getSystemPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SendOpenAIMessageRequest} returns this
 */
proto.grapevineer.SendOpenAIMessageRequest.prototype.setSystemPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_prompt = 2;
 * @return {string}
 */
proto.grapevineer.SendOpenAIMessageRequest.prototype.getUserPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SendOpenAIMessageRequest} returns this
 */
proto.grapevineer.SendOpenAIMessageRequest.prototype.setUserPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.SendOpenAIMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.SendOpenAIMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.SendOpenAIMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendOpenAIMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.SendOpenAIMessageResponse}
 */
proto.grapevineer.SendOpenAIMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.SendOpenAIMessageResponse;
  return proto.grapevineer.SendOpenAIMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.SendOpenAIMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.SendOpenAIMessageResponse}
 */
proto.grapevineer.SendOpenAIMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.SendOpenAIMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.SendOpenAIMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.SendOpenAIMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SendOpenAIMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.grapevineer.SendOpenAIMessageResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SendOpenAIMessageResponse} returns this
 */
proto.grapevineer.SendOpenAIMessageResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.SetPlayerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.SetPlayerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.SetPlayerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SetPlayerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    region: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.SetPlayerRequest}
 */
proto.grapevineer.SetPlayerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.SetPlayerRequest;
  return proto.grapevineer.SetPlayerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.SetPlayerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.SetPlayerRequest}
 */
proto.grapevineer.SetPlayerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.SetPlayerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.SetPlayerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.SetPlayerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SetPlayerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.grapevineer.SetPlayerRequest.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SetPlayerRequest} returns this
 */
proto.grapevineer.SetPlayerRequest.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.grapevineer.SetPlayerRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SetPlayerRequest} returns this
 */
proto.grapevineer.SetPlayerRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.grapevineer.SetPlayerRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.SetPlayerRequest} returns this
 */
proto.grapevineer.SetPlayerRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.SetPlayerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.SetPlayerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.SetPlayerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SetPlayerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.SetPlayerResponse}
 */
proto.grapevineer.SetPlayerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.SetPlayerResponse;
  return proto.grapevineer.SetPlayerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.SetPlayerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.SetPlayerResponse}
 */
proto.grapevineer.SetPlayerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.SetPlayerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.SetPlayerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.SetPlayerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.SetPlayerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.grapevineer.SetPlayerResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.SetPlayerResponse} returns this
 */
proto.grapevineer.SetPlayerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetAllPlayersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetAllPlayersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetAllPlayersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetAllPlayersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetAllPlayersRequest}
 */
proto.grapevineer.GetAllPlayersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetAllPlayersRequest;
  return proto.grapevineer.GetAllPlayersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetAllPlayersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetAllPlayersRequest}
 */
proto.grapevineer.GetAllPlayersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetAllPlayersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetAllPlayersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetAllPlayersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetAllPlayersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grapevineer.GetAllPlayersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetAllPlayersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetAllPlayersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetAllPlayersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetAllPlayersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    playersList: jspb.Message.toObjectList(msg.getPlayersList(),
    proto.grapevineer.Player.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetAllPlayersResponse}
 */
proto.grapevineer.GetAllPlayersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetAllPlayersResponse;
  return proto.grapevineer.GetAllPlayersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetAllPlayersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetAllPlayersResponse}
 */
proto.grapevineer.GetAllPlayersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grapevineer.Player;
      reader.readMessage(value,proto.grapevineer.Player.deserializeBinaryFromReader);
      msg.addPlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetAllPlayersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetAllPlayersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetAllPlayersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetAllPlayersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grapevineer.Player.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Player players = 1;
 * @return {!Array<!proto.grapevineer.Player>}
 */
proto.grapevineer.GetAllPlayersResponse.prototype.getPlayersList = function() {
  return /** @type{!Array<!proto.grapevineer.Player>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grapevineer.Player, 1));
};


/**
 * @param {!Array<!proto.grapevineer.Player>} value
 * @return {!proto.grapevineer.GetAllPlayersResponse} returns this
*/
proto.grapevineer.GetAllPlayersResponse.prototype.setPlayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grapevineer.Player=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grapevineer.Player}
 */
proto.grapevineer.GetAllPlayersResponse.prototype.addPlayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grapevineer.Player, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grapevineer.GetAllPlayersResponse} returns this
 */
proto.grapevineer.GetAllPlayersResponse.prototype.clearPlayersList = function() {
  return this.setPlayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.UpdatePlayerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.UpdatePlayerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.UpdatePlayerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.UpdatePlayerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    region: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.UpdatePlayerRequest}
 */
proto.grapevineer.UpdatePlayerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.UpdatePlayerRequest;
  return proto.grapevineer.UpdatePlayerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.UpdatePlayerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.UpdatePlayerRequest}
 */
proto.grapevineer.UpdatePlayerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.UpdatePlayerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.UpdatePlayerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.UpdatePlayerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.UpdatePlayerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.grapevineer.UpdatePlayerRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.UpdatePlayerRequest} returns this
 */
proto.grapevineer.UpdatePlayerRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string player_id = 2;
 * @return {string}
 */
proto.grapevineer.UpdatePlayerRequest.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.UpdatePlayerRequest} returns this
 */
proto.grapevineer.UpdatePlayerRequest.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.grapevineer.UpdatePlayerRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.UpdatePlayerRequest} returns this
 */
proto.grapevineer.UpdatePlayerRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.grapevineer.UpdatePlayerRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.UpdatePlayerRequest} returns this
 */
proto.grapevineer.UpdatePlayerRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.UpdatePlayerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.UpdatePlayerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.UpdatePlayerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.UpdatePlayerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.UpdatePlayerResponse}
 */
proto.grapevineer.UpdatePlayerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.UpdatePlayerResponse;
  return proto.grapevineer.UpdatePlayerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.UpdatePlayerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.UpdatePlayerResponse}
 */
proto.grapevineer.UpdatePlayerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.UpdatePlayerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.UpdatePlayerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.UpdatePlayerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.UpdatePlayerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.grapevineer.UpdatePlayerResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.UpdatePlayerResponse} returns this
 */
proto.grapevineer.UpdatePlayerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.Player.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.Player.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.Player} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Player.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    region: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.Player}
 */
proto.grapevineer.Player.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.Player;
  return proto.grapevineer.Player.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.Player} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.Player}
 */
proto.grapevineer.Player.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.Player.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.Player.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.Player} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Player.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.grapevineer.Player.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Player} returns this
 */
proto.grapevineer.Player.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string player_id = 2;
 * @return {string}
 */
proto.grapevineer.Player.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Player} returns this
 */
proto.grapevineer.Player.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.grapevineer.Player.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Player} returns this
 */
proto.grapevineer.Player.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.grapevineer.Player.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.Player} returns this
 */
proto.grapevineer.Player.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetPlayerInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetPlayerInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetPlayerInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    region: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetPlayerInfoRequest}
 */
proto.grapevineer.GetPlayerInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetPlayerInfoRequest;
  return proto.grapevineer.GetPlayerInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetPlayerInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetPlayerInfoRequest}
 */
proto.grapevineer.GetPlayerInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetPlayerInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetPlayerInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetPlayerInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetPlayerInfoRequest} returns this
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetPlayerInfoRequest} returns this
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.GetPlayerInfoRequest} returns this
 */
proto.grapevineer.GetPlayerInfoRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grapevineer.GetPlayerInfoResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.GetPlayerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.GetPlayerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetPlayerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    player: (f = msg.getPlayer()) && proto.grapevineer.Player.toObject(includeInstance, f),
    recentMatchesList: jspb.Message.toObjectList(msg.getRecentMatchesList(),
    proto.grapevineer.Match.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.GetPlayerInfoResponse}
 */
proto.grapevineer.GetPlayerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.GetPlayerInfoResponse;
  return proto.grapevineer.GetPlayerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.GetPlayerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.GetPlayerInfoResponse}
 */
proto.grapevineer.GetPlayerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grapevineer.Player;
      reader.readMessage(value,proto.grapevineer.Player.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    case 2:
      var value = new proto.grapevineer.Match;
      reader.readMessage(value,proto.grapevineer.Match.deserializeBinaryFromReader);
      msg.addRecentMatches(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.GetPlayerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.GetPlayerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.GetPlayerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grapevineer.Player.serializeBinaryToWriter
    );
  }
  f = message.getRecentMatchesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grapevineer.Match.serializeBinaryToWriter
    );
  }
};


/**
 * optional Player player = 1;
 * @return {?proto.grapevineer.Player}
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.getPlayer = function() {
  return /** @type{?proto.grapevineer.Player} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.Player, 1));
};


/**
 * @param {?proto.grapevineer.Player|undefined} value
 * @return {!proto.grapevineer.GetPlayerInfoResponse} returns this
*/
proto.grapevineer.GetPlayerInfoResponse.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.GetPlayerInfoResponse} returns this
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Match recent_matches = 2;
 * @return {!Array<!proto.grapevineer.Match>}
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.getRecentMatchesList = function() {
  return /** @type{!Array<!proto.grapevineer.Match>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grapevineer.Match, 2));
};


/**
 * @param {!Array<!proto.grapevineer.Match>} value
 * @return {!proto.grapevineer.GetPlayerInfoResponse} returns this
*/
proto.grapevineer.GetPlayerInfoResponse.prototype.setRecentMatchesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grapevineer.Match=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grapevineer.Match}
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.addRecentMatches = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grapevineer.Match, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grapevineer.GetPlayerInfoResponse} returns this
 */
proto.grapevineer.GetPlayerInfoResponse.prototype.clearRecentMatchesList = function() {
  return this.setRecentMatchesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.Match.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.Match.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.Match} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Match.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.grapevineer.MatchMetadata.toObject(includeInstance, f),
    players: (f = msg.getPlayers()) && proto.grapevineer.PlayerInMatch.toObject(includeInstance, f),
    red: (f = msg.getRed()) && proto.grapevineer.Team.toObject(includeInstance, f),
    blue: (f = msg.getBlue()) && proto.grapevineer.Team.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.Match}
 */
proto.grapevineer.Match.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.Match;
  return proto.grapevineer.Match.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.Match} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.Match}
 */
proto.grapevineer.Match.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grapevineer.MatchMetadata;
      reader.readMessage(value,proto.grapevineer.MatchMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.grapevineer.PlayerInMatch;
      reader.readMessage(value,proto.grapevineer.PlayerInMatch.deserializeBinaryFromReader);
      msg.setPlayers(value);
      break;
    case 3:
      var value = new proto.grapevineer.Team;
      reader.readMessage(value,proto.grapevineer.Team.deserializeBinaryFromReader);
      msg.setRed(value);
      break;
    case 4:
      var value = new proto.grapevineer.Team;
      reader.readMessage(value,proto.grapevineer.Team.deserializeBinaryFromReader);
      msg.setBlue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.Match.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.Match.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.Match} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Match.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grapevineer.MatchMetadata.serializeBinaryToWriter
    );
  }
  f = message.getPlayers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grapevineer.PlayerInMatch.serializeBinaryToWriter
    );
  }
  f = message.getRed();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.grapevineer.Team.serializeBinaryToWriter
    );
  }
  f = message.getBlue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.grapevineer.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional MatchMetadata metadata = 1;
 * @return {?proto.grapevineer.MatchMetadata}
 */
proto.grapevineer.Match.prototype.getMetadata = function() {
  return /** @type{?proto.grapevineer.MatchMetadata} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.MatchMetadata, 1));
};


/**
 * @param {?proto.grapevineer.MatchMetadata|undefined} value
 * @return {!proto.grapevineer.Match} returns this
*/
proto.grapevineer.Match.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.Match} returns this
 */
proto.grapevineer.Match.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.Match.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlayerInMatch players = 2;
 * @return {?proto.grapevineer.PlayerInMatch}
 */
proto.grapevineer.Match.prototype.getPlayers = function() {
  return /** @type{?proto.grapevineer.PlayerInMatch} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.PlayerInMatch, 2));
};


/**
 * @param {?proto.grapevineer.PlayerInMatch|undefined} value
 * @return {!proto.grapevineer.Match} returns this
*/
proto.grapevineer.Match.prototype.setPlayers = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.Match} returns this
 */
proto.grapevineer.Match.prototype.clearPlayers = function() {
  return this.setPlayers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.Match.prototype.hasPlayers = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Team red = 3;
 * @return {?proto.grapevineer.Team}
 */
proto.grapevineer.Match.prototype.getRed = function() {
  return /** @type{?proto.grapevineer.Team} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.Team, 3));
};


/**
 * @param {?proto.grapevineer.Team|undefined} value
 * @return {!proto.grapevineer.Match} returns this
*/
proto.grapevineer.Match.prototype.setRed = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.Match} returns this
 */
proto.grapevineer.Match.prototype.clearRed = function() {
  return this.setRed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.Match.prototype.hasRed = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Team blue = 4;
 * @return {?proto.grapevineer.Team}
 */
proto.grapevineer.Match.prototype.getBlue = function() {
  return /** @type{?proto.grapevineer.Team} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.Team, 4));
};


/**
 * @param {?proto.grapevineer.Team|undefined} value
 * @return {!proto.grapevineer.Match} returns this
*/
proto.grapevineer.Match.prototype.setBlue = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.Match} returns this
 */
proto.grapevineer.Match.prototype.clearBlue = function() {
  return this.setBlue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.Match.prototype.hasBlue = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.MatchMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.MatchMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.MatchMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.MatchMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    map: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gameStartPatched: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.MatchMetadata}
 */
proto.grapevineer.MatchMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.MatchMetadata;
  return proto.grapevineer.MatchMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.MatchMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.MatchMetadata}
 */
proto.grapevineer.MatchMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMap(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameStartPatched(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.MatchMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.MatchMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.MatchMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.MatchMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMap();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGameStartPatched();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string map = 1;
 * @return {string}
 */
proto.grapevineer.MatchMetadata.prototype.getMap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.MatchMetadata} returns this
 */
proto.grapevineer.MatchMetadata.prototype.setMap = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mode = 2;
 * @return {string}
 */
proto.grapevineer.MatchMetadata.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.MatchMetadata} returns this
 */
proto.grapevineer.MatchMetadata.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string game_start_patched = 3;
 * @return {string}
 */
proto.grapevineer.MatchMetadata.prototype.getGameStartPatched = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.MatchMetadata} returns this
 */
proto.grapevineer.MatchMetadata.prototype.setGameStartPatched = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grapevineer.PlayerInMatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.PlayerInMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.PlayerInMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.PlayerInMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerInMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    allPlayersList: jspb.Message.toObjectList(msg.getAllPlayersList(),
    proto.grapevineer.AllPlayerInMatch.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.PlayerInMatch}
 */
proto.grapevineer.PlayerInMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.PlayerInMatch;
  return proto.grapevineer.PlayerInMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.PlayerInMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.PlayerInMatch}
 */
proto.grapevineer.PlayerInMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grapevineer.AllPlayerInMatch;
      reader.readMessage(value,proto.grapevineer.AllPlayerInMatch.deserializeBinaryFromReader);
      msg.addAllPlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.PlayerInMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.PlayerInMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.PlayerInMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerInMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grapevineer.AllPlayerInMatch.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AllPlayerInMatch all_players = 1;
 * @return {!Array<!proto.grapevineer.AllPlayerInMatch>}
 */
proto.grapevineer.PlayerInMatch.prototype.getAllPlayersList = function() {
  return /** @type{!Array<!proto.grapevineer.AllPlayerInMatch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grapevineer.AllPlayerInMatch, 1));
};


/**
 * @param {!Array<!proto.grapevineer.AllPlayerInMatch>} value
 * @return {!proto.grapevineer.PlayerInMatch} returns this
*/
proto.grapevineer.PlayerInMatch.prototype.setAllPlayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grapevineer.AllPlayerInMatch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grapevineer.AllPlayerInMatch}
 */
proto.grapevineer.PlayerInMatch.prototype.addAllPlayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grapevineer.AllPlayerInMatch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grapevineer.PlayerInMatch} returns this
 */
proto.grapevineer.PlayerInMatch.prototype.clearAllPlayersList = function() {
  return this.setAllPlayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.AllPlayerInMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.AllPlayerInMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.AllPlayerInMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.AllPlayerInMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    puuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    team: jspb.Message.getFieldWithDefault(msg, 4, ""),
    stats: (f = msg.getStats()) && proto.grapevineer.PlayerStats.toObject(includeInstance, f),
    character: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currenttierPatched: jspb.Message.getFieldWithDefault(msg, 7, ""),
    damageMade: jspb.Message.getFieldWithDefault(msg, 8, 0),
    damageReceived: jspb.Message.getFieldWithDefault(msg, 9, 0),
    assets: (f = msg.getAssets()) && proto.grapevineer.PlayerAssets.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.AllPlayerInMatch}
 */
proto.grapevineer.AllPlayerInMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.AllPlayerInMatch;
  return proto.grapevineer.AllPlayerInMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.AllPlayerInMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.AllPlayerInMatch}
 */
proto.grapevineer.AllPlayerInMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeam(value);
      break;
    case 5:
      var value = new proto.grapevineer.PlayerStats;
      reader.readMessage(value,proto.grapevineer.PlayerStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCharacter(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrenttierPatched(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDamageMade(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDamageReceived(value);
      break;
    case 10:
      var value = new proto.grapevineer.PlayerAssets;
      reader.readMessage(value,proto.grapevineer.PlayerAssets.deserializeBinaryFromReader);
      msg.setAssets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.AllPlayerInMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.AllPlayerInMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.AllPlayerInMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.AllPlayerInMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPuuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTeam();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.grapevineer.PlayerStats.serializeBinaryToWriter
    );
  }
  f = message.getCharacter();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrenttierPatched();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDamageMade();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDamageReceived();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAssets();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.grapevineer.PlayerAssets.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string puuid = 3;
 * @return {string}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getPuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setPuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string team = 4;
 * @return {string}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getTeam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setTeam = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional PlayerStats stats = 5;
 * @return {?proto.grapevineer.PlayerStats}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getStats = function() {
  return /** @type{?proto.grapevineer.PlayerStats} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.PlayerStats, 5));
};


/**
 * @param {?proto.grapevineer.PlayerStats|undefined} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
*/
proto.grapevineer.AllPlayerInMatch.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.AllPlayerInMatch.prototype.hasStats = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string character = 6;
 * @return {string}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getCharacter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setCharacter = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string currenttier_patched = 7;
 * @return {string}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getCurrenttierPatched = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setCurrenttierPatched = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 damage_made = 8;
 * @return {number}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getDamageMade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setDamageMade = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 damage_received = 9;
 * @return {number}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getDamageReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.setDamageReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional PlayerAssets assets = 10;
 * @return {?proto.grapevineer.PlayerAssets}
 */
proto.grapevineer.AllPlayerInMatch.prototype.getAssets = function() {
  return /** @type{?proto.grapevineer.PlayerAssets} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.PlayerAssets, 10));
};


/**
 * @param {?proto.grapevineer.PlayerAssets|undefined} value
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
*/
proto.grapevineer.AllPlayerInMatch.prototype.setAssets = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.AllPlayerInMatch} returns this
 */
proto.grapevineer.AllPlayerInMatch.prototype.clearAssets = function() {
  return this.setAssets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.AllPlayerInMatch.prototype.hasAssets = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.PlayerStats.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.PlayerStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.PlayerStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    kills: jspb.Message.getFieldWithDefault(msg, 1, 0),
    deaths: jspb.Message.getFieldWithDefault(msg, 2, 0),
    assists: jspb.Message.getFieldWithDefault(msg, 3, 0),
    score: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bodyshots: jspb.Message.getFieldWithDefault(msg, 5, 0),
    headshots: jspb.Message.getFieldWithDefault(msg, 6, 0),
    legshots: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.PlayerStats}
 */
proto.grapevineer.PlayerStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.PlayerStats;
  return proto.grapevineer.PlayerStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.PlayerStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.PlayerStats}
 */
proto.grapevineer.PlayerStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKills(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeaths(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssists(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBodyshots(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeadshots(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLegshots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.PlayerStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.PlayerStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.PlayerStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKills();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDeaths();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAssists();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBodyshots();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getHeadshots();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getLegshots();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 kills = 1;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getKills = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setKills = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 deaths = 2;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getDeaths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setDeaths = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 assists = 3;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getAssists = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setAssists = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 score = 4;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 bodyshots = 5;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getBodyshots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setBodyshots = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 headshots = 6;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getHeadshots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setHeadshots = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 legshots = 7;
 * @return {number}
 */
proto.grapevineer.PlayerStats.prototype.getLegshots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.PlayerStats} returns this
 */
proto.grapevineer.PlayerStats.prototype.setLegshots = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.PlayerAssets.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.PlayerAssets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.PlayerAssets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerAssets.toObject = function(includeInstance, msg) {
  var f, obj = {
    card: (f = msg.getCard()) && proto.grapevineer.PlayerCard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.PlayerAssets}
 */
proto.grapevineer.PlayerAssets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.PlayerAssets;
  return proto.grapevineer.PlayerAssets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.PlayerAssets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.PlayerAssets}
 */
proto.grapevineer.PlayerAssets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grapevineer.PlayerCard;
      reader.readMessage(value,proto.grapevineer.PlayerCard.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.PlayerAssets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.PlayerAssets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.PlayerAssets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerAssets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grapevineer.PlayerCard.serializeBinaryToWriter
    );
  }
};


/**
 * optional PlayerCard card = 1;
 * @return {?proto.grapevineer.PlayerCard}
 */
proto.grapevineer.PlayerAssets.prototype.getCard = function() {
  return /** @type{?proto.grapevineer.PlayerCard} */ (
    jspb.Message.getWrapperField(this, proto.grapevineer.PlayerCard, 1));
};


/**
 * @param {?proto.grapevineer.PlayerCard|undefined} value
 * @return {!proto.grapevineer.PlayerAssets} returns this
*/
proto.grapevineer.PlayerAssets.prototype.setCard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grapevineer.PlayerAssets} returns this
 */
proto.grapevineer.PlayerAssets.prototype.clearCard = function() {
  return this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grapevineer.PlayerAssets.prototype.hasCard = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.PlayerCard.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.PlayerCard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.PlayerCard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerCard.toObject = function(includeInstance, msg) {
  var f, obj = {
    small: jspb.Message.getFieldWithDefault(msg, 1, ""),
    large: jspb.Message.getFieldWithDefault(msg, 2, ""),
    wide: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.PlayerCard}
 */
proto.grapevineer.PlayerCard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.PlayerCard;
  return proto.grapevineer.PlayerCard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.PlayerCard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.PlayerCard}
 */
proto.grapevineer.PlayerCard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLarge(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWide(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.PlayerCard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.PlayerCard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.PlayerCard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.PlayerCard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSmall();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLarge();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWide();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string small = 1;
 * @return {string}
 */
proto.grapevineer.PlayerCard.prototype.getSmall = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.PlayerCard} returns this
 */
proto.grapevineer.PlayerCard.prototype.setSmall = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string large = 2;
 * @return {string}
 */
proto.grapevineer.PlayerCard.prototype.getLarge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.PlayerCard} returns this
 */
proto.grapevineer.PlayerCard.prototype.setLarge = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string wide = 3;
 * @return {string}
 */
proto.grapevineer.PlayerCard.prototype.getWide = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grapevineer.PlayerCard} returns this
 */
proto.grapevineer.PlayerCard.prototype.setWide = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grapevineer.Team.prototype.toObject = function(opt_includeInstance) {
  return proto.grapevineer.Team.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grapevineer.Team} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Team.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasWon: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    roundsWon: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roundsLost: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grapevineer.Team}
 */
proto.grapevineer.Team.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grapevineer.Team;
  return proto.grapevineer.Team.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grapevineer.Team} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grapevineer.Team}
 */
proto.grapevineer.Team.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasWon(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoundsWon(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoundsLost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grapevineer.Team.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grapevineer.Team.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grapevineer.Team} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grapevineer.Team.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasWon();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRoundsWon();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRoundsLost();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool has_won = 1;
 * @return {boolean}
 */
proto.grapevineer.Team.prototype.getHasWon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grapevineer.Team} returns this
 */
proto.grapevineer.Team.prototype.setHasWon = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 rounds_won = 2;
 * @return {number}
 */
proto.grapevineer.Team.prototype.getRoundsWon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.Team} returns this
 */
proto.grapevineer.Team.prototype.setRoundsWon = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rounds_lost = 3;
 * @return {number}
 */
proto.grapevineer.Team.prototype.getRoundsLost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grapevineer.Team} returns this
 */
proto.grapevineer.Team.prototype.setRoundsLost = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.grapevineer);
